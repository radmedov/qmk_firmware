   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_usb.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.set_address,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	set_address:
  23              	.LFB280:
  24              		.file 1 "lib/chibios/os/hal/src/hal_usb.c"
   1:lib/chibios/os/hal/src/hal_usb.c **** /*
   2:lib/chibios/os/hal/src/hal_usb.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_usb.c **** 
   4:lib/chibios/os/hal/src/hal_usb.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_usb.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_usb.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_usb.c **** 
   8:lib/chibios/os/hal/src/hal_usb.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_usb.c **** 
  10:lib/chibios/os/hal/src/hal_usb.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_usb.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_usb.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_usb.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_usb.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_usb.c **** */
  16:lib/chibios/os/hal/src/hal_usb.c **** 
  17:lib/chibios/os/hal/src/hal_usb.c **** /**
  18:lib/chibios/os/hal/src/hal_usb.c ****  * @file    hal_usb.c
  19:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   USB Driver code.
  20:lib/chibios/os/hal/src/hal_usb.c ****  *
  21:lib/chibios/os/hal/src/hal_usb.c ****  * @addtogroup USB
  22:lib/chibios/os/hal/src/hal_usb.c ****  * @{
  23:lib/chibios/os/hal/src/hal_usb.c ****  */
  24:lib/chibios/os/hal/src/hal_usb.c **** 
  25:lib/chibios/os/hal/src/hal_usb.c **** #include <string.h>
  26:lib/chibios/os/hal/src/hal_usb.c **** 
  27:lib/chibios/os/hal/src/hal_usb.c **** #include "hal.h"
  28:lib/chibios/os/hal/src/hal_usb.c **** 
  29:lib/chibios/os/hal/src/hal_usb.c **** #if (HAL_USE_USB == TRUE) || defined(__DOXYGEN__)
  30:lib/chibios/os/hal/src/hal_usb.c **** 
  31:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/src/hal_usb.c **** /* Driver local definitions.                                                 */
  33:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  34:lib/chibios/os/hal/src/hal_usb.c **** 
  35:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  36:lib/chibios/os/hal/src/hal_usb.c **** /* Driver exported variables.                                                */
  37:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  38:lib/chibios/os/hal/src/hal_usb.c **** 
  39:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  40:lib/chibios/os/hal/src/hal_usb.c **** /* Driver local variables and types.                                         */
  41:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  42:lib/chibios/os/hal/src/hal_usb.c **** 
  43:lib/chibios/os/hal/src/hal_usb.c **** static const uint8_t zero_status[] = {0x00, 0x00};
  44:lib/chibios/os/hal/src/hal_usb.c **** static const uint8_t active_status[] ={0x00, 0x00};
  45:lib/chibios/os/hal/src/hal_usb.c **** static const uint8_t halted_status[] = {0x01, 0x00};
  46:lib/chibios/os/hal/src/hal_usb.c **** 
  47:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  48:lib/chibios/os/hal/src/hal_usb.c **** /* Driver local functions.                                                   */
  49:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
  50:lib/chibios/os/hal/src/hal_usb.c **** 
  51:lib/chibios/os/hal/src/hal_usb.c **** static uint16_t get_hword(uint8_t *p) {
  52:lib/chibios/os/hal/src/hal_usb.c ****   uint16_t hw;
  53:lib/chibios/os/hal/src/hal_usb.c **** 
  54:lib/chibios/os/hal/src/hal_usb.c ****   hw  = (uint16_t)*p++;
  55:lib/chibios/os/hal/src/hal_usb.c ****   hw |= (uint16_t)*p << 8U;
  56:lib/chibios/os/hal/src/hal_usb.c ****   return hw;
  57:lib/chibios/os/hal/src/hal_usb.c **** }
  58:lib/chibios/os/hal/src/hal_usb.c **** 
  59:lib/chibios/os/hal/src/hal_usb.c **** /**
  60:lib/chibios/os/hal/src/hal_usb.c ****  * @brief  SET ADDRESS transaction callback.
  61:lib/chibios/os/hal/src/hal_usb.c ****  *
  62:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
  63:lib/chibios/os/hal/src/hal_usb.c ****  */
  64:lib/chibios/os/hal/src/hal_usb.c **** static void set_address(USBDriver *usbp) {
  25              		.loc 1 64 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 10B5     		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  34              		.loc 1 64 0
  35 0002 0446     		mov	r4, r0
  65:lib/chibios/os/hal/src/hal_usb.c **** 
  66:lib/chibios/os/hal/src/hal_usb.c ****   usbp->address = usbp->setup[2];
  36              		.loc 1 66 0
  37 0004 90F87630 		ldrb	r3, [r0, #118]	@ zero_extendqisi2
  38 0008 80F87E30 		strb	r3, [r0, #126]
  67:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_set_address(usbp);
  39              		.loc 1 67 0
  40 000c FFF7FEFF 		bl	usb_lld_set_address
  41              	.LVL1:
  68:lib/chibios/os/hal/src/hal_usb.c ****   _usb_isr_invoke_event_cb(usbp, USB_EVENT_ADDRESS);
  42              		.loc 1 68 0
  43 0010 6368     		ldr	r3, [r4, #4]
  44 0012 1B68     		ldr	r3, [r3]
  45 0014 13B1     		cbz	r3, .L2
  46              		.loc 1 68 0 is_stmt 0 discriminator 1
  47 0016 0121     		movs	r1, #1
  48 0018 2046     		mov	r0, r4
  49 001a 9847     		blx	r3
  50              	.LVL2:
  51              	.L2:
  69:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state = USB_SELECTED;
  52              		.loc 1 69 0 is_stmt 1
  53 001c 0323     		movs	r3, #3
  54 001e 2370     		strb	r3, [r4]
  70:lib/chibios/os/hal/src/hal_usb.c **** }
  55              		.loc 1 70 0
  56 0020 10BD     		pop	{r4, pc}
  57              		.cfi_endproc
  58              	.LFE280:
  60              		.section	.text.usbInit,"ax",%progbits
  61              		.align	1
  62              		.global	usbInit
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu softvfp
  68              	usbInit:
  69              	.LFB282:
  71:lib/chibios/os/hal/src/hal_usb.c **** 
  72:lib/chibios/os/hal/src/hal_usb.c **** /**
  73:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Standard requests handler.
  74:lib/chibios/os/hal/src/hal_usb.c ****  * @details This is the standard requests default handler, most standard
  75:lib/chibios/os/hal/src/hal_usb.c ****  *          requests are handled here, the user can override the standard
  76:lib/chibios/os/hal/src/hal_usb.c ****  *          handling using the @p requests_hook_cb hook in the
  77:lib/chibios/os/hal/src/hal_usb.c ****  *          @p USBConfig structure.
  78:lib/chibios/os/hal/src/hal_usb.c ****  *
  79:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
  80:lib/chibios/os/hal/src/hal_usb.c ****  * @return              The request handling exit code.
  81:lib/chibios/os/hal/src/hal_usb.c ****  * @retval false        Request not recognized by the handler or error.
  82:lib/chibios/os/hal/src/hal_usb.c ****  * @retval true         Request handled.
  83:lib/chibios/os/hal/src/hal_usb.c ****  */
  84:lib/chibios/os/hal/src/hal_usb.c **** static bool default_handler(USBDriver *usbp) {
  85:lib/chibios/os/hal/src/hal_usb.c ****   const USBDescriptor *dp;
  86:lib/chibios/os/hal/src/hal_usb.c **** 
  87:lib/chibios/os/hal/src/hal_usb.c ****   /* Decoding the request.*/
  88:lib/chibios/os/hal/src/hal_usb.c ****   switch ((((uint32_t)usbp->setup[0] & (USB_RTYPE_RECIPIENT_MASK |
  89:lib/chibios/os/hal/src/hal_usb.c ****                                         USB_RTYPE_TYPE_MASK)) |
  90:lib/chibios/os/hal/src/hal_usb.c ****            ((uint32_t)usbp->setup[1] << 8U))) {
  91:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_GET_STATUS << 8):
  92:lib/chibios/os/hal/src/hal_usb.c ****     /* Just returns the current status word.*/
  93:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, (uint8_t *)&usbp->status, 2, NULL);
  94:lib/chibios/os/hal/src/hal_usb.c ****     return true;
  95:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_CLEAR_FEATURE << 8):
  96:lib/chibios/os/hal/src/hal_usb.c ****     /* Only the DEVICE_REMOTE_WAKEUP is handled here, any other feature
  97:lib/chibios/os/hal/src/hal_usb.c ****        number is handled as an error.*/
  98:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->setup[2] == USB_FEATURE_DEVICE_REMOTE_WAKEUP) {
  99:lib/chibios/os/hal/src/hal_usb.c ****       usbp->status &= ~2U;
 100:lib/chibios/os/hal/src/hal_usb.c ****       usbSetupTransfer(usbp, NULL, 0, NULL);
 101:lib/chibios/os/hal/src/hal_usb.c ****       return true;
 102:lib/chibios/os/hal/src/hal_usb.c ****     }
 103:lib/chibios/os/hal/src/hal_usb.c ****     return false;
 104:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_SET_FEATURE << 8):
 105:lib/chibios/os/hal/src/hal_usb.c ****     /* Only the DEVICE_REMOTE_WAKEUP is handled here, any other feature
 106:lib/chibios/os/hal/src/hal_usb.c ****        number is handled as an error.*/
 107:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->setup[2] == USB_FEATURE_DEVICE_REMOTE_WAKEUP) {
 108:lib/chibios/os/hal/src/hal_usb.c ****       usbp->status |= 2U;
 109:lib/chibios/os/hal/src/hal_usb.c ****       usbSetupTransfer(usbp, NULL, 0, NULL);
 110:lib/chibios/os/hal/src/hal_usb.c ****       return true;
 111:lib/chibios/os/hal/src/hal_usb.c ****     }
 112:lib/chibios/os/hal/src/hal_usb.c ****     return false;
 113:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_SET_ADDRESS << 8):
 114:lib/chibios/os/hal/src/hal_usb.c ****     /* The SET_ADDRESS handling can be performed here or postponed after
 115:lib/chibios/os/hal/src/hal_usb.c ****        the status packed depending on the USB_SET_ADDRESS_MODE low
 116:lib/chibios/os/hal/src/hal_usb.c ****        driver setting.*/
 117:lib/chibios/os/hal/src/hal_usb.c **** #if USB_SET_ADDRESS_MODE == USB_EARLY_SET_ADDRESS
 118:lib/chibios/os/hal/src/hal_usb.c ****     if ((usbp->setup[0] == USB_RTYPE_RECIPIENT_DEVICE) &&
 119:lib/chibios/os/hal/src/hal_usb.c ****         (usbp->setup[1] == USB_REQ_SET_ADDRESS)) {
 120:lib/chibios/os/hal/src/hal_usb.c ****       set_address(usbp);
 121:lib/chibios/os/hal/src/hal_usb.c ****     }
 122:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, NULL, 0, NULL);
 123:lib/chibios/os/hal/src/hal_usb.c **** #else
 124:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, NULL, 0, set_address);
 125:lib/chibios/os/hal/src/hal_usb.c **** #endif
 126:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 127:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_GET_DESCRIPTOR << 8):
 128:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_INTERFACE | ((uint32_t)USB_REQ_GET_DESCRIPTOR << 8):
 129:lib/chibios/os/hal/src/hal_usb.c ****     /* Handling descriptor requests from the host.*/
 130:lib/chibios/os/hal/src/hal_usb.c ****     dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3],
 131:lib/chibios/os/hal/src/hal_usb.c ****                                          usbp->setup[2],
 132:lib/chibios/os/hal/src/hal_usb.c ****                                          get_hword(&usbp->setup[4]));
 133:lib/chibios/os/hal/src/hal_usb.c ****     if (dp == NULL) {
 134:lib/chibios/os/hal/src/hal_usb.c ****       return false;
 135:lib/chibios/os/hal/src/hal_usb.c ****     }
 136:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -save -e9005 [11.8] Removing const is fine.*/
 137:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 138:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -restore*/
 139:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 140:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_GET_CONFIGURATION << 8):
 141:lib/chibios/os/hal/src/hal_usb.c ****     /* Returning the last selected configuration.*/
 142:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, &usbp->configuration, 1, NULL);
 143:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 144:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_SET_CONFIGURATION << 8):
 145:lib/chibios/os/hal/src/hal_usb.c ****     /* Handling configuration selection from the host only if it is different
 146:lib/chibios/os/hal/src/hal_usb.c ****        from the current configuration.*/
 147:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->configuration != usbp->setup[2]) {
 148:lib/chibios/os/hal/src/hal_usb.c ****       /* If the USB device is already active then we have to perform the clear
 149:lib/chibios/os/hal/src/hal_usb.c ****          procedure on the current configuration.*/
 150:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->state == USB_ACTIVE) {
 151:lib/chibios/os/hal/src/hal_usb.c ****         /* Current configuration cleared.*/
 152:lib/chibios/os/hal/src/hal_usb.c ****         osalSysLockFromISR ();
 153:lib/chibios/os/hal/src/hal_usb.c ****         usbDisableEndpointsI(usbp);
 154:lib/chibios/os/hal/src/hal_usb.c ****         osalSysUnlockFromISR ();
 155:lib/chibios/os/hal/src/hal_usb.c ****         usbp->configuration = 0U;
 156:lib/chibios/os/hal/src/hal_usb.c ****         usbp->state = USB_SELECTED;
 157:lib/chibios/os/hal/src/hal_usb.c ****         _usb_isr_invoke_event_cb(usbp, USB_EVENT_UNCONFIGURED);
 158:lib/chibios/os/hal/src/hal_usb.c ****       }
 159:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->setup[2] != 0U) {
 160:lib/chibios/os/hal/src/hal_usb.c ****         /* New configuration.*/
 161:lib/chibios/os/hal/src/hal_usb.c ****         usbp->configuration = usbp->setup[2];
 162:lib/chibios/os/hal/src/hal_usb.c ****         usbp->state = USB_ACTIVE;
 163:lib/chibios/os/hal/src/hal_usb.c ****         _usb_isr_invoke_event_cb(usbp, USB_EVENT_CONFIGURED);
 164:lib/chibios/os/hal/src/hal_usb.c ****       }
 165:lib/chibios/os/hal/src/hal_usb.c ****     }
 166:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, NULL, 0, NULL);
 167:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 168:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_INTERFACE | ((uint32_t)USB_REQ_GET_STATUS << 8):
 169:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_ENDPOINT | ((uint32_t)USB_REQ_SYNCH_FRAME << 8):
 170:lib/chibios/os/hal/src/hal_usb.c ****     /* Just sending two zero bytes, the application can change the behavior
 171:lib/chibios/os/hal/src/hal_usb.c ****        using a hook..*/
 172:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -save -e9005 [11.8] Removing const is fine.*/
 173:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, (uint8_t *)zero_status, 2, NULL);
 174:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -restore*/
 175:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 176:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_ENDPOINT | ((uint32_t)USB_REQ_GET_STATUS << 8):
 177:lib/chibios/os/hal/src/hal_usb.c ****     /* Sending the EP status.*/
 178:lib/chibios/os/hal/src/hal_usb.c ****     if ((usbp->setup[4] & 0x80U) != 0U) {
 179:lib/chibios/os/hal/src/hal_usb.c ****       switch (usb_lld_get_status_in(usbp, usbp->setup[4] & 0x0FU)) {
 180:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_STALLED:
 181:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -save -e9005 [11.8] Removing const is fine.*/
 182:lib/chibios/os/hal/src/hal_usb.c ****         usbSetupTransfer(usbp, (uint8_t *)halted_status, 2, NULL);
 183:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 184:lib/chibios/os/hal/src/hal_usb.c ****         return true;
 185:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_ACTIVE:
 186:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -save -e9005 [11.8] Removing const is fine.*/
 187:lib/chibios/os/hal/src/hal_usb.c ****         usbSetupTransfer(usbp, (uint8_t *)active_status, 2, NULL);
 188:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 189:lib/chibios/os/hal/src/hal_usb.c ****         return true;
 190:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_DISABLED:
 191:lib/chibios/os/hal/src/hal_usb.c ****       default:
 192:lib/chibios/os/hal/src/hal_usb.c ****         return false;
 193:lib/chibios/os/hal/src/hal_usb.c ****       }
 194:lib/chibios/os/hal/src/hal_usb.c ****     }
 195:lib/chibios/os/hal/src/hal_usb.c ****     else {
 196:lib/chibios/os/hal/src/hal_usb.c ****       switch (usb_lld_get_status_out(usbp, usbp->setup[4] & 0x0FU)) {
 197:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_STALLED:
 198:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -save -e9005 [11.8] Removing const is fine.*/
 199:lib/chibios/os/hal/src/hal_usb.c ****         usbSetupTransfer(usbp, (uint8_t *)halted_status, 2, NULL);
 200:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 201:lib/chibios/os/hal/src/hal_usb.c ****         return true;
 202:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_ACTIVE:
 203:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -save -e9005 [11.8] Removing const is fine.*/
 204:lib/chibios/os/hal/src/hal_usb.c ****         usbSetupTransfer(usbp, (uint8_t *)active_status, 2, NULL);
 205:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 206:lib/chibios/os/hal/src/hal_usb.c ****         return true;
 207:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_DISABLED:
 208:lib/chibios/os/hal/src/hal_usb.c ****       default:
 209:lib/chibios/os/hal/src/hal_usb.c ****         return false;
 210:lib/chibios/os/hal/src/hal_usb.c ****       }
 211:lib/chibios/os/hal/src/hal_usb.c ****     }
 212:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_ENDPOINT | ((uint32_t)USB_REQ_CLEAR_FEATURE << 8):
 213:lib/chibios/os/hal/src/hal_usb.c ****     /* Only ENDPOINT_HALT is handled as feature.*/
 214:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->setup[2] != USB_FEATURE_ENDPOINT_HALT) {
 215:lib/chibios/os/hal/src/hal_usb.c ****       return false;
 216:lib/chibios/os/hal/src/hal_usb.c ****     }
 217:lib/chibios/os/hal/src/hal_usb.c ****     /* Clearing the EP status, not valid for EP0, it is ignored in that case.*/
 218:lib/chibios/os/hal/src/hal_usb.c ****     if ((usbp->setup[4] & 0x0FU) != 0U) {
 219:lib/chibios/os/hal/src/hal_usb.c ****       if ((usbp->setup[4] & 0x80U) != 0U) {
 220:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_clear_in(usbp, usbp->setup[4] & 0x0FU);
 221:lib/chibios/os/hal/src/hal_usb.c ****       }
 222:lib/chibios/os/hal/src/hal_usb.c ****       else {
 223:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_clear_out(usbp, usbp->setup[4] & 0x0FU);
 224:lib/chibios/os/hal/src/hal_usb.c ****       }
 225:lib/chibios/os/hal/src/hal_usb.c ****     }
 226:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, NULL, 0, NULL);
 227:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 228:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_ENDPOINT | ((uint32_t)USB_REQ_SET_FEATURE << 8):
 229:lib/chibios/os/hal/src/hal_usb.c ****     /* Only ENDPOINT_HALT is handled as feature.*/
 230:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->setup[2] != USB_FEATURE_ENDPOINT_HALT) {
 231:lib/chibios/os/hal/src/hal_usb.c ****       return false;
 232:lib/chibios/os/hal/src/hal_usb.c ****     }
 233:lib/chibios/os/hal/src/hal_usb.c ****     /* Stalling the EP, not valid for EP0, it is ignored in that case.*/
 234:lib/chibios/os/hal/src/hal_usb.c ****     if ((usbp->setup[4] & 0x0FU) != 0U) {
 235:lib/chibios/os/hal/src/hal_usb.c ****       if ((usbp->setup[4] & 0x80U) != 0U) {
 236:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_stall_in(usbp, usbp->setup[4] & 0x0FU);
 237:lib/chibios/os/hal/src/hal_usb.c ****       }
 238:lib/chibios/os/hal/src/hal_usb.c ****       else {
 239:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_stall_out(usbp, usbp->setup[4] & 0x0FU);
 240:lib/chibios/os/hal/src/hal_usb.c ****       }
 241:lib/chibios/os/hal/src/hal_usb.c ****     }
 242:lib/chibios/os/hal/src/hal_usb.c ****     usbSetupTransfer(usbp, NULL, 0, NULL);
 243:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 244:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_SET_DESCRIPTOR << 8):
 245:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_INTERFACE | ((uint32_t)USB_REQ_CLEAR_FEATURE << 8):
 246:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_INTERFACE | ((uint32_t)USB_REQ_SET_FEATURE << 8):
 247:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_INTERFACE | ((uint32_t)USB_REQ_GET_INTERFACE << 8):
 248:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_INTERFACE | ((uint32_t)USB_REQ_SET_INTERFACE << 8):
 249:lib/chibios/os/hal/src/hal_usb.c ****     /* All the above requests are not handled here, if you need them then
 250:lib/chibios/os/hal/src/hal_usb.c ****        use the hook mechanism and provide handling.*/
 251:lib/chibios/os/hal/src/hal_usb.c ****   default:
 252:lib/chibios/os/hal/src/hal_usb.c ****     return false;
 253:lib/chibios/os/hal/src/hal_usb.c ****   }
 254:lib/chibios/os/hal/src/hal_usb.c **** }
 255:lib/chibios/os/hal/src/hal_usb.c **** 
 256:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
 257:lib/chibios/os/hal/src/hal_usb.c **** /* Driver exported functions.                                                */
 258:lib/chibios/os/hal/src/hal_usb.c **** /*===========================================================================*/
 259:lib/chibios/os/hal/src/hal_usb.c **** 
 260:lib/chibios/os/hal/src/hal_usb.c **** /**
 261:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   USB Driver initialization.
 262:lib/chibios/os/hal/src/hal_usb.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
 263:lib/chibios/os/hal/src/hal_usb.c ****  *          no need to explicitly initialize the driver.
 264:lib/chibios/os/hal/src/hal_usb.c ****  *
 265:lib/chibios/os/hal/src/hal_usb.c ****  * @init
 266:lib/chibios/os/hal/src/hal_usb.c ****  */
 267:lib/chibios/os/hal/src/hal_usb.c **** void usbInit(void) {
  70              		.loc 1 267 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 268:lib/chibios/os/hal/src/hal_usb.c **** 
 269:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_init();
  75              		.loc 1 269 0
  76 0000 FFF7FEBF 		b	usb_lld_init
  77              	.LVL3:
  78              		.cfi_endproc
  79              	.LFE282:
  81              		.section	.text.usbObjectInit,"ax",%progbits
  82              		.align	1
  83              		.global	usbObjectInit
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	usbObjectInit:
  90              	.LFB283:
 270:lib/chibios/os/hal/src/hal_usb.c **** }
 271:lib/chibios/os/hal/src/hal_usb.c **** 
 272:lib/chibios/os/hal/src/hal_usb.c **** /**
 273:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Initializes the standard part of a @p USBDriver structure.
 274:lib/chibios/os/hal/src/hal_usb.c ****  *
 275:lib/chibios/os/hal/src/hal_usb.c ****  * @param[out] usbp     pointer to the @p USBDriver object
 276:lib/chibios/os/hal/src/hal_usb.c ****  *
 277:lib/chibios/os/hal/src/hal_usb.c ****  * @init
 278:lib/chibios/os/hal/src/hal_usb.c ****  */
 279:lib/chibios/os/hal/src/hal_usb.c **** void usbObjectInit(USBDriver *usbp) {
  91              		.loc 1 279 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL4:
 280:lib/chibios/os/hal/src/hal_usb.c ****   unsigned i;
 281:lib/chibios/os/hal/src/hal_usb.c **** 
 282:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state        = USB_STOP;
  97              		.loc 1 282 0
  98 0000 0123     		movs	r3, #1
  99 0002 0370     		strb	r3, [r0]
 283:lib/chibios/os/hal/src/hal_usb.c ****   usbp->config       = NULL;
 100              		.loc 1 283 0
 101 0004 0023     		movs	r3, #0
 102 0006 4360     		str	r3, [r0, #4]
 103              	.LVL5:
 104 0008 00F12C02 		add	r2, r0, #44
 105 000c 00F14801 		add	r1, r0, #72
 106              	.LVL6:
 107              	.L8:
 284:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 0; i < (unsigned)USB_MAX_ENDPOINTS; i++) {
 285:lib/chibios/os/hal/src/hal_usb.c ****     usbp->in_params[i]  = NULL;
 108              		.loc 1 285 0 discriminator 3
 109 0010 42F8043B 		str	r3, [r2], #4
 284:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 0; i < (unsigned)USB_MAX_ENDPOINTS; i++) {
 110              		.loc 1 284 0 discriminator 3
 111 0014 8A42     		cmp	r2, r1
 286:lib/chibios/os/hal/src/hal_usb.c ****     usbp->out_params[i] = NULL;
 112              		.loc 1 286 0 discriminator 3
 113 0016 9361     		str	r3, [r2, #24]
 284:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 0; i < (unsigned)USB_MAX_ENDPOINTS; i++) {
 114              		.loc 1 284 0 discriminator 3
 115 0018 FAD1     		bne	.L8
 287:lib/chibios/os/hal/src/hal_usb.c ****   }
 288:lib/chibios/os/hal/src/hal_usb.c ****   usbp->transmitting = 0;
 116              		.loc 1 288 0
 117 001a 8360     		str	r3, [r0, #8]
 289:lib/chibios/os/hal/src/hal_usb.c ****   usbp->receiving    = 0;
 290:lib/chibios/os/hal/src/hal_usb.c **** }
 118              		.loc 1 290 0
 119 001c 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE283:
 123              		.section	.text.usbStart,"ax",%progbits
 124              		.align	1
 125              		.global	usbStart
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	usbStart:
 132              	.LFB284:
 291:lib/chibios/os/hal/src/hal_usb.c **** 
 292:lib/chibios/os/hal/src/hal_usb.c **** /**
 293:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Configures and activates the USB peripheral.
 294:lib/chibios/os/hal/src/hal_usb.c ****  *
 295:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 296:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] config    pointer to the @p USBConfig object
 297:lib/chibios/os/hal/src/hal_usb.c ****  *
 298:lib/chibios/os/hal/src/hal_usb.c ****  * @api
 299:lib/chibios/os/hal/src/hal_usb.c ****  */
 300:lib/chibios/os/hal/src/hal_usb.c **** void usbStart(USBDriver *usbp, const USBConfig *config) {
 133              		.loc 1 300 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              	.LVL7:
 138 0000 38B5     		push	{r3, r4, r5, lr}
 139              		.cfi_def_cfa_offset 16
 140              		.cfi_offset 3, -16
 141              		.cfi_offset 4, -12
 142              		.cfi_offset 5, -8
 143              		.cfi_offset 14, -4
 144              		.loc 1 300 0
 145 0002 0446     		mov	r4, r0
 146              	.LBB291:
 147              	.LBB292:
 148              	.LBB293:
 149              	.LBB294:
 150              	.LBB295:
 151              		.file 2 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @version  V4.30
   5:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
   9:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    All rights reserved.
  10:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      specific prior written permission.
  20:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    *
  21:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  35:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  38:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #endif
  45:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  46:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  47:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   @{
  51:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  52:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  53:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  54:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  58:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  60:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  62:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  63:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  64:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  65:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  69:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  71:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  73:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  74:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  75:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  76:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Control Register value
  79:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  80:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  82:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
  83:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  84:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
  86:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  87:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  88:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  89:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  90:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  94:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  96:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  98:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  99:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 100:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 101:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 105:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 107:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 108:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 109:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 111:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 112:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 113:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 114:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 115:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               APSR Register value
 118:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 119:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 121:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 122:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 123:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 125:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 126:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 127:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 128:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 129:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 132:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 134:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 136:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 137:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 138:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 140:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 141:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 142:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 143:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 144:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               PSP Register value
 147:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 148:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 150:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 151:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 152:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 154:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 155:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 156:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 157:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 158:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 162:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 164:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 166:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 167:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 168:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 169:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               MSP Register value
 172:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 173:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 175:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 176:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 177:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 179:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 180:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 181:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 182:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 183:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 188:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 190:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 192:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 193:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 194:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 195:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 199:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 201:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 202:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 203:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 205:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 206:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 207:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 208:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 209:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 213:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 215:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 217:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 218:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 219:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 221:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 222:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 226:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 228:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 230:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 231:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 232:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 233:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 237:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 239:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 241:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 243:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 244:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 248:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 250:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 251:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 252:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 254:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 255:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 257:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 152              		.loc 2 264 0
 153 0004 2023     		movs	r3, #32
 154              		.syntax unified
 155              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 156 0006 83F31188 		MSR basepri, r3
 157              	@ 0 "" 2
 158              	.LVL8:
 159              		.thumb
 160              		.syntax unified
 161              	.LBE295:
 162              	.LBE294:
 163              	.LBE293:
 164              	.LBE292:
 165              	.LBE291:
 301:lib/chibios/os/hal/src/hal_usb.c ****   unsigned i;
 302:lib/chibios/os/hal/src/hal_usb.c **** 
 303:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck((usbp != NULL) && (config != NULL));
 304:lib/chibios/os/hal/src/hal_usb.c **** 
 305:lib/chibios/os/hal/src/hal_usb.c ****   osalSysLock();
 306:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgAssert((usbp->state == USB_STOP) || (usbp->state == USB_READY),
 307:lib/chibios/os/hal/src/hal_usb.c ****                 "invalid state");
 308:lib/chibios/os/hal/src/hal_usb.c ****   usbp->config = config;
 309:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 0; i <= (unsigned)USB_MAX_ENDPOINTS; i++) {
 310:lib/chibios/os/hal/src/hal_usb.c ****     usbp->epc[i] = NULL;
 166              		.loc 1 310 0
 167 000a 0025     		movs	r5, #0
 308:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 0; i <= (unsigned)USB_MAX_ENDPOINTS; i++) {
 168              		.loc 1 308 0
 169 000c 4160     		str	r1, [r0, #4]
 170              	.LVL9:
 171              		.loc 1 310 0
 172 000e C0E90355 		strd	r5, r5, [r0, #12]
 173              	.LVL10:
 174 0012 C0E90555 		strd	r5, r5, [r0, #20]
 175              	.LVL11:
 176 0016 C0E90755 		strd	r5, r5, [r0, #28]
 177              	.LVL12:
 178 001a C0E90955 		strd	r5, r5, [r0, #36]
 179              	.LVL13:
 311:lib/chibios/os/hal/src/hal_usb.c ****   }
 312:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_start(usbp);
 180              		.loc 1 312 0
 181 001e FFF7FEFF 		bl	usb_lld_start
 182              	.LVL14:
 313:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state = USB_READY;
 183              		.loc 1 313 0
 184 0022 0223     		movs	r3, #2
 185 0024 2370     		strb	r3, [r4]
 186              	.LVL15:
 187              	.LBB296:
 188              	.LBB297:
 189              	.LBB298:
 190              	.LBB299:
 191              	.LBB300:
 192              	.LBB301:
 193              		.loc 2 264 0
 194              		.syntax unified
 195              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 196 0026 85F31188 		MSR basepri, r5
 197              	@ 0 "" 2
 198              	.LVL16:
 199              		.thumb
 200              		.syntax unified
 201              	.LBE301:
 202              	.LBE300:
 203              	.LBE299:
 204              	.LBE298:
 205              	.LBE297:
 206              	.LBE296:
 314:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 315:lib/chibios/os/hal/src/hal_usb.c **** }
 207              		.loc 1 315 0
 208 002a 38BD     		pop	{r3, r4, r5, pc}
 209              		.cfi_endproc
 210              	.LFE284:
 212              		.section	.text.usbStop,"ax",%progbits
 213              		.align	1
 214              		.global	usbStop
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu softvfp
 220              	usbStop:
 221              	.LFB285:
 316:lib/chibios/os/hal/src/hal_usb.c **** 
 317:lib/chibios/os/hal/src/hal_usb.c **** /**
 318:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Deactivates the USB peripheral.
 319:lib/chibios/os/hal/src/hal_usb.c ****  *
 320:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 321:lib/chibios/os/hal/src/hal_usb.c ****  *
 322:lib/chibios/os/hal/src/hal_usb.c ****  * @api
 323:lib/chibios/os/hal/src/hal_usb.c ****  */
 324:lib/chibios/os/hal/src/hal_usb.c **** void usbStop(USBDriver *usbp) {
 222              		.loc 1 324 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL17:
 227 0000 70B5     		push	{r4, r5, r6, lr}
 228              		.cfi_def_cfa_offset 16
 229              		.cfi_offset 4, -16
 230              		.cfi_offset 5, -12
 231              		.cfi_offset 6, -8
 232              		.cfi_offset 14, -4
 233              	.LBB302:
 234              	.LBB303:
 235              	.LBB304:
 236              	.LBB305:
 237              	.LBB306:
 238              		.loc 2 264 0
 239 0002 2023     		movs	r3, #32
 240              	.LBE306:
 241              	.LBE305:
 242              	.LBE304:
 243              	.LBE303:
 244              	.LBE302:
 245              		.loc 1 324 0
 246 0004 0646     		mov	r6, r0
 247              	.LBB311:
 248              	.LBB310:
 249              	.LBB309:
 250              	.LBB308:
 251              	.LBB307:
 252              		.loc 2 264 0
 253              		.syntax unified
 254              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 255 0006 83F31188 		MSR basepri, r3
 256              	@ 0 "" 2
 257              	.LVL18:
 258              		.thumb
 259              		.syntax unified
 260              	.LBE307:
 261              	.LBE308:
 262              	.LBE309:
 263              	.LBE310:
 264              	.LBE311:
 325:lib/chibios/os/hal/src/hal_usb.c ****   unsigned i;
 326:lib/chibios/os/hal/src/hal_usb.c **** 
 327:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck(usbp != NULL);
 328:lib/chibios/os/hal/src/hal_usb.c **** 
 329:lib/chibios/os/hal/src/hal_usb.c ****   osalSysLock();
 330:lib/chibios/os/hal/src/hal_usb.c **** 
 331:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgAssert((usbp->state == USB_STOP) || (usbp->state == USB_READY) ||
 332:lib/chibios/os/hal/src/hal_usb.c ****                 (usbp->state == USB_SELECTED) || (usbp->state == USB_ACTIVE) ||
 333:lib/chibios/os/hal/src/hal_usb.c ****                 (usbp->state == USB_SUSPENDED),
 334:lib/chibios/os/hal/src/hal_usb.c ****                 "invalid state");
 335:lib/chibios/os/hal/src/hal_usb.c **** 
 336:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_stop(usbp);
 337:lib/chibios/os/hal/src/hal_usb.c ****   usbp->config = NULL;
 338:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state  = USB_STOP;
 265              		.loc 1 338 0
 266 000a 3446     		mov	r4, r6
 336:lib/chibios/os/hal/src/hal_usb.c ****   usbp->config = NULL;
 267              		.loc 1 336 0
 268 000c FFF7FEFF 		bl	usb_lld_stop
 269              	.LVL19:
 337:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state  = USB_STOP;
 270              		.loc 1 337 0
 271 0010 0025     		movs	r5, #0
 272              		.loc 1 338 0
 273 0012 0123     		movs	r3, #1
 337:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state  = USB_STOP;
 274              		.loc 1 337 0
 275 0014 7560     		str	r5, [r6, #4]
 276              		.loc 1 338 0
 277 0016 04F80C3B 		strb	r3, [r4], #12
 278              	.LVL20:
 279 001a 2C36     		adds	r6, r6, #44
 280              	.LVL21:
 281              	.L16:
 339:lib/chibios/os/hal/src/hal_usb.c **** 
 340:lib/chibios/os/hal/src/hal_usb.c ****   /* Resetting all ongoing synchronous operations.*/
 341:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 0; i <= (unsigned)USB_MAX_ENDPOINTS; i++) {
 342:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 343:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->epc[i] != NULL) {
 282              		.loc 1 343 0
 283 001c 54F8043B 		ldr	r3, [r4], #4
 284 0020 7BB1     		cbz	r3, .L13
 344:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i]->in_state != NULL) {
 285              		.loc 1 344 0
 286 0022 5869     		ldr	r0, [r3, #20]
 287 0024 20B1     		cbz	r0, .L14
 288              	.LVL22:
 289              	.LBB312:
 290              	.LBB313:
 291              		.file 3 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef _OSAL_H_
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define _OSAL_H_
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                (!FALSE)
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        FALSE
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         TRUE
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              RDY_OK
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           RDY_RESET
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         RDY_TIMEOUT
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((systime_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((systime_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if !CH_CFG_USE_EVENTS
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 176:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 177:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 178:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 179:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 180:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 181:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 182:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Flags stored into the
 183:./lib/chibios/os/hal/osal/rt/osal.h ****                                                 object.                     */
 184:./lib/chibios/os/hal/osal/rt/osal.h **** } event_source_t;
 185:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 186:./lib/chibios/os/hal/osal/rt/osal.h **** 
 187:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 188:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 189:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then them
 190:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 192:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 193:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 194:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 195:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 196:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 197:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 198:./lib/chibios/os/hal/osal/rt/osal.h **** 
 199:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 200:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 205:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 206:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 207:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 209:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 213:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 214:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 215:./lib/chibios/os/hal/osal/rt/osal.h **** 
 216:./lib/chibios/os/hal/osal/rt/osal.h **** /* Temporary names provided for ChibiOS 2.x compatibility.*/
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueInit osalThreadQueueObjectInit
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupAllI osalThreadDequeueAllI
 219:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupOneI osalThreadDequeueNextI
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueGoSleepTimeoutS osalThreadEnqueueTimeoutS
 221:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalEventInit osalEventObjectInit
 222:./lib/chibios/os/hal/osal/rt/osal.h **** 
 223:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 224:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 225:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 232:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 233:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 234:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 235:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 236:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 237:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 238:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 239:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 240:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 241:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 242:./lib/chibios/os/hal/osal/rt/osal.h **** 
 243:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 245:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 253:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 254:./lib/chibios/os/hal/osal/rt/osal.h **** 
 255:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 265:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 266:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 267:./lib/chibios/os/hal/osal/rt/osal.h **** 
 268:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 271:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 272:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 273:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 275:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 276:./lib/chibios/os/hal/osal/rt/osal.h **** 
 277:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 278:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 279:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 282:./lib/chibios/os/hal/osal/rt/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 285:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 286:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 288:./lib/chibios/os/hal/osal/rt/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 293:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 294:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 295:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 296:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 297:./lib/chibios/os/hal/osal/rt/osal.h **** 
 298:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 299:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 300:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 301:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 302:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 305:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 306:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 307:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 312:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2ST(sec) S2ST(sec)
 313:./lib/chibios/os/hal/osal/rt/osal.h **** 
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 315:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 316:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 320:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 324:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2ST(msec) MS2ST(msec)
 325:./lib/chibios/os/hal/osal/rt/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 330:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 331:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 332:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 336:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2ST(usec) US2ST(usec)
 337:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 338:./lib/chibios/os/hal/osal/rt/osal.h **** 
 339:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 342:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 344:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** 
 356:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 357:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 361:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 368:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 369:./lib/chibios/os/hal/osal/rt/osal.h **** 
 370:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 372:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 373:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 374:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 382:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 383:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 384:./lib/chibios/os/hal/osal/rt/osal.h **** 
 385:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 386:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 387:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 388:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 389:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       time in seconds, must be different from zero
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 399:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(sec) osalThreadSleep(OSAL_S2ST(sec))
 400:./lib/chibios/os/hal/osal/rt/osal.h **** 
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 402:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 403:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 407:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 412:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msec) osalThreadSleep(OSAL_MS2ST(msec))
 413:./lib/chibios/os/hal/osal/rt/osal.h **** 
 414:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 417:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 418:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 419:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      time in microseconds, must be different from zero
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usec) osalThreadSleep(OSAL_US2ST(usec))
 426:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 427:./lib/chibios/os/hal/osal/rt/osal.h **** 
 428:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 429:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 433:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 434:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 435:./lib/chibios/os/hal/osal/rt/osal.h **** 
 436:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 437:./lib/chibios/os/hal/osal/rt/osal.h **** }
 438:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 439:./lib/chibios/os/hal/osal/rt/osal.h **** 
 440:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 441:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 442:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 443:./lib/chibios/os/hal/osal/rt/osal.h **** 
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 445:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 446:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 447:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 448:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 449:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 450:./lib/chibios/os/hal/osal/rt/osal.h **** 
 451:./lib/chibios/os/hal/osal/rt/osal.h **** }
 452:./lib/chibios/os/hal/osal/rt/osal.h **** 
 453:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 454:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 455:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 456:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 457:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 459:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 463:./lib/chibios/os/hal/osal/rt/osal.h **** }
 464:./lib/chibios/os/hal/osal/rt/osal.h **** 
 465:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 467:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 468:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 469:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 470:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 471:./lib/chibios/os/hal/osal/rt/osal.h **** 
 472:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 473:./lib/chibios/os/hal/osal/rt/osal.h **** }
 474:./lib/chibios/os/hal/osal/rt/osal.h **** 
 475:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 478:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 479:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 480:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 481:./lib/chibios/os/hal/osal/rt/osal.h **** 
 482:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 483:./lib/chibios/os/hal/osal/rt/osal.h **** }
 484:./lib/chibios/os/hal/osal/rt/osal.h **** 
 485:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 488:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 489:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 490:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 491:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 494:./lib/chibios/os/hal/osal/rt/osal.h **** }
 495:./lib/chibios/os/hal/osal/rt/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 498:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 499:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 500:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 501:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 502:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 503:./lib/chibios/os/hal/osal/rt/osal.h **** 
 504:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 505:./lib/chibios/os/hal/osal/rt/osal.h **** }
 506:./lib/chibios/os/hal/osal/rt/osal.h **** 
 507:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 509:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 510:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 511:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 512:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 513:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 514:./lib/chibios/os/hal/osal/rt/osal.h **** 
 515:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 516:./lib/chibios/os/hal/osal/rt/osal.h **** }
 517:./lib/chibios/os/hal/osal/rt/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 520:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 521:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 522:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 523:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 524:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 525:./lib/chibios/os/hal/osal/rt/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 527:./lib/chibios/os/hal/osal/rt/osal.h **** }
 528:./lib/chibios/os/hal/osal/rt/osal.h **** 
 529:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 531:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 532:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 533:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 534:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 535:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 536:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 556:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 557:./lib/chibios/os/hal/osal/rt/osal.h **** 
 558:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 559:./lib/chibios/os/hal/osal/rt/osal.h **** }
 560:./lib/chibios/os/hal/osal/rt/osal.h **** 
 561:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 562:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 563:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 564:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 565:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 570:./lib/chibios/os/hal/osal/rt/osal.h **** #if PORT_SUPPORTS_RT || defined(__DOXYGEN__)
 571:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 572:./lib/chibios/os/hal/osal/rt/osal.h **** 
 573:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 574:./lib/chibios/os/hal/osal/rt/osal.h **** }
 575:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 576:./lib/chibios/os/hal/osal/rt/osal.h **** 
 577:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 578:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 579:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 582:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 583:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 584:./lib/chibios/os/hal/osal/rt/osal.h **** 
 585:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 586:./lib/chibios/os/hal/osal/rt/osal.h **** }
 587:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 588:./lib/chibios/os/hal/osal/rt/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 591:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 592:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 593:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 594:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 595:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 598:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 599:./lib/chibios/os/hal/osal/rt/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 601:./lib/chibios/os/hal/osal/rt/osal.h **** }
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 604:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 605:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 606:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 607:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 634:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 635:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalOsIsTimeWithinX(systime_t time,
 636:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t start,
 637:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t end) {
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTIsTimeWithinX(time, start, end);
 640:./lib/chibios/os/hal/osal/rt/osal.h **** }
 641:./lib/chibios/os/hal/osal/rt/osal.h **** 
 642:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 648:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 649:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 650:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 651:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 652:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 653:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 654:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(systime_t time) {
 655:./lib/chibios/os/hal/osal/rt/osal.h **** 
 656:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(time);
 657:./lib/chibios/os/hal/osal/rt/osal.h **** }
 658:./lib/chibios/os/hal/osal/rt/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 663:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 664:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 665:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 666:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 667:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 668:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 671:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(systime_t time) {
 672:./lib/chibios/os/hal/osal/rt/osal.h **** 
 673:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(time);
 674:./lib/chibios/os/hal/osal/rt/osal.h **** }
 675:./lib/chibios/os/hal/osal/rt/osal.h **** 
 676:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 682:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 683:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 684:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 685:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 686:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 687:./lib/chibios/os/hal/osal/rt/osal.h **** 
 688:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendS(trp);
 689:./lib/chibios/os/hal/osal/rt/osal.h **** }
 690:./lib/chibios/os/hal/osal/rt/osal.h **** 
 691:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 701:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 702:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 703:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 704:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 705:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 706:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 710:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 711:./lib/chibios/os/hal/osal/rt/osal.h ****                                               systime_t timeout) {
 712:./lib/chibios/os/hal/osal/rt/osal.h **** 
 713:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 714:./lib/chibios/os/hal/osal/rt/osal.h **** }
 715:./lib/chibios/os/hal/osal/rt/osal.h **** 
 716:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 718:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 719:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 720:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 722:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 723:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 726:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 727:./lib/chibios/os/hal/osal/rt/osal.h **** 
 728:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 292              		.loc 3 728 0
 293 0026 6FF00101 		mvn	r1, #1
 294 002a 0C30     		adds	r0, r0, #12
 295              	.LVL23:
 296 002c FFF7FEFF 		bl	chThdResumeI
 297              	.LVL24:
 298              	.L14:
 299              	.LBE313:
 300              	.LBE312:
 345:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->in_state->thread, MSG_RESET);
 346:lib/chibios/os/hal/src/hal_usb.c ****       }
 347:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i]->out_state != NULL) {
 301              		.loc 1 347 0
 302 0030 54F8043C 		ldr	r3, [r4, #-4]
 303 0034 9869     		ldr	r0, [r3, #24]
 304 0036 20B1     		cbz	r0, .L13
 305              	.LVL25:
 306              	.LBB314:
 307              	.LBB315:
 308              		.loc 3 728 0
 309 0038 6FF00101 		mvn	r1, #1
 310 003c 0C30     		adds	r0, r0, #12
 311              	.LVL26:
 312 003e FFF7FEFF 		bl	chThdResumeI
 313              	.LVL27:
 314              	.L13:
 315              	.LBE315:
 316              	.LBE314:
 341:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 317              		.loc 1 341 0 discriminator 2
 318 0042 B442     		cmp	r4, r6
 348:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->out_state->thread, MSG_RESET);
 349:lib/chibios/os/hal/src/hal_usb.c ****       }
 350:lib/chibios/os/hal/src/hal_usb.c ****     }
 351:lib/chibios/os/hal/src/hal_usb.c **** #endif
 352:lib/chibios/os/hal/src/hal_usb.c ****     usbp->epc[i] = NULL;
 319              		.loc 1 352 0 discriminator 2
 320 0044 44F8045C 		str	r5, [r4, #-4]
 341:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 321              		.loc 1 341 0 discriminator 2
 322 0048 E8D1     		bne	.L16
 323              	.LBB316:
 324              	.LBB317:
 600:./lib/chibios/os/hal/osal/rt/osal.h **** }
 325              		.loc 3 600 0
 326 004a FFF7FEFF 		bl	chSchRescheduleS
 327              	.LVL28:
 328              	.LBE317:
 329              	.LBE316:
 330              	.LBB318:
 331              	.LBB319:
 332              	.LBB320:
 333              	.LBB321:
 334              	.LBB322:
 335              	.LBB323:
 336              		.loc 2 264 0
 337              		.syntax unified
 338              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 339 004e 85F31188 		MSR basepri, r5
 340              	@ 0 "" 2
 341              	.LVL29:
 342              		.thumb
 343              		.syntax unified
 344              	.LBE323:
 345              	.LBE322:
 346              	.LBE321:
 347              	.LBE320:
 348              	.LBE319:
 349              	.LBE318:
 353:lib/chibios/os/hal/src/hal_usb.c ****   }
 354:lib/chibios/os/hal/src/hal_usb.c ****   osalOsRescheduleS();
 355:lib/chibios/os/hal/src/hal_usb.c **** 
 356:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 357:lib/chibios/os/hal/src/hal_usb.c **** }
 350              		.loc 1 357 0
 351 0052 70BD     		pop	{r4, r5, r6, pc}
 352              		.cfi_endproc
 353              	.LFE285:
 355              		.section	.text.usbInitEndpointI,"ax",%progbits
 356              		.align	1
 357              		.global	usbInitEndpointI
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	usbInitEndpointI:
 364              	.LFB286:
 358:lib/chibios/os/hal/src/hal_usb.c **** 
 359:lib/chibios/os/hal/src/hal_usb.c **** /**
 360:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Enables an endpoint.
 361:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function enables an endpoint, both IN and/or OUT directions
 362:lib/chibios/os/hal/src/hal_usb.c ****  *          depending on the configuration structure.
 363:lib/chibios/os/hal/src/hal_usb.c ****  * @note    This function must be invoked in response of a SET_CONFIGURATION
 364:lib/chibios/os/hal/src/hal_usb.c ****  *          or SET_INTERFACE message.
 365:lib/chibios/os/hal/src/hal_usb.c ****  *
 366:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 367:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number
 368:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] epcp      the endpoint configuration
 369:lib/chibios/os/hal/src/hal_usb.c ****  *
 370:lib/chibios/os/hal/src/hal_usb.c ****  * @iclass
 371:lib/chibios/os/hal/src/hal_usb.c ****  */
 372:lib/chibios/os/hal/src/hal_usb.c **** void usbInitEndpointI(USBDriver *usbp, usbep_t ep,
 373:lib/chibios/os/hal/src/hal_usb.c ****                       const USBEndpointConfig *epcp) {
 365              		.loc 1 373 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              	.LVL30:
 370 0000 70B5     		push	{r4, r5, r6, lr}
 371              		.cfi_def_cfa_offset 16
 372              		.cfi_offset 4, -16
 373              		.cfi_offset 5, -12
 374              		.cfi_offset 6, -8
 375              		.cfi_offset 14, -4
 374:lib/chibios/os/hal/src/hal_usb.c **** 
 375:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheckClassI();
 376:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck((usbp != NULL) && (epcp != NULL));
 377:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgAssert(usbp->state == USB_ACTIVE,
 378:lib/chibios/os/hal/src/hal_usb.c ****                 "invalid state");
 379:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgAssert(usbp->epc[ep] == NULL, "already initialized");
 380:lib/chibios/os/hal/src/hal_usb.c **** 
 381:lib/chibios/os/hal/src/hal_usb.c ****   /* Logically enabling the endpoint in the USBDriver structure.*/
 382:lib/chibios/os/hal/src/hal_usb.c ****   usbp->epc[ep] = epcp;
 376              		.loc 1 382 0
 377 0002 00EB8103 		add	r3, r0, r1, lsl #2
 373:lib/chibios/os/hal/src/hal_usb.c **** 
 378              		.loc 1 373 0
 379 0006 0546     		mov	r5, r0
 383:lib/chibios/os/hal/src/hal_usb.c **** 
 384:lib/chibios/os/hal/src/hal_usb.c ****   /* Clearing the state structures, custom fields as well.*/
 385:lib/chibios/os/hal/src/hal_usb.c ****   if (epcp->in_state != NULL) {
 380              		.loc 1 385 0
 381 0008 5069     		ldr	r0, [r2, #20]
 382              	.LVL31:
 382:lib/chibios/os/hal/src/hal_usb.c **** 
 383              		.loc 1 382 0
 384 000a DA60     		str	r2, [r3, #12]
 373:lib/chibios/os/hal/src/hal_usb.c **** 
 385              		.loc 1 373 0
 386 000c 0E46     		mov	r6, r1
 387 000e 1446     		mov	r4, r2
 388              		.loc 1 385 0
 389 0010 18B1     		cbz	r0, .L25
 386:lib/chibios/os/hal/src/hal_usb.c ****     memset(epcp->in_state, 0, sizeof(USBInEndpointState));
 390              		.loc 1 386 0
 391 0012 1422     		movs	r2, #20
 392              	.LVL32:
 393 0014 0021     		movs	r1, #0
 394              	.LVL33:
 395 0016 FFF7FEFF 		bl	memset
 396              	.LVL34:
 397              	.L25:
 387:lib/chibios/os/hal/src/hal_usb.c ****   }
 388:lib/chibios/os/hal/src/hal_usb.c ****   if (epcp->out_state != NULL) {
 398              		.loc 1 388 0
 399 001a A069     		ldr	r0, [r4, #24]
 400 001c 18B1     		cbz	r0, .L26
 389:lib/chibios/os/hal/src/hal_usb.c ****     memset(epcp->out_state, 0, sizeof(USBOutEndpointState));
 401              		.loc 1 389 0
 402 001e 1422     		movs	r2, #20
 403 0020 0021     		movs	r1, #0
 404 0022 FFF7FEFF 		bl	memset
 405              	.LVL35:
 406              	.L26:
 390:lib/chibios/os/hal/src/hal_usb.c ****   }
 391:lib/chibios/os/hal/src/hal_usb.c **** 
 392:lib/chibios/os/hal/src/hal_usb.c ****   /* Low level endpoint activation.*/
 393:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_init_endpoint(usbp, ep);
 407              		.loc 1 393 0
 408 0026 3146     		mov	r1, r6
 409 0028 2846     		mov	r0, r5
 394:lib/chibios/os/hal/src/hal_usb.c **** }
 410              		.loc 1 394 0
 411 002a BDE87040 		pop	{r4, r5, r6, lr}
 412              		.cfi_restore 14
 413              		.cfi_restore 6
 414              		.cfi_restore 5
 415              		.cfi_restore 4
 416              		.cfi_def_cfa_offset 0
 417              	.LVL36:
 393:lib/chibios/os/hal/src/hal_usb.c **** }
 418              		.loc 1 393 0
 419 002e FFF7FEBF 		b	usb_lld_init_endpoint
 420              	.LVL37:
 421              		.cfi_endproc
 422              	.LFE286:
 424              		.section	.text.usbDisableEndpointsI,"ax",%progbits
 425              		.align	1
 426              		.global	usbDisableEndpointsI
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu softvfp
 432              	usbDisableEndpointsI:
 433              	.LFB287:
 395:lib/chibios/os/hal/src/hal_usb.c **** 
 396:lib/chibios/os/hal/src/hal_usb.c **** /**
 397:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Disables all the active endpoints.
 398:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function disables all the active endpoints except the
 399:lib/chibios/os/hal/src/hal_usb.c ****  *          endpoint zero.
 400:lib/chibios/os/hal/src/hal_usb.c ****  * @note    This function must be invoked in response of a SET_CONFIGURATION
 401:lib/chibios/os/hal/src/hal_usb.c ****  *          message with configuration number zero.
 402:lib/chibios/os/hal/src/hal_usb.c ****  *
 403:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 404:lib/chibios/os/hal/src/hal_usb.c ****  *
 405:lib/chibios/os/hal/src/hal_usb.c ****  * @iclass
 406:lib/chibios/os/hal/src/hal_usb.c ****  */
 407:lib/chibios/os/hal/src/hal_usb.c **** void usbDisableEndpointsI(USBDriver *usbp) {
 434              		.loc 1 407 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              	.LVL38:
 439 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 440              		.cfi_def_cfa_offset 24
 441              		.cfi_offset 3, -24
 442              		.cfi_offset 4, -20
 443              		.cfi_offset 5, -16
 444              		.cfi_offset 6, -12
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 408:lib/chibios/os/hal/src/hal_usb.c ****   unsigned i;
 409:lib/chibios/os/hal/src/hal_usb.c **** 
 410:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheckClassI();
 411:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck(usbp != NULL);
 412:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgAssert(usbp->state == USB_ACTIVE, "invalid state");
 413:lib/chibios/os/hal/src/hal_usb.c **** 
 414:lib/chibios/os/hal/src/hal_usb.c ****   usbp->transmitting &= 1U;
 447              		.loc 1 414 0
 448 0002 0389     		ldrh	r3, [r0, #8]
 449 0004 03F00103 		and	r3, r3, #1
 450 0008 0381     		strh	r3, [r0, #8]	@ movhi
 415:lib/chibios/os/hal/src/hal_usb.c ****   usbp->receiving    &= 1U;
 451              		.loc 1 415 0
 452 000a 4389     		ldrh	r3, [r0, #10]
 453 000c 03F00103 		and	r3, r3, #1
 407:lib/chibios/os/hal/src/hal_usb.c ****   unsigned i;
 454              		.loc 1 407 0
 455 0010 0446     		mov	r4, r0
 456              		.loc 1 415 0
 457 0012 4381     		strh	r3, [r0, #10]	@ movhi
 458              	.LVL39:
 459 0014 00F11005 		add	r5, r0, #16
 460 0018 00F12C06 		add	r6, r0, #44
 416:lib/chibios/os/hal/src/hal_usb.c **** 
 417:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 1; i <= (unsigned)USB_MAX_ENDPOINTS; i++) {
 418:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 419:lib/chibios/os/hal/src/hal_usb.c ****     /* Signaling the event to threads waiting on endpoints.*/
 420:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->epc[i] != NULL) {
 421:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i]->in_state != NULL) {
 422:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->in_state->thread, MSG_RESET);
 423:lib/chibios/os/hal/src/hal_usb.c ****       }
 424:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i]->out_state != NULL) {
 425:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->out_state->thread, MSG_RESET);
 426:lib/chibios/os/hal/src/hal_usb.c ****       }
 427:lib/chibios/os/hal/src/hal_usb.c ****     }
 428:lib/chibios/os/hal/src/hal_usb.c **** #endif
 429:lib/chibios/os/hal/src/hal_usb.c ****     usbp->epc[i] = NULL;
 461              		.loc 1 429 0
 462 001c 0027     		movs	r7, #0
 463              	.LVL40:
 464              	.L38:
 420:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i]->in_state != NULL) {
 465              		.loc 1 420 0
 466 001e 55F8043B 		ldr	r3, [r5], #4
 467 0022 7BB1     		cbz	r3, .L35
 421:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->in_state->thread, MSG_RESET);
 468              		.loc 1 421 0
 469 0024 5869     		ldr	r0, [r3, #20]
 470 0026 20B1     		cbz	r0, .L36
 471              	.LVL41:
 472              	.LBB324:
 473              	.LBB325:
 474              		.loc 3 728 0
 475 0028 6FF00101 		mvn	r1, #1
 476 002c 0C30     		adds	r0, r0, #12
 477              	.LVL42:
 478 002e FFF7FEFF 		bl	chThdResumeI
 479              	.LVL43:
 480              	.L36:
 481              	.LBE325:
 482              	.LBE324:
 424:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->out_state->thread, MSG_RESET);
 483              		.loc 1 424 0
 484 0032 55F8043C 		ldr	r3, [r5, #-4]
 485 0036 9869     		ldr	r0, [r3, #24]
 486 0038 20B1     		cbz	r0, .L35
 487              	.LVL44:
 488              	.LBB326:
 489              	.LBB327:
 490              		.loc 3 728 0
 491 003a 6FF00101 		mvn	r1, #1
 492 003e 0C30     		adds	r0, r0, #12
 493              	.LVL45:
 494 0040 FFF7FEFF 		bl	chThdResumeI
 495              	.LVL46:
 496              	.L35:
 497              	.LBE327:
 498              	.LBE326:
 417:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 499              		.loc 1 417 0 discriminator 2
 500 0044 B542     		cmp	r5, r6
 501              		.loc 1 429 0 discriminator 2
 502 0046 45F8047C 		str	r7, [r5, #-4]
 417:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 503              		.loc 1 417 0 discriminator 2
 504 004a E8D1     		bne	.L38
 430:lib/chibios/os/hal/src/hal_usb.c ****   }
 431:lib/chibios/os/hal/src/hal_usb.c **** 
 432:lib/chibios/os/hal/src/hal_usb.c ****   /* Low level endpoints deactivation.*/
 433:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_disable_endpoints(usbp);
 505              		.loc 1 433 0
 506 004c 2046     		mov	r0, r4
 434:lib/chibios/os/hal/src/hal_usb.c **** }
 507              		.loc 1 434 0
 508 004e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 509              		.cfi_restore 14
 510              		.cfi_restore 7
 511              		.cfi_restore 6
 512              		.cfi_restore 5
 513              		.cfi_restore 4
 514              		.cfi_restore 3
 515              		.cfi_def_cfa_offset 0
 516              	.LVL47:
 433:lib/chibios/os/hal/src/hal_usb.c **** }
 517              		.loc 1 433 0
 518 0052 FFF7FEBF 		b	usb_lld_disable_endpoints
 519              	.LVL48:
 520              		.cfi_endproc
 521              	.LFE287:
 523              		.section	.text.usbStartReceiveI,"ax",%progbits
 524              		.align	1
 525              		.global	usbStartReceiveI
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu softvfp
 531              	usbStartReceiveI:
 532              	.LFB288:
 435:lib/chibios/os/hal/src/hal_usb.c **** 
 436:lib/chibios/os/hal/src/hal_usb.c **** /**
 437:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Starts a receive transaction on an OUT endpoint.
 438:lib/chibios/os/hal/src/hal_usb.c ****  * @note    This function is meant to be called from ISR context outside
 439:lib/chibios/os/hal/src/hal_usb.c ****  *          critical zones because there is a potentially slow operation
 440:lib/chibios/os/hal/src/hal_usb.c ****  *          inside.
 441:lib/chibios/os/hal/src/hal_usb.c ****  *
 442:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 443:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number
 444:lib/chibios/os/hal/src/hal_usb.c ****  * @param[out] buf      buffer where to copy the received data
 445:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] n         transaction size. It is recommended a multiple of
 446:lib/chibios/os/hal/src/hal_usb.c ****  *                      the packet size because the excess is discarded.
 447:lib/chibios/os/hal/src/hal_usb.c ****  *
 448:lib/chibios/os/hal/src/hal_usb.c ****  * @iclass
 449:lib/chibios/os/hal/src/hal_usb.c ****  */
 450:lib/chibios/os/hal/src/hal_usb.c **** void usbStartReceiveI(USBDriver *usbp, usbep_t ep,
 451:lib/chibios/os/hal/src/hal_usb.c ****                       uint8_t *buf, size_t n) {
 533              		.loc 1 451 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538              	.LVL49:
 539 0000 F0B4     		push	{r4, r5, r6, r7}
 540              		.cfi_def_cfa_offset 16
 541              		.cfi_offset 4, -16
 542              		.cfi_offset 5, -12
 543              		.cfi_offset 6, -8
 544              		.cfi_offset 7, -4
 452:lib/chibios/os/hal/src/hal_usb.c ****   USBOutEndpointState *osp;
 453:lib/chibios/os/hal/src/hal_usb.c **** 
 454:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheckClassI();
 455:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck((usbp != NULL) && (ep <= (usbep_t)USB_MAX_ENDPOINTS));
 456:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgAssert(!usbGetReceiveStatusI(usbp, ep), "already receiving");
 457:lib/chibios/os/hal/src/hal_usb.c **** 
 458:lib/chibios/os/hal/src/hal_usb.c ****   /* Marking the endpoint as active.*/
 459:lib/chibios/os/hal/src/hal_usb.c ****   usbp->receiving |= (uint16_t)((unsigned)1U << (unsigned)ep);
 460:lib/chibios/os/hal/src/hal_usb.c **** 
 461:lib/chibios/os/hal/src/hal_usb.c ****   /* Setting up the transfer.*/
 462:lib/chibios/os/hal/src/hal_usb.c ****   /*lint -save -e661 [18.1] pclint is confused by the check on ep.*/
 463:lib/chibios/os/hal/src/hal_usb.c ****   osp = usbp->epc[ep]->out_state;
 545              		.loc 1 463 0
 546 0002 00EB8104 		add	r4, r0, r1, lsl #2
 459:lib/chibios/os/hal/src/hal_usb.c **** 
 547              		.loc 1 459 0
 548 0006 4789     		ldrh	r7, [r0, #10]
 549              		.loc 1 463 0
 550 0008 E468     		ldr	r4, [r4, #12]
 459:lib/chibios/os/hal/src/hal_usb.c **** 
 551              		.loc 1 459 0
 552 000a 0125     		movs	r5, #1
 553              		.loc 1 463 0
 554 000c A469     		ldr	r4, [r4, #24]
 555              	.LVL50:
 459:lib/chibios/os/hal/src/hal_usb.c **** 
 556              		.loc 1 459 0
 557 000e 8D40     		lsls	r5, r5, r1
 558 0010 3D43     		orrs	r5, r5, r7
 559 0012 4581     		strh	r5, [r0, #10]	@ movhi
 464:lib/chibios/os/hal/src/hal_usb.c ****   /*lint -restore*/
 465:lib/chibios/os/hal/src/hal_usb.c ****   osp->rxbuf  = buf;
 466:lib/chibios/os/hal/src/hal_usb.c ****   osp->rxsize = n;
 560              		.loc 1 466 0
 561 0014 2360     		str	r3, [r4]
 467:lib/chibios/os/hal/src/hal_usb.c ****   osp->rxcnt  = 0;
 562              		.loc 1 467 0
 563 0016 0023     		movs	r3, #0
 564              	.LVL51:
 465:lib/chibios/os/hal/src/hal_usb.c ****   osp->rxsize = n;
 565              		.loc 1 465 0
 566 0018 A260     		str	r2, [r4, #8]
 567              		.loc 1 467 0
 568 001a 6360     		str	r3, [r4, #4]
 468:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 469:lib/chibios/os/hal/src/hal_usb.c ****   osp->thread = NULL;
 569              		.loc 1 469 0
 570 001c E360     		str	r3, [r4, #12]
 470:lib/chibios/os/hal/src/hal_usb.c **** #endif
 471:lib/chibios/os/hal/src/hal_usb.c **** 
 472:lib/chibios/os/hal/src/hal_usb.c ****   /* Starting transfer.*/
 473:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_start_out(usbp, ep);
 474:lib/chibios/os/hal/src/hal_usb.c **** }
 571              		.loc 1 474 0
 572 001e F0BC     		pop	{r4, r5, r6, r7}
 573              		.cfi_restore 7
 574              		.cfi_restore 6
 575              		.cfi_restore 5
 576              		.cfi_restore 4
 577              		.cfi_def_cfa_offset 0
 578              	.LVL52:
 473:lib/chibios/os/hal/src/hal_usb.c **** }
 579              		.loc 1 473 0
 580 0020 FFF7FEBF 		b	usb_lld_start_out
 581              	.LVL53:
 582              		.cfi_endproc
 583              	.LFE288:
 585              		.section	.text.usbStartTransmitI,"ax",%progbits
 586              		.align	1
 587              		.global	usbStartTransmitI
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu softvfp
 593              	usbStartTransmitI:
 594              	.LFB289:
 475:lib/chibios/os/hal/src/hal_usb.c **** 
 476:lib/chibios/os/hal/src/hal_usb.c **** /**
 477:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Starts a transmit transaction on an IN endpoint.
 478:lib/chibios/os/hal/src/hal_usb.c ****  * @note    This function is meant to be called from ISR context outside
 479:lib/chibios/os/hal/src/hal_usb.c ****  *          critical zones because there is a potentially slow operation
 480:lib/chibios/os/hal/src/hal_usb.c ****  *          inside.
 481:lib/chibios/os/hal/src/hal_usb.c ****  *
 482:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 483:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number
 484:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] buf       buffer where to fetch the data to be transmitted
 485:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] n         transaction size
 486:lib/chibios/os/hal/src/hal_usb.c ****  *
 487:lib/chibios/os/hal/src/hal_usb.c ****  * @iclass
 488:lib/chibios/os/hal/src/hal_usb.c ****  */
 489:lib/chibios/os/hal/src/hal_usb.c **** void usbStartTransmitI(USBDriver *usbp, usbep_t ep,
 490:lib/chibios/os/hal/src/hal_usb.c ****                        const uint8_t *buf, size_t n) {
 595              		.loc 1 490 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL54:
 601 0000 F0B4     		push	{r4, r5, r6, r7}
 602              		.cfi_def_cfa_offset 16
 603              		.cfi_offset 4, -16
 604              		.cfi_offset 5, -12
 605              		.cfi_offset 6, -8
 606              		.cfi_offset 7, -4
 491:lib/chibios/os/hal/src/hal_usb.c ****   USBInEndpointState *isp;
 492:lib/chibios/os/hal/src/hal_usb.c **** 
 493:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheckClassI();
 494:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck((usbp != NULL) && (ep <= (usbep_t)USB_MAX_ENDPOINTS));
 495:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgAssert(!usbGetTransmitStatusI(usbp, ep), "already transmitting");
 496:lib/chibios/os/hal/src/hal_usb.c **** 
 497:lib/chibios/os/hal/src/hal_usb.c ****   /* Marking the endpoint as active.*/
 498:lib/chibios/os/hal/src/hal_usb.c ****   usbp->transmitting |= (uint16_t)((unsigned)1U << (unsigned)ep);
 499:lib/chibios/os/hal/src/hal_usb.c **** 
 500:lib/chibios/os/hal/src/hal_usb.c ****   /* Setting up the transfer.*/
 501:lib/chibios/os/hal/src/hal_usb.c ****   /*lint -save -e661 [18.1] pclint is confused by the check on ep.*/
 502:lib/chibios/os/hal/src/hal_usb.c ****   isp = usbp->epc[ep]->in_state;
 607              		.loc 1 502 0
 608 0002 00EB8104 		add	r4, r0, r1, lsl #2
 498:lib/chibios/os/hal/src/hal_usb.c **** 
 609              		.loc 1 498 0
 610 0006 0789     		ldrh	r7, [r0, #8]
 611              		.loc 1 502 0
 612 0008 E468     		ldr	r4, [r4, #12]
 498:lib/chibios/os/hal/src/hal_usb.c **** 
 613              		.loc 1 498 0
 614 000a 0125     		movs	r5, #1
 615              		.loc 1 502 0
 616 000c 6469     		ldr	r4, [r4, #20]
 617              	.LVL55:
 498:lib/chibios/os/hal/src/hal_usb.c **** 
 618              		.loc 1 498 0
 619 000e 8D40     		lsls	r5, r5, r1
 620 0010 3D43     		orrs	r5, r5, r7
 621 0012 0581     		strh	r5, [r0, #8]	@ movhi
 503:lib/chibios/os/hal/src/hal_usb.c ****   /*lint -restore*/
 504:lib/chibios/os/hal/src/hal_usb.c ****   isp->txbuf  = buf;
 505:lib/chibios/os/hal/src/hal_usb.c ****   isp->txsize = n;
 622              		.loc 1 505 0
 623 0014 2360     		str	r3, [r4]
 506:lib/chibios/os/hal/src/hal_usb.c ****   isp->txcnt  = 0;
 624              		.loc 1 506 0
 625 0016 0023     		movs	r3, #0
 626              	.LVL56:
 504:lib/chibios/os/hal/src/hal_usb.c ****   isp->txsize = n;
 627              		.loc 1 504 0
 628 0018 A260     		str	r2, [r4, #8]
 629              		.loc 1 506 0
 630 001a 6360     		str	r3, [r4, #4]
 507:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 508:lib/chibios/os/hal/src/hal_usb.c ****   isp->thread = NULL;
 631              		.loc 1 508 0
 632 001c E360     		str	r3, [r4, #12]
 509:lib/chibios/os/hal/src/hal_usb.c **** #endif
 510:lib/chibios/os/hal/src/hal_usb.c **** 
 511:lib/chibios/os/hal/src/hal_usb.c ****   /* Starting transfer.*/
 512:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_start_in(usbp, ep);
 513:lib/chibios/os/hal/src/hal_usb.c **** }
 633              		.loc 1 513 0
 634 001e F0BC     		pop	{r4, r5, r6, r7}
 635              		.cfi_restore 7
 636              		.cfi_restore 6
 637              		.cfi_restore 5
 638              		.cfi_restore 4
 639              		.cfi_def_cfa_offset 0
 640              	.LVL57:
 512:lib/chibios/os/hal/src/hal_usb.c **** }
 641              		.loc 1 512 0
 642 0020 FFF7FEBF 		b	usb_lld_start_in
 643              	.LVL58:
 644              		.cfi_endproc
 645              	.LFE289:
 647              		.section	.text.usbReceive,"ax",%progbits
 648              		.align	1
 649              		.global	usbReceive
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu softvfp
 655              	usbReceive:
 656              	.LFB290:
 514:lib/chibios/os/hal/src/hal_usb.c **** 
 515:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_USE_WAIT == TRUE) || defined(__DOXYGEN__)
 516:lib/chibios/os/hal/src/hal_usb.c **** /**
 517:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Performs a receive transaction on an OUT endpoint.
 518:lib/chibios/os/hal/src/hal_usb.c ****  *
 519:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 520:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number
 521:lib/chibios/os/hal/src/hal_usb.c ****  * @param[out] buf      buffer where to copy the received data
 522:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] n         transaction size. It is recommended a multiple of
 523:lib/chibios/os/hal/src/hal_usb.c ****  *                      the packet size because the excess is discarded.
 524:lib/chibios/os/hal/src/hal_usb.c ****  *
 525:lib/chibios/os/hal/src/hal_usb.c ****  * @return              The received effective data size, it can be less than
 526:lib/chibios/os/hal/src/hal_usb.c ****  *                      the amount specified.
 527:lib/chibios/os/hal/src/hal_usb.c ****  * @retval MSG_RESET    driver not in @p USB_ACTIVE state or the operation
 528:lib/chibios/os/hal/src/hal_usb.c ****  *                      has been aborted by an USB reset or a transition to
 529:lib/chibios/os/hal/src/hal_usb.c ****  *                      the @p USB_SUSPENDED state.
 530:lib/chibios/os/hal/src/hal_usb.c ****  *
 531:lib/chibios/os/hal/src/hal_usb.c ****  * @api
 532:lib/chibios/os/hal/src/hal_usb.c ****  */
 533:lib/chibios/os/hal/src/hal_usb.c **** msg_t usbReceive(USBDriver *usbp, usbep_t ep, uint8_t *buf, size_t n) {
 657              		.loc 1 533 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LVL59:
 662 0000 70B5     		push	{r4, r5, r6, lr}
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 4, -16
 665              		.cfi_offset 5, -12
 666              		.cfi_offset 6, -8
 667              		.cfi_offset 14, -4
 668              		.loc 1 533 0
 669 0002 0446     		mov	r4, r0
 670 0004 0D46     		mov	r5, r1
 671              	.LBB328:
 672              	.LBB329:
 673              	.LBB330:
 674              	.LBB331:
 675              	.LBB332:
 676              		.loc 2 264 0
 677 0006 2026     		movs	r6, #32
 678              		.syntax unified
 679              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 680 0008 86F31188 		MSR basepri, r6
 681              	@ 0 "" 2
 682              	.LVL60:
 683              		.thumb
 684              		.syntax unified
 685              	.LBE332:
 686              	.LBE331:
 687              	.LBE330:
 688              	.LBE329:
 689              	.LBE328:
 534:lib/chibios/os/hal/src/hal_usb.c ****   msg_t msg;
 535:lib/chibios/os/hal/src/hal_usb.c **** 
 536:lib/chibios/os/hal/src/hal_usb.c ****   osalSysLock();
 537:lib/chibios/os/hal/src/hal_usb.c **** 
 538:lib/chibios/os/hal/src/hal_usb.c ****   if (usbGetDriverStateI(usbp) != USB_ACTIVE) {
 690              		.loc 1 538 0
 691 000c 0678     		ldrb	r6, [r0]	@ zero_extendqisi2
 692 000e 042E     		cmp	r6, #4
 693 0010 05D0     		beq	.L49
 694              	.LVL61:
 695              	.LBB333:
 696              	.LBB334:
 697              	.LBB335:
 698              	.LBB336:
 699              	.LBB337:
 700              	.LBB338:
 701              		.loc 2 264 0
 702 0012 0023     		movs	r3, #0
 703              	.LVL62:
 704              		.syntax unified
 705              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 706 0014 83F31188 		MSR basepri, r3
 707              	@ 0 "" 2
 708              	.LVL63:
 709              		.thumb
 710              		.syntax unified
 711              	.LBE338:
 712              	.LBE337:
 713              	.LBE336:
 714              	.LBE335:
 715              	.LBE334:
 716              	.LBE333:
 539:lib/chibios/os/hal/src/hal_usb.c ****     osalSysUnlock();
 540:lib/chibios/os/hal/src/hal_usb.c ****     return MSG_RESET;
 717              		.loc 1 540 0
 718 0018 6FF00100 		mvn	r0, #1
 719              	.LVL64:
 720              	.L48:
 541:lib/chibios/os/hal/src/hal_usb.c ****   }
 542:lib/chibios/os/hal/src/hal_usb.c **** 
 543:lib/chibios/os/hal/src/hal_usb.c ****   usbStartReceiveI(usbp, ep, buf, n);
 544:lib/chibios/os/hal/src/hal_usb.c ****   msg = osalThreadSuspendS(&usbp->epc[ep]->out_state->thread);
 545:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 546:lib/chibios/os/hal/src/hal_usb.c **** 
 547:lib/chibios/os/hal/src/hal_usb.c ****   return msg;
 548:lib/chibios/os/hal/src/hal_usb.c **** }
 721              		.loc 1 548 0
 722 001c 70BD     		pop	{r4, r5, r6, pc}
 723              	.LVL65:
 724              	.L49:
 544:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 725              		.loc 1 544 0
 726 001e 04EB8504 		add	r4, r4, r5, lsl #2
 543:lib/chibios/os/hal/src/hal_usb.c ****   msg = osalThreadSuspendS(&usbp->epc[ep]->out_state->thread);
 727              		.loc 1 543 0
 728 0022 FFF7FEFF 		bl	usbStartReceiveI
 729              	.LVL66:
 544:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 730              		.loc 1 544 0
 731 0026 E368     		ldr	r3, [r4, #12]
 732 0028 9869     		ldr	r0, [r3, #24]
 733              	.LBB339:
 734              	.LBB340:
 688:./lib/chibios/os/hal/osal/rt/osal.h **** }
 735              		.loc 3 688 0
 736 002a 0C30     		adds	r0, r0, #12
 737 002c FFF7FEFF 		bl	chThdSuspendS
 738              	.LVL67:
 739              	.LBE340:
 740              	.LBE339:
 741              	.LBB341:
 742              	.LBB342:
 743              	.LBB343:
 744              	.LBB344:
 745              	.LBB345:
 746              	.LBB346:
 747              		.loc 2 264 0
 748 0030 0023     		movs	r3, #0
 749              		.syntax unified
 750              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 751 0032 83F31188 		MSR basepri, r3
 752              	@ 0 "" 2
 753              	.LVL68:
 754              		.thumb
 755              		.syntax unified
 756              	.LBE346:
 757              	.LBE345:
 758              	.LBE344:
 759              	.LBE343:
 760              	.LBE342:
 761              	.LBE341:
 547:lib/chibios/os/hal/src/hal_usb.c **** }
 762              		.loc 1 547 0
 763 0036 F1E7     		b	.L48
 764              		.cfi_endproc
 765              	.LFE290:
 767              		.section	.text.usbTransmit,"ax",%progbits
 768              		.align	1
 769              		.global	usbTransmit
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu softvfp
 775              	usbTransmit:
 776              	.LFB291:
 549:lib/chibios/os/hal/src/hal_usb.c **** 
 550:lib/chibios/os/hal/src/hal_usb.c **** /**
 551:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Performs a transmit transaction on an IN endpoint.
 552:lib/chibios/os/hal/src/hal_usb.c ****  *
 553:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 554:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number
 555:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] buf       buffer where to fetch the data to be transmitted
 556:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] n         transaction size
 557:lib/chibios/os/hal/src/hal_usb.c ****  *
 558:lib/chibios/os/hal/src/hal_usb.c ****  * @return              The operation status.
 559:lib/chibios/os/hal/src/hal_usb.c ****  * @retval MSG_OK       operation performed successfully.
 560:lib/chibios/os/hal/src/hal_usb.c ****  * @retval MSG_RESET    driver not in @p USB_ACTIVE state or the operation
 561:lib/chibios/os/hal/src/hal_usb.c ****  *                      has been aborted by an USB reset or a transition to
 562:lib/chibios/os/hal/src/hal_usb.c ****  *                      the @p USB_SUSPENDED state.
 563:lib/chibios/os/hal/src/hal_usb.c ****  *
 564:lib/chibios/os/hal/src/hal_usb.c ****  * @api
 565:lib/chibios/os/hal/src/hal_usb.c ****  */
 566:lib/chibios/os/hal/src/hal_usb.c **** msg_t usbTransmit(USBDriver *usbp, usbep_t ep, const uint8_t *buf, size_t n) {
 777              		.loc 1 566 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              	.LVL69:
 782 0000 70B5     		push	{r4, r5, r6, lr}
 783              		.cfi_def_cfa_offset 16
 784              		.cfi_offset 4, -16
 785              		.cfi_offset 5, -12
 786              		.cfi_offset 6, -8
 787              		.cfi_offset 14, -4
 788              		.loc 1 566 0
 789 0002 0446     		mov	r4, r0
 790 0004 0D46     		mov	r5, r1
 791              	.LBB347:
 792              	.LBB348:
 793              	.LBB349:
 794              	.LBB350:
 795              	.LBB351:
 796              		.loc 2 264 0
 797 0006 2026     		movs	r6, #32
 798              		.syntax unified
 799              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 800 0008 86F31188 		MSR basepri, r6
 801              	@ 0 "" 2
 802              	.LVL70:
 803              		.thumb
 804              		.syntax unified
 805              	.LBE351:
 806              	.LBE350:
 807              	.LBE349:
 808              	.LBE348:
 809              	.LBE347:
 567:lib/chibios/os/hal/src/hal_usb.c ****   msg_t msg;
 568:lib/chibios/os/hal/src/hal_usb.c **** 
 569:lib/chibios/os/hal/src/hal_usb.c ****   osalSysLock();
 570:lib/chibios/os/hal/src/hal_usb.c **** 
 571:lib/chibios/os/hal/src/hal_usb.c ****   if (usbGetDriverStateI(usbp) != USB_ACTIVE) {
 810              		.loc 1 571 0
 811 000c 0678     		ldrb	r6, [r0]	@ zero_extendqisi2
 812 000e 042E     		cmp	r6, #4
 813 0010 05D0     		beq	.L52
 814              	.LVL71:
 815              	.LBB352:
 816              	.LBB353:
 817              	.LBB354:
 818              	.LBB355:
 819              	.LBB356:
 820              	.LBB357:
 821              		.loc 2 264 0
 822 0012 0023     		movs	r3, #0
 823              	.LVL72:
 824              		.syntax unified
 825              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 826 0014 83F31188 		MSR basepri, r3
 827              	@ 0 "" 2
 828              	.LVL73:
 829              		.thumb
 830              		.syntax unified
 831              	.LBE357:
 832              	.LBE356:
 833              	.LBE355:
 834              	.LBE354:
 835              	.LBE353:
 836              	.LBE352:
 572:lib/chibios/os/hal/src/hal_usb.c ****     osalSysUnlock();
 573:lib/chibios/os/hal/src/hal_usb.c ****     return MSG_RESET;
 837              		.loc 1 573 0
 838 0018 6FF00100 		mvn	r0, #1
 839              	.LVL74:
 840              	.L51:
 574:lib/chibios/os/hal/src/hal_usb.c ****   }
 575:lib/chibios/os/hal/src/hal_usb.c **** 
 576:lib/chibios/os/hal/src/hal_usb.c ****   usbStartTransmitI(usbp, ep, buf, n);
 577:lib/chibios/os/hal/src/hal_usb.c ****   msg = osalThreadSuspendS(&usbp->epc[ep]->in_state->thread);
 578:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 579:lib/chibios/os/hal/src/hal_usb.c **** 
 580:lib/chibios/os/hal/src/hal_usb.c ****   return msg;
 581:lib/chibios/os/hal/src/hal_usb.c **** }
 841              		.loc 1 581 0
 842 001c 70BD     		pop	{r4, r5, r6, pc}
 843              	.LVL75:
 844              	.L52:
 577:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 845              		.loc 1 577 0
 846 001e 04EB8504 		add	r4, r4, r5, lsl #2
 576:lib/chibios/os/hal/src/hal_usb.c ****   msg = osalThreadSuspendS(&usbp->epc[ep]->in_state->thread);
 847              		.loc 1 576 0
 848 0022 FFF7FEFF 		bl	usbStartTransmitI
 849              	.LVL76:
 577:lib/chibios/os/hal/src/hal_usb.c ****   osalSysUnlock();
 850              		.loc 1 577 0
 851 0026 E368     		ldr	r3, [r4, #12]
 852 0028 5869     		ldr	r0, [r3, #20]
 853              	.LBB358:
 854              	.LBB359:
 688:./lib/chibios/os/hal/osal/rt/osal.h **** }
 855              		.loc 3 688 0
 856 002a 0C30     		adds	r0, r0, #12
 857 002c FFF7FEFF 		bl	chThdSuspendS
 858              	.LVL77:
 859              	.LBE359:
 860              	.LBE358:
 861              	.LBB360:
 862              	.LBB361:
 863              	.LBB362:
 864              	.LBB363:
 865              	.LBB364:
 866              	.LBB365:
 867              		.loc 2 264 0
 868 0030 0023     		movs	r3, #0
 869              		.syntax unified
 870              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 871 0032 83F31188 		MSR basepri, r3
 872              	@ 0 "" 2
 873              	.LVL78:
 874              		.thumb
 875              		.syntax unified
 876              	.LBE365:
 877              	.LBE364:
 878              	.LBE363:
 879              	.LBE362:
 880              	.LBE361:
 881              	.LBE360:
 580:lib/chibios/os/hal/src/hal_usb.c **** }
 882              		.loc 1 580 0
 883 0036 F1E7     		b	.L51
 884              		.cfi_endproc
 885              	.LFE291:
 887              		.section	.text.usbStallReceiveI,"ax",%progbits
 888              		.align	1
 889              		.global	usbStallReceiveI
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu softvfp
 895              	usbStallReceiveI:
 896              	.LFB292:
 582:lib/chibios/os/hal/src/hal_usb.c **** #endif /* USB_USE_WAIT == TRUE */
 583:lib/chibios/os/hal/src/hal_usb.c **** 
 584:lib/chibios/os/hal/src/hal_usb.c **** /**
 585:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Stalls an OUT endpoint.
 586:lib/chibios/os/hal/src/hal_usb.c ****  *
 587:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 588:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number
 589:lib/chibios/os/hal/src/hal_usb.c ****  *
 590:lib/chibios/os/hal/src/hal_usb.c ****  * @return              The operation status.
 591:lib/chibios/os/hal/src/hal_usb.c ****  * @retval false        Endpoint stalled.
 592:lib/chibios/os/hal/src/hal_usb.c ****  * @retval true         Endpoint busy, not stalled.
 593:lib/chibios/os/hal/src/hal_usb.c ****  *
 594:lib/chibios/os/hal/src/hal_usb.c ****  * @iclass
 595:lib/chibios/os/hal/src/hal_usb.c ****  */
 596:lib/chibios/os/hal/src/hal_usb.c **** bool usbStallReceiveI(USBDriver *usbp, usbep_t ep) {
 897              		.loc 1 596 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL79:
 902 0000 10B5     		push	{r4, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 4, -8
 905              		.cfi_offset 14, -4
 597:lib/chibios/os/hal/src/hal_usb.c **** 
 598:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheckClassI();
 599:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck(usbp != NULL);
 600:lib/chibios/os/hal/src/hal_usb.c **** 
 601:lib/chibios/os/hal/src/hal_usb.c ****   if (usbGetReceiveStatusI(usbp, ep)) {
 906              		.loc 1 601 0
 907 0002 0123     		movs	r3, #1
 908 0004 4489     		ldrh	r4, [r0, #10]
 909 0006 03FA01F2 		lsl	r2, r3, r1
 910 000a 1440     		ands	r4, r2, r4
 911 000c 03D1     		bne	.L56
 602:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 603:lib/chibios/os/hal/src/hal_usb.c ****   }
 604:lib/chibios/os/hal/src/hal_usb.c **** 
 605:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_stall_out(usbp, ep);
 912              		.loc 1 605 0
 913 000e FFF7FEFF 		bl	usb_lld_stall_out
 914              	.LVL80:
 606:lib/chibios/os/hal/src/hal_usb.c ****   return false;
 915              		.loc 1 606 0
 916 0012 2046     		mov	r0, r4
 917              	.L55:
 607:lib/chibios/os/hal/src/hal_usb.c **** }
 918              		.loc 1 607 0
 919 0014 10BD     		pop	{r4, pc}
 920              	.LVL81:
 921              	.L56:
 602:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 922              		.loc 1 602 0
 923 0016 1846     		mov	r0, r3
 924              	.LVL82:
 925 0018 FCE7     		b	.L55
 926              		.cfi_endproc
 927              	.LFE292:
 929              		.section	.text.usbStallTransmitI,"ax",%progbits
 930              		.align	1
 931              		.global	usbStallTransmitI
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu softvfp
 937              	usbStallTransmitI:
 938              	.LFB293:
 608:lib/chibios/os/hal/src/hal_usb.c **** 
 609:lib/chibios/os/hal/src/hal_usb.c **** /**
 610:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Stalls an IN endpoint.
 611:lib/chibios/os/hal/src/hal_usb.c ****  *
 612:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 613:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number
 614:lib/chibios/os/hal/src/hal_usb.c ****  *
 615:lib/chibios/os/hal/src/hal_usb.c ****  * @return              The operation status.
 616:lib/chibios/os/hal/src/hal_usb.c ****  * @retval false        Endpoint stalled.
 617:lib/chibios/os/hal/src/hal_usb.c ****  * @retval true         Endpoint busy, not stalled.
 618:lib/chibios/os/hal/src/hal_usb.c ****  *
 619:lib/chibios/os/hal/src/hal_usb.c ****  * @iclass
 620:lib/chibios/os/hal/src/hal_usb.c ****  */
 621:lib/chibios/os/hal/src/hal_usb.c **** bool usbStallTransmitI(USBDriver *usbp, usbep_t ep) {
 939              		.loc 1 621 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL83:
 944 0000 10B5     		push	{r4, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 4, -8
 947              		.cfi_offset 14, -4
 622:lib/chibios/os/hal/src/hal_usb.c **** 
 623:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheckClassI();
 624:lib/chibios/os/hal/src/hal_usb.c ****   osalDbgCheck(usbp != NULL);
 625:lib/chibios/os/hal/src/hal_usb.c **** 
 626:lib/chibios/os/hal/src/hal_usb.c ****   if (usbGetTransmitStatusI(usbp, ep)) {
 948              		.loc 1 626 0
 949 0002 0123     		movs	r3, #1
 950 0004 0489     		ldrh	r4, [r0, #8]
 951 0006 03FA01F2 		lsl	r2, r3, r1
 952 000a 1440     		ands	r4, r2, r4
 953 000c 03D1     		bne	.L59
 627:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 628:lib/chibios/os/hal/src/hal_usb.c ****   }
 629:lib/chibios/os/hal/src/hal_usb.c **** 
 630:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_stall_in(usbp, ep);
 954              		.loc 1 630 0
 955 000e FFF7FEFF 		bl	usb_lld_stall_in
 956              	.LVL84:
 631:lib/chibios/os/hal/src/hal_usb.c ****   return false;
 957              		.loc 1 631 0
 958 0012 2046     		mov	r0, r4
 959              	.L58:
 632:lib/chibios/os/hal/src/hal_usb.c **** }
 960              		.loc 1 632 0
 961 0014 10BD     		pop	{r4, pc}
 962              	.LVL85:
 963              	.L59:
 627:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 964              		.loc 1 627 0
 965 0016 1846     		mov	r0, r3
 966              	.LVL86:
 967 0018 FCE7     		b	.L58
 968              		.cfi_endproc
 969              	.LFE293:
 971              		.section	.text.usbWakeupHost,"ax",%progbits
 972              		.align	1
 973              		.global	usbWakeupHost
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 977              		.fpu softvfp
 979              	usbWakeupHost:
 980              	.LFB294:
 633:lib/chibios/os/hal/src/hal_usb.c **** 
 634:lib/chibios/os/hal/src/hal_usb.c **** /**
 635:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Host wake-up procedure.
 636:lib/chibios/os/hal/src/hal_usb.c ****  * @note    It is silently ignored if the USB device is not in the
 637:lib/chibios/os/hal/src/hal_usb.c ****  *          @p USB_SUSPENDED state.
 638:lib/chibios/os/hal/src/hal_usb.c ****  *
 639:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 640:lib/chibios/os/hal/src/hal_usb.c ****  *
 641:lib/chibios/os/hal/src/hal_usb.c ****  * @api
 642:lib/chibios/os/hal/src/hal_usb.c ****  */
 643:lib/chibios/os/hal/src/hal_usb.c **** void usbWakeupHost(USBDriver *usbp) {
 981              		.loc 1 643 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              	.LVL87:
 644:lib/chibios/os/hal/src/hal_usb.c **** 
 645:lib/chibios/os/hal/src/hal_usb.c ****   if (usbp->state == USB_SUSPENDED) {
 986              		.loc 1 645 0
 987 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 988 0002 052B     		cmp	r3, #5
 643:lib/chibios/os/hal/src/hal_usb.c **** 
 989              		.loc 1 643 0
 990 0004 10B5     		push	{r4, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
 994              		.loc 1 645 0
 995 0006 0BD1     		bne	.L60
 646:lib/chibios/os/hal/src/hal_usb.c ****     /* Starting host wakeup procedure.*/
 647:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_wakeup_host(usbp);
 996              		.loc 1 647 0
 997 0008 064C     		ldr	r4, .L62
 998 000a 236C     		ldr	r3, [r4, #64]
 999 000c 43F01003 		orr	r3, r3, #16
 1000 0010 2364     		str	r3, [r4, #64]
 1001              	.LVL88:
 1002              	.LBB366:
 1003              	.LBB367:
 673:./lib/chibios/os/hal/osal/rt/osal.h **** }
 1004              		.loc 3 673 0
 1005 0012 C820     		movs	r0, #200
 1006              	.LVL89:
 1007 0014 FFF7FEFF 		bl	chThdSleep
 1008              	.LVL90:
 1009              	.LBE367:
 1010              	.LBE366:
 1011              		.loc 1 647 0
 1012 0018 236C     		ldr	r3, [r4, #64]
 1013 001a 23F01003 		bic	r3, r3, #16
 1014 001e 2364     		str	r3, [r4, #64]
 1015              	.L60:
 648:lib/chibios/os/hal/src/hal_usb.c ****   }
 649:lib/chibios/os/hal/src/hal_usb.c **** }
 1016              		.loc 1 649 0
 1017 0020 10BD     		pop	{r4, pc}
 1018              	.L63:
 1019 0022 00BF     		.align	2
 1020              	.L62:
 1021 0024 005C0040 		.word	1073765376
 1022              		.cfi_endproc
 1023              	.LFE294:
 1025              		.section	.text._usb_reset,"ax",%progbits
 1026              		.align	1
 1027              		.global	_usb_reset
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1031              		.fpu softvfp
 1033              	_usb_reset:
 1034              	.LFB295:
 650:lib/chibios/os/hal/src/hal_usb.c **** 
 651:lib/chibios/os/hal/src/hal_usb.c **** /**
 652:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   USB reset routine.
 653:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function must be invoked when an USB bus reset condition is
 654:lib/chibios/os/hal/src/hal_usb.c ****  *          detected.
 655:lib/chibios/os/hal/src/hal_usb.c ****  *
 656:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 657:lib/chibios/os/hal/src/hal_usb.c ****  *
 658:lib/chibios/os/hal/src/hal_usb.c ****  * @notapi
 659:lib/chibios/os/hal/src/hal_usb.c ****  */
 660:lib/chibios/os/hal/src/hal_usb.c **** void _usb_reset(USBDriver *usbp) {
 1035              		.loc 1 660 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              	.LVL91:
 1040 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1041              		.cfi_def_cfa_offset 24
 1042              		.cfi_offset 4, -24
 1043              		.cfi_offset 5, -20
 1044              		.cfi_offset 6, -16
 1045              		.cfi_offset 7, -12
 1046              		.cfi_offset 8, -8
 1047              		.cfi_offset 14, -4
 661:lib/chibios/os/hal/src/hal_usb.c ****   unsigned i;
 662:lib/chibios/os/hal/src/hal_usb.c **** 
 663:lib/chibios/os/hal/src/hal_usb.c ****   /* State transition.*/
 664:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state         = USB_READY;
 1048              		.loc 1 664 0
 1049 0004 0223     		movs	r3, #2
 665:lib/chibios/os/hal/src/hal_usb.c **** 
 666:lib/chibios/os/hal/src/hal_usb.c ****   /* Resetting internal state.*/
 667:lib/chibios/os/hal/src/hal_usb.c ****   usbp->status        = 0;
 1050              		.loc 1 667 0
 1051 0006 0025     		movs	r5, #0
 660:lib/chibios/os/hal/src/hal_usb.c ****   unsigned i;
 1052              		.loc 1 660 0
 1053 0008 0446     		mov	r4, r0
 664:lib/chibios/os/hal/src/hal_usb.c **** 
 1054              		.loc 1 664 0
 1055 000a 0370     		strb	r3, [r0]
 1056              		.loc 1 667 0
 1057 000c C567     		str	r5, [r0, #124]
 668:lib/chibios/os/hal/src/hal_usb.c ****   usbp->address       = 0;
 669:lib/chibios/os/hal/src/hal_usb.c ****   usbp->configuration = 0;
 670:lib/chibios/os/hal/src/hal_usb.c ****   usbp->transmitting  = 0;
 1058              		.loc 1 670 0
 1059 000e 8560     		str	r5, [r0, #8]
 1060              	.LVL92:
 1061 0010 00F10C06 		add	r6, r0, #12
 1062 0014 00F12C07 		add	r7, r0, #44
 1063              	.LBB368:
 1064              	.LBB369:
 1065              	.LBB370:
 1066              	.LBB371:
 1067              	.LBB372:
 1068              	.LBB373:
 1069              		.loc 2 264 0
 1070 0018 4FF02008 		mov	r8, #32
 1071              	.LVL93:
 1072              	.L68:
 1073              	.LBE373:
 1074              	.LBE372:
 1075              	.LBE371:
 1076              	.LBE370:
 1077              	.LBE369:
 1078              	.LBE368:
 671:lib/chibios/os/hal/src/hal_usb.c ****   usbp->receiving     = 0;
 672:lib/chibios/os/hal/src/hal_usb.c **** 
 673:lib/chibios/os/hal/src/hal_usb.c ****   /* Invalidates all endpoints into the USBDriver structure.*/
 674:lib/chibios/os/hal/src/hal_usb.c ****   for (i = 0; i <= (unsigned)USB_MAX_ENDPOINTS; i++) {
 675:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 676:lib/chibios/os/hal/src/hal_usb.c ****     /* Signaling the event to threads waiting on endpoints.*/
 677:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->epc[i] != NULL) {
 1079              		.loc 1 677 0
 1080 001c 56F8043B 		ldr	r3, [r6], #4
 1081 0020 ABB1     		cbz	r3, .L65
 1082              	.LVL94:
 1083              	.LBB379:
 1084              	.LBB378:
 1085              	.LBB377:
 1086              	.LBB376:
 1087              	.LBB375:
 1088              	.LBB374:
 1089              		.loc 2 264 0
 1090              		.syntax unified
 1091              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1092 0022 88F31188 		MSR basepri, r8
 1093              	@ 0 "" 2
 1094              	.LVL95:
 1095              		.thumb
 1096              		.syntax unified
 1097              	.LBE374:
 1098              	.LBE375:
 1099              	.LBE376:
 1100              	.LBE377:
 1101              	.LBE378:
 1102              	.LBE379:
 678:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 679:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i]->in_state != NULL) {
 1103              		.loc 1 679 0
 1104 0026 56F8043C 		ldr	r3, [r6, #-4]
 1105 002a 5869     		ldr	r0, [r3, #20]
 1106 002c 20B1     		cbz	r0, .L66
 1107              	.LVL96:
 1108              	.LBB380:
 1109              	.LBB381:
 1110              		.loc 3 728 0
 1111 002e 6FF00101 		mvn	r1, #1
 1112 0032 0C30     		adds	r0, r0, #12
 1113              	.LVL97:
 1114 0034 FFF7FEFF 		bl	chThdResumeI
 1115              	.LVL98:
 1116              	.L66:
 1117              	.LBE381:
 1118              	.LBE380:
 680:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->in_state->thread, MSG_RESET);
 681:lib/chibios/os/hal/src/hal_usb.c ****       }
 682:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i]->out_state != NULL) {
 1119              		.loc 1 682 0
 1120 0038 56F8043C 		ldr	r3, [r6, #-4]
 1121 003c 9869     		ldr	r0, [r3, #24]
 1122 003e 20B1     		cbz	r0, .L67
 1123              	.LVL99:
 1124              	.LBB382:
 1125              	.LBB383:
 1126              		.loc 3 728 0
 1127 0040 6FF00101 		mvn	r1, #1
 1128 0044 0C30     		adds	r0, r0, #12
 1129              	.LVL100:
 1130 0046 FFF7FEFF 		bl	chThdResumeI
 1131              	.LVL101:
 1132              	.L67:
 1133              	.LBE383:
 1134              	.LBE382:
 1135              	.LBB384:
 1136              	.LBB385:
 1137              	.LBB386:
 1138              	.LBB387:
 1139              	.LBB388:
 1140              	.LBB389:
 1141              		.loc 2 264 0
 1142              		.syntax unified
 1143              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1144 004a 85F31188 		MSR basepri, r5
 1145              	@ 0 "" 2
 1146              	.LVL102:
 1147              		.thumb
 1148              		.syntax unified
 1149              	.L65:
 1150              	.LBE389:
 1151              	.LBE388:
 1152              	.LBE387:
 1153              	.LBE386:
 1154              	.LBE385:
 1155              	.LBE384:
 674:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 1156              		.loc 1 674 0 discriminator 2
 1157 004e BE42     		cmp	r6, r7
 683:lib/chibios/os/hal/src/hal_usb.c ****         osalThreadResumeI(&usbp->epc[i]->out_state->thread, MSG_RESET);
 684:lib/chibios/os/hal/src/hal_usb.c ****       }
 685:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 686:lib/chibios/os/hal/src/hal_usb.c ****     }
 687:lib/chibios/os/hal/src/hal_usb.c **** #endif
 688:lib/chibios/os/hal/src/hal_usb.c ****     usbp->epc[i] = NULL;
 1158              		.loc 1 688 0 discriminator 2
 1159 0050 46F8045C 		str	r5, [r6, #-4]
 674:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 1160              		.loc 1 674 0 discriminator 2
 1161 0054 E2D1     		bne	.L68
 689:lib/chibios/os/hal/src/hal_usb.c ****   }
 690:lib/chibios/os/hal/src/hal_usb.c **** 
 691:lib/chibios/os/hal/src/hal_usb.c ****   /* EP0 state machine initialization.*/
 692:lib/chibios/os/hal/src/hal_usb.c ****   usbp->ep0state = USB_EP0_STP_WAITING;
 1162              		.loc 1 692 0
 1163 0056 84F86450 		strb	r5, [r4, #100]
 693:lib/chibios/os/hal/src/hal_usb.c **** 
 694:lib/chibios/os/hal/src/hal_usb.c ****   /* Low level reset.*/
 695:lib/chibios/os/hal/src/hal_usb.c ****   usb_lld_reset(usbp);
 1164              		.loc 1 695 0
 1165 005a 2046     		mov	r0, r4
 1166 005c FFF7FEFF 		bl	usb_lld_reset
 1167              	.LVL103:
 696:lib/chibios/os/hal/src/hal_usb.c **** 
 697:lib/chibios/os/hal/src/hal_usb.c ****   /* Notification of reset event.*/
 698:lib/chibios/os/hal/src/hal_usb.c ****   _usb_isr_invoke_event_cb(usbp, USB_EVENT_RESET);
 1168              		.loc 1 698 0
 1169 0060 6368     		ldr	r3, [r4, #4]
 1170 0062 1B68     		ldr	r3, [r3]
 1171 0064 23B1     		cbz	r3, .L64
 1172              		.loc 1 698 0 is_stmt 0 discriminator 1
 1173 0066 2046     		mov	r0, r4
 1174 0068 0021     		movs	r1, #0
 699:lib/chibios/os/hal/src/hal_usb.c **** }
 1175              		.loc 1 699 0 is_stmt 1 discriminator 1
 1176 006a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1177              		.cfi_remember_state
 1178              		.cfi_restore 14
 1179              		.cfi_restore 8
 1180              		.cfi_restore 7
 1181              		.cfi_restore 6
 1182              		.cfi_restore 5
 1183              		.cfi_restore 4
 1184              		.cfi_def_cfa_offset 0
 1185              	.LVL104:
 698:lib/chibios/os/hal/src/hal_usb.c **** }
 1186              		.loc 1 698 0 discriminator 1
 1187 006e 1847     		bx	r3	@ indirect register sibling call
 1188              	.LVL105:
 1189              	.L64:
 1190              		.cfi_restore_state
 1191              		.loc 1 699 0
 1192 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1193              		.cfi_endproc
 1194              	.LFE295:
 1196              		.section	.text._usb_suspend,"ax",%progbits
 1197              		.align	1
 1198              		.global	_usb_suspend
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu softvfp
 1204              	_usb_suspend:
 1205              	.LFB296:
 700:lib/chibios/os/hal/src/hal_usb.c **** 
 701:lib/chibios/os/hal/src/hal_usb.c **** /**
 702:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   USB suspend routine.
 703:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function must be invoked when an USB bus suspend condition is
 704:lib/chibios/os/hal/src/hal_usb.c ****  *          detected.
 705:lib/chibios/os/hal/src/hal_usb.c ****  *
 706:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 707:lib/chibios/os/hal/src/hal_usb.c ****  *
 708:lib/chibios/os/hal/src/hal_usb.c ****  * @notapi
 709:lib/chibios/os/hal/src/hal_usb.c ****  */
 710:lib/chibios/os/hal/src/hal_usb.c **** void _usb_suspend(USBDriver *usbp) {
 1206              		.loc 1 710 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              	.LVL106:
 1211 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1212              		.cfi_def_cfa_offset 24
 1213              		.cfi_offset 3, -24
 1214              		.cfi_offset 4, -20
 1215              		.cfi_offset 5, -16
 1216              		.cfi_offset 6, -12
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 711:lib/chibios/os/hal/src/hal_usb.c ****   /* No state change, suspend always returns to previous state. */
 712:lib/chibios/os/hal/src/hal_usb.c **** 
 713:lib/chibios/os/hal/src/hal_usb.c ****   /* State transition.*/
 714:lib/chibios/os/hal/src/hal_usb.c ****   usbp->saved_state = usbp->state;
 1219              		.loc 1 714 0
 1220 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1221 0004 80F88030 		strb	r3, [r0, #128]
 715:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state       = USB_SUSPENDED;
 1222              		.loc 1 715 0
 1223 0008 0523     		movs	r3, #5
 1224 000a 0370     		strb	r3, [r0]
 716:lib/chibios/os/hal/src/hal_usb.c **** 
 717:lib/chibios/os/hal/src/hal_usb.c ****   /* Notification of suspend event.*/
 718:lib/chibios/os/hal/src/hal_usb.c ****   _usb_isr_invoke_event_cb(usbp, USB_EVENT_SUSPEND);
 1225              		.loc 1 718 0
 1226 000c 4368     		ldr	r3, [r0, #4]
 1227 000e 1B68     		ldr	r3, [r3]
 710:lib/chibios/os/hal/src/hal_usb.c ****   /* No state change, suspend always returns to previous state. */
 1228              		.loc 1 710 0
 1229 0010 0446     		mov	r4, r0
 1230              		.loc 1 718 0
 1231 0012 0BB1     		cbz	r3, .L81
 1232              		.loc 1 718 0 is_stmt 0 discriminator 1
 1233 0014 0421     		movs	r1, #4
 1234 0016 9847     		blx	r3
 1235              	.LVL107:
 1236              	.L81:
 1237 0018 04F10C05 		add	r5, r4, #12
 1238              	.LBB390:
 1239              	.LBB391:
 1240              	.LBB392:
 1241              	.LBB393:
 1242              	.LBB394:
 1243              	.LBB395:
 1244              	.LBB396:
 1245              		.loc 2 264 0 is_stmt 1
 1246 001c 2026     		movs	r6, #32
 1247 001e 2C34     		adds	r4, r4, #44
 1248              	.LVL108:
 1249              	.LBE396:
 1250              	.LBE395:
 1251              	.LBE394:
 1252              	.LBE393:
 1253              	.LBE392:
 1254              	.LBE391:
 1255              	.LBB402:
 1256              	.LBB403:
 1257              	.LBB404:
 1258              	.LBB405:
 1259              	.LBB406:
 1260              	.LBB407:
 1261 0020 0027     		movs	r7, #0
 1262              	.L85:
 1263              	.LBE407:
 1264              	.LBE406:
 1265              	.LBE405:
 1266              	.LBE404:
 1267              	.LBE403:
 1268              	.LBE402:
 719:lib/chibios/os/hal/src/hal_usb.c **** 
 720:lib/chibios/os/hal/src/hal_usb.c ****   /* Signaling the event to threads waiting on endpoints.*/
 721:lib/chibios/os/hal/src/hal_usb.c **** #if USB_USE_WAIT == TRUE
 722:lib/chibios/os/hal/src/hal_usb.c ****   {
 723:lib/chibios/os/hal/src/hal_usb.c ****     unsigned i;
 724:lib/chibios/os/hal/src/hal_usb.c **** 
 725:lib/chibios/os/hal/src/hal_usb.c ****     for (i = 0; i <= (unsigned)USB_MAX_ENDPOINTS; i++) {
 726:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i] != NULL) {
 1269              		.loc 1 726 0
 1270 0022 55F8043B 		ldr	r3, [r5], #4
 1271 0026 ABB1     		cbz	r3, .L82
 1272              	.LVL109:
 1273              	.LBB413:
 1274              	.LBB401:
 1275              	.LBB400:
 1276              	.LBB399:
 1277              	.LBB398:
 1278              	.LBB397:
 1279              		.loc 2 264 0
 1280              		.syntax unified
 1281              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1282 0028 86F31188 		MSR basepri, r6
 1283              	@ 0 "" 2
 1284              	.LVL110:
 1285              		.thumb
 1286              		.syntax unified
 1287              	.LBE397:
 1288              	.LBE398:
 1289              	.LBE399:
 1290              	.LBE400:
 1291              	.LBE401:
 1292              	.LBE413:
 727:lib/chibios/os/hal/src/hal_usb.c ****         osalSysLockFromISR();
 728:lib/chibios/os/hal/src/hal_usb.c ****         if (usbp->epc[i]->in_state != NULL) {
 1293              		.loc 1 728 0
 1294 002c 55F8043C 		ldr	r3, [r5, #-4]
 1295 0030 5869     		ldr	r0, [r3, #20]
 1296 0032 20B1     		cbz	r0, .L83
 1297              	.LVL111:
 1298              	.LBB414:
 1299              	.LBB415:
 1300              		.loc 3 728 0
 1301 0034 6FF00101 		mvn	r1, #1
 1302 0038 0C30     		adds	r0, r0, #12
 1303              	.LVL112:
 1304 003a FFF7FEFF 		bl	chThdResumeI
 1305              	.LVL113:
 1306              	.L83:
 1307              	.LBE415:
 1308              	.LBE414:
 729:lib/chibios/os/hal/src/hal_usb.c ****           osalThreadResumeI(&usbp->epc[i]->in_state->thread, MSG_RESET);
 730:lib/chibios/os/hal/src/hal_usb.c ****         }
 731:lib/chibios/os/hal/src/hal_usb.c ****         if (usbp->epc[i]->out_state != NULL) {
 1309              		.loc 1 731 0
 1310 003e 55F8043C 		ldr	r3, [r5, #-4]
 1311 0042 9869     		ldr	r0, [r3, #24]
 1312 0044 20B1     		cbz	r0, .L84
 1313              	.LVL114:
 1314              	.LBB416:
 1315              	.LBB417:
 1316              		.loc 3 728 0
 1317 0046 6FF00101 		mvn	r1, #1
 1318 004a 0C30     		adds	r0, r0, #12
 1319              	.LVL115:
 1320 004c FFF7FEFF 		bl	chThdResumeI
 1321              	.LVL116:
 1322              	.L84:
 1323              	.LBE417:
 1324              	.LBE416:
 1325              	.LBB418:
 1326              	.LBB412:
 1327              	.LBB411:
 1328              	.LBB410:
 1329              	.LBB409:
 1330              	.LBB408:
 1331              		.loc 2 264 0
 1332              		.syntax unified
 1333              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1334 0050 87F31188 		MSR basepri, r7
 1335              	@ 0 "" 2
 1336              	.LVL117:
 1337              		.thumb
 1338              		.syntax unified
 1339              	.L82:
 1340              	.LBE408:
 1341              	.LBE409:
 1342              	.LBE410:
 1343              	.LBE411:
 1344              	.LBE412:
 1345              	.LBE418:
 725:lib/chibios/os/hal/src/hal_usb.c ****       if (usbp->epc[i] != NULL) {
 1346              		.loc 1 725 0 discriminator 2
 1347 0054 A542     		cmp	r5, r4
 1348 0056 E4D1     		bne	.L85
 1349              	.LBE390:
 732:lib/chibios/os/hal/src/hal_usb.c ****           osalThreadResumeI(&usbp->epc[i]->out_state->thread, MSG_RESET);
 733:lib/chibios/os/hal/src/hal_usb.c ****         }
 734:lib/chibios/os/hal/src/hal_usb.c ****         osalSysUnlockFromISR();
 735:lib/chibios/os/hal/src/hal_usb.c ****       }
 736:lib/chibios/os/hal/src/hal_usb.c ****     }
 737:lib/chibios/os/hal/src/hal_usb.c ****   }
 738:lib/chibios/os/hal/src/hal_usb.c **** #endif
 739:lib/chibios/os/hal/src/hal_usb.c **** }
 1350              		.loc 1 739 0
 1351 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1352              		.cfi_endproc
 1353              	.LFE296:
 1355              		.section	.text._usb_wakeup,"ax",%progbits
 1356              		.align	1
 1357              		.global	_usb_wakeup
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu softvfp
 1363              	_usb_wakeup:
 1364              	.LFB297:
 740:lib/chibios/os/hal/src/hal_usb.c **** 
 741:lib/chibios/os/hal/src/hal_usb.c **** /**
 742:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   USB wake-up routine.
 743:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function must be invoked when an USB bus wake-up condition is
 744:lib/chibios/os/hal/src/hal_usb.c ****  *          detected.
 745:lib/chibios/os/hal/src/hal_usb.c ****  *
 746:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 747:lib/chibios/os/hal/src/hal_usb.c ****  *
 748:lib/chibios/os/hal/src/hal_usb.c ****  * @notapi
 749:lib/chibios/os/hal/src/hal_usb.c ****  */
 750:lib/chibios/os/hal/src/hal_usb.c **** void _usb_wakeup(USBDriver *usbp) {
 1365              		.loc 1 750 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370              	.LVL118:
 751:lib/chibios/os/hal/src/hal_usb.c **** 
 752:lib/chibios/os/hal/src/hal_usb.c ****   /* State transition, returning to the previous state.*/
 753:lib/chibios/os/hal/src/hal_usb.c ****   usbp->state = usbp->saved_state;
 754:lib/chibios/os/hal/src/hal_usb.c **** 
 755:lib/chibios/os/hal/src/hal_usb.c ****   /* Notification of suspend event.*/
 756:lib/chibios/os/hal/src/hal_usb.c ****   _usb_isr_invoke_event_cb(usbp, USB_EVENT_WAKEUP);
 1371              		.loc 1 756 0
 1372 0000 4368     		ldr	r3, [r0, #4]
 753:lib/chibios/os/hal/src/hal_usb.c **** 
 1373              		.loc 1 753 0
 1374 0002 90F88020 		ldrb	r2, [r0, #128]	@ zero_extendqisi2
 1375              		.loc 1 756 0
 1376 0006 1B68     		ldr	r3, [r3]
 753:lib/chibios/os/hal/src/hal_usb.c **** 
 1377              		.loc 1 753 0
 1378 0008 0270     		strb	r2, [r0]
 1379              		.loc 1 756 0
 1380 000a 0BB1     		cbz	r3, .L99
 1381              		.loc 1 756 0 is_stmt 0 discriminator 1
 1382 000c 0521     		movs	r1, #5
 1383 000e 1847     		bx	r3	@ indirect register sibling call
 1384              	.LVL119:
 1385              	.L99:
 757:lib/chibios/os/hal/src/hal_usb.c **** }
 1386              		.loc 1 757 0 is_stmt 1
 1387 0010 7047     		bx	lr
 1388              		.cfi_endproc
 1389              	.LFE297:
 1391              		.section	.text._usb_ep0setup,"ax",%progbits
 1392              		.align	1
 1393              		.global	_usb_ep0setup
 1394              		.syntax unified
 1395              		.thumb
 1396              		.thumb_func
 1397              		.fpu softvfp
 1399              	_usb_ep0setup:
 1400              	.LFB298:
 758:lib/chibios/os/hal/src/hal_usb.c **** 
 759:lib/chibios/os/hal/src/hal_usb.c **** /**
 760:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Default EP0 SETUP callback.
 761:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function is used by the low level driver as default handler
 762:lib/chibios/os/hal/src/hal_usb.c ****  *          for EP0 SETUP events.
 763:lib/chibios/os/hal/src/hal_usb.c ****  *
 764:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 765:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number, always zero
 766:lib/chibios/os/hal/src/hal_usb.c ****  *
 767:lib/chibios/os/hal/src/hal_usb.c ****  * @notapi
 768:lib/chibios/os/hal/src/hal_usb.c ****  */
 769:lib/chibios/os/hal/src/hal_usb.c **** void _usb_ep0setup(USBDriver *usbp, usbep_t ep) {
 1401              		.loc 1 769 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              	.LVL120:
 770:lib/chibios/os/hal/src/hal_usb.c ****   size_t max;
 771:lib/chibios/os/hal/src/hal_usb.c **** 
 772:lib/chibios/os/hal/src/hal_usb.c ****   /* Is the EP0 state machine in the correct state for handling setup
 773:lib/chibios/os/hal/src/hal_usb.c ****      packets?*/
 774:lib/chibios/os/hal/src/hal_usb.c ****   if (usbp->ep0state != USB_EP0_STP_WAITING) {
 1406              		.loc 1 774 0
 1407 0000 90F86430 		ldrb	r3, [r0, #100]	@ zero_extendqisi2
 769:lib/chibios/os/hal/src/hal_usb.c ****   size_t max;
 1408              		.loc 1 769 0
 1409 0004 70B5     		push	{r4, r5, r6, lr}
 1410              		.cfi_def_cfa_offset 16
 1411              		.cfi_offset 4, -16
 1412              		.cfi_offset 5, -12
 1413              		.cfi_offset 6, -8
 1414              		.cfi_offset 14, -4
 769:lib/chibios/os/hal/src/hal_usb.c ****   size_t max;
 1415              		.loc 1 769 0
 1416 0006 0446     		mov	r4, r0
 1417              		.loc 1 774 0
 1418 0008 13B1     		cbz	r3, .L102
 775:lib/chibios/os/hal/src/hal_usb.c ****     /* This is unexpected could require handling with a warning event.*/
 776:lib/chibios/os/hal/src/hal_usb.c ****     /* TODO: handling here.*/
 777:lib/chibios/os/hal/src/hal_usb.c **** 
 778:lib/chibios/os/hal/src/hal_usb.c ****     /* Resetting the EP0 state machine and going ahead.*/
 779:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_STP_WAITING;
 1419              		.loc 1 779 0
 1420 000a 0023     		movs	r3, #0
 1421 000c 80F86430 		strb	r3, [r0, #100]
 1422              	.L102:
 780:lib/chibios/os/hal/src/hal_usb.c ****   }
 781:lib/chibios/os/hal/src/hal_usb.c **** 
 782:lib/chibios/os/hal/src/hal_usb.c ****   /* Reading the setup data into the driver buffer.*/
 783:lib/chibios/os/hal/src/hal_usb.c ****   usbReadSetup(usbp, ep, usbp->setup);
 1423              		.loc 1 783 0
 1424 0010 04F17402 		add	r2, r4, #116
 1425 0014 2046     		mov	r0, r4
 1426              	.LVL121:
 1427 0016 FFF7FEFF 		bl	usb_lld_read_setup
 1428              	.LVL122:
 784:lib/chibios/os/hal/src/hal_usb.c **** 
 785:lib/chibios/os/hal/src/hal_usb.c ****   /* First verify if the application has an handler installed for this
 786:lib/chibios/os/hal/src/hal_usb.c ****      request.*/
 787:lib/chibios/os/hal/src/hal_usb.c ****   /*lint -save -e9007 [13.5] No side effects, it is intentional.*/
 788:lib/chibios/os/hal/src/hal_usb.c ****   if ((usbp->config->requests_hook_cb == NULL) ||
 1429              		.loc 1 788 0
 1430 001a 6368     		ldr	r3, [r4, #4]
 1431 001c 9B68     		ldr	r3, [r3, #8]
 1432 001e 5BBB     		cbnz	r3, .L103
 1433              	.L107:
 789:lib/chibios/os/hal/src/hal_usb.c ****       !(usbp->config->requests_hook_cb(usbp))) {
 790:lib/chibios/os/hal/src/hal_usb.c ****   /*lint -restore*/
 791:lib/chibios/os/hal/src/hal_usb.c ****     /* Invoking the default handler, if this fails then stalls the
 792:lib/chibios/os/hal/src/hal_usb.c ****        endpoint zero as error.*/
 793:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -save -e9007 [13.5] No side effects, it is intentional.*/
 794:lib/chibios/os/hal/src/hal_usb.c ****     if (((usbp->setup[0] & USB_RTYPE_TYPE_MASK) != USB_RTYPE_TYPE_STD) ||
 1434              		.loc 1 794 0
 1435 0020 94F87430 		ldrb	r3, [r4, #116]	@ zero_extendqisi2
 1436 0024 13F06005 		ands	r5, r3, #96
 1437 0028 14D1     		bne	.L123
 1438              	.LVL123:
 1439              	.LBB485:
 1440              	.LBB486:
  90:lib/chibios/os/hal/src/hal_usb.c ****   case (uint32_t)USB_RTYPE_RECIPIENT_DEVICE | ((uint32_t)USB_REQ_GET_STATUS << 8):
 1441              		.loc 1 90 0
 1442 002a 94F87520 		ldrb	r2, [r4, #117]	@ zero_extendqisi2
  88:lib/chibios/os/hal/src/hal_usb.c ****                                         USB_RTYPE_TYPE_MASK)) |
 1443              		.loc 1 88 0
 1444 002e 03F07F03 		and	r3, r3, #127
  89:lib/chibios/os/hal/src/hal_usb.c ****            ((uint32_t)usbp->setup[1] << 8U))) {
 1445              		.loc 1 89 0
 1446 0032 43EA0223 		orr	r3, r3, r2, lsl #8
  88:lib/chibios/os/hal/src/hal_usb.c ****                                         USB_RTYPE_TYPE_MASK)) |
 1447              		.loc 1 88 0
 1448 0036 40F20232 		movw	r2, #770
 1449 003a 9342     		cmp	r3, r2
 1450 003c 00F0F880 		beq	.L109
 1451 0040 5AD8     		bhi	.L110
 1452 0042 022B     		cmp	r3, #2
 1453 0044 00F0CC80 		beq	.L111
 1454 0048 3ED8     		bhi	.L112
 1455 004a 002B     		cmp	r3, #0
 1456 004c 71D0     		beq	.L113
 1457 004e 012B     		cmp	r3, #1
 1458 0050 00F0C080 		beq	.L114
 1459              	.LVL124:
 1460              	.L123:
 1461              	.LBE486:
 1462              	.LBE485:
 795:lib/chibios/os/hal/src/hal_usb.c ****         !default_handler(usbp)) {
 796:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -restore*/
 797:lib/chibios/os/hal/src/hal_usb.c ****       /* Error response, the state machine goes into an error state, the low
 798:lib/chibios/os/hal/src/hal_usb.c ****          level layer will have to reset it to USB_EP0_WAITING_SETUP after
 799:lib/chibios/os/hal/src/hal_usb.c ****          receiving a SETUP packet.*/
 800:lib/chibios/os/hal/src/hal_usb.c ****       usb_lld_stall_in(usbp, 0);
 1463              		.loc 1 800 0
 1464 0054 0021     		movs	r1, #0
 1465 0056 2046     		mov	r0, r4
 1466 0058 FFF7FEFF 		bl	usb_lld_stall_in
 1467              	.LVL125:
 801:lib/chibios/os/hal/src/hal_usb.c ****       usb_lld_stall_out(usbp, 0);
 1468              		.loc 1 801 0
 1469 005c 0021     		movs	r1, #0
 1470 005e 2046     		mov	r0, r4
 1471 0060 FFF7FEFF 		bl	usb_lld_stall_out
 1472              	.LVL126:
 802:lib/chibios/os/hal/src/hal_usb.c ****       _usb_isr_invoke_event_cb(usbp, USB_EVENT_STALLED);
 1473              		.loc 1 802 0
 1474 0064 6368     		ldr	r3, [r4, #4]
 1475 0066 1B68     		ldr	r3, [r3]
 1476 0068 13B1     		cbz	r3, .L135
 1477              		.loc 1 802 0 is_stmt 0 discriminator 1
 1478 006a 0621     		movs	r1, #6
 1479 006c 2046     		mov	r0, r4
 1480 006e 9847     		blx	r3
 1481              	.LVL127:
 1482              	.L135:
 803:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0state = USB_EP0_ERROR;
 1483              		.loc 1 803 0 is_stmt 1
 1484 0070 0623     		movs	r3, #6
 1485 0072 84F86430 		strb	r3, [r4, #100]
 1486              	.L101:
 804:lib/chibios/os/hal/src/hal_usb.c ****       return;
 805:lib/chibios/os/hal/src/hal_usb.c ****     }
 806:lib/chibios/os/hal/src/hal_usb.c ****   }
 807:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_SET_ADDRESS_ACK_HANDLING == USB_SET_ADDRESS_ACK_HW)
 808:lib/chibios/os/hal/src/hal_usb.c ****   if (usbp->setup[1] == USB_REQ_SET_ADDRESS) {
 809:lib/chibios/os/hal/src/hal_usb.c ****     /* Zero-length packet sent by hardware */
 810:lib/chibios/os/hal/src/hal_usb.c ****     return;
 811:lib/chibios/os/hal/src/hal_usb.c ****   }
 812:lib/chibios/os/hal/src/hal_usb.c **** #endif
 813:lib/chibios/os/hal/src/hal_usb.c ****   /* Transfer preparation. The request handler must have populated
 814:lib/chibios/os/hal/src/hal_usb.c ****      correctly the fields ep0next, ep0n and ep0endcb using the macro
 815:lib/chibios/os/hal/src/hal_usb.c ****      usbSetupTransfer().*/
 816:lib/chibios/os/hal/src/hal_usb.c ****   max = (size_t)get_hword(&usbp->setup[6]);
 817:lib/chibios/os/hal/src/hal_usb.c ****   /* The transfer size cannot exceed the specified amount.*/
 818:lib/chibios/os/hal/src/hal_usb.c ****   if (usbp->ep0n > max) {
 819:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0n = max;
 820:lib/chibios/os/hal/src/hal_usb.c ****   }
 821:lib/chibios/os/hal/src/hal_usb.c ****   if ((usbp->setup[0] & USB_RTYPE_DIR_MASK) == USB_RTYPE_DIR_DEV2HOST) {
 822:lib/chibios/os/hal/src/hal_usb.c ****     /* IN phase.*/
 823:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->ep0n != 0U) {
 824:lib/chibios/os/hal/src/hal_usb.c ****       /* Starts the transmit phase.*/
 825:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0state = USB_EP0_IN_TX;
 826:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 827:lib/chibios/os/hal/src/hal_usb.c ****       usbStartTransmitI(usbp, 0, usbp->ep0next, usbp->ep0n);
 828:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 829:lib/chibios/os/hal/src/hal_usb.c ****     }
 830:lib/chibios/os/hal/src/hal_usb.c ****     else {
 831:lib/chibios/os/hal/src/hal_usb.c ****       /* No transmission phase, directly receiving the zero sized status
 832:lib/chibios/os/hal/src/hal_usb.c ****          packet.*/
 833:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0state = USB_EP0_OUT_WAITING_STS;
 834:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 835:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 836:lib/chibios/os/hal/src/hal_usb.c ****       usbStartReceiveI(usbp, 0, NULL, 0);
 837:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 838:lib/chibios/os/hal/src/hal_usb.c **** #else
 839:lib/chibios/os/hal/src/hal_usb.c ****       usb_lld_end_setup(usbp, ep);
 840:lib/chibios/os/hal/src/hal_usb.c **** #endif
 841:lib/chibios/os/hal/src/hal_usb.c ****     }
 842:lib/chibios/os/hal/src/hal_usb.c ****   }
 843:lib/chibios/os/hal/src/hal_usb.c ****   else {
 844:lib/chibios/os/hal/src/hal_usb.c ****     /* OUT phase.*/
 845:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->ep0n != 0U) {
 846:lib/chibios/os/hal/src/hal_usb.c ****       /* Starts the receive phase.*/
 847:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0state = USB_EP0_OUT_RX;
 848:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 849:lib/chibios/os/hal/src/hal_usb.c ****       usbStartReceiveI(usbp, 0, usbp->ep0next, usbp->ep0n);
 850:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 851:lib/chibios/os/hal/src/hal_usb.c ****     }
 852:lib/chibios/os/hal/src/hal_usb.c ****     else {
 853:lib/chibios/os/hal/src/hal_usb.c ****       /* No receive phase, directly sending the zero sized status
 854:lib/chibios/os/hal/src/hal_usb.c ****          packet.*/
 855:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0state = USB_EP0_IN_SENDING_STS;
 856:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 857:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 858:lib/chibios/os/hal/src/hal_usb.c ****       usbStartTransmitI(usbp, 0, NULL, 0);
 859:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 860:lib/chibios/os/hal/src/hal_usb.c **** #else
 861:lib/chibios/os/hal/src/hal_usb.c ****       usb_lld_end_setup(usbp, ep);
 862:lib/chibios/os/hal/src/hal_usb.c **** #endif
 863:lib/chibios/os/hal/src/hal_usb.c ****     }
 864:lib/chibios/os/hal/src/hal_usb.c ****   }
 865:lib/chibios/os/hal/src/hal_usb.c **** }
 1487              		.loc 1 865 0
 1488 0076 70BD     		pop	{r4, r5, r6, pc}
 1489              	.LVL128:
 1490              	.L103:
 789:lib/chibios/os/hal/src/hal_usb.c ****   /*lint -restore*/
 1491              		.loc 1 789 0 discriminator 1
 1492 0078 2046     		mov	r0, r4
 1493 007a 9847     		blx	r3
 1494              	.LVL129:
 788:lib/chibios/os/hal/src/hal_usb.c ****       !(usbp->config->requests_hook_cb(usbp))) {
 1495              		.loc 1 788 0 discriminator 1
 1496 007c 0028     		cmp	r0, #0
 1497 007e CFD0     		beq	.L107
 1498              	.L106:
 1499              	.LBB504:
 1500              	.LBB505:
  55:lib/chibios/os/hal/src/hal_usb.c ****   return hw;
 1501              		.loc 1 55 0
 1502 0080 94F87B20 		ldrb	r2, [r4, #123]	@ zero_extendqisi2
 1503 0084 94F87A30 		ldrb	r3, [r4, #122]	@ zero_extendqisi2
 1504              	.LBE505:
 1505              	.LBE504:
 816:lib/chibios/os/hal/src/hal_usb.c ****   /* The transfer size cannot exceed the specified amount.*/
 1506              		.loc 1 816 0
 1507 0088 43EA0223 		orr	r3, r3, r2, lsl #8
 1508              	.LVL130:
 818:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0n = max;
 1509              		.loc 1 818 0
 1510 008c E26E     		ldr	r2, [r4, #108]
 1511 008e 9A42     		cmp	r2, r3
 819:lib/chibios/os/hal/src/hal_usb.c ****   }
 1512              		.loc 1 819 0
 1513 0090 88BF     		it	hi
 1514 0092 E366     		strhi	r3, [r4, #108]
 821:lib/chibios/os/hal/src/hal_usb.c ****     /* IN phase.*/
 1515              		.loc 1 821 0
 1516 0094 94F97430 		ldrsb	r3, [r4, #116]
 1517              	.LVL131:
 1518 0098 E56E     		ldr	r5, [r4, #108]
 1519 009a 002B     		cmp	r3, #0
 1520 009c 4FF02003 		mov	r3, #32
 1521 00a0 80F2E780 		bge	.L138
 823:lib/chibios/os/hal/src/hal_usb.c ****       /* Starts the transmit phase.*/
 1522              		.loc 1 823 0
 1523 00a4 002D     		cmp	r5, #0
 1524 00a6 00F0D680 		beq	.L139
 825:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 1525              		.loc 1 825 0
 1526 00aa 0922     		movs	r2, #9
 1527 00ac 84F86420 		strb	r2, [r4, #100]
 1528              	.LVL132:
 1529              	.LBB506:
 1530              	.LBB507:
 1531              	.LBB508:
 1532              	.LBB509:
 1533              	.LBB510:
 1534              	.LBB511:
 1535              		.loc 2 264 0
 1536              		.syntax unified
 1537              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1538 00b0 83F31188 		MSR basepri, r3
 1539              	@ 0 "" 2
 1540              	.LVL133:
 1541              		.thumb
 1542              		.syntax unified
 1543              	.LBE511:
 1544              	.LBE510:
 1545              	.LBE509:
 1546              	.LBE508:
 1547              	.LBE507:
 1548              	.LBE506:
 827:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 1549              		.loc 1 827 0
 1550 00b4 0021     		movs	r1, #0
 1551 00b6 D4E91A23 		ldrd	r2, r3, [r4, #104]
 1552 00ba 2046     		mov	r0, r4
 1553 00bc FFF7FEFF 		bl	usbStartTransmitI
 1554              	.LVL134:
 1555              	.L190:
 1556              	.LBB512:
 1557              	.LBB513:
 1558              	.LBB514:
 1559              	.LBB515:
 1560              	.LBB516:
 1561              	.LBB517:
 1562              		.loc 2 264 0
 1563 00c0 0023     		movs	r3, #0
 1564              		.syntax unified
 1565              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1566 00c2 83F31188 		MSR basepri, r3
 1567              	@ 0 "" 2
 1568              	.LVL135:
 1569              		.thumb
 1570              		.syntax unified
 1571 00c6 D6E7     		b	.L101
 1572              	.LVL136:
 1573              	.L112:
 1574              	.LBE517:
 1575              	.LBE516:
 1576              	.LBE515:
 1577              	.LBE514:
 1578              	.LBE513:
 1579              	.LBE512:
 1580              	.LBB518:
 1581              	.LBB503:
  88:lib/chibios/os/hal/src/hal_usb.c ****                                         USB_RTYPE_TYPE_MASK)) |
 1582              		.loc 1 88 0
 1583 00c8 B3F5817F 		cmp	r3, #258
 1584 00cc 00F09D80 		beq	.L115
 1585 00d0 B3F5407F 		cmp	r3, #768
 1586 00d4 34D0     		beq	.L116
 1587 00d6 B3F5807F 		cmp	r3, #256
 1588 00da BBD1     		bne	.L123
  98:lib/chibios/os/hal/src/hal_usb.c ****       usbp->status &= ~2U;
 1589              		.loc 1 98 0
 1590 00dc 94F87630 		ldrb	r3, [r4, #118]	@ zero_extendqisi2
 1591 00e0 012B     		cmp	r3, #1
 1592 00e2 B7D1     		bne	.L123
  99:lib/chibios/os/hal/src/hal_usb.c ****       usbSetupTransfer(usbp, NULL, 0, NULL);
 1593              		.loc 1 99 0
 1594 00e4 B4F87C30 		ldrh	r3, [r4, #124]
 1595 00e8 23F00203 		bic	r3, r3, #2
 1596              	.L185:
 109:lib/chibios/os/hal/src/hal_usb.c ****       return true;
 1597              		.loc 1 109 0
 1598 00ec C4E91A55 		strd	r5, r5, [r4, #104]
 108:lib/chibios/os/hal/src/hal_usb.c ****       usbSetupTransfer(usbp, NULL, 0, NULL);
 1599              		.loc 1 108 0
 1600 00f0 A4F87C30 		strh	r3, [r4, #124]	@ movhi
 1601              	.L186:
 109:lib/chibios/os/hal/src/hal_usb.c ****       return true;
 1602              		.loc 1 109 0
 1603 00f4 2567     		str	r5, [r4, #112]
 1604              	.LVL137:
 1605 00f6 C3E7     		b	.L106
 1606              	.LVL138:
 1607              	.L110:
  88:lib/chibios/os/hal/src/hal_usb.c ****                                         USB_RTYPE_TYPE_MASK)) |
 1608              		.loc 1 88 0
 1609 00f8 40F20162 		movw	r2, #1537
 1610 00fc 9342     		cmp	r3, r2
 1611 00fe 09D8     		bhi	.L118
 1612 0100 B3F5C06F 		cmp	r3, #1536
 1613 0104 25D2     		bcs	.L119
 1614 0106 B3F5A06F 		cmp	r3, #1280
 1615 010a A3D1     		bne	.L123
 124:lib/chibios/os/hal/src/hal_usb.c **** #endif
 1616              		.loc 1 124 0
 1617 010c C4E91A55 		strd	r5, r5, [r4, #104]
 1618 0110 644B     		ldr	r3, .L191
 1619 0112 13E0     		b	.L187
 1620              	.L118:
  88:lib/chibios/os/hal/src/hal_usb.c ****                                         USB_RTYPE_TYPE_MASK)) |
 1621              		.loc 1 88 0
 1622 0114 B3F5106F 		cmp	r3, #2304
 1623 0118 31D0     		beq	.L121
 1624 011a 40F60242 		movw	r2, #3074
 1625 011e 9342     		cmp	r3, r2
 1626 0120 58D0     		beq	.L114
 1627 0122 B3F5006F 		cmp	r3, #2048
 1628 0126 95D1     		bne	.L123
 142:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 1629              		.loc 1 142 0
 1630 0128 04F17F03 		add	r3, r4, #127
 1631 012c A366     		str	r3, [r4, #104]
 1632 012e 0123     		movs	r3, #1
 1633 0130 23E0     		b	.L184
 1634              	.L113:
  93:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 1635              		.loc 1 93 0
 1636 0132 04F17C02 		add	r2, r4, #124
 1637 0136 A266     		str	r2, [r4, #104]
 1638 0138 0222     		movs	r2, #2
 1639 013a E266     		str	r2, [r4, #108]
 1640              	.L187:
 187:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 1641              		.loc 1 187 0
 1642 013c 2367     		str	r3, [r4, #112]
 1643              	.LVL139:
 1644 013e 9FE7     		b	.L106
 1645              	.LVL140:
 1646              	.L116:
 107:lib/chibios/os/hal/src/hal_usb.c ****       usbp->status |= 2U;
 1647              		.loc 1 107 0
 1648 0140 94F87630 		ldrb	r3, [r4, #118]	@ zero_extendqisi2
 1649 0144 012B     		cmp	r3, #1
 1650 0146 85D1     		bne	.L123
 108:lib/chibios/os/hal/src/hal_usb.c ****       usbSetupTransfer(usbp, NULL, 0, NULL);
 1651              		.loc 1 108 0
 1652 0148 B4F87C30 		ldrh	r3, [r4, #124]
 1653 014c 43F00203 		orr	r3, r3, #2
 1654 0150 CCE7     		b	.L185
 1655              	.L119:
 1656              	.LBB487:
 1657              	.LBB488:
  55:lib/chibios/os/hal/src/hal_usb.c ****   return hw;
 1658              		.loc 1 55 0
 1659 0152 94F87920 		ldrb	r2, [r4, #121]	@ zero_extendqisi2
 1660              	.LBE488:
 1661              	.LBE487:
 130:lib/chibios/os/hal/src/hal_usb.c ****                                          usbp->setup[2],
 1662              		.loc 1 130 0
 1663 0156 6168     		ldr	r1, [r4, #4]
 1664              	.LBB490:
 1665              	.LBB489:
  55:lib/chibios/os/hal/src/hal_usb.c ****   return hw;
 1666              		.loc 1 55 0
 1667 0158 94F87830 		ldrb	r3, [r4, #120]	@ zero_extendqisi2
 1668              	.LBE489:
 1669              	.LBE490:
 130:lib/chibios/os/hal/src/hal_usb.c ****                                          usbp->setup[2],
 1670              		.loc 1 130 0
 1671 015c 4E68     		ldr	r6, [r1, #4]
 1672 015e 94F87710 		ldrb	r1, [r4, #119]	@ zero_extendqisi2
 1673 0162 43EA0223 		orr	r3, r3, r2, lsl #8
 1674 0166 2046     		mov	r0, r4
 1675 0168 94F87620 		ldrb	r2, [r4, #118]	@ zero_extendqisi2
 1676 016c B047     		blx	r6
 1677              	.LVL141:
 133:lib/chibios/os/hal/src/hal_usb.c ****       return false;
 1678              		.loc 1 133 0
 1679 016e 0028     		cmp	r0, #0
 1680 0170 3FF470AF 		beq	.L123
 137:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -restore*/
 1681              		.loc 1 137 0
 1682 0174 4368     		ldr	r3, [r0, #4]
 1683 0176 A366     		str	r3, [r4, #104]
 1684 0178 0368     		ldr	r3, [r0]
 1685              	.LVL142:
 1686              	.L184:
 142:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 1687              		.loc 1 142 0
 1688 017a E366     		str	r3, [r4, #108]
 1689 017c BAE7     		b	.L186
 1690              	.L121:
 147:lib/chibios/os/hal/src/hal_usb.c ****       /* If the USB device is already active then we have to perform the clear
 1691              		.loc 1 147 0
 1692 017e 94F87F20 		ldrb	r2, [r4, #127]	@ zero_extendqisi2
 1693 0182 94F87630 		ldrb	r3, [r4, #118]	@ zero_extendqisi2
 1694 0186 9A42     		cmp	r2, r3
 1695 0188 20D0     		beq	.L125
 150:lib/chibios/os/hal/src/hal_usb.c ****         /* Current configuration cleared.*/
 1696              		.loc 1 150 0
 1697 018a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1698 018c 042B     		cmp	r3, #4
 1699 018e 10D1     		bne	.L127
 1700              	.LVL143:
 1701              	.LBB491:
 1702              	.LBB492:
 1703              	.LBB493:
 1704              	.LBB494:
 1705              	.LBB495:
 1706              	.LBB496:
 1707              		.loc 2 264 0
 1708 0190 2023     		movs	r3, #32
 1709              		.syntax unified
 1710              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1711 0192 83F31188 		MSR basepri, r3
 1712              	@ 0 "" 2
 1713              	.LVL144:
 1714              		.thumb
 1715              		.syntax unified
 1716              	.LBE496:
 1717              	.LBE495:
 1718              	.LBE494:
 1719              	.LBE493:
 1720              	.LBE492:
 1721              	.LBE491:
 153:lib/chibios/os/hal/src/hal_usb.c ****         osalSysUnlockFromISR ();
 1722              		.loc 1 153 0
 1723 0196 2046     		mov	r0, r4
 1724 0198 FFF7FEFF 		bl	usbDisableEndpointsI
 1725              	.LVL145:
 1726              	.LBB497:
 1727              	.LBB498:
 1728              	.LBB499:
 1729              	.LBB500:
 1730              	.LBB501:
 1731              	.LBB502:
 1732              		.loc 2 264 0
 1733              		.syntax unified
 1734              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1735 019c 85F31188 		MSR basepri, r5
 1736              	@ 0 "" 2
 1737              	.LVL146:
 1738              		.thumb
 1739              		.syntax unified
 1740              	.LBE502:
 1741              	.LBE501:
 1742              	.LBE500:
 1743              	.LBE499:
 1744              	.LBE498:
 1745              	.LBE497:
 157:lib/chibios/os/hal/src/hal_usb.c ****       }
 1746              		.loc 1 157 0
 1747 01a0 6368     		ldr	r3, [r4, #4]
 155:lib/chibios/os/hal/src/hal_usb.c ****         usbp->state = USB_SELECTED;
 1748              		.loc 1 155 0
 1749 01a2 84F87F50 		strb	r5, [r4, #127]
 157:lib/chibios/os/hal/src/hal_usb.c ****       }
 1750              		.loc 1 157 0
 1751 01a6 1B68     		ldr	r3, [r3]
 156:lib/chibios/os/hal/src/hal_usb.c ****         _usb_isr_invoke_event_cb(usbp, USB_EVENT_UNCONFIGURED);
 1752              		.loc 1 156 0
 1753 01a8 0321     		movs	r1, #3
 1754 01aa 2170     		strb	r1, [r4]
 157:lib/chibios/os/hal/src/hal_usb.c ****       }
 1755              		.loc 1 157 0
 1756 01ac 0BB1     		cbz	r3, .L127
 1757 01ae 2046     		mov	r0, r4
 1758 01b0 9847     		blx	r3
 1759              	.LVL147:
 1760              	.L127:
 159:lib/chibios/os/hal/src/hal_usb.c ****         /* New configuration.*/
 1761              		.loc 1 159 0
 1762 01b2 94F87630 		ldrb	r3, [r4, #118]	@ zero_extendqisi2
 1763 01b6 4BB1     		cbz	r3, .L125
 161:lib/chibios/os/hal/src/hal_usb.c ****         usbp->state = USB_ACTIVE;
 1764              		.loc 1 161 0
 1765 01b8 84F87F30 		strb	r3, [r4, #127]
 162:lib/chibios/os/hal/src/hal_usb.c ****         _usb_isr_invoke_event_cb(usbp, USB_EVENT_CONFIGURED);
 1766              		.loc 1 162 0
 1767 01bc 0423     		movs	r3, #4
 1768 01be 2370     		strb	r3, [r4]
 163:lib/chibios/os/hal/src/hal_usb.c ****       }
 1769              		.loc 1 163 0
 1770 01c0 6368     		ldr	r3, [r4, #4]
 1771 01c2 1B68     		ldr	r3, [r3]
 1772 01c4 13B1     		cbz	r3, .L125
 1773 01c6 0221     		movs	r1, #2
 1774 01c8 2046     		mov	r0, r4
 1775 01ca 9847     		blx	r3
 1776              	.LVL148:
 1777              	.L125:
 166:lib/chibios/os/hal/src/hal_usb.c ****     return true;
 1778              		.loc 1 166 0
 1779 01cc 0023     		movs	r3, #0
 1780 01ce C4E91A33 		strd	r3, r3, [r4, #104]
 1781 01d2 B3E7     		b	.L187
 1782              	.L114:
 173:lib/chibios/os/hal/src/hal_usb.c ****     /*lint -restore*/
 1783              		.loc 1 173 0
 1784 01d4 344B     		ldr	r3, .L191+4
 1785              	.L188:
 187:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 1786              		.loc 1 187 0
 1787 01d6 A366     		str	r3, [r4, #104]
 1788 01d8 0223     		movs	r3, #2
 1789 01da E366     		str	r3, [r4, #108]
 1790 01dc 0023     		movs	r3, #0
 1791 01de ADE7     		b	.L187
 1792              	.L111:
 178:lib/chibios/os/hal/src/hal_usb.c ****       switch (usb_lld_get_status_in(usbp, usbp->setup[4] & 0x0FU)) {
 1793              		.loc 1 178 0
 1794 01e0 94F87830 		ldrb	r3, [r4, #120]	@ zero_extendqisi2
 1795 01e4 1D06     		lsls	r5, r3, #24
 1796 01e6 03F00F01 		and	r1, r3, #15
 179:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_STALLED:
 1797              		.loc 1 179 0
 1798 01ea 2046     		mov	r0, r4
 178:lib/chibios/os/hal/src/hal_usb.c ****       switch (usb_lld_get_status_in(usbp, usbp->setup[4] & 0x0FU)) {
 1799              		.loc 1 178 0
 1800 01ec 0AD5     		bpl	.L130
 1801              	.LVL149:
 179:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_STALLED:
 1802              		.loc 1 179 0
 1803 01ee FFF7FEFF 		bl	usb_lld_get_status_in
 1804              	.LVL150:
 1805              	.L183:
 196:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_STALLED:
 1806              		.loc 1 196 0
 1807 01f2 0128     		cmp	r0, #1
 1808 01f4 04D0     		beq	.L131
 1809 01f6 0228     		cmp	r0, #2
 1810 01f8 7FF42CAF 		bne	.L123
 187:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 1811              		.loc 1 187 0
 1812 01fc 2B4B     		ldr	r3, .L191+8
 1813 01fe EAE7     		b	.L188
 1814              	.L131:
 182:lib/chibios/os/hal/src/hal_usb.c ****         /*lint -restore*/
 1815              		.loc 1 182 0
 1816 0200 2B4B     		ldr	r3, .L191+12
 1817 0202 E8E7     		b	.L188
 1818              	.LVL151:
 1819              	.L130:
 196:lib/chibios/os/hal/src/hal_usb.c ****       case EP_STATUS_STALLED:
 1820              		.loc 1 196 0
 1821 0204 FFF7FEFF 		bl	usb_lld_get_status_out
 1822              	.LVL152:
 1823 0208 F3E7     		b	.L183
 1824              	.L115:
 214:lib/chibios/os/hal/src/hal_usb.c ****       return false;
 1825              		.loc 1 214 0
 1826 020a 94F87630 		ldrb	r3, [r4, #118]	@ zero_extendqisi2
 1827 020e 002B     		cmp	r3, #0
 1828 0210 7FF420AF 		bne	.L123
 218:lib/chibios/os/hal/src/hal_usb.c ****       if ((usbp->setup[4] & 0x80U) != 0U) {
 1829              		.loc 1 218 0
 1830 0214 94F87830 		ldrb	r3, [r4, #120]	@ zero_extendqisi2
 1831 0218 13F00F01 		ands	r1, r3, #15
 1832 021c D6D0     		beq	.L125
 219:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_clear_in(usbp, usbp->setup[4] & 0x0FU);
 1833              		.loc 1 219 0
 1834 021e 1A06     		lsls	r2, r3, #24
 220:lib/chibios/os/hal/src/hal_usb.c ****       }
 1835              		.loc 1 220 0
 1836 0220 2046     		mov	r0, r4
 219:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_clear_in(usbp, usbp->setup[4] & 0x0FU);
 1837              		.loc 1 219 0
 1838 0222 02D5     		bpl	.L133
 1839              	.LVL153:
 220:lib/chibios/os/hal/src/hal_usb.c ****       }
 1840              		.loc 1 220 0
 1841 0224 FFF7FEFF 		bl	usb_lld_clear_in
 1842              	.LVL154:
 1843 0228 D0E7     		b	.L125
 1844              	.LVL155:
 1845              	.L133:
 223:lib/chibios/os/hal/src/hal_usb.c ****       }
 1846              		.loc 1 223 0
 1847 022a FFF7FEFF 		bl	usb_lld_clear_out
 1848              	.LVL156:
 1849 022e CDE7     		b	.L125
 1850              	.L109:
 230:lib/chibios/os/hal/src/hal_usb.c ****       return false;
 1851              		.loc 1 230 0
 1852 0230 94F87630 		ldrb	r3, [r4, #118]	@ zero_extendqisi2
 1853 0234 002B     		cmp	r3, #0
 1854 0236 7FF40DAF 		bne	.L123
 234:lib/chibios/os/hal/src/hal_usb.c ****       if ((usbp->setup[4] & 0x80U) != 0U) {
 1855              		.loc 1 234 0
 1856 023a 94F87830 		ldrb	r3, [r4, #120]	@ zero_extendqisi2
 1857 023e 13F00F01 		ands	r1, r3, #15
 1858 0242 C3D0     		beq	.L125
 235:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_stall_in(usbp, usbp->setup[4] & 0x0FU);
 1859              		.loc 1 235 0
 1860 0244 1B06     		lsls	r3, r3, #24
 236:lib/chibios/os/hal/src/hal_usb.c ****       }
 1861              		.loc 1 236 0
 1862 0246 2046     		mov	r0, r4
 235:lib/chibios/os/hal/src/hal_usb.c ****         usb_lld_stall_in(usbp, usbp->setup[4] & 0x0FU);
 1863              		.loc 1 235 0
 1864 0248 02D5     		bpl	.L134
 1865              	.LVL157:
 236:lib/chibios/os/hal/src/hal_usb.c ****       }
 1866              		.loc 1 236 0
 1867 024a FFF7FEFF 		bl	usb_lld_stall_in
 1868              	.LVL158:
 1869 024e BDE7     		b	.L125
 1870              	.LVL159:
 1871              	.L134:
 239:lib/chibios/os/hal/src/hal_usb.c ****       }
 1872              		.loc 1 239 0
 1873 0250 FFF7FEFF 		bl	usb_lld_stall_out
 1874              	.LVL160:
 1875 0254 BAE7     		b	.L125
 1876              	.LVL161:
 1877              	.L139:
 1878              	.LBE503:
 1879              	.LBE518:
 833:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 1880              		.loc 1 833 0
 1881 0256 1422     		movs	r2, #20
 1882 0258 84F86420 		strb	r2, [r4, #100]
 1883              	.LVL162:
 1884              	.LBB519:
 1885              	.LBB520:
 1886              	.LBB521:
 1887              	.LBB522:
 1888              	.LBB523:
 1889              	.LBB524:
 1890              		.loc 2 264 0
 1891              		.syntax unified
 1892              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1893 025c 83F31188 		MSR basepri, r3
 1894              	@ 0 "" 2
 1895              	.LVL163:
 1896              		.thumb
 1897              		.syntax unified
 1898              	.LBE524:
 1899              	.LBE523:
 1900              	.LBE522:
 1901              	.LBE521:
 1902              	.LBE520:
 1903              	.LBE519:
 836:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 1904              		.loc 1 836 0
 1905 0260 2B46     		mov	r3, r5
 1906 0262 2A46     		mov	r2, r5
 1907 0264 2946     		mov	r1, r5
 1908 0266 2046     		mov	r0, r4
 1909 0268 FFF7FEFF 		bl	usbStartReceiveI
 1910              	.LVL164:
 1911              	.L189:
 1912              	.LBB525:
 1913              	.LBB526:
 1914              	.LBB527:
 1915              	.LBB528:
 1916              	.LBB529:
 1917              	.LBB530:
 1918              		.loc 2 264 0
 1919              		.syntax unified
 1920              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1921 026c 85F31188 		MSR basepri, r5
 1922              	@ 0 "" 2
 1923              	.LVL165:
 1924              		.thumb
 1925              		.syntax unified
 1926 0270 01E7     		b	.L101
 1927              	.LVL166:
 1928              	.L138:
 1929              	.LBE530:
 1930              	.LBE529:
 1931              	.LBE528:
 1932              	.LBE527:
 1933              	.LBE526:
 1934              	.LBE525:
 845:lib/chibios/os/hal/src/hal_usb.c ****       /* Starts the receive phase.*/
 1935              		.loc 1 845 0
 1936 0272 5DB1     		cbz	r5, .L140
 847:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 1937              		.loc 1 847 0
 1938 0274 1522     		movs	r2, #21
 1939 0276 84F86420 		strb	r2, [r4, #100]
 1940              	.LVL167:
 1941              	.LBB531:
 1942              	.LBB532:
 1943              	.LBB533:
 1944              	.LBB534:
 1945              	.LBB535:
 1946              	.LBB536:
 1947              		.loc 2 264 0
 1948              		.syntax unified
 1949              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1950 027a 83F31188 		MSR basepri, r3
 1951              	@ 0 "" 2
 1952              	.LVL168:
 1953              		.thumb
 1954              		.syntax unified
 1955              	.LBE536:
 1956              	.LBE535:
 1957              	.LBE534:
 1958              	.LBE533:
 1959              	.LBE532:
 1960              	.LBE531:
 849:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 1961              		.loc 1 849 0
 1962 027e 0021     		movs	r1, #0
 1963 0280 D4E91A23 		ldrd	r2, r3, [r4, #104]
 1964 0284 2046     		mov	r0, r4
 1965 0286 FFF7FEFF 		bl	usbStartReceiveI
 1966              	.LVL169:
 1967 028a 19E7     		b	.L190
 1968              	.LVL170:
 1969              	.L140:
 855:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 1970              		.loc 1 855 0
 1971 028c 0B22     		movs	r2, #11
 1972 028e 84F86420 		strb	r2, [r4, #100]
 1973              	.LVL171:
 1974              	.LBB537:
 1975              	.LBB538:
 1976              	.LBB539:
 1977              	.LBB540:
 1978              	.LBB541:
 1979              	.LBB542:
 1980              		.loc 2 264 0
 1981              		.syntax unified
 1982              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1983 0292 83F31188 		MSR basepri, r3
 1984              	@ 0 "" 2
 1985              	.LVL172:
 1986              		.thumb
 1987              		.syntax unified
 1988              	.LBE542:
 1989              	.LBE541:
 1990              	.LBE540:
 1991              	.LBE539:
 1992              	.LBE538:
 1993              	.LBE537:
 858:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 1994              		.loc 1 858 0
 1995 0296 2B46     		mov	r3, r5
 1996 0298 2A46     		mov	r2, r5
 1997 029a 2946     		mov	r1, r5
 1998 029c 2046     		mov	r0, r4
 1999 029e FFF7FEFF 		bl	usbStartTransmitI
 2000              	.LVL173:
 2001 02a2 E3E7     		b	.L189
 2002              	.L192:
 2003              		.align	2
 2004              	.L191:
 2005 02a4 00000000 		.word	set_address
 2006 02a8 00000000 		.word	.LANCHOR0
 2007 02ac 00000000 		.word	.LANCHOR2
 2008 02b0 00000000 		.word	.LANCHOR1
 2009              		.cfi_endproc
 2010              	.LFE298:
 2012              		.section	.text._usb_ep0in,"ax",%progbits
 2013              		.align	1
 2014              		.global	_usb_ep0in
 2015              		.syntax unified
 2016              		.thumb
 2017              		.thumb_func
 2018              		.fpu softvfp
 2020              	_usb_ep0in:
 2021              	.LFB299:
 866:lib/chibios/os/hal/src/hal_usb.c **** 
 867:lib/chibios/os/hal/src/hal_usb.c **** /**
 868:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Default EP0 IN callback.
 869:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function is used by the low level driver as default handler
 870:lib/chibios/os/hal/src/hal_usb.c ****  *          for EP0 IN events.
 871:lib/chibios/os/hal/src/hal_usb.c ****  *
 872:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 873:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number, always zero
 874:lib/chibios/os/hal/src/hal_usb.c ****  *
 875:lib/chibios/os/hal/src/hal_usb.c ****  * @notapi
 876:lib/chibios/os/hal/src/hal_usb.c ****  */
 877:lib/chibios/os/hal/src/hal_usb.c **** void _usb_ep0in(USBDriver *usbp, usbep_t ep) {
 2022              		.loc 1 877 0
 2023              		.cfi_startproc
 2024              		@ args = 0, pretend = 0, frame = 0
 2025              		@ frame_needed = 0, uses_anonymous_args = 0
 2026              	.LVL174:
 2027 0000 38B5     		push	{r3, r4, r5, lr}
 2028              		.cfi_def_cfa_offset 16
 2029              		.cfi_offset 3, -16
 2030              		.cfi_offset 4, -12
 2031              		.cfi_offset 5, -8
 2032              		.cfi_offset 14, -4
 878:lib/chibios/os/hal/src/hal_usb.c ****   size_t max;
 879:lib/chibios/os/hal/src/hal_usb.c **** 
 880:lib/chibios/os/hal/src/hal_usb.c ****   (void)ep;
 881:lib/chibios/os/hal/src/hal_usb.c ****   switch (usbp->ep0state) {
 2033              		.loc 1 881 0
 2034 0002 90F86430 		ldrb	r3, [r0, #100]	@ zero_extendqisi2
 877:lib/chibios/os/hal/src/hal_usb.c ****   size_t max;
 2035              		.loc 1 877 0
 2036 0006 0446     		mov	r4, r0
 2037              		.loc 1 881 0
 2038 0008 152B     		cmp	r3, #21
 2039 000a 39D8     		bhi	.L193
 2040 000c DFE803F0 		tbb	[pc, r3]
 2041              	.L196:
 2042 0010 3E       		.byte	(.L195-.L196)/2
 2043 0011 38       		.byte	(.L193-.L196)/2
 2044 0012 38       		.byte	(.L193-.L196)/2
 2045 0013 38       		.byte	(.L193-.L196)/2
 2046 0014 38       		.byte	(.L193-.L196)/2
 2047 0015 38       		.byte	(.L193-.L196)/2
 2048 0016 3E       		.byte	(.L195-.L196)/2
 2049 0017 38       		.byte	(.L193-.L196)/2
 2050 0018 38       		.byte	(.L193-.L196)/2
 2051 0019 0B       		.byte	(.L197-.L196)/2
 2052 001a 29       		.byte	(.L198-.L196)/2
 2053 001b 39       		.byte	(.L199-.L196)/2
 2054 001c 38       		.byte	(.L193-.L196)/2
 2055 001d 38       		.byte	(.L193-.L196)/2
 2056 001e 38       		.byte	(.L193-.L196)/2
 2057 001f 38       		.byte	(.L193-.L196)/2
 2058 0020 38       		.byte	(.L193-.L196)/2
 2059 0021 38       		.byte	(.L193-.L196)/2
 2060 0022 38       		.byte	(.L193-.L196)/2
 2061 0023 38       		.byte	(.L193-.L196)/2
 2062 0024 3E       		.byte	(.L195-.L196)/2
 2063 0025 3E       		.byte	(.L195-.L196)/2
 2064              		.p2align 1
 2065              	.L197:
 2066              	.LVL175:
 2067              	.LBB543:
 2068              	.LBB544:
  55:lib/chibios/os/hal/src/hal_usb.c ****   return hw;
 2069              		.loc 1 55 0
 2070 0026 90F87B10 		ldrb	r1, [r0, #123]	@ zero_extendqisi2
 2071              	.LVL176:
 2072 002a 90F87A20 		ldrb	r2, [r0, #122]	@ zero_extendqisi2
 2073              	.LBE544:
 2074              	.LBE543:
 882:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_IN_TX:
 883:lib/chibios/os/hal/src/hal_usb.c ****     max = (size_t)get_hword(&usbp->setup[6]);
 884:lib/chibios/os/hal/src/hal_usb.c ****     /* If the transmitted size is less than the requested size and it is a
 885:lib/chibios/os/hal/src/hal_usb.c ****        multiple of the maximum packet size then a zero size packet must be
 886:lib/chibios/os/hal/src/hal_usb.c ****        transmitted.*/
 887:lib/chibios/os/hal/src/hal_usb.c ****     if ((usbp->ep0n < max) &&
 2075              		.loc 1 887 0
 2076 002e C36E     		ldr	r3, [r0, #108]
 883:lib/chibios/os/hal/src/hal_usb.c ****     /* If the transmitted size is less than the requested size and it is a
 2077              		.loc 1 883 0
 2078 0030 42EA0122 		orr	r2, r2, r1, lsl #8
 2079              		.loc 1 887 0
 2080 0034 9342     		cmp	r3, r2
 2081 0036 14D2     		bcs	.L198
 888:lib/chibios/os/hal/src/hal_usb.c ****         ((usbp->ep0n % usbp->epc[0]->in_maxsize) == 0U)) {
 2082              		.loc 1 888 0 discriminator 1
 2083 0038 C268     		ldr	r2, [r0, #12]
 2084 003a 128A     		ldrh	r2, [r2, #16]
 2085 003c B3FBF2F5 		udiv	r5, r3, r2
 2086 0040 02FB1535 		mls	r5, r2, r5, r3
 887:lib/chibios/os/hal/src/hal_usb.c ****         ((usbp->ep0n % usbp->epc[0]->in_maxsize) == 0U)) {
 2087              		.loc 1 887 0 discriminator 1
 2088 0044 6DB9     		cbnz	r5, .L198
 2089              	.LVL177:
 2090              	.LBB545:
 2091              	.LBB546:
 2092              	.LBB547:
 2093              	.LBB548:
 2094              	.LBB549:
 2095              	.LBB550:
 2096              		.loc 2 264 0
 2097 0046 2023     		movs	r3, #32
 2098              		.syntax unified
 2099              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 2100 0048 83F31188 		MSR basepri, r3
 2101              	@ 0 "" 2
 2102              	.LVL178:
 2103              		.thumb
 2104              		.syntax unified
 2105              	.LBE550:
 2106              	.LBE549:
 2107              	.LBE548:
 2108              	.LBE547:
 2109              	.LBE546:
 2110              	.LBE545:
 889:lib/chibios/os/hal/src/hal_usb.c ****       osalSysLockFromISR();
 890:lib/chibios/os/hal/src/hal_usb.c ****       usbStartTransmitI(usbp, 0, NULL, 0);
 2111              		.loc 1 890 0
 2112 004c 2B46     		mov	r3, r5
 2113 004e 2A46     		mov	r2, r5
 2114 0050 2946     		mov	r1, r5
 2115              	.LVL179:
 2116 0052 FFF7FEFF 		bl	usbStartTransmitI
 2117              	.LVL180:
 2118              	.LBB551:
 2119              	.LBB552:
 2120              	.LBB553:
 2121              	.LBB554:
 2122              	.LBB555:
 2123              	.LBB556:
 2124              		.loc 2 264 0
 2125              		.syntax unified
 2126              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 2127 0056 85F31188 		MSR basepri, r5
 2128              	@ 0 "" 2
 2129              	.LVL181:
 2130              		.thumb
 2131              		.syntax unified
 2132              	.LBE556:
 2133              	.LBE555:
 2134              	.LBE554:
 2135              	.LBE553:
 2136              	.LBE552:
 2137              	.LBE551:
 891:lib/chibios/os/hal/src/hal_usb.c ****       osalSysUnlockFromISR();
 892:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0state = USB_EP0_IN_WAITING_TX0;
 2138              		.loc 1 892 0
 2139 005a 0A23     		movs	r3, #10
 2140              	.L208:
 893:lib/chibios/os/hal/src/hal_usb.c ****       return;
 894:lib/chibios/os/hal/src/hal_usb.c ****     }
 895:lib/chibios/os/hal/src/hal_usb.c ****     /* Falls into, it is intentional.*/
 896:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_IN_WAITING_TX0:
 897:lib/chibios/os/hal/src/hal_usb.c ****     /* Transmit phase over, receiving the zero sized status packet.*/
 898:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_OUT_WAITING_STS;
 899:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 900:lib/chibios/os/hal/src/hal_usb.c ****     osalSysLockFromISR();
 901:lib/chibios/os/hal/src/hal_usb.c ****     usbStartReceiveI(usbp, 0, NULL, 0);
 902:lib/chibios/os/hal/src/hal_usb.c ****     osalSysUnlockFromISR();
 903:lib/chibios/os/hal/src/hal_usb.c **** #else
 904:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_end_setup(usbp, ep);
 905:lib/chibios/os/hal/src/hal_usb.c **** #endif
 906:lib/chibios/os/hal/src/hal_usb.c ****     return;
 907:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_IN_SENDING_STS:
 908:lib/chibios/os/hal/src/hal_usb.c ****     /* Status packet sent, invoking the callback if defined.*/
 909:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->ep0endcb != NULL) {
 910:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0endcb(usbp);
 911:lib/chibios/os/hal/src/hal_usb.c ****     }
 912:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_STP_WAITING;
 913:lib/chibios/os/hal/src/hal_usb.c ****     return;
 914:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_STP_WAITING:
 915:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_OUT_WAITING_STS:
 916:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_OUT_RX:
 917:lib/chibios/os/hal/src/hal_usb.c ****     /* All the above are invalid states in the IN phase.*/
 918:lib/chibios/os/hal/src/hal_usb.c ****     osalDbgAssert(false, "EP0 state machine error");
 919:lib/chibios/os/hal/src/hal_usb.c ****     /* Falling through is intentional.*/
 920:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_ERROR:
 921:lib/chibios/os/hal/src/hal_usb.c ****     /* Error response, the state machine goes into an error state, the low
 922:lib/chibios/os/hal/src/hal_usb.c ****        level layer will have to reset it to USB_EP0_WAITING_SETUP after
 923:lib/chibios/os/hal/src/hal_usb.c ****        receiving a SETUP packet.*/
 924:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_stall_in(usbp, 0);
 925:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_stall_out(usbp, 0);
 926:lib/chibios/os/hal/src/hal_usb.c ****     _usb_isr_invoke_event_cb(usbp, USB_EVENT_STALLED);
 927:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_ERROR;
 2141              		.loc 1 927 0
 2142 005c 84F86430 		strb	r3, [r4, #100]
 928:lib/chibios/os/hal/src/hal_usb.c ****     return;
 2143              		.loc 1 928 0
 2144 0060 0EE0     		b	.L193
 2145              	.LVL182:
 2146              	.L198:
 898:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 2147              		.loc 1 898 0
 2148 0062 1423     		movs	r3, #20
 2149 0064 84F86430 		strb	r3, [r4, #100]
 2150              	.LVL183:
 2151              	.LBB557:
 2152              	.LBB558:
 2153              	.LBB559:
 2154              	.LBB560:
 2155              	.LBB561:
 2156              	.LBB562:
 2157              		.loc 2 264 0
 2158 0068 2023     		movs	r3, #32
 2159              		.syntax unified
 2160              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 2161 006a 83F31188 		MSR basepri, r3
 2162              	@ 0 "" 2
 2163              	.LVL184:
 2164              		.thumb
 2165              		.syntax unified
 2166              	.LBE562:
 2167              	.LBE561:
 2168              	.LBE560:
 2169              	.LBE559:
 2170              	.LBE558:
 2171              	.LBE557:
 901:lib/chibios/os/hal/src/hal_usb.c ****     osalSysUnlockFromISR();
 2172              		.loc 1 901 0
 2173 006e 0023     		movs	r3, #0
 2174 0070 1A46     		mov	r2, r3
 2175 0072 1946     		mov	r1, r3
 2176 0074 2046     		mov	r0, r4
 2177              	.LVL185:
 2178 0076 FFF7FEFF 		bl	usbStartReceiveI
 2179              	.LVL186:
 2180              	.LBB563:
 2181              	.LBB564:
 2182              	.LBB565:
 2183              	.LBB566:
 2184              	.LBB567:
 2185              	.LBB568:
 2186              		.loc 2 264 0
 2187 007a 0023     		movs	r3, #0
 2188              		.syntax unified
 2189              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 2190 007c 83F31188 		MSR basepri, r3
 2191              	@ 0 "" 2
 2192              	.LVL187:
 2193              		.thumb
 2194              		.syntax unified
 2195              	.L193:
 2196              	.LBE568:
 2197              	.LBE567:
 2198              	.LBE566:
 2199              	.LBE565:
 2200              	.LBE564:
 2201              	.LBE563:
 929:lib/chibios/os/hal/src/hal_usb.c ****   default:
 930:lib/chibios/os/hal/src/hal_usb.c ****     osalDbgAssert(false, "EP0 state machine invalid state");
 931:lib/chibios/os/hal/src/hal_usb.c ****   }
 932:lib/chibios/os/hal/src/hal_usb.c **** }
 2202              		.loc 1 932 0
 2203 0080 38BD     		pop	{r3, r4, r5, pc}
 2204              	.LVL188:
 2205              	.L199:
 909:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0endcb(usbp);
 2206              		.loc 1 909 0
 2207 0082 036F     		ldr	r3, [r0, #112]
 2208 0084 03B1     		cbz	r3, .L200
 910:lib/chibios/os/hal/src/hal_usb.c ****     }
 2209              		.loc 1 910 0
 2210 0086 9847     		blx	r3
 2211              	.LVL189:
 2212              	.L200:
 912:lib/chibios/os/hal/src/hal_usb.c ****     return;
 2213              		.loc 1 912 0
 2214 0088 0023     		movs	r3, #0
 2215 008a E7E7     		b	.L208
 2216              	.LVL190:
 2217              	.L195:
 924:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_stall_out(usbp, 0);
 2218              		.loc 1 924 0
 2219 008c 0021     		movs	r1, #0
 2220              	.LVL191:
 2221 008e FFF7FEFF 		bl	usb_lld_stall_in
 2222              	.LVL192:
 925:lib/chibios/os/hal/src/hal_usb.c ****     _usb_isr_invoke_event_cb(usbp, USB_EVENT_STALLED);
 2223              		.loc 1 925 0
 2224 0092 0021     		movs	r1, #0
 2225 0094 2046     		mov	r0, r4
 2226 0096 FFF7FEFF 		bl	usb_lld_stall_out
 2227              	.LVL193:
 926:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_ERROR;
 2228              		.loc 1 926 0
 2229 009a 6368     		ldr	r3, [r4, #4]
 2230 009c 1B68     		ldr	r3, [r3]
 2231 009e 13B1     		cbz	r3, .L201
 926:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_ERROR;
 2232              		.loc 1 926 0 is_stmt 0 discriminator 1
 2233 00a0 0621     		movs	r1, #6
 2234 00a2 2046     		mov	r0, r4
 2235 00a4 9847     		blx	r3
 2236              	.LVL194:
 2237              	.L201:
 927:lib/chibios/os/hal/src/hal_usb.c ****     return;
 2238              		.loc 1 927 0 is_stmt 1
 2239 00a6 0623     		movs	r3, #6
 2240 00a8 D8E7     		b	.L208
 2241              		.cfi_endproc
 2242              	.LFE299:
 2244              		.section	.text._usb_ep0out,"ax",%progbits
 2245              		.align	1
 2246              		.global	_usb_ep0out
 2247              		.syntax unified
 2248              		.thumb
 2249              		.thumb_func
 2250              		.fpu softvfp
 2252              	_usb_ep0out:
 2253              	.LFB300:
 933:lib/chibios/os/hal/src/hal_usb.c **** 
 934:lib/chibios/os/hal/src/hal_usb.c **** /**
 935:lib/chibios/os/hal/src/hal_usb.c ****  * @brief   Default EP0 OUT callback.
 936:lib/chibios/os/hal/src/hal_usb.c ****  * @details This function is used by the low level driver as default handler
 937:lib/chibios/os/hal/src/hal_usb.c ****  *          for EP0 OUT events.
 938:lib/chibios/os/hal/src/hal_usb.c ****  *
 939:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 940:lib/chibios/os/hal/src/hal_usb.c ****  * @param[in] ep        endpoint number, always zero
 941:lib/chibios/os/hal/src/hal_usb.c ****  *
 942:lib/chibios/os/hal/src/hal_usb.c ****  * @notapi
 943:lib/chibios/os/hal/src/hal_usb.c ****  */
 944:lib/chibios/os/hal/src/hal_usb.c **** void _usb_ep0out(USBDriver *usbp, usbep_t ep) {
 2254              		.loc 1 944 0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 0, uses_anonymous_args = 0
 2258              	.LVL195:
 945:lib/chibios/os/hal/src/hal_usb.c **** 
 946:lib/chibios/os/hal/src/hal_usb.c ****   (void)ep;
 947:lib/chibios/os/hal/src/hal_usb.c ****   switch (usbp->ep0state) {
 2259              		.loc 1 947 0
 2260 0000 90F86420 		ldrb	r2, [r0, #100]	@ zero_extendqisi2
 2261 0004 152A     		cmp	r2, #21
 944:lib/chibios/os/hal/src/hal_usb.c **** 
 2262              		.loc 1 944 0
 2263 0006 38B5     		push	{r3, r4, r5, lr}
 2264              		.cfi_def_cfa_offset 16
 2265              		.cfi_offset 3, -16
 2266              		.cfi_offset 4, -12
 2267              		.cfi_offset 5, -8
 2268              		.cfi_offset 14, -4
 944:lib/chibios/os/hal/src/hal_usb.c **** 
 2269              		.loc 1 944 0
 2270 0008 0446     		mov	r4, r0
 2271 000a 17D8     		bhi	.L209
 2272 000c 0123     		movs	r3, #1
 2273 000e 9340     		lsls	r3, r3, r2
 2274 0010 40F64162 		movw	r2, #3649
 2275 0014 1342     		tst	r3, r2
 2276 0016 1ED1     		bne	.L211
 2277 0018 13F48015 		ands	r5, r3, #1048576
 2278 001c 0FD1     		bne	.L212
 2279 001e 9B02     		lsls	r3, r3, #10
 2280 0020 0CD5     		bpl	.L209
 948:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_OUT_RX:
 949:lib/chibios/os/hal/src/hal_usb.c ****     /* Receive phase over, sending the zero sized status packet.*/
 950:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_IN_SENDING_STS;
 2281              		.loc 1 950 0
 2282 0022 0B23     		movs	r3, #11
 2283 0024 80F86430 		strb	r3, [r0, #100]
 2284              	.LVL196:
 2285              	.LBB569:
 2286              	.LBB570:
 2287              	.LBB571:
 2288              	.LBB572:
 2289              	.LBB573:
 2290              	.LBB574:
 2291              		.loc 2 264 0
 2292 0028 2023     		movs	r3, #32
 2293              		.syntax unified
 2294              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 2295 002a 83F31188 		MSR basepri, r3
 2296              	@ 0 "" 2
 2297              	.LVL197:
 2298              		.thumb
 2299              		.syntax unified
 2300              	.LBE574:
 2301              	.LBE573:
 2302              	.LBE572:
 2303              	.LBE571:
 2304              	.LBE570:
 2305              	.LBE569:
 951:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 952:lib/chibios/os/hal/src/hal_usb.c ****     osalSysLockFromISR();
 953:lib/chibios/os/hal/src/hal_usb.c ****     usbStartTransmitI(usbp, 0, NULL, 0);
 2306              		.loc 1 953 0
 2307 002e 2B46     		mov	r3, r5
 2308 0030 2A46     		mov	r2, r5
 2309 0032 2946     		mov	r1, r5
 2310              	.LVL198:
 2311 0034 FFF7FEFF 		bl	usbStartTransmitI
 2312              	.LVL199:
 2313              	.LBB575:
 2314              	.LBB576:
 2315              	.LBB577:
 2316              	.LBB578:
 2317              	.LBB579:
 2318              	.LBB580:
 2319              		.loc 2 264 0
 2320              		.syntax unified
 2321              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 2322 0038 85F31188 		MSR basepri, r5
 2323              	@ 0 "" 2
 2324              	.LVL200:
 2325              		.thumb
 2326              		.syntax unified
 2327              	.L209:
 2328              	.LBE580:
 2329              	.LBE579:
 2330              	.LBE578:
 2331              	.LBE577:
 2332              	.LBE576:
 2333              	.LBE575:
 954:lib/chibios/os/hal/src/hal_usb.c ****     osalSysUnlockFromISR();
 955:lib/chibios/os/hal/src/hal_usb.c **** #else
 956:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_end_setup(usbp, ep);
 957:lib/chibios/os/hal/src/hal_usb.c **** #endif
 958:lib/chibios/os/hal/src/hal_usb.c ****     return;
 959:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_OUT_WAITING_STS:
 960:lib/chibios/os/hal/src/hal_usb.c ****     /* Status packet received, it must be zero sized, invoking the callback
 961:lib/chibios/os/hal/src/hal_usb.c ****        if defined.*/
 962:lib/chibios/os/hal/src/hal_usb.c **** #if (USB_EP0_STATUS_STAGE == USB_EP0_STATUS_STAGE_SW)
 963:lib/chibios/os/hal/src/hal_usb.c ****     if (usbGetReceiveTransactionSizeX(usbp, 0) != 0U) {
 964:lib/chibios/os/hal/src/hal_usb.c ****       break;
 965:lib/chibios/os/hal/src/hal_usb.c ****     }
 966:lib/chibios/os/hal/src/hal_usb.c **** #endif
 967:lib/chibios/os/hal/src/hal_usb.c ****     if (usbp->ep0endcb != NULL) {
 968:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0endcb(usbp);
 969:lib/chibios/os/hal/src/hal_usb.c ****     }
 970:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_STP_WAITING;
 971:lib/chibios/os/hal/src/hal_usb.c ****     return;
 972:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_STP_WAITING:
 973:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_IN_TX:
 974:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_IN_WAITING_TX0:
 975:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_IN_SENDING_STS:
 976:lib/chibios/os/hal/src/hal_usb.c ****     /* All the above are invalid states in the IN phase.*/
 977:lib/chibios/os/hal/src/hal_usb.c ****     osalDbgAssert(false, "EP0 state machine error");
 978:lib/chibios/os/hal/src/hal_usb.c ****     /* Falling through is intentional.*/
 979:lib/chibios/os/hal/src/hal_usb.c ****   case USB_EP0_ERROR:
 980:lib/chibios/os/hal/src/hal_usb.c ****     /* Error response, the state machine goes into an error state, the low
 981:lib/chibios/os/hal/src/hal_usb.c ****        level layer will have to reset it to USB_EP0_WAITING_SETUP after
 982:lib/chibios/os/hal/src/hal_usb.c ****        receiving a SETUP packet.*/
 983:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_stall_in(usbp, 0);
 984:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_stall_out(usbp, 0);
 985:lib/chibios/os/hal/src/hal_usb.c ****     _usb_isr_invoke_event_cb(usbp, USB_EVENT_STALLED);
 986:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_ERROR;
 987:lib/chibios/os/hal/src/hal_usb.c ****     return;
 988:lib/chibios/os/hal/src/hal_usb.c ****   default:
 989:lib/chibios/os/hal/src/hal_usb.c ****     osalDbgAssert(false, "EP0 state machine invalid state");
 990:lib/chibios/os/hal/src/hal_usb.c ****   }
 991:lib/chibios/os/hal/src/hal_usb.c **** }
 2334              		.loc 1 991 0
 2335 003c 38BD     		pop	{r3, r4, r5, pc}
 2336              	.LVL201:
 2337              	.L212:
 963:lib/chibios/os/hal/src/hal_usb.c ****       break;
 2338              		.loc 1 963 0
 2339 003e C368     		ldr	r3, [r0, #12]
 2340 0040 9B69     		ldr	r3, [r3, #24]
 2341 0042 5B68     		ldr	r3, [r3, #4]
 2342 0044 002B     		cmp	r3, #0
 2343 0046 F9D1     		bne	.L209
 967:lib/chibios/os/hal/src/hal_usb.c ****       usbp->ep0endcb(usbp);
 2344              		.loc 1 967 0
 2345 0048 036F     		ldr	r3, [r0, #112]
 2346 004a 03B1     		cbz	r3, .L213
 968:lib/chibios/os/hal/src/hal_usb.c ****     }
 2347              		.loc 1 968 0
 2348 004c 9847     		blx	r3
 2349              	.LVL202:
 2350              	.L213:
 970:lib/chibios/os/hal/src/hal_usb.c ****     return;
 2351              		.loc 1 970 0
 2352 004e 0023     		movs	r3, #0
 2353              	.L224:
 986:lib/chibios/os/hal/src/hal_usb.c ****     return;
 2354              		.loc 1 986 0
 2355 0050 84F86430 		strb	r3, [r4, #100]
 987:lib/chibios/os/hal/src/hal_usb.c ****   default:
 2356              		.loc 1 987 0
 2357 0054 F2E7     		b	.L209
 2358              	.LVL203:
 2359              	.L211:
 983:lib/chibios/os/hal/src/hal_usb.c ****     usb_lld_stall_out(usbp, 0);
 2360              		.loc 1 983 0
 2361 0056 0021     		movs	r1, #0
 2362              	.LVL204:
 2363 0058 FFF7FEFF 		bl	usb_lld_stall_in
 2364              	.LVL205:
 984:lib/chibios/os/hal/src/hal_usb.c ****     _usb_isr_invoke_event_cb(usbp, USB_EVENT_STALLED);
 2365              		.loc 1 984 0
 2366 005c 0021     		movs	r1, #0
 2367 005e 2046     		mov	r0, r4
 2368 0060 FFF7FEFF 		bl	usb_lld_stall_out
 2369              	.LVL206:
 985:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_ERROR;
 2370              		.loc 1 985 0
 2371 0064 6368     		ldr	r3, [r4, #4]
 2372 0066 1B68     		ldr	r3, [r3]
 2373 0068 13B1     		cbz	r3, .L214
 985:lib/chibios/os/hal/src/hal_usb.c ****     usbp->ep0state = USB_EP0_ERROR;
 2374              		.loc 1 985 0 is_stmt 0 discriminator 1
 2375 006a 0621     		movs	r1, #6
 2376 006c 2046     		mov	r0, r4
 2377 006e 9847     		blx	r3
 2378              	.LVL207:
 2379              	.L214:
 986:lib/chibios/os/hal/src/hal_usb.c ****     return;
 2380              		.loc 1 986 0 is_stmt 1
 2381 0070 0623     		movs	r3, #6
 2382 0072 EDE7     		b	.L224
 2383              		.cfi_endproc
 2384              	.LFE300:
 2386              		.section	.rodata.active_status,"a",%progbits
 2387              		.set	.LANCHOR2,. + 0
 2390              	active_status:
 2391 0000 0000     		.space	2
 2392              		.section	.rodata.halted_status,"a",%progbits
 2393              		.set	.LANCHOR1,. + 0
 2396              	halted_status:
 2397 0000 01       		.byte	1
 2398 0001 00       		.byte	0
 2399              		.section	.rodata.zero_status,"a",%progbits
 2400              		.set	.LANCHOR0,. + 0
 2403              	zero_status:
 2404 0000 0000     		.space	2
 2405              		.text
 2406              	.Letext0:
 2407              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 2408              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 2409              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 2410              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 2411              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 2412              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 2413              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2414              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 2415              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 2416              		.file 13 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 2417              		.file 14 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 2418              		.file 15 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 2419              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2420              		.file 17 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 2421              		.file 18 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 2422              		.file 19 "./lib/chibios/os/rt/include/chtm.h"
 2423              		.file 20 "./lib/chibios/os/rt/include/chsem.h"
 2424              		.file 21 "./lib/chibios/os/rt/include/chmtx.h"
 2425              		.file 22 "./lib/chibios/os/rt/include/chsys.h"
 2426              		.file 23 "./lib/chibios/os/rt/include/chregistry.h"
 2427              		.file 24 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 2428              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 2429              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 2430              		.file 27 "./lib/chibios/os/hal/include/hal_dac.h"
 2431              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 2432              		.file 29 "./lib/chibios/os/hal/include/hal_gpt.h"
 2433              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 2434              		.file 31 "./lib/chibios/os/hal/include/hal_i2c.h"
 2435              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 2436              		.file 33 "./lib/chibios/os/hal/include/hal_pwm.h"
 2437              		.file 34 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 2438              		.file 35 "./lib/chibios/os/hal/include/hal_usb.h"
 2439              		.file 36 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2440              		.file 37 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/stm32_usb.h"
 2441              		.file 38 "./lib/chibios/os/rt/include/chthreads.h"
 2442              		.file 39 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_usb.c
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:16     .text.set_address:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:22     .text.set_address:0000000000000000 set_address
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:61     .text.usbInit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:68     .text.usbInit:0000000000000000 usbInit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:82     .text.usbObjectInit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:89     .text.usbObjectInit:0000000000000000 usbObjectInit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:124    .text.usbStart:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:131    .text.usbStart:0000000000000000 usbStart
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:213    .text.usbStop:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:220    .text.usbStop:0000000000000000 usbStop
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:356    .text.usbInitEndpointI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:363    .text.usbInitEndpointI:0000000000000000 usbInitEndpointI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:425    .text.usbDisableEndpointsI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:432    .text.usbDisableEndpointsI:0000000000000000 usbDisableEndpointsI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:524    .text.usbStartReceiveI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:531    .text.usbStartReceiveI:0000000000000000 usbStartReceiveI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:586    .text.usbStartTransmitI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:593    .text.usbStartTransmitI:0000000000000000 usbStartTransmitI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:648    .text.usbReceive:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:655    .text.usbReceive:0000000000000000 usbReceive
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:768    .text.usbTransmit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:775    .text.usbTransmit:0000000000000000 usbTransmit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:888    .text.usbStallReceiveI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:895    .text.usbStallReceiveI:0000000000000000 usbStallReceiveI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:930    .text.usbStallTransmitI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:937    .text.usbStallTransmitI:0000000000000000 usbStallTransmitI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:972    .text.usbWakeupHost:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:979    .text.usbWakeupHost:0000000000000000 usbWakeupHost
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1021   .text.usbWakeupHost:0000000000000024 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1026   .text._usb_reset:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1033   .text._usb_reset:0000000000000000 _usb_reset
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1197   .text._usb_suspend:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1204   .text._usb_suspend:0000000000000000 _usb_suspend
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1356   .text._usb_wakeup:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1363   .text._usb_wakeup:0000000000000000 _usb_wakeup
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1392   .text._usb_ep0setup:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:1399   .text._usb_ep0setup:0000000000000000 _usb_ep0setup
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2005   .text._usb_ep0setup:00000000000002a4 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2013   .text._usb_ep0in:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2020   .text._usb_ep0in:0000000000000000 _usb_ep0in
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2042   .text._usb_ep0in:0000000000000010 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2064   .text._usb_ep0in:0000000000000026 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2245   .text._usb_ep0out:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2252   .text._usb_ep0out:0000000000000000 _usb_ep0out
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2390   .rodata.active_status:0000000000000000 active_status
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2391   .rodata.active_status:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2396   .rodata.halted_status:0000000000000000 halted_status
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2403   .rodata.zero_status:0000000000000000 zero_status
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccVhOTm4.s:2404   .rodata.zero_status:0000000000000000 $d

UNDEFINED SYMBOLS
usb_lld_set_address
usb_lld_init
usb_lld_start
usb_lld_stop
chThdResumeI
chSchRescheduleS
memset
usb_lld_init_endpoint
usb_lld_disable_endpoints
usb_lld_start_out
usb_lld_start_in
chThdSuspendS
usb_lld_stall_out
usb_lld_stall_in
chThdSleep
usb_lld_reset
usb_lld_read_setup
usb_lld_get_status_in
usb_lld_get_status_out
usb_lld_clear_in
usb_lld_clear_out
