   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"chsys.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._idle_thread,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	_idle_thread:
  23              	.LFB248:
  24              		.file 1 "lib/chibios/os/rt/src/chsys.c"
   1:lib/chibios/os/rt/src/chsys.c **** /*
   2:lib/chibios/os/rt/src/chsys.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chsys.c **** 
   4:lib/chibios/os/rt/src/chsys.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chsys.c **** 
   6:lib/chibios/os/rt/src/chsys.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chsys.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chsys.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chsys.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chsys.c **** 
  11:lib/chibios/os/rt/src/chsys.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chsys.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chsys.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chsys.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chsys.c **** 
  16:lib/chibios/os/rt/src/chsys.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chsys.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chsys.c **** */
  19:lib/chibios/os/rt/src/chsys.c **** 
  20:lib/chibios/os/rt/src/chsys.c **** /**
  21:lib/chibios/os/rt/src/chsys.c ****  * @file    chsys.c
  22:lib/chibios/os/rt/src/chsys.c ****  * @brief   System related code.
  23:lib/chibios/os/rt/src/chsys.c ****  *
  24:lib/chibios/os/rt/src/chsys.c ****  * @addtogroup system
  25:lib/chibios/os/rt/src/chsys.c ****  * @details System related APIs and services:
  26:lib/chibios/os/rt/src/chsys.c ****  *          - Initialization.
  27:lib/chibios/os/rt/src/chsys.c ****  *          - Locks.
  28:lib/chibios/os/rt/src/chsys.c ****  *          - Interrupt Handling.
  29:lib/chibios/os/rt/src/chsys.c ****  *          - Power Management.
  30:lib/chibios/os/rt/src/chsys.c ****  *          - Abnormal Termination.
  31:lib/chibios/os/rt/src/chsys.c ****  *          - Realtime counter.
  32:lib/chibios/os/rt/src/chsys.c ****  *          .
  33:lib/chibios/os/rt/src/chsys.c ****  * @{
  34:lib/chibios/os/rt/src/chsys.c ****  */
  35:lib/chibios/os/rt/src/chsys.c **** 
  36:lib/chibios/os/rt/src/chsys.c **** #include "ch.h"
  37:lib/chibios/os/rt/src/chsys.c **** 
  38:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  39:lib/chibios/os/rt/src/chsys.c **** /* Module exported variables.                                                */
  40:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  41:lib/chibios/os/rt/src/chsys.c **** 
  42:lib/chibios/os/rt/src/chsys.c **** #if (CH_CFG_NO_IDLE_THREAD == FALSE) || defined(__DOXYGEN__)
  43:lib/chibios/os/rt/src/chsys.c **** /**
  44:lib/chibios/os/rt/src/chsys.c ****  * @brief   Idle thread working area.
  45:lib/chibios/os/rt/src/chsys.c ****  */
  46:lib/chibios/os/rt/src/chsys.c **** THD_WORKING_AREA(ch_idle_thread_wa, PORT_IDLE_THREAD_STACK_SIZE);
  47:lib/chibios/os/rt/src/chsys.c **** #endif
  48:lib/chibios/os/rt/src/chsys.c **** 
  49:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  50:lib/chibios/os/rt/src/chsys.c **** /* Module local types.                                                       */
  51:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  52:lib/chibios/os/rt/src/chsys.c **** 
  53:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  54:lib/chibios/os/rt/src/chsys.c **** /* Module local variables.                                                   */
  55:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  56:lib/chibios/os/rt/src/chsys.c **** 
  57:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  58:lib/chibios/os/rt/src/chsys.c **** /* Module local functions.                                                   */
  59:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  60:lib/chibios/os/rt/src/chsys.c **** 
  61:lib/chibios/os/rt/src/chsys.c **** #if (CH_CFG_NO_IDLE_THREAD == FALSE) || defined(__DOXYGEN__)
  62:lib/chibios/os/rt/src/chsys.c **** /**
  63:lib/chibios/os/rt/src/chsys.c ****  * @brief   This function implements the idle thread infinite loop.
  64:lib/chibios/os/rt/src/chsys.c ****  * @details The function puts the processor in the lowest power mode capable
  65:lib/chibios/os/rt/src/chsys.c ****  *          to serve interrupts.<br>
  66:lib/chibios/os/rt/src/chsys.c ****  *          The priority is internally set to the minimum system value so
  67:lib/chibios/os/rt/src/chsys.c ****  *          that this thread is executed only if there are no other ready
  68:lib/chibios/os/rt/src/chsys.c ****  *          threads in the system.
  69:lib/chibios/os/rt/src/chsys.c ****  *
  70:lib/chibios/os/rt/src/chsys.c ****  * @param[in] p         the thread parameter, unused in this scenario
  71:lib/chibios/os/rt/src/chsys.c ****  */
  72:lib/chibios/os/rt/src/chsys.c **** static void _idle_thread(void *p) {
  25              		.loc 1 72 0
  26              		.cfi_startproc
  27              		@ Volatile: function does not return.
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              	.L2:
  33 0000 FEE7     		b	.L2
  34              		.cfi_endproc
  35              	.LFE248:
  37              		.section	.text.chSysInit,"ax",%progbits
  38              		.align	1
  39              		.global	chSysInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	chSysInit:
  46              	.LFB249:
  73:lib/chibios/os/rt/src/chsys.c **** 
  74:lib/chibios/os/rt/src/chsys.c ****   (void)p;
  75:lib/chibios/os/rt/src/chsys.c **** 
  76:lib/chibios/os/rt/src/chsys.c ****   while (true) {
  77:lib/chibios/os/rt/src/chsys.c ****     /*lint -save -e522 [2.2] Apparently no side effects because it contains
  78:lib/chibios/os/rt/src/chsys.c ****       an asm instruction.*/
  79:lib/chibios/os/rt/src/chsys.c ****     port_wait_for_interrupt();
  80:lib/chibios/os/rt/src/chsys.c ****     /*lint -restore*/
  81:lib/chibios/os/rt/src/chsys.c ****     CH_CFG_IDLE_LOOP_HOOK();
  82:lib/chibios/os/rt/src/chsys.c ****   }
  83:lib/chibios/os/rt/src/chsys.c **** }
  84:lib/chibios/os/rt/src/chsys.c **** #endif /* CH_CFG_NO_IDLE_THREAD == FALSE */
  85:lib/chibios/os/rt/src/chsys.c **** 
  86:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  87:lib/chibios/os/rt/src/chsys.c **** /* Module exported functions.                                                */
  88:lib/chibios/os/rt/src/chsys.c **** /*===========================================================================*/
  89:lib/chibios/os/rt/src/chsys.c **** 
  90:lib/chibios/os/rt/src/chsys.c **** /**
  91:lib/chibios/os/rt/src/chsys.c ****  * @brief   ChibiOS/RT initialization.
  92:lib/chibios/os/rt/src/chsys.c ****  * @details After executing this function the current instructions stream
  93:lib/chibios/os/rt/src/chsys.c ****  *          becomes the main thread.
  94:lib/chibios/os/rt/src/chsys.c ****  * @pre     Interrupts must disabled before invoking this function.
  95:lib/chibios/os/rt/src/chsys.c ****  * @post    The main thread is created with priority @p NORMALPRIO and
  96:lib/chibios/os/rt/src/chsys.c ****  *          interrupts are enabled.
  97:lib/chibios/os/rt/src/chsys.c ****  *
  98:lib/chibios/os/rt/src/chsys.c ****  * @special
  99:lib/chibios/os/rt/src/chsys.c ****  */
 100:lib/chibios/os/rt/src/chsys.c **** void chSysInit(void) {
  47              		.loc 1 100 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		.loc 1 100 0
  52 0000 10B5     		push	{r4, lr}
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 4, -8
  55              		.cfi_offset 14, -4
 101:lib/chibios/os/rt/src/chsys.c **** 
 102:lib/chibios/os/rt/src/chsys.c ****   _scheduler_init();
 103:lib/chibios/os/rt/src/chsys.c ****   _vt_init();
 104:lib/chibios/os/rt/src/chsys.c ****   _trace_init();
 105:lib/chibios/os/rt/src/chsys.c **** 
 106:lib/chibios/os/rt/src/chsys.c **** #if CH_DBG_SYSTEM_STATE_CHECK == TRUE
 107:lib/chibios/os/rt/src/chsys.c ****   ch.dbg.isr_cnt  = (cnt_t)0;
 108:lib/chibios/os/rt/src/chsys.c ****   ch.dbg.lock_cnt = (cnt_t)0;
 109:lib/chibios/os/rt/src/chsys.c **** #endif
 110:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_USE_TM == TRUE
 111:lib/chibios/os/rt/src/chsys.c ****   _tm_init();
 112:lib/chibios/os/rt/src/chsys.c **** #endif
 113:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_USE_MEMCORE == TRUE
 114:lib/chibios/os/rt/src/chsys.c ****   _core_init();
 115:lib/chibios/os/rt/src/chsys.c **** #endif
 116:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_USE_HEAP == TRUE
 117:lib/chibios/os/rt/src/chsys.c ****   _heap_init();
 118:lib/chibios/os/rt/src/chsys.c **** #endif
 119:lib/chibios/os/rt/src/chsys.c **** #if CH_DBG_STATISTICS == TRUE
 120:lib/chibios/os/rt/src/chsys.c ****   _stats_init();
 121:lib/chibios/os/rt/src/chsys.c **** #endif
 122:lib/chibios/os/rt/src/chsys.c **** 
 123:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_NO_IDLE_THREAD == FALSE
 124:lib/chibios/os/rt/src/chsys.c ****   /* Now this instructions flow becomes the main thread.*/
 125:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_USE_REGISTRY == TRUE
 126:lib/chibios/os/rt/src/chsys.c ****   currp = _thread_init(&ch.mainthread, (const char *)&ch_debug, NORMALPRIO);
  56              		.loc 1 126 0
  57 0002 1C4C     		ldr	r4, .L4
 102:lib/chibios/os/rt/src/chsys.c ****   _vt_init();
  58              		.loc 1 102 0
  59 0004 FFF7FEFF 		bl	_scheduler_init
  60              	.LVL1:
 103:lib/chibios/os/rt/src/chsys.c ****   _trace_init();
  61              		.loc 1 103 0
  62 0008 FFF7FEFF 		bl	_vt_init
  63              	.LVL2:
 111:lib/chibios/os/rt/src/chsys.c **** #endif
  64              		.loc 1 111 0
  65 000c FFF7FEFF 		bl	_tm_init
  66              	.LVL3:
 114:lib/chibios/os/rt/src/chsys.c **** #endif
  67              		.loc 1 114 0
  68 0010 FFF7FEFF 		bl	_core_init
  69              	.LVL4:
 117:lib/chibios/os/rt/src/chsys.c **** #endif
  70              		.loc 1 117 0
  71 0014 FFF7FEFF 		bl	_heap_init
  72              	.LVL5:
  73              		.loc 1 126 0
  74 0018 8022     		movs	r2, #128
  75 001a 1749     		ldr	r1, .L4+4
  76 001c 2046     		mov	r0, r4
  77 001e FFF7FEFF 		bl	_thread_init
  78              	.LVL6:
  79              	.LBB143:
 127:lib/chibios/os/rt/src/chsys.c **** #else
 128:lib/chibios/os/rt/src/chsys.c ****   currp = _thread_init(&ch.mainthread, "main", NORMALPRIO);
 129:lib/chibios/os/rt/src/chsys.c **** #endif
 130:lib/chibios/os/rt/src/chsys.c **** #else
 131:lib/chibios/os/rt/src/chsys.c ****   /* Now this instructions flow becomes the idle thread.*/
 132:lib/chibios/os/rt/src/chsys.c ****   currp = _thread_init(&ch.mainthread, "idle", IDLEPRIO);
 133:lib/chibios/os/rt/src/chsys.c **** #endif
 134:lib/chibios/os/rt/src/chsys.c **** 
 135:lib/chibios/os/rt/src/chsys.c **** #if CH_DBG_ENABLE_STACK_CHECK == TRUE
 136:lib/chibios/os/rt/src/chsys.c ****   {
 137:lib/chibios/os/rt/src/chsys.c ****     /* Setting up the base address of the static main thread stack, the
 138:lib/chibios/os/rt/src/chsys.c ****        symbol must be provided externally.*/
 139:lib/chibios/os/rt/src/chsys.c ****     extern stkalign_t __main_thread_stack_base__;
 140:lib/chibios/os/rt/src/chsys.c ****     currp->wabase = &__main_thread_stack_base__;
  80              		.loc 1 140 0
  81 0022 164B     		ldr	r3, .L4+8
  82 0024 C361     		str	r3, [r0, #28]
  83              	.LBE143:
 141:lib/chibios/os/rt/src/chsys.c ****   }
 142:lib/chibios/os/rt/src/chsys.c **** #elif CH_CFG_USE_DYNAMIC == TRUE
 143:lib/chibios/os/rt/src/chsys.c ****   currp->wabase = NULL;
 144:lib/chibios/os/rt/src/chsys.c **** #endif
 145:lib/chibios/os/rt/src/chsys.c **** 
 146:lib/chibios/os/rt/src/chsys.c ****   /* Setting up the caller as current thread.*/
 147:lib/chibios/os/rt/src/chsys.c ****   currp->state = CH_STATE_CURRENT;
  84              		.loc 1 147 0
  85 0026 0123     		movs	r3, #1
  86 0028 80F82030 		strb	r3, [r0, #32]
  87              	.LVL7:
  88              	.LBB144:
  89              	.LBB145:
  90              	.LBB146:
  91              	.LBB147:
  92              		.file 2 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
   1:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  * @file     core_cm4.h
   3:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  * @version  V4.30
   5:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  * @date     20. October 2015
   6:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
   9:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    All rights reserved.
  10:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      to endorse or promote products derived from this software without
  19:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      specific prior written permission.
  20:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    *
  21:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  34:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  35:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
  40:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  41:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  44:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #include <stdint.h>
  45:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  46:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
  47:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  extern "C" {
  48:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
  49:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  50:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
  51:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  54:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  57:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  60:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
  63:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  64:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  65:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*******************************************************************************
  66:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  *                 CMSIS definitions
  67:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  ******************************************************************************/
  68:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
  69:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup Cortex_M4
  70:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
  71:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
  72:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  73:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  79:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  81:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  82:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if   defined ( __CC_ARM )
  83:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  87:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  92:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
  93:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
  97:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 102:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
 103:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 106:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
 107:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 111:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __CSMC__ )
 112:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __packed
 113:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 117:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #else
 118:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #error Unknown compiler
 119:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
 120:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 121:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** */
 124:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if defined ( __CC_ARM )
 125:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1U
 128:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #else
 129:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0U
 131:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #endif
 132:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #else
 133:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0U
 134:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 135:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 136:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1U
 140:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #else
 141:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0U
 143:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #endif
 144:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #else
 145:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0U
 146:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 147:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 148:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
 149:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1U
 152:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #else
 153:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0U
 155:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #endif
 156:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #else
 157:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0U
 158:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 159:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 160:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #if defined __ARMVFP__
 162:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1U
 164:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #else
 165:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0U
 167:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #endif
 168:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #else
 169:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0U
 170:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 171:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 172:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
 173:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1U
 176:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #else
 177:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0U
 179:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #endif
 180:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #else
 181:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0U
 182:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 183:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 184:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
 185:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #if defined __FPU_VFP__
 186:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1U
 188:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #else
 189:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0U
 191:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #endif
 192:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #else
 193:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0U
 194:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 195:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 196:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #elif defined ( __CSMC__ )
 197:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1U
 200:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #else
 201:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0U
 203:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #endif
 204:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #else
 205:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0U
 206:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 207:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 208:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
 209:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 210:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 214:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
 215:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
 216:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
 217:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 218:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 220:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 222:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 225:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
 226:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  extern "C" {
 227:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
 228:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 229:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* check device defines and use defaults */
 230:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #ifndef __CM4_REV
 232:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 235:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 236:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 240:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 241:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 245:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 246:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 250:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 251:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #endif
 255:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
 256:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 257:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 259:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 261:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** */
 265:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
 266:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #else
 268:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
 270:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 273:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* following defines should be used for structure members */
 274:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 278:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 280:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 281:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 282:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*******************************************************************************
 283:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  *                 Register Abstraction
 284:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   Core Register contain:
 285:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core Register
 286:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core NVIC Register
 287:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core SCB Register
 288:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core SysTick Register
 289:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core Debug Register
 290:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core MPU Register
 291:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core FPU Register
 292:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  ******************************************************************************/
 293:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 294:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** */
 297:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 298:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 299:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief      Core Register type definitions.
 302:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
 303:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 304:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 305:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 306:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 308:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef union
 309:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 310:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   struct
 311:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   {
 312:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } APSR_Type;
 323:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 324:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* APSR Register Definitions */
 325:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 328:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 331:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 334:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 337:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 340:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 343:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 344:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 345:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 347:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef union
 348:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 349:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   struct
 350:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   {
 351:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } IPSR_Type;
 356:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 357:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* IPSR Register Definitions */
 358:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 361:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 362:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 363:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 365:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef union
 366:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 367:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   struct
 368:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   {
 369:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } xPSR_Type;
 383:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 384:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* xPSR Register Definitions */
 385:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 388:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 391:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 394:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 397:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 400:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 403:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 406:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 409:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 412:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 413:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 414:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 416:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef union
 417:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 418:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   struct
 419:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   {
 420:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } CONTROL_Type;
 427:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 428:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* CONTROL Register Definitions */
 429:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 432:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 435:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 438:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 440:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 441:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 442:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
 446:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 447:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 448:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 449:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 451:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
 452:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 453:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }  NVIC_Type;
 467:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 468:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 472:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 474:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 475:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 476:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
 480:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 481:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 482:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 483:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 485:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
 486:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 487:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } SCB_Type;
 509:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 510:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 514:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 517:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 520:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 523:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 526:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 530:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 533:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 536:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 539:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 542:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 545:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 548:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 551:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 554:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 557:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 561:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 565:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 568:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 571:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 574:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 577:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 580:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 583:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB System Control Register Definitions */
 584:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 587:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 590:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 593:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 597:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 600:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 603:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 606:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 609:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 612:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 616:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 619:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 622:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 625:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 628:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 631:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 634:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 637:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 640:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 643:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 646:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 649:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 652:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 655:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 659:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 662:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 665:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 669:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 672:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 675:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 679:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 682:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 685:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 688:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 691:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 693:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 694:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 695:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
 699:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 700:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 701:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 702:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 704:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
 705:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 706:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } SCnSCB_Type;
 710:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 711:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 715:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 719:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 722:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 725:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 728:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 731:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 733:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 734:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 735:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
 739:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 740:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 741:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 742:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 744:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
 745:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 746:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } SysTick_Type;
 751:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 752:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 756:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 759:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 762:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 765:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 769:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SysTick Current Register Definitions */
 770:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 773:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 777:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 780:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 783:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 785:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 786:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 787:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
 791:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 792:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 793:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 794:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 796:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
 797:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 798:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __OM  union
 799:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   {
 800:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } ITM_Type;
 831:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 832:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 836:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 840:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 843:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 846:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 849:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 852:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 855:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 858:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 861:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 864:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 868:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 872:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 876:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 880:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 883:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 886:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 888:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 889:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 890:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
 894:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 895:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 896:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
 897:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
 899:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
 900:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
 901:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } DWT_Type;
 925:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 926:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT Control Register Definitions */
 927:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 930:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 933:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 936:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 939:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 942:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 945:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 948:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 951:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 954:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 957:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 960:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 963:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 966:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 969:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 972:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 975:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 978:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 981:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 985:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 989:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 993:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
 997:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1001:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1005:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1009:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1012:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1015:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1018:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1021:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1024:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1027:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1030:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1033:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1035:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1036:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1037:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
1041:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1042:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1043:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1044:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1046:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
1047:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1048:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } TPI_Type;
1073:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1074:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1078:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1082:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1086:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1089:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1092:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1095:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1099:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1102:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1106:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1110:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1113:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1116:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1119:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1122:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1125:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1128:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1132:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1136:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1139:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1142:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1145:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1148:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1151:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1154:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1158:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1162:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1166:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1169:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1172:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1175:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1178:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1181:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1185:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1188:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1190:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1191:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1193:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
1197:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1198:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1199:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1200:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1202:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
1203:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1204:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } MPU_Type;
1216:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1217:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* MPU Type Register Definitions */
1218:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1221:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1224:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1227:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* MPU Control Register Definitions */
1228:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1231:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1234:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1237:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1241:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1245:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1248:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1251:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1255:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1258:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1261:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1264:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1267:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1270:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1273:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1276:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1279:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1282:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
1284:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1285:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1286:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1288:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
1292:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1293:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1294:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1295:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1297:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
1298:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1299:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } FPU_Type;
1306:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1307:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1311:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1314:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1317:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1320:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1323:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1326:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1329:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1332:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1335:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1339:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1343:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1346:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1349:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1352:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1356:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1359:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1362:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1365:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1368:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1371:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1374:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1377:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1381:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1384:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1387:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1390:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
1392:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1393:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1394:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1395:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
1399:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1400:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1401:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1402:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1404:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** typedef struct
1405:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1406:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** } CoreDebug_Type;
1411:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1412:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1416:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1419:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1422:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1425:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1428:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1431:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1434:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1437:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1440:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1443:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1446:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1449:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1453:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1456:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1460:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1463:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1466:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1469:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1472:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1475:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1478:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1481:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1484:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1487:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1490:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1493:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1496:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1498:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1499:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1500:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
1504:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1505:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1506:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1507:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \return           Masked and shifted value.
1511:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** */
1512:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1514:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1515:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param[in] value  Value of register.
1518:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** */
1520:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1522:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1524:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1525:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1526:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
1530:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1531:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1532:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1542:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1551:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
1555:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1556:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** #endif
1560:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1561:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*@} */
1562:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1563:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1564:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1565:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /*******************************************************************************
1566:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  *                Hardware Abstraction Layer
1567:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   Core Function Interface contains:
1568:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core NVIC Functions
1569:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core SysTick Functions
1570:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core Debug Functions
1571:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   - Core Register Access Functions
1572:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  ******************************************************************************/
1573:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1574:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** */
1576:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1577:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1578:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1579:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1581:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   @{
1585:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1586:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1587:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1588:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Set Priority Grouping
1589:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****            Only values from 0..7 are used.
1592:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1596:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1598:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   uint32_t reg_value;
1599:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1601:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  93              		.loc 2 1601 0
  94 002c 144B     		ldr	r3, .L4+12
1602:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  95              		.loc 2 1603 0
  96 002e 154A     		ldr	r2, .L4+16
1601:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  97              		.loc 2 1601 0
  98 0030 D968     		ldr	r1, [r3, #12]
  99              	.LVL8:
 100              	.LBE147:
 101              	.LBE146:
 102              	.LBE145:
 103              	.LBE144:
 126:lib/chibios/os/rt/src/chsys.c **** #else
 104              		.loc 1 126 0
 105 0032 44F8180C 		str	r0, [r4, #-24]
 106              	.LBB157:
 107              	.LBB156:
 108              	.LBB150:
 109              	.LBB148:
1602:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
 110              		.loc 2 1602 0
 111 0036 21F4E061 		bic	r1, r1, #1792
 112              	.LVL9:
 113 003a 0904     		lsls	r1, r1, #16
 114 003c 090C     		lsrs	r1, r1, #16
 115              	.LVL10:
 116              		.loc 2 1603 0
 117 003e 0A43     		orrs	r2, r2, r1
 118              	.LVL11:
 119              	.LBE148:
 120              	.LBE150:
 121              		.file 3 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignement required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         (PORT_ENABLE_GUARD_PAGES == TRUE ?  \
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r0;
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r1;
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r2;
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r3;
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r12;
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      lr_thd;
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      pc;
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      xpsr;
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s0;
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s1;
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s2;
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s3;
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s4;
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s5;
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s6;
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s7;
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s8;
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s9;
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s10;
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s11;
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s12;
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s13;
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s14;
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s15;
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      fpscr;
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      reserved;
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s16;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s17;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s18;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s19;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s20;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s21;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s22;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s23;
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s24;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s25;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s26;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s27;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s28;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s29;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s30;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      s31;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r4;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r5;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r6;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r7;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r8;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r9;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r10;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      r11;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   regarm_t      lr;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (regarm_t)(pf);                                        \
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (regarm_t)(arg);                                       \
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (regarm_t)_port_thread_start;                          \
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuConfigureRegion(MPU_REGION_0,                                          \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                      chThdGetSelfX()->wabase,                               \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                      MPU_RASR_ATTR_AP_NA_NA |                               \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                      MPU_RASR_ATTR_NON_CACHEABLE |                          \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                      MPU_RASR_SIZE_32 |                                     \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                      MPU_RASR_ENABLE);                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-related initialization code.
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_init(void) {
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Initializing priority grouping.*/
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   NVIC_SetPriorityGrouping(CORTEX_PRIGROUP_INIT);
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* DWT cycle counter enable, note, the M7 requires DWT unlocking.*/
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 122              		.loc 3 512 0
 123 0040 1149     		ldr	r1, .L4+20
 124              	.LBB151:
 125              	.LBB149:
1604:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   SCB->AIRCR =  reg_value;
 126              		.loc 2 1606 0
 127 0042 DA60     		str	r2, [r3, #12]
 128              	.LVL12:
 129              	.LBE149:
 130              	.LBE151:
 131              		.loc 3 512 0
 132 0044 CA68     		ldr	r2, [r1, #12]
 133 0046 42F08072 		orr	r2, r2, #16777216
 134 004a CA60     		str	r2, [r1, #12]
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_MODEL == 7
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   DWT->LAR = 0xC5ACCE55U;
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 135              		.loc 3 516 0
 136 004c 0F49     		ldr	r1, .L4+24
 137 004e 0A68     		ldr	r2, [r1]
 138 0050 42F00102 		orr	r2, r2, #1
 139 0054 0A60     		str	r2, [r1]
 140              	.LVL13:
 141              	.LBB152:
 142              	.LBB153:
1607:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1608:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1609:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1610:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1611:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Get Priority Grouping
1612:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1615:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1617:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1619:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1620:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1621:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1622:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Enable External Interrupt
1623:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1626:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1628:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1630:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1631:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1632:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1633:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Disable External Interrupt
1634:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1637:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1639:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1641:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1642:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1643:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1644:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Get Pending Interrupt
1645:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1650:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1652:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1654:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1655:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1656:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1657:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Set Pending Interrupt
1658:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1661:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1663:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1665:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1666:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1667:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1668:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1672:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1674:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1676:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1677:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1678:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1679:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Get Active Interrupt
1680:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \return             1  Interrupt status is active.
1684:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1685:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1687:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** }
1689:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1690:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** 
1691:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** /**
1692:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \brief   Set Interrupt Priority
1693:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****  */
1698:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h **** {
1700:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****   {
1702:./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
 143              		.loc 2 1702 0
 144 0056 1022     		movs	r2, #16
 145 0058 DA77     		strb	r2, [r3, #31]
 146              	.LVL14:
 147              	.LBE153:
 148              	.LBE152:
 149              	.LBB154:
 150              	.LBB155:
 151 005a 2022     		movs	r2, #32
 152 005c 83F82220 		strb	r2, [r3, #34]
 153              	.LVL15:
 154              	.LBE155:
 155              	.LBE154:
 156              	.LBE156:
 157              	.LBE157:
 158              	.LBB158:
 159              	.LBB159:
 160              	.LBB160:
 161              	.LBB161:
 162              		.file 4 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @version  V4.30
   5:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
   9:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    All rights reserved.
  10:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      specific prior written permission.
  20:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    *
  21:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  35:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  38:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #endif
  45:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  46:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  47:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   @{
  51:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  52:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  53:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  54:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  58:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  60:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  62:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  63:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  64:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  65:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  69:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  71:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  73:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  74:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  75:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  76:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Control Register value
  79:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  80:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  82:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
  83:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  84:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
  86:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  87:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  88:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  89:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  90:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  94:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  96:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  98:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  99:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 100:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 101:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 105:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 107:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 108:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 109:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 111:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 112:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 113:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 114:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 115:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               APSR Register value
 118:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 119:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 121:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 122:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 123:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 125:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 126:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 127:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 128:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 129:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 132:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 134:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 136:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 137:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 138:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 140:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 141:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 142:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 143:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 144:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               PSP Register value
 147:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 148:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 150:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 151:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 152:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 154:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 155:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 156:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 157:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 158:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 162:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 164:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 166:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 167:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 168:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 169:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               MSP Register value
 172:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 173:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 175:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 176:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 177:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 179:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 180:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 181:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 182:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 183:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 188:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 190:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 192:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 193:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 194:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 195:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 199:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 201:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 202:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 203:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 205:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 206:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 207:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 208:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 209:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 213:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 215:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 217:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 218:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 219:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 221:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 222:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 226:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 228:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 230:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 231:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 232:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 233:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 237:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 239:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 241:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 243:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 244:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 248:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 250:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 251:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 252:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 254:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 255:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 257:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 163              		.loc 4 264 0
 164 0060 0023     		movs	r3, #0
 165              		.syntax unified
 166              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 167 0062 83F31188 		MSR basepri, r3
 168              	@ 0 "" 2
 169              	.LVL16:
 170              		.thumb
 171              		.syntax unified
 172              	.LBE161:
 173              	.LBE160:
 174              	.LBB162:
 175              	.LBB163:
  60:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 176              		.loc 4 60 0
 177              		.syntax unified
 178              	@ 60 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 179 0066 62B6     		cpsie i
 180              	@ 0 "" 2
 181              		.thumb
 182              		.syntax unified
 183              	.LBE163:
 184              	.LBE162:
 185              	.LBE159:
 186              	.LBE158:
 187              	.LBB164:
 148:lib/chibios/os/rt/src/chsys.c **** 
 149:lib/chibios/os/rt/src/chsys.c ****   /* Port layer initialization last because it depend on some of the
 150:lib/chibios/os/rt/src/chsys.c ****      initializations performed before.*/
 151:lib/chibios/os/rt/src/chsys.c ****   port_init();
 152:lib/chibios/os/rt/src/chsys.c **** 
 153:lib/chibios/os/rt/src/chsys.c **** #if CH_DBG_STATISTICS == TRUE
 154:lib/chibios/os/rt/src/chsys.c ****   /* Starting measurement for this thread.*/
 155:lib/chibios/os/rt/src/chsys.c ****   chTMStartMeasurementX(&currp->stats);
 156:lib/chibios/os/rt/src/chsys.c **** #endif
 157:lib/chibios/os/rt/src/chsys.c **** 
 158:lib/chibios/os/rt/src/chsys.c ****   /* It is alive now.*/
 159:lib/chibios/os/rt/src/chsys.c ****   chSysEnable();
 160:lib/chibios/os/rt/src/chsys.c **** 
 161:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_NO_IDLE_THREAD == FALSE
 162:lib/chibios/os/rt/src/chsys.c ****   {
 163:lib/chibios/os/rt/src/chsys.c ****     static const thread_descriptor_t idle_descriptor = {
 164:lib/chibios/os/rt/src/chsys.c ****       "idle",
 165:lib/chibios/os/rt/src/chsys.c ****       THD_WORKING_AREA_BASE(ch_idle_thread_wa),
 166:lib/chibios/os/rt/src/chsys.c ****       THD_WORKING_AREA_END(ch_idle_thread_wa),
 167:lib/chibios/os/rt/src/chsys.c ****       IDLEPRIO,
 168:lib/chibios/os/rt/src/chsys.c ****       _idle_thread,
 169:lib/chibios/os/rt/src/chsys.c ****       NULL
 170:lib/chibios/os/rt/src/chsys.c ****     };
 171:lib/chibios/os/rt/src/chsys.c **** 
 172:lib/chibios/os/rt/src/chsys.c ****     /* This thread has the lowest priority in the system, its role is just to
 173:lib/chibios/os/rt/src/chsys.c ****        serve interrupts in its context while keeping the lowest energy saving
 174:lib/chibios/os/rt/src/chsys.c ****        mode compatible with the system status.*/
 175:lib/chibios/os/rt/src/chsys.c ****     (void) chThdCreate(&idle_descriptor);
 188              		.loc 1 175 0
 189 0068 0948     		ldr	r0, .L4+28
 190              	.LBE164:
 176:lib/chibios/os/rt/src/chsys.c ****   }
 177:lib/chibios/os/rt/src/chsys.c **** #endif
 178:lib/chibios/os/rt/src/chsys.c **** }
 191              		.loc 1 178 0
 192 006a BDE81040 		pop	{r4, lr}
 193              		.cfi_restore 14
 194              		.cfi_restore 4
 195              		.cfi_def_cfa_offset 0
 196              	.LBB165:
 175:lib/chibios/os/rt/src/chsys.c ****   }
 197              		.loc 1 175 0
 198 006e FFF7FEBF 		b	chThdCreate
 199              	.LVL17:
 200              	.L5:
 201 0072 00BF     		.align	2
 202              	.L4:
 203 0074 30000000 		.word	ch+48
 204 0078 00000000 		.word	ch_debug
 205 007c 00000000 		.word	__main_thread_stack_base__
 206 0080 00ED00E0 		.word	-536810240
 207 0084 0003FA05 		.word	100270848
 208 0088 F0ED00E0 		.word	-536810000
 209 008c 001000E0 		.word	-536866816
 210 0090 00000000 		.word	.LANCHOR0
 211              	.LBE165:
 212              		.cfi_endproc
 213              	.LFE249:
 215              		.section	.text.chSysHalt,"ax",%progbits
 216              		.align	1
 217              		.global	chSysHalt
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	chSysHalt:
 224              	.LFB250:
 179:lib/chibios/os/rt/src/chsys.c **** 
 180:lib/chibios/os/rt/src/chsys.c **** /**
 181:lib/chibios/os/rt/src/chsys.c ****  * @brief   Halts the system.
 182:lib/chibios/os/rt/src/chsys.c ****  * @details This function is invoked by the operating system when an
 183:lib/chibios/os/rt/src/chsys.c ****  *          unrecoverable error is detected, for example because a programming
 184:lib/chibios/os/rt/src/chsys.c ****  *          error in the application code that triggers an assertion while
 185:lib/chibios/os/rt/src/chsys.c ****  *          in debug mode.
 186:lib/chibios/os/rt/src/chsys.c ****  * @note    Can be invoked from any system state.
 187:lib/chibios/os/rt/src/chsys.c ****  *
 188:lib/chibios/os/rt/src/chsys.c ****  * @param[in] reason        pointer to an error string
 189:lib/chibios/os/rt/src/chsys.c ****  *
 190:lib/chibios/os/rt/src/chsys.c ****  * @special
 191:lib/chibios/os/rt/src/chsys.c ****  */
 192:lib/chibios/os/rt/src/chsys.c **** void chSysHalt(const char *reason) {
 225              		.loc 1 192 0
 226              		.cfi_startproc
 227              		@ Volatile: function does not return.
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231              	.LVL18:
 232              	.LBB166:
 233              	.LBB167:
 234              	.LBB168:
  71:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 235              		.loc 4 71 0
 236              		.syntax unified
 237              	@ 71 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 238 0000 72B6     		cpsid i
 239              	@ 0 "" 2
 240              		.thumb
 241              		.syntax unified
 242              	.LBE168:
 243              	.LBE167:
 244              	.LBE166:
 193:lib/chibios/os/rt/src/chsys.c **** 
 194:lib/chibios/os/rt/src/chsys.c ****   port_disable();
 195:lib/chibios/os/rt/src/chsys.c **** 
 196:lib/chibios/os/rt/src/chsys.c ****   /* Logging the event.*/
 197:lib/chibios/os/rt/src/chsys.c ****   _trace_halt(reason);
 198:lib/chibios/os/rt/src/chsys.c **** 
 199:lib/chibios/os/rt/src/chsys.c ****   /* Pointing to the passed message.*/
 200:lib/chibios/os/rt/src/chsys.c ****   ch.dbg.panic_msg = reason;
 245              		.loc 1 200 0
 246 0002 014B     		ldr	r3, .L8
 247 0004 D862     		str	r0, [r3, #44]
 248              	.L7:
 249 0006 FEE7     		b	.L7
 250              	.L9:
 251              		.align	2
 252              	.L8:
 253 0008 00000000 		.word	ch
 254              		.cfi_endproc
 255              	.LFE250:
 257              		.section	.text.chSysIntegrityCheckI,"ax",%progbits
 258              		.align	1
 259              		.global	chSysIntegrityCheckI
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	chSysIntegrityCheckI:
 266              	.LFB251:
 201:lib/chibios/os/rt/src/chsys.c **** 
 202:lib/chibios/os/rt/src/chsys.c ****   /* Halt hook code, usually empty.*/
 203:lib/chibios/os/rt/src/chsys.c ****   CH_CFG_SYSTEM_HALT_HOOK(reason);
 204:lib/chibios/os/rt/src/chsys.c **** 
 205:lib/chibios/os/rt/src/chsys.c ****   /* Harmless infinite loop.*/
 206:lib/chibios/os/rt/src/chsys.c ****   while (true) {
 207:lib/chibios/os/rt/src/chsys.c ****   }
 208:lib/chibios/os/rt/src/chsys.c **** }
 209:lib/chibios/os/rt/src/chsys.c **** 
 210:lib/chibios/os/rt/src/chsys.c **** /**
 211:lib/chibios/os/rt/src/chsys.c ****  * @brief   System integrity check.
 212:lib/chibios/os/rt/src/chsys.c ****  * @details Performs an integrity check of the important ChibiOS/RT data
 213:lib/chibios/os/rt/src/chsys.c ****  *          structures.
 214:lib/chibios/os/rt/src/chsys.c ****  * @note    The appropriate action in case of failure is to halt the system
 215:lib/chibios/os/rt/src/chsys.c ****  *          before releasing the critical zone.
 216:lib/chibios/os/rt/src/chsys.c ****  * @note    If the system is corrupted then one possible outcome of this
 217:lib/chibios/os/rt/src/chsys.c ****  *          function is an exception caused by @p NULL or corrupted pointers
 218:lib/chibios/os/rt/src/chsys.c ****  *          in list elements. Exception vectors must be monitored as well.
 219:lib/chibios/os/rt/src/chsys.c ****  * @note    This function is not used internally, it is up to the
 220:lib/chibios/os/rt/src/chsys.c ****  *          application to define if and where to perform system
 221:lib/chibios/os/rt/src/chsys.c ****  *          checking.
 222:lib/chibios/os/rt/src/chsys.c ****  * @note    Performing all tests at once can be a slow operation and can
 223:lib/chibios/os/rt/src/chsys.c ****  *          degrade the system response time. It is suggested to execute
 224:lib/chibios/os/rt/src/chsys.c ****  *          one test at time and release the critical zone in between tests.
 225:lib/chibios/os/rt/src/chsys.c ****  *
 226:lib/chibios/os/rt/src/chsys.c ****  * @param[in] testmask  Each bit in this mask is associated to a test to be
 227:lib/chibios/os/rt/src/chsys.c ****  *                      performed.
 228:lib/chibios/os/rt/src/chsys.c ****  * @return              The test result.
 229:lib/chibios/os/rt/src/chsys.c ****  * @retval false        The test succeeded.
 230:lib/chibios/os/rt/src/chsys.c ****  * @retval true         Test failed.
 231:lib/chibios/os/rt/src/chsys.c ****  *
 232:lib/chibios/os/rt/src/chsys.c ****  * @iclass
 233:lib/chibios/os/rt/src/chsys.c ****  */
 234:lib/chibios/os/rt/src/chsys.c **** bool chSysIntegrityCheckI(unsigned testmask) {
 267              		.loc 1 234 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              	.LVL19:
 235:lib/chibios/os/rt/src/chsys.c ****   cnt_t n;
 236:lib/chibios/os/rt/src/chsys.c **** 
 237:lib/chibios/os/rt/src/chsys.c ****   chDbgCheckClassI();
 238:lib/chibios/os/rt/src/chsys.c **** 
 239:lib/chibios/os/rt/src/chsys.c ****   /* Ready List integrity check.*/
 240:lib/chibios/os/rt/src/chsys.c ****   if ((testmask & CH_INTEGRITY_RLIST) != 0U) {
 272              		.loc 1 240 0
 273 0000 C207     		lsls	r2, r0, #31
 234:lib/chibios/os/rt/src/chsys.c ****   cnt_t n;
 274              		.loc 1 234 0
 275 0002 30B5     		push	{r4, r5, lr}
 276              		.cfi_def_cfa_offset 12
 277              		.cfi_offset 4, -12
 278              		.cfi_offset 5, -8
 279              		.cfi_offset 14, -4
 280              		.loc 1 240 0
 281 0004 08D5     		bpl	.L11
 282              	.LVL20:
 283              	.LBB169:
 241:lib/chibios/os/rt/src/chsys.c ****     thread_t *tp;
 242:lib/chibios/os/rt/src/chsys.c **** 
 243:lib/chibios/os/rt/src/chsys.c ****     /* Scanning the ready list forward.*/
 244:lib/chibios/os/rt/src/chsys.c ****     n = (cnt_t)0;
 245:lib/chibios/os/rt/src/chsys.c ****     tp = ch.rlist.queue.next;
 284              		.loc 1 245 0
 285 0006 1D4B     		ldr	r3, .L35
 286 0008 1968     		ldr	r1, [r3]
 287              	.LVL21:
 244:lib/chibios/os/rt/src/chsys.c ****     tp = ch.rlist.queue.next;
 288              		.loc 1 244 0
 289 000a 0022     		movs	r2, #0
 290              	.LVL22:
 291              	.L12:
 246:lib/chibios/os/rt/src/chsys.c ****     while (tp != (thread_t *)&ch.rlist.queue) {
 292              		.loc 1 246 0
 293 000c 9942     		cmp	r1, r3
 294 000e 20D1     		bne	.L13
 247:lib/chibios/os/rt/src/chsys.c ****       n++;
 248:lib/chibios/os/rt/src/chsys.c ****       tp = tp->queue.next;
 249:lib/chibios/os/rt/src/chsys.c ****     }
 250:lib/chibios/os/rt/src/chsys.c **** 
 251:lib/chibios/os/rt/src/chsys.c ****     /* Scanning the ready list backward.*/
 252:lib/chibios/os/rt/src/chsys.c ****     tp = ch.rlist.queue.prev;
 295              		.loc 1 252 0
 296 0010 5968     		ldr	r1, [r3, #4]
 297              	.LVL23:
 298              	.L14:
 253:lib/chibios/os/rt/src/chsys.c ****     while (tp != (thread_t *)&ch.rlist.queue) {
 299              		.loc 1 253 0
 300 0012 9942     		cmp	r1, r3
 301 0014 20D1     		bne	.L15
 254:lib/chibios/os/rt/src/chsys.c ****       n--;
 255:lib/chibios/os/rt/src/chsys.c ****       tp = tp->queue.prev;
 256:lib/chibios/os/rt/src/chsys.c ****     }
 257:lib/chibios/os/rt/src/chsys.c **** 
 258:lib/chibios/os/rt/src/chsys.c ****     /* The number of elements must match.*/
 259:lib/chibios/os/rt/src/chsys.c ****     if (n != (cnt_t)0) {
 302              		.loc 1 259 0
 303 0016 72BB     		cbnz	r2, .L27
 304              	.LVL24:
 305              	.L11:
 306              	.LBE169:
 260:lib/chibios/os/rt/src/chsys.c ****       return true;
 261:lib/chibios/os/rt/src/chsys.c ****     }
 262:lib/chibios/os/rt/src/chsys.c ****   }
 263:lib/chibios/os/rt/src/chsys.c **** 
 264:lib/chibios/os/rt/src/chsys.c ****   /* Timers list integrity check.*/
 265:lib/chibios/os/rt/src/chsys.c ****   if ((testmask & CH_INTEGRITY_VTLIST) != 0U) {
 307              		.loc 1 265 0
 308 0018 8307     		lsls	r3, r0, #30
 309 001a 0BD5     		bpl	.L17
 310              	.LVL25:
 311              	.LBB170:
 266:lib/chibios/os/rt/src/chsys.c ****     virtual_timer_t * vtp;
 267:lib/chibios/os/rt/src/chsys.c **** 
 268:lib/chibios/os/rt/src/chsys.c ****     /* Scanning the timers list forward.*/
 269:lib/chibios/os/rt/src/chsys.c ****     n = (cnt_t)0;
 270:lib/chibios/os/rt/src/chsys.c ****     vtp = ch.vtlist.next;
 312              		.loc 1 270 0
 313 001c 174A     		ldr	r2, .L35
 271:lib/chibios/os/rt/src/chsys.c ****     while (vtp != (virtual_timer_t *)&ch.vtlist) {
 314              		.loc 1 271 0
 315 001e 02F11C04 		add	r4, r2, #28
 270:lib/chibios/os/rt/src/chsys.c ****     while (vtp != (virtual_timer_t *)&ch.vtlist) {
 316              		.loc 1 270 0
 317 0022 D169     		ldr	r1, [r2, #28]
 318              	.LVL26:
 269:lib/chibios/os/rt/src/chsys.c ****     vtp = ch.vtlist.next;
 319              		.loc 1 269 0
 320 0024 0023     		movs	r3, #0
 321 0026 2546     		mov	r5, r4
 322              	.LVL27:
 323              	.L18:
 324              		.loc 1 271 0
 325 0028 A142     		cmp	r1, r4
 326 002a 18D1     		bne	.L19
 272:lib/chibios/os/rt/src/chsys.c ****       n++;
 273:lib/chibios/os/rt/src/chsys.c ****       vtp = vtp->next;
 274:lib/chibios/os/rt/src/chsys.c ****     }
 275:lib/chibios/os/rt/src/chsys.c **** 
 276:lib/chibios/os/rt/src/chsys.c ****     /* Scanning the timers list backward.*/
 277:lib/chibios/os/rt/src/chsys.c ****     vtp = ch.vtlist.prev;
 327              		.loc 1 277 0
 328 002c 126A     		ldr	r2, [r2, #32]
 329              	.LVL28:
 330              	.L20:
 278:lib/chibios/os/rt/src/chsys.c ****     while (vtp != (virtual_timer_t *)&ch.vtlist) {
 331              		.loc 1 278 0
 332 002e AA42     		cmp	r2, r5
 333 0030 18D1     		bne	.L21
 279:lib/chibios/os/rt/src/chsys.c ****       n--;
 280:lib/chibios/os/rt/src/chsys.c ****       vtp = vtp->prev;
 281:lib/chibios/os/rt/src/chsys.c ****     }
 282:lib/chibios/os/rt/src/chsys.c **** 
 283:lib/chibios/os/rt/src/chsys.c ****     /* The number of elements must match.*/
 284:lib/chibios/os/rt/src/chsys.c ****     if (n != (cnt_t)0) {
 334              		.loc 1 284 0
 335 0032 03BB     		cbnz	r3, .L27
 336              	.LVL29:
 337              	.L17:
 338              	.LBE170:
 285:lib/chibios/os/rt/src/chsys.c ****       return true;
 286:lib/chibios/os/rt/src/chsys.c ****     }
 287:lib/chibios/os/rt/src/chsys.c ****   }
 288:lib/chibios/os/rt/src/chsys.c **** 
 289:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_USE_REGISTRY == TRUE
 290:lib/chibios/os/rt/src/chsys.c ****   if ((testmask & CH_INTEGRITY_REGISTRY) != 0U) {
 339              		.loc 1 290 0
 340 0034 10F00400 		ands	r0, r0, #4
 341              	.LVL30:
 342 0038 0AD0     		beq	.L16
 343              	.LVL31:
 344              	.LBB171:
 291:lib/chibios/os/rt/src/chsys.c ****     thread_t *tp;
 292:lib/chibios/os/rt/src/chsys.c **** 
 293:lib/chibios/os/rt/src/chsys.c ****     /* Scanning the ready list forward.*/
 294:lib/chibios/os/rt/src/chsys.c ****     n = (cnt_t)0;
 295:lib/chibios/os/rt/src/chsys.c ****     tp = ch.rlist.newer;
 345              		.loc 1 295 0
 346 003a 104B     		ldr	r3, .L35
 347 003c 1A69     		ldr	r2, [r3, #16]
 348              	.LVL32:
 294:lib/chibios/os/rt/src/chsys.c ****     tp = ch.rlist.newer;
 349              		.loc 1 294 0
 350 003e 0020     		movs	r0, #0
 351              	.LVL33:
 352              	.L22:
 296:lib/chibios/os/rt/src/chsys.c ****     while (tp != (thread_t *)&ch.rlist) {
 353              		.loc 1 296 0
 354 0040 9A42     		cmp	r2, r3
 355 0042 12D1     		bne	.L23
 297:lib/chibios/os/rt/src/chsys.c ****       n++;
 298:lib/chibios/os/rt/src/chsys.c ****       tp = tp->newer;
 299:lib/chibios/os/rt/src/chsys.c ****     }
 300:lib/chibios/os/rt/src/chsys.c **** 
 301:lib/chibios/os/rt/src/chsys.c ****     /* Scanning the ready list backward.*/
 302:lib/chibios/os/rt/src/chsys.c ****     tp = ch.rlist.older;
 356              		.loc 1 302 0
 357 0044 5A69     		ldr	r2, [r3, #20]
 358              	.LVL34:
 359              	.L24:
 303:lib/chibios/os/rt/src/chsys.c ****     while (tp != (thread_t *)&ch.rlist) {
 360              		.loc 1 303 0
 361 0046 9A42     		cmp	r2, r3
 362 0048 12D1     		bne	.L25
 304:lib/chibios/os/rt/src/chsys.c ****       n--;
 305:lib/chibios/os/rt/src/chsys.c ****       tp = tp->older;
 306:lib/chibios/os/rt/src/chsys.c ****     }
 307:lib/chibios/os/rt/src/chsys.c **** 
 308:lib/chibios/os/rt/src/chsys.c ****     /* The number of elements must match.*/
 309:lib/chibios/os/rt/src/chsys.c ****     if (n != (cnt_t)0) {
 363              		.loc 1 309 0
 364 004a 0030     		adds	r0, r0, #0
 365 004c 18BF     		it	ne
 366 004e 0120     		movne	r0, #1
 367              	.LVL35:
 368              	.L16:
 369              	.LBE171:
 310:lib/chibios/os/rt/src/chsys.c ****       return true;
 311:lib/chibios/os/rt/src/chsys.c ****     }
 312:lib/chibios/os/rt/src/chsys.c ****   }
 313:lib/chibios/os/rt/src/chsys.c **** #endif /* CH_CFG_USE_REGISTRY == TRUE */
 314:lib/chibios/os/rt/src/chsys.c **** 
 315:lib/chibios/os/rt/src/chsys.c **** #if defined(PORT_INTEGRITY_CHECK)
 316:lib/chibios/os/rt/src/chsys.c ****   if ((testmask & CH_INTEGRITY_PORT) != 0U) {
 317:lib/chibios/os/rt/src/chsys.c ****     PORT_INTEGRITY_CHECK();
 318:lib/chibios/os/rt/src/chsys.c ****   }
 319:lib/chibios/os/rt/src/chsys.c **** #endif
 320:lib/chibios/os/rt/src/chsys.c **** 
 321:lib/chibios/os/rt/src/chsys.c ****   return false;
 322:lib/chibios/os/rt/src/chsys.c **** }
 370              		.loc 1 322 0
 371 0050 30BD     		pop	{r4, r5, pc}
 372              	.LVL36:
 373              	.L13:
 374              	.LBB172:
 247:lib/chibios/os/rt/src/chsys.c ****       tp = tp->queue.next;
 375              		.loc 1 247 0
 376 0052 0132     		adds	r2, r2, #1
 377              	.LVL37:
 248:lib/chibios/os/rt/src/chsys.c ****     }
 378              		.loc 1 248 0
 379 0054 0968     		ldr	r1, [r1]
 380              	.LVL38:
 381 0056 D9E7     		b	.L12
 382              	.L15:
 254:lib/chibios/os/rt/src/chsys.c ****       tp = tp->queue.prev;
 383              		.loc 1 254 0
 384 0058 013A     		subs	r2, r2, #1
 385              	.LVL39:
 255:lib/chibios/os/rt/src/chsys.c ****     }
 386              		.loc 1 255 0
 387 005a 4968     		ldr	r1, [r1, #4]
 388              	.LVL40:
 389 005c D9E7     		b	.L14
 390              	.LVL41:
 391              	.L19:
 392              	.LBE172:
 393              	.LBB173:
 272:lib/chibios/os/rt/src/chsys.c ****       vtp = vtp->next;
 394              		.loc 1 272 0
 395 005e 0133     		adds	r3, r3, #1
 396              	.LVL42:
 273:lib/chibios/os/rt/src/chsys.c ****     }
 397              		.loc 1 273 0
 398 0060 0968     		ldr	r1, [r1]
 399              	.LVL43:
 400 0062 E1E7     		b	.L18
 401              	.LVL44:
 402              	.L21:
 279:lib/chibios/os/rt/src/chsys.c ****       vtp = vtp->prev;
 403              		.loc 1 279 0
 404 0064 013B     		subs	r3, r3, #1
 405              	.LVL45:
 280:lib/chibios/os/rt/src/chsys.c ****     }
 406              		.loc 1 280 0
 407 0066 5268     		ldr	r2, [r2, #4]
 408              	.LVL46:
 409 0068 E1E7     		b	.L20
 410              	.LVL47:
 411              	.L23:
 412              	.LBE173:
 413              	.LBB174:
 297:lib/chibios/os/rt/src/chsys.c ****       tp = tp->newer;
 414              		.loc 1 297 0
 415 006a 0130     		adds	r0, r0, #1
 416              	.LVL48:
 298:lib/chibios/os/rt/src/chsys.c ****     }
 417              		.loc 1 298 0
 418 006c 1269     		ldr	r2, [r2, #16]
 419              	.LVL49:
 420 006e E7E7     		b	.L22
 421              	.L25:
 304:lib/chibios/os/rt/src/chsys.c ****       tp = tp->older;
 422              		.loc 1 304 0
 423 0070 0138     		subs	r0, r0, #1
 424              	.LVL50:
 305:lib/chibios/os/rt/src/chsys.c ****     }
 425              		.loc 1 305 0
 426 0072 5269     		ldr	r2, [r2, #20]
 427              	.LVL51:
 428 0074 E7E7     		b	.L24
 429              	.LVL52:
 430              	.L27:
 431              	.LBE174:
 432              	.LBB175:
 260:lib/chibios/os/rt/src/chsys.c ****     }
 433              		.loc 1 260 0
 434 0076 0120     		movs	r0, #1
 435              	.LVL53:
 436 0078 EAE7     		b	.L16
 437              	.L36:
 438 007a 00BF     		.align	2
 439              	.L35:
 440 007c 00000000 		.word	ch
 441              	.LBE175:
 442              		.cfi_endproc
 443              	.LFE251:
 445              		.section	.text.chSysTimerHandlerI,"ax",%progbits
 446              		.align	1
 447              		.global	chSysTimerHandlerI
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu softvfp
 453              	chSysTimerHandlerI:
 454              	.LFB252:
 323:lib/chibios/os/rt/src/chsys.c **** 
 324:lib/chibios/os/rt/src/chsys.c **** /**
 325:lib/chibios/os/rt/src/chsys.c ****  * @brief   Handles time ticks for round robin preemption and timer increments.
 326:lib/chibios/os/rt/src/chsys.c ****  * @details Decrements the remaining time quantum of the running thread
 327:lib/chibios/os/rt/src/chsys.c ****  *          and preempts it when the quantum is used up. Increments system
 328:lib/chibios/os/rt/src/chsys.c ****  *          time and manages the timers.
 329:lib/chibios/os/rt/src/chsys.c ****  * @note    The frequency of the timer determines the system tick granularity
 330:lib/chibios/os/rt/src/chsys.c ****  *          and, together with the @p CH_CFG_TIME_QUANTUM macro, the round robin
 331:lib/chibios/os/rt/src/chsys.c ****  *          interval.
 332:lib/chibios/os/rt/src/chsys.c ****  *
 333:lib/chibios/os/rt/src/chsys.c ****  * @iclass
 334:lib/chibios/os/rt/src/chsys.c ****  */
 335:lib/chibios/os/rt/src/chsys.c **** void chSysTimerHandlerI(void) {
 455              		.loc 1 335 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 460              		.cfi_def_cfa_offset 32
 461              		.cfi_offset 3, -32
 462              		.cfi_offset 4, -28
 463              		.cfi_offset 5, -24
 464              		.cfi_offset 6, -20
 465              		.cfi_offset 7, -16
 466              		.cfi_offset 8, -12
 467              		.cfi_offset 9, -8
 468              		.cfi_offset 14, -4
 469              	.LBB201:
 470              	.LBB202:
 471              		.file 5 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /**
  36:./lib/chibios/os/rt/include/chvt.h ****  * @name    Special time constants
  37:./lib/chibios/os/rt/include/chvt.h ****  * @{
  38:./lib/chibios/os/rt/include/chvt.h ****  */
  39:./lib/chibios/os/rt/include/chvt.h **** /**
  40:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Zero time specification for some functions with a timeout
  41:./lib/chibios/os/rt/include/chvt.h ****  *          specification.
  42:./lib/chibios/os/rt/include/chvt.h ****  * @note    Not all functions accept @p TIME_IMMEDIATE as timeout parameter,
  43:./lib/chibios/os/rt/include/chvt.h ****  *          see the specific function documentation.
  44:./lib/chibios/os/rt/include/chvt.h ****  */
  45:./lib/chibios/os/rt/include/chvt.h **** #define TIME_IMMEDIATE  ((systime_t)0)
  46:./lib/chibios/os/rt/include/chvt.h **** 
  47:./lib/chibios/os/rt/include/chvt.h **** /**
  48:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Infinite time specification for all functions with a timeout
  49:./lib/chibios/os/rt/include/chvt.h ****  *          specification.
  50:./lib/chibios/os/rt/include/chvt.h ****  * @note    Not all functions accept @p TIME_INFINITE as timeout parameter,
  51:./lib/chibios/os/rt/include/chvt.h ****  *          see the specific function documentation.
  52:./lib/chibios/os/rt/include/chvt.h ****  */
  53:./lib/chibios/os/rt/include/chvt.h **** #define TIME_INFINITE   ((systime_t)-1)
  54:./lib/chibios/os/rt/include/chvt.h **** 
  55:./lib/chibios/os/rt/include/chvt.h **** /**
  56:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Maximum time constant.
  57:./lib/chibios/os/rt/include/chvt.h ****  */
  58:./lib/chibios/os/rt/include/chvt.h **** #define TIME_MAXIMUM    ((systime_t)-2)
  59:./lib/chibios/os/rt/include/chvt.h **** /** @} */
  60:./lib/chibios/os/rt/include/chvt.h **** 
  61:./lib/chibios/os/rt/include/chvt.h **** /**
  62:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Maximum unsigned integer.
  63:./lib/chibios/os/rt/include/chvt.h ****  */
  64:./lib/chibios/os/rt/include/chvt.h **** #define __UINT_MAX      ((unsigned int)-1)
  65:./lib/chibios/os/rt/include/chvt.h **** 
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  68:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  69:./lib/chibios/os/rt/include/chvt.h **** 
  70:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  71:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  72:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  73:./lib/chibios/os/rt/include/chvt.h **** 
  74:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_RESOLUTION != 16) && (CH_CFG_ST_RESOLUTION != 32)
  75:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_RESOLUTION specified, must be 16 or 32"
  76:./lib/chibios/os/rt/include/chvt.h **** #endif
  77:./lib/chibios/os/rt/include/chvt.h **** 
  78:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_FREQUENCY <= 0
  79:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_FREQUENCY specified, must be greater than zero"
  80:./lib/chibios/os/rt/include/chvt.h **** #endif
  81:./lib/chibios/os/rt/include/chvt.h **** 
  82:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  83:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  84:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  85:./lib/chibios/os/rt/include/chvt.h **** #endif
  86:./lib/chibios/os/rt/include/chvt.h **** 
  87:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  88:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  89:./lib/chibios/os/rt/include/chvt.h **** #endif
  90:./lib/chibios/os/rt/include/chvt.h **** 
  91:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  92:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  93:./lib/chibios/os/rt/include/chvt.h **** #endif
  94:./lib/chibios/os/rt/include/chvt.h **** 
  95:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  96:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  97:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  98:./lib/chibios/os/rt/include/chvt.h **** 
  99:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
 100:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
 101:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
 102:./lib/chibios/os/rt/include/chvt.h **** 
 103:./lib/chibios/os/rt/include/chvt.h **** /**
 104:./lib/chibios/os/rt/include/chvt.h ****  * @name    Fast time conversion utilities
 105:./lib/chibios/os/rt/include/chvt.h ****  * @{
 106:./lib/chibios/os/rt/include/chvt.h ****  */
 107:./lib/chibios/os/rt/include/chvt.h **** /**
 108:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Seconds to system ticks.
 109:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from seconds to system ticks number.
 110:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded upward to the next tick boundary.
 111:./lib/chibios/os/rt/include/chvt.h ****  * @note    Use of this macro for large values is not secure because
 112:./lib/chibios/os/rt/include/chvt.h ****  *          integer overflows, make sure your value can be correctly
 113:./lib/chibios/os/rt/include/chvt.h ****  *          converted.
 114:./lib/chibios/os/rt/include/chvt.h ****  *
 115:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] sec       number of seconds
 116:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of ticks.
 117:./lib/chibios/os/rt/include/chvt.h ****  *
 118:./lib/chibios/os/rt/include/chvt.h ****  * @api
 119:./lib/chibios/os/rt/include/chvt.h ****  */
 120:./lib/chibios/os/rt/include/chvt.h **** #define S2ST(sec)                                                           \
 121:./lib/chibios/os/rt/include/chvt.h ****   ((systime_t)((uint32_t)(sec) * (uint32_t)CH_CFG_ST_FREQUENCY))
 122:./lib/chibios/os/rt/include/chvt.h **** 
 123:./lib/chibios/os/rt/include/chvt.h **** /**
 124:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Milliseconds to system ticks.
 125:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from milliseconds to system ticks number.
 126:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded upward to the next tick boundary.
 127:./lib/chibios/os/rt/include/chvt.h ****  * @note    Use of this macro for large values is not secure because
 128:./lib/chibios/os/rt/include/chvt.h ****  *          integer overflows, make sure your value can be correctly
 129:./lib/chibios/os/rt/include/chvt.h ****  *          converted.
 130:./lib/chibios/os/rt/include/chvt.h ****  *
 131:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] msec      number of milliseconds
 132:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of ticks.
 133:./lib/chibios/os/rt/include/chvt.h ****  *
 134:./lib/chibios/os/rt/include/chvt.h ****  * @api
 135:./lib/chibios/os/rt/include/chvt.h ****  */
 136:./lib/chibios/os/rt/include/chvt.h **** #define MS2ST(msec)                                                         \
 137:./lib/chibios/os/rt/include/chvt.h ****   ((systime_t)(((((uint32_t)(msec)) *                                       \
 138:./lib/chibios/os/rt/include/chvt.h ****                  ((uint32_t)CH_CFG_ST_FREQUENCY)) + 999UL) / 1000UL))
 139:./lib/chibios/os/rt/include/chvt.h **** 
 140:./lib/chibios/os/rt/include/chvt.h **** /**
 141:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Microseconds to system ticks.
 142:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from microseconds to system ticks number.
 143:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded upward to the next tick boundary.
 144:./lib/chibios/os/rt/include/chvt.h ****  * @note    Use of this macro for large values is not secure because
 145:./lib/chibios/os/rt/include/chvt.h ****  *          integer overflows, make sure your value can be correctly
 146:./lib/chibios/os/rt/include/chvt.h ****  *          converted.
 147:./lib/chibios/os/rt/include/chvt.h ****  *
 148:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] usec      number of microseconds
 149:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of ticks.
 150:./lib/chibios/os/rt/include/chvt.h ****  *
 151:./lib/chibios/os/rt/include/chvt.h ****  * @api
 152:./lib/chibios/os/rt/include/chvt.h ****  */
 153:./lib/chibios/os/rt/include/chvt.h **** #define US2ST(usec)                                                         \
 154:./lib/chibios/os/rt/include/chvt.h ****   ((systime_t)(((((uint32_t)(usec)) *                                       \
 155:./lib/chibios/os/rt/include/chvt.h ****                  ((uint32_t)CH_CFG_ST_FREQUENCY)) + 999999UL) / 1000000UL))
 156:./lib/chibios/os/rt/include/chvt.h **** 
 157:./lib/chibios/os/rt/include/chvt.h **** /**
 158:./lib/chibios/os/rt/include/chvt.h ****  * @brief   System ticks to seconds.
 159:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from system ticks number to seconds.
 160:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded up to the next second boundary.
 161:./lib/chibios/os/rt/include/chvt.h ****  * @note    Use of this macro for large values is not secure because
 162:./lib/chibios/os/rt/include/chvt.h ****  *          integer overflows, make sure your value can be correctly
 163:./lib/chibios/os/rt/include/chvt.h ****  *          converted.
 164:./lib/chibios/os/rt/include/chvt.h ****  *
 165:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] n         number of system ticks
 166:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of seconds.
 167:./lib/chibios/os/rt/include/chvt.h ****  *
 168:./lib/chibios/os/rt/include/chvt.h ****  * @api
 169:./lib/chibios/os/rt/include/chvt.h ****  */
 170:./lib/chibios/os/rt/include/chvt.h **** #define ST2S(n) (((n) + CH_CFG_ST_FREQUENCY - 1UL) / CH_CFG_ST_FREQUENCY)
 171:./lib/chibios/os/rt/include/chvt.h **** 
 172:./lib/chibios/os/rt/include/chvt.h **** /**
 173:./lib/chibios/os/rt/include/chvt.h ****  * @brief   System ticks to milliseconds.
 174:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from system ticks number to milliseconds.
 175:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded up to the next millisecond boundary.
 176:./lib/chibios/os/rt/include/chvt.h ****  * @note    Use of this macro for large values is not secure because
 177:./lib/chibios/os/rt/include/chvt.h ****  *          integer overflows, make sure your value can be correctly
 178:./lib/chibios/os/rt/include/chvt.h ****  *          converted.
 179:./lib/chibios/os/rt/include/chvt.h ****  *
 180:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] n         number of system ticks
 181:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of milliseconds.
 182:./lib/chibios/os/rt/include/chvt.h ****  *
 183:./lib/chibios/os/rt/include/chvt.h ****  * @api
 184:./lib/chibios/os/rt/include/chvt.h ****  */
 185:./lib/chibios/os/rt/include/chvt.h **** #define ST2MS(n) (((n) * 1000UL + CH_CFG_ST_FREQUENCY - 1UL) /              \
 186:./lib/chibios/os/rt/include/chvt.h ****                   CH_CFG_ST_FREQUENCY)
 187:./lib/chibios/os/rt/include/chvt.h **** 
 188:./lib/chibios/os/rt/include/chvt.h **** /**
 189:./lib/chibios/os/rt/include/chvt.h ****  * @brief   System ticks to microseconds.
 190:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from system ticks number to microseconds.
 191:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded up to the next microsecond boundary.
 192:./lib/chibios/os/rt/include/chvt.h ****  * @note    Use of this macro for large values is not secure because
 193:./lib/chibios/os/rt/include/chvt.h ****  *          integer overflows, make sure your value can be correctly
 194:./lib/chibios/os/rt/include/chvt.h ****  *          converted.
 195:./lib/chibios/os/rt/include/chvt.h ****  *
 196:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] n         number of system ticks
 197:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of microseconds.
 198:./lib/chibios/os/rt/include/chvt.h ****  *
 199:./lib/chibios/os/rt/include/chvt.h ****  * @api
 200:./lib/chibios/os/rt/include/chvt.h ****  */
 201:./lib/chibios/os/rt/include/chvt.h **** #define ST2US(n) (((n) * 1000000UL + CH_CFG_ST_FREQUENCY - 1UL) /           \
 202:./lib/chibios/os/rt/include/chvt.h ****                   CH_CFG_ST_FREQUENCY)
 203:./lib/chibios/os/rt/include/chvt.h **** /** @} */
 204:./lib/chibios/os/rt/include/chvt.h **** 
 205:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
 206:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
 207:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
 208:./lib/chibios/os/rt/include/chvt.h **** 
 209:./lib/chibios/os/rt/include/chvt.h **** /*
 210:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
 211:./lib/chibios/os/rt/include/chvt.h ****  */
 212:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
 213:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
 214:./lib/chibios/os/rt/include/chvt.h **** #endif
 215:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
 216:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, systime_t delay,
 217:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
 218:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
 219:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
 220:./lib/chibios/os/rt/include/chvt.h **** }
 221:./lib/chibios/os/rt/include/chvt.h **** #endif
 222:./lib/chibios/os/rt/include/chvt.h **** 
 223:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
 224:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
 225:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
 226:./lib/chibios/os/rt/include/chvt.h **** 
 227:./lib/chibios/os/rt/include/chvt.h **** /**
 228:./lib/chibios/os/rt/include/chvt.h ****  * @name    Secure time conversion utilities
 229:./lib/chibios/os/rt/include/chvt.h ****  * @{
 230:./lib/chibios/os/rt/include/chvt.h ****  */
 231:./lib/chibios/os/rt/include/chvt.h **** /**
 232:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Seconds to system ticks.
 233:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from seconds to system ticks number.
 234:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded upward to the next tick boundary.
 235:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function uses a 64 bits internal representation,
 236:./lib/chibios/os/rt/include/chvt.h ****  *          use with non-constant parameters can lead to inefficient
 237:./lib/chibios/os/rt/include/chvt.h ****  *          code because 64 bits arithmetic would be used at runtime.
 238:./lib/chibios/os/rt/include/chvt.h ****  *
 239:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] sec       number of seconds
 240:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of ticks.
 241:./lib/chibios/os/rt/include/chvt.h ****  *
 242:./lib/chibios/os/rt/include/chvt.h ****  * @api
 243:./lib/chibios/os/rt/include/chvt.h ****  */
 244:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t LL_S2ST(unsigned int sec) {
 245:./lib/chibios/os/rt/include/chvt.h ****   uint64_t ticks = (uint64_t)sec * (uint64_t)CH_CFG_ST_FREQUENCY;
 246:./lib/chibios/os/rt/include/chvt.h **** 
 247:./lib/chibios/os/rt/include/chvt.h ****   chDbgAssert(ticks <= (uint64_t)TIME_MAXIMUM, "conversion overflow");
 248:./lib/chibios/os/rt/include/chvt.h **** 
 249:./lib/chibios/os/rt/include/chvt.h ****   return (systime_t)ticks;
 250:./lib/chibios/os/rt/include/chvt.h **** }
 251:./lib/chibios/os/rt/include/chvt.h **** 
 252:./lib/chibios/os/rt/include/chvt.h **** /**
 253:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Milliseconds to system ticks.
 254:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from milliseconds to system ticks number.
 255:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded upward to the next tick boundary.
 256:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function uses a 64 bits internal representation,
 257:./lib/chibios/os/rt/include/chvt.h ****  *          use with non-constant parameters can lead to inefficient
 258:./lib/chibios/os/rt/include/chvt.h ****  *          code because 64 bits arithmetic would be used at runtime.
 259:./lib/chibios/os/rt/include/chvt.h ****  *
 260:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] msec      number of milliseconds
 261:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of ticks.
 262:./lib/chibios/os/rt/include/chvt.h ****  *
 263:./lib/chibios/os/rt/include/chvt.h ****  * @api
 264:./lib/chibios/os/rt/include/chvt.h ****  */
 265:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t LL_MS2ST(unsigned int msec) {
 266:./lib/chibios/os/rt/include/chvt.h ****   uint64_t ticks = (((uint64_t)msec * (uint64_t)CH_CFG_ST_FREQUENCY) + 999ULL)
 267:./lib/chibios/os/rt/include/chvt.h ****                    / 1000ULL;
 268:./lib/chibios/os/rt/include/chvt.h **** 
 269:./lib/chibios/os/rt/include/chvt.h ****   chDbgAssert(ticks <= (uint64_t)TIME_MAXIMUM, "conversion overflow");
 270:./lib/chibios/os/rt/include/chvt.h **** 
 271:./lib/chibios/os/rt/include/chvt.h ****   return (systime_t)ticks;
 272:./lib/chibios/os/rt/include/chvt.h **** }
 273:./lib/chibios/os/rt/include/chvt.h **** 
 274:./lib/chibios/os/rt/include/chvt.h **** /**
 275:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Microseconds to system ticks.
 276:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from microseconds to system ticks number.
 277:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded upward to the next tick boundary.
 278:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function uses a 64 bits internal representation,
 279:./lib/chibios/os/rt/include/chvt.h ****  *          use with non-constant parameters can lead to inefficient
 280:./lib/chibios/os/rt/include/chvt.h ****  *          code because 64 bits arithmetic would be used at runtime.
 281:./lib/chibios/os/rt/include/chvt.h ****  *
 282:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] usec      number of microseconds
 283:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of ticks.
 284:./lib/chibios/os/rt/include/chvt.h ****  *
 285:./lib/chibios/os/rt/include/chvt.h ****  * @api
 286:./lib/chibios/os/rt/include/chvt.h ****  */
 287:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t LL_US2ST(unsigned int usec) {
 288:./lib/chibios/os/rt/include/chvt.h ****   uint64_t ticks = (((uint64_t)usec * (uint64_t)CH_CFG_ST_FREQUENCY) + 999999ULL)
 289:./lib/chibios/os/rt/include/chvt.h ****                    / 1000000ULL;
 290:./lib/chibios/os/rt/include/chvt.h **** 
 291:./lib/chibios/os/rt/include/chvt.h ****   chDbgAssert(ticks <= (uint64_t)TIME_MAXIMUM, "conversion overflow");
 292:./lib/chibios/os/rt/include/chvt.h **** 
 293:./lib/chibios/os/rt/include/chvt.h ****   return (systime_t)ticks;
 294:./lib/chibios/os/rt/include/chvt.h **** }
 295:./lib/chibios/os/rt/include/chvt.h **** 
 296:./lib/chibios/os/rt/include/chvt.h **** /**
 297:./lib/chibios/os/rt/include/chvt.h ****  * @brief   System ticks to seconds.
 298:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from system ticks number to seconds.
 299:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded up to the next second boundary.
 300:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function uses a 64 bits internal representation,
 301:./lib/chibios/os/rt/include/chvt.h ****  *          use with non-constant parameters can lead to inefficient
 302:./lib/chibios/os/rt/include/chvt.h ****  *          code because 64 bits arithmetic would be used at runtime.
 303:./lib/chibios/os/rt/include/chvt.h ****  *
 304:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] n         number of system ticks
 305:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of seconds.
 306:./lib/chibios/os/rt/include/chvt.h ****  *
 307:./lib/chibios/os/rt/include/chvt.h ****  * @api
 308:./lib/chibios/os/rt/include/chvt.h ****  */
 309:./lib/chibios/os/rt/include/chvt.h **** static inline unsigned int LL_ST2S(systime_t n) {
 310:./lib/chibios/os/rt/include/chvt.h ****   uint64_t sec = ((uint64_t)n + (uint64_t)CH_CFG_ST_FREQUENCY - 1ULL)
 311:./lib/chibios/os/rt/include/chvt.h ****                  / (uint64_t)CH_CFG_ST_FREQUENCY;
 312:./lib/chibios/os/rt/include/chvt.h **** 
 313:./lib/chibios/os/rt/include/chvt.h ****   chDbgAssert(sec < (uint64_t)__UINT_MAX, "conversion overflow");
 314:./lib/chibios/os/rt/include/chvt.h **** 
 315:./lib/chibios/os/rt/include/chvt.h ****   return (unsigned int)sec;
 316:./lib/chibios/os/rt/include/chvt.h **** }
 317:./lib/chibios/os/rt/include/chvt.h **** 
 318:./lib/chibios/os/rt/include/chvt.h **** /**
 319:./lib/chibios/os/rt/include/chvt.h ****  * @brief   System ticks to milliseconds.
 320:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from system ticks number to milliseconds.
 321:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded up to the next millisecond boundary.
 322:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function uses a 64 bits internal representation,
 323:./lib/chibios/os/rt/include/chvt.h ****  *          use with non-constant parameters can lead to inefficient
 324:./lib/chibios/os/rt/include/chvt.h ****  *          code because 64 bits arithmetic would be used at runtime.
 325:./lib/chibios/os/rt/include/chvt.h ****  *
 326:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] n         number of system ticks
 327:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of milliseconds.
 328:./lib/chibios/os/rt/include/chvt.h ****  *
 329:./lib/chibios/os/rt/include/chvt.h ****  * @api
 330:./lib/chibios/os/rt/include/chvt.h ****  */
 331:./lib/chibios/os/rt/include/chvt.h **** static inline unsigned int LL_ST2MS(systime_t n) {
 332:./lib/chibios/os/rt/include/chvt.h ****   uint64_t msec = (((uint64_t)n * 1000ULL) + (uint64_t)CH_CFG_ST_FREQUENCY - 1ULL)
 333:./lib/chibios/os/rt/include/chvt.h ****                    / (uint64_t)CH_CFG_ST_FREQUENCY;
 334:./lib/chibios/os/rt/include/chvt.h **** 
 335:./lib/chibios/os/rt/include/chvt.h ****   chDbgAssert(msec < (uint64_t)__UINT_MAX, "conversion overflow");
 336:./lib/chibios/os/rt/include/chvt.h **** 
 337:./lib/chibios/os/rt/include/chvt.h ****   return (unsigned int)msec;
 338:./lib/chibios/os/rt/include/chvt.h **** }
 339:./lib/chibios/os/rt/include/chvt.h **** 
 340:./lib/chibios/os/rt/include/chvt.h **** /**
 341:./lib/chibios/os/rt/include/chvt.h ****  * @brief   System ticks to microseconds.
 342:./lib/chibios/os/rt/include/chvt.h ****  * @details Converts from system ticks number to microseconds.
 343:./lib/chibios/os/rt/include/chvt.h ****  * @note    The result is rounded up to the next microsecond boundary.
 344:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function uses a 64 bits internal representation,
 345:./lib/chibios/os/rt/include/chvt.h ****  *          use with non-constant parameters can lead to inefficient
 346:./lib/chibios/os/rt/include/chvt.h ****  *          code because 64 bits arithmetic would be used at runtime.
 347:./lib/chibios/os/rt/include/chvt.h ****  *
 348:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] n         number of system ticks
 349:./lib/chibios/os/rt/include/chvt.h ****  * @return              The number of microseconds.
 350:./lib/chibios/os/rt/include/chvt.h ****  *
 351:./lib/chibios/os/rt/include/chvt.h ****  * @api
 352:./lib/chibios/os/rt/include/chvt.h ****  */
 353:./lib/chibios/os/rt/include/chvt.h **** static inline unsigned int LL_ST2US(systime_t n) {
 354:./lib/chibios/os/rt/include/chvt.h ****   uint64_t usec = (((uint64_t)n * 1000000ULL) + (uint64_t)CH_CFG_ST_FREQUENCY - 1ULL)
 355:./lib/chibios/os/rt/include/chvt.h ****                    / (uint64_t)CH_CFG_ST_FREQUENCY;
 356:./lib/chibios/os/rt/include/chvt.h **** 
 357:./lib/chibios/os/rt/include/chvt.h ****   chDbgAssert(usec < (uint64_t)__UINT_MAX, "conversion overflow");
 358:./lib/chibios/os/rt/include/chvt.h **** 
 359:./lib/chibios/os/rt/include/chvt.h ****   return (unsigned int)usec;
 360:./lib/chibios/os/rt/include/chvt.h **** }
 361:./lib/chibios/os/rt/include/chvt.h **** /** @} */
 362:./lib/chibios/os/rt/include/chvt.h **** 
 363:./lib/chibios/os/rt/include/chvt.h **** /**
 364:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
 365:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
 366:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
 367:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
 368:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
 369:./lib/chibios/os/rt/include/chvt.h ****  *
 370:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
 371:./lib/chibios/os/rt/include/chvt.h ****  *
 372:./lib/chibios/os/rt/include/chvt.h ****  * @init
 373:./lib/chibios/os/rt/include/chvt.h ****  */
 374:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
 375:./lib/chibios/os/rt/include/chvt.h **** 
 376:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 377:./lib/chibios/os/rt/include/chvt.h **** }
 378:./lib/chibios/os/rt/include/chvt.h **** 
 379:./lib/chibios/os/rt/include/chvt.h **** /**
 380:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 381:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 382:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 383:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 384:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 385:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 386:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 387:./lib/chibios/os/rt/include/chvt.h ****  *
 388:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 389:./lib/chibios/os/rt/include/chvt.h ****  *
 390:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 391:./lib/chibios/os/rt/include/chvt.h ****  */
 392:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 393:./lib/chibios/os/rt/include/chvt.h **** 
 394:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 395:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 396:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 397:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 398:./lib/chibios/os/rt/include/chvt.h **** #endif /* CH_CFG_ST_TIMEDELTA > 0 */
 399:./lib/chibios/os/rt/include/chvt.h **** }
 400:./lib/chibios/os/rt/include/chvt.h **** 
 401:./lib/chibios/os/rt/include/chvt.h **** /**
 402:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 403:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 404:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 405:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 406:./lib/chibios/os/rt/include/chvt.h ****  *
 407:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 408:./lib/chibios/os/rt/include/chvt.h ****  *
 409:./lib/chibios/os/rt/include/chvt.h ****  * @api
 410:./lib/chibios/os/rt/include/chvt.h ****  */
 411:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTime(void) {
 412:./lib/chibios/os/rt/include/chvt.h ****   systime_t systime;
 413:./lib/chibios/os/rt/include/chvt.h **** 
 414:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 415:./lib/chibios/os/rt/include/chvt.h ****   systime = chVTGetSystemTimeX();
 416:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 417:./lib/chibios/os/rt/include/chvt.h **** 
 418:./lib/chibios/os/rt/include/chvt.h ****   return systime;
 419:./lib/chibios/os/rt/include/chvt.h **** }
 420:./lib/chibios/os/rt/include/chvt.h **** 
 421:./lib/chibios/os/rt/include/chvt.h **** /**
 422:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the elapsed time since the specified start time.
 423:./lib/chibios/os/rt/include/chvt.h ****  *
 424:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     start time
 425:./lib/chibios/os/rt/include/chvt.h ****  * @return              The elapsed time.
 426:./lib/chibios/os/rt/include/chvt.h ****  *
 427:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 428:./lib/chibios/os/rt/include/chvt.h ****  */
 429:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTTimeElapsedSinceX(systime_t start) {
 430:./lib/chibios/os/rt/include/chvt.h **** 
 431:./lib/chibios/os/rt/include/chvt.h ****   return chVTGetSystemTimeX() - start;
 432:./lib/chibios/os/rt/include/chvt.h **** }
 433:./lib/chibios/os/rt/include/chvt.h **** 
 434:./lib/chibios/os/rt/include/chvt.h **** /**
 435:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the specified time is within the specified time window.
 436:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always true because the
 437:./lib/chibios/os/rt/include/chvt.h ****  *          whole time range is specified.
 438:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context.
 439:./lib/chibios/os/rt/include/chvt.h ****  *
 440:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] time      the time to be verified
 441:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 442:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 443:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 444:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 445:./lib/chibios/os/rt/include/chvt.h ****  *
 446:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 447:./lib/chibios/os/rt/include/chvt.h ****  */
 448:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsTimeWithinX(systime_t time,
 449:./lib/chibios/os/rt/include/chvt.h ****                                      systime_t start,
 450:./lib/chibios/os/rt/include/chvt.h ****                                      systime_t end) {
 451:./lib/chibios/os/rt/include/chvt.h **** 
 452:./lib/chibios/os/rt/include/chvt.h ****   return (bool)((systime_t)(time - start) < (systime_t)(end - start));
 453:./lib/chibios/os/rt/include/chvt.h **** }
 454:./lib/chibios/os/rt/include/chvt.h **** 
 455:./lib/chibios/os/rt/include/chvt.h **** /**
 456:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 457:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 458:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always true because the
 459:./lib/chibios/os/rt/include/chvt.h ****  *          whole time range is specified.
 460:./lib/chibios/os/rt/include/chvt.h ****  *
 461:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 462:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 463:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 464:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 465:./lib/chibios/os/rt/include/chvt.h ****  *
 466:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 467:./lib/chibios/os/rt/include/chvt.h ****  */
 468:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithinX(systime_t start, systime_t end) {
 469:./lib/chibios/os/rt/include/chvt.h **** 
 470:./lib/chibios/os/rt/include/chvt.h ****   return chVTIsTimeWithinX(chVTGetSystemTimeX(), start, end);
 471:./lib/chibios/os/rt/include/chvt.h **** }
 472:./lib/chibios/os/rt/include/chvt.h **** 
 473:./lib/chibios/os/rt/include/chvt.h **** /**
 474:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 475:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 476:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always true because the
 477:./lib/chibios/os/rt/include/chvt.h ****  *          whole time range is specified.
 478:./lib/chibios/os/rt/include/chvt.h ****  *
 479:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 480:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 481:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 482:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 483:./lib/chibios/os/rt/include/chvt.h ****  *
 484:./lib/chibios/os/rt/include/chvt.h ****  * @api
 485:./lib/chibios/os/rt/include/chvt.h ****  */
 486:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithin(systime_t start, systime_t end) {
 487:./lib/chibios/os/rt/include/chvt.h **** 
 488:./lib/chibios/os/rt/include/chvt.h ****   return chVTIsTimeWithinX(chVTGetSystemTime(), start, end);
 489:./lib/chibios/os/rt/include/chvt.h **** }
 490:./lib/chibios/os/rt/include/chvt.h **** 
 491:./lib/chibios/os/rt/include/chvt.h **** /**
 492:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the time interval until the next timer event.
 493:./lib/chibios/os/rt/include/chvt.h ****  * @note    The return value is not perfectly accurate and can report values
 494:./lib/chibios/os/rt/include/chvt.h ****  *          in excess of @p CH_CFG_ST_TIMEDELTA ticks.
 495:./lib/chibios/os/rt/include/chvt.h ****  * @note    The interval returned by this function is only meaningful if
 496:./lib/chibios/os/rt/include/chvt.h ****  *          more timers are not added to the list until the returned time.
 497:./lib/chibios/os/rt/include/chvt.h ****  *
 498:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] timep    pointer to a variable that will contain the time
 499:./lib/chibios/os/rt/include/chvt.h ****  *                      interval until the next timer elapses. This pointer
 500:./lib/chibios/os/rt/include/chvt.h ****  *                      can be @p NULL if the information is not required.
 501:./lib/chibios/os/rt/include/chvt.h ****  * @return              The time, in ticks, until next time event.
 502:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        if the timers list is empty.
 503:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         if the timers list contains at least one timer.
 504:./lib/chibios/os/rt/include/chvt.h ****  *
 505:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 506:./lib/chibios/os/rt/include/chvt.h ****  */
 507:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTGetTimersStateI(systime_t *timep) {
 508:./lib/chibios/os/rt/include/chvt.h **** 
 509:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 510:./lib/chibios/os/rt/include/chvt.h **** 
 511:./lib/chibios/os/rt/include/chvt.h ****   if (&ch.vtlist == (virtual_timers_list_t *)ch.vtlist.next) {
 512:./lib/chibios/os/rt/include/chvt.h ****     return false;
 513:./lib/chibios/os/rt/include/chvt.h ****   }
 514:./lib/chibios/os/rt/include/chvt.h **** 
 515:./lib/chibios/os/rt/include/chvt.h ****   if (timep != NULL) {
 516:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 517:./lib/chibios/os/rt/include/chvt.h ****     *timep = ch.vtlist.next->delta;
 518:./lib/chibios/os/rt/include/chvt.h **** #else
 519:./lib/chibios/os/rt/include/chvt.h ****     *timep = ch.vtlist.lasttime + ch.vtlist.next->delta +
 520:./lib/chibios/os/rt/include/chvt.h ****              CH_CFG_ST_TIMEDELTA - chVTGetSystemTimeX();
 521:./lib/chibios/os/rt/include/chvt.h **** #endif
 522:./lib/chibios/os/rt/include/chvt.h ****   }
 523:./lib/chibios/os/rt/include/chvt.h **** 
 524:./lib/chibios/os/rt/include/chvt.h ****   return true;
 525:./lib/chibios/os/rt/include/chvt.h **** }
 526:./lib/chibios/os/rt/include/chvt.h **** 
 527:./lib/chibios/os/rt/include/chvt.h **** /**
 528:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 529:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 530:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 531:./lib/chibios/os/rt/include/chvt.h ****  *
 532:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 533:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 534:./lib/chibios/os/rt/include/chvt.h ****  *
 535:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 536:./lib/chibios/os/rt/include/chvt.h ****  */
 537:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmedI(virtual_timer_t *vtp) {
 538:./lib/chibios/os/rt/include/chvt.h **** 
 539:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 540:./lib/chibios/os/rt/include/chvt.h **** 
 541:./lib/chibios/os/rt/include/chvt.h ****   return (bool)(vtp->func != NULL);
 542:./lib/chibios/os/rt/include/chvt.h **** }
 543:./lib/chibios/os/rt/include/chvt.h **** 
 544:./lib/chibios/os/rt/include/chvt.h **** /**
 545:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 546:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 547:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 548:./lib/chibios/os/rt/include/chvt.h ****  *
 549:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 550:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 551:./lib/chibios/os/rt/include/chvt.h ****  *
 552:./lib/chibios/os/rt/include/chvt.h ****  * @api
 553:./lib/chibios/os/rt/include/chvt.h ****  */
 554:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmed(virtual_timer_t *vtp) {
 555:./lib/chibios/os/rt/include/chvt.h ****   bool b;
 556:./lib/chibios/os/rt/include/chvt.h **** 
 557:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 558:./lib/chibios/os/rt/include/chvt.h ****   b = chVTIsArmedI(vtp);
 559:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 560:./lib/chibios/os/rt/include/chvt.h **** 
 561:./lib/chibios/os/rt/include/chvt.h ****   return b;
 562:./lib/chibios/os/rt/include/chvt.h **** }
 563:./lib/chibios/os/rt/include/chvt.h **** 
 564:./lib/chibios/os/rt/include/chvt.h **** /**
 565:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 566:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 567:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 568:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 569:./lib/chibios/os/rt/include/chvt.h ****  *
 570:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 571:./lib/chibios/os/rt/include/chvt.h ****  *
 572:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 573:./lib/chibios/os/rt/include/chvt.h ****  */
 574:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTResetI(virtual_timer_t *vtp) {
 575:./lib/chibios/os/rt/include/chvt.h **** 
 576:./lib/chibios/os/rt/include/chvt.h ****   if (chVTIsArmedI(vtp)) {
 577:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 578:./lib/chibios/os/rt/include/chvt.h ****   }
 579:./lib/chibios/os/rt/include/chvt.h **** }
 580:./lib/chibios/os/rt/include/chvt.h **** 
 581:./lib/chibios/os/rt/include/chvt.h **** /**
 582:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 583:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 584:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 585:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 586:./lib/chibios/os/rt/include/chvt.h ****  *
 587:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 588:./lib/chibios/os/rt/include/chvt.h ****  *
 589:./lib/chibios/os/rt/include/chvt.h ****  * @api
 590:./lib/chibios/os/rt/include/chvt.h ****  */
 591:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTReset(virtual_timer_t *vtp) {
 592:./lib/chibios/os/rt/include/chvt.h **** 
 593:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 594:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 595:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 596:./lib/chibios/os/rt/include/chvt.h **** }
 597:./lib/chibios/os/rt/include/chvt.h **** 
 598:./lib/chibios/os/rt/include/chvt.h **** /**
 599:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Enables a virtual timer.
 600:./lib/chibios/os/rt/include/chvt.h ****  * @details If the virtual timer was already enabled then it is re-enabled
 601:./lib/chibios/os/rt/include/chvt.h ****  *          using the new parameters.
 602:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 603:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 604:./lib/chibios/os/rt/include/chvt.h ****  *
 605:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 606:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] delay     the number of ticks before the operation timeouts, the
 607:./lib/chibios/os/rt/include/chvt.h ****  *                      special values are handled as follow:
 608:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 609:./lib/chibios/os/rt/include/chvt.h ****  *                        normal time specification.
 610:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 611:./lib/chibios/os/rt/include/chvt.h ****  *                      .
 612:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtfunc    the timer callback function. After invoking the
 613:./lib/chibios/os/rt/include/chvt.h ****  *                      callback the timer is disabled and the structure can
 614:./lib/chibios/os/rt/include/chvt.h ****  *                      be disposed or reused.
 615:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] par       a parameter that will be passed to the callback
 616:./lib/chibios/os/rt/include/chvt.h ****  *                      function
 617:./lib/chibios/os/rt/include/chvt.h ****  *
 618:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 619:./lib/chibios/os/rt/include/chvt.h ****  */
 620:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTSetI(virtual_timer_t *vtp, systime_t delay,
 621:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 622:./lib/chibios/os/rt/include/chvt.h **** 
 623:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 624:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 625:./lib/chibios/os/rt/include/chvt.h **** }
 626:./lib/chibios/os/rt/include/chvt.h **** 
 627:./lib/chibios/os/rt/include/chvt.h **** /**
 628:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Enables a virtual timer.
 629:./lib/chibios/os/rt/include/chvt.h ****  * @details If the virtual timer was already enabled then it is re-enabled
 630:./lib/chibios/os/rt/include/chvt.h ****  *          using the new parameters.
 631:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 632:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 633:./lib/chibios/os/rt/include/chvt.h ****  *
 634:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 635:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] delay     the number of ticks before the operation timeouts, the
 636:./lib/chibios/os/rt/include/chvt.h ****  *                      special values are handled as follow:
 637:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 638:./lib/chibios/os/rt/include/chvt.h ****  *                        normal time specification.
 639:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 640:./lib/chibios/os/rt/include/chvt.h ****  *                      .
 641:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtfunc    the timer callback function. After invoking the
 642:./lib/chibios/os/rt/include/chvt.h ****  *                      callback the timer is disabled and the structure can
 643:./lib/chibios/os/rt/include/chvt.h ****  *                      be disposed or reused.
 644:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] par       a parameter that will be passed to the callback
 645:./lib/chibios/os/rt/include/chvt.h ****  *                      function
 646:./lib/chibios/os/rt/include/chvt.h ****  *
 647:./lib/chibios/os/rt/include/chvt.h ****  * @api
 648:./lib/chibios/os/rt/include/chvt.h ****  */
 649:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTSet(virtual_timer_t *vtp, systime_t delay,
 650:./lib/chibios/os/rt/include/chvt.h ****                            vtfunc_t vtfunc, void *par) {
 651:./lib/chibios/os/rt/include/chvt.h **** 
 652:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 653:./lib/chibios/os/rt/include/chvt.h ****   chVTSetI(vtp, delay, vtfunc, par);
 654:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 655:./lib/chibios/os/rt/include/chvt.h **** }
 656:./lib/chibios/os/rt/include/chvt.h **** 
 657:./lib/chibios/os/rt/include/chvt.h **** /**
 658:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Virtual timers ticker.
 659:./lib/chibios/os/rt/include/chvt.h ****  * @note    The system lock is released before entering the callback and
 660:./lib/chibios/os/rt/include/chvt.h ****  *          re-acquired immediately after. It is callback's responsibility
 661:./lib/chibios/os/rt/include/chvt.h ****  *          to acquire the lock if needed. This is done in order to reduce
 662:./lib/chibios/os/rt/include/chvt.h ****  *          interrupts jitter when many timers are in use.
 663:./lib/chibios/os/rt/include/chvt.h ****  *
 664:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 665:./lib/chibios/os/rt/include/chvt.h ****  */
 666:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTDoTickI(void) {
 667:./lib/chibios/os/rt/include/chvt.h **** 
 668:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 669:./lib/chibios/os/rt/include/chvt.h **** 
 670:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 671:./lib/chibios/os/rt/include/chvt.h ****   ch.vtlist.systime++;
 672:./lib/chibios/os/rt/include/chvt.h ****   if (&ch.vtlist != (virtual_timers_list_t *)ch.vtlist.next) {
 673:./lib/chibios/os/rt/include/chvt.h ****     /* The list is not empty, processing elements on top.*/
 674:./lib/chibios/os/rt/include/chvt.h ****     --ch.vtlist.next->delta;
 675:./lib/chibios/os/rt/include/chvt.h ****     while (ch.vtlist.next->delta == (systime_t)0) {
 676:./lib/chibios/os/rt/include/chvt.h ****       virtual_timer_t *vtp;
 677:./lib/chibios/os/rt/include/chvt.h ****       vtfunc_t fn;
 678:./lib/chibios/os/rt/include/chvt.h **** 
 679:./lib/chibios/os/rt/include/chvt.h ****       vtp = ch.vtlist.next;
 680:./lib/chibios/os/rt/include/chvt.h ****       fn = vtp->func;
 681:./lib/chibios/os/rt/include/chvt.h ****       vtp->func = NULL;
 682:./lib/chibios/os/rt/include/chvt.h ****       vtp->next->prev = (virtual_timer_t *)&ch.vtlist;
 683:./lib/chibios/os/rt/include/chvt.h ****       ch.vtlist.next = vtp->next;
 684:./lib/chibios/os/rt/include/chvt.h ****       chSysUnlockFromISR();
 685:./lib/chibios/os/rt/include/chvt.h ****       fn(vtp->par);
 686:./lib/chibios/os/rt/include/chvt.h ****       chSysLockFromISR();
 687:./lib/chibios/os/rt/include/chvt.h ****     }
 688:./lib/chibios/os/rt/include/chvt.h ****   }
 689:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 690:./lib/chibios/os/rt/include/chvt.h ****   virtual_timer_t *vtp;
 691:./lib/chibios/os/rt/include/chvt.h ****   systime_t now, delta;
 692:./lib/chibios/os/rt/include/chvt.h **** 
 693:./lib/chibios/os/rt/include/chvt.h ****   /* First timer to be processed.*/
 694:./lib/chibios/os/rt/include/chvt.h ****   vtp = ch.vtlist.next;
 472              		.loc 5 694 0
 473 0004 1A4C     		ldr	r4, .L42
 474              	.LBB203:
 475              	.LBB204:
 476              	.LBB205:
 477              	.LBB206:
 478              		.file 6 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h"
   1:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*
   2:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
   4:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
   8:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  10:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****     limitations under the License.
  15:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** */
  16:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  17:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  18:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @file    TIMv1/hal_st_lld.h
  19:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   ST Driver subsystem low level driver header.
  20:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @details This header is designed to be include-able without having to
  21:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *          include other files from the HAL.
  22:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
  23:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @addtogroup ST
  24:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @{
  25:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  26:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  27:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifndef HAL_ST_LLD_H
  28:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define HAL_ST_LLD_H
  29:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  30:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "mcuconf.h"
  31:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "stm32_registry.h"
  32:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #include "stm32_tim.h"
  33:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  34:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver constants.                                                         */
  36:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  38:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  39:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver pre-compile time settings.                                         */
  40:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  41:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  42:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  43:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @name    Configuration options
  44:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @{
  45:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  46:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  47:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   SysTick timer IRQ priority.
  48:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  49:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_ST_IRQ_PRIORITY) || defined(__DOXYGEN__)
  50:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_IRQ_PRIORITY               8
  51:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  52:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  53:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
  54:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   TIMx unit (by number) to be used for free running operations.
  55:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @note    You must select a 32 bits timer if a 32 bits @p systick_t type
  56:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *          is required.
  57:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @note    Timers 2, 3, 4 and 5 are supported.
  58:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
  59:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !defined(STM32_ST_USE_TIMER) || defined(__DOXYGEN__)
  60:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_USE_TIMER                  2
  61:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  62:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /** @} */
  63:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  64:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  65:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Derived constants and error checks.                                       */
  66:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
  67:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  68:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if STM32_ST_USE_TIMER == 2
  69:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !STM32_HAS_TIM2
  70:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "TIM2 not present"
  71:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  72:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                              STM32_TIM2
  73:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  74:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 3
  75:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !STM32_HAS_TIM3
  76:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "TIM3 not present"
  77:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  78:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                              STM32_TIM3
  79:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  80:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 4
  81:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !STM32_HAS_TIM4
  82:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "TIM4 not present"
  83:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  84:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                              STM32_TIM4
  85:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  86:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 5
  87:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !STM32_HAS_TIM5
  88:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "TIM5 not present"
  89:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  90:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                              STM32_TIM5
  91:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  92:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 21
  93:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !STM32_HAS_TIM21
  94:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "TIM21 not present"
  95:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
  96:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                              STM32_TIM21
  97:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
  98:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #elif STM32_ST_USE_TIMER == 22
  99:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #if !STM32_HAS_TIM22
 100:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "TIM22 not present"
 101:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 102:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #define STM32_ST_TIM                              STM32_TIM22
 103:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 104:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #else
 105:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #error "STM32_ST_USE_TIMER specifies an unsupported timer"
 106:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 107:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 108:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver data structures and types.                                         */
 110:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 112:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver macros.                                                            */
 114:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 116:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 117:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 119:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 120:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
 121:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** extern "C" {
 122:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 123:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****   void st_lld_init(void);
 124:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #ifdef __cplusplus
 125:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** }
 126:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** #endif
 127:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 128:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /* Driver inline functions.                                                  */
 130:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /*===========================================================================*/
 131:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 132:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** /**
 133:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @brief   Returns the time counter value.
 134:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
 135:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @return              The counter value.
 136:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  *
 137:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  * @notapi
 138:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****  */
 139:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** static inline systime_t st_lld_get_counter(void) {
 140:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h **** 
 141:./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_st_lld.h ****   return (systime_t)STM32_ST_TIM->CNT;
 479              		.loc 6 141 0
 480 0006 4FF08043 		mov	r3, #1073741824
 481              	.LBE206:
 482              	.LBE205:
 483              	.LBE204:
 484              	.LBE203:
 485              	.LBB210:
 695:./lib/chibios/os/rt/include/chvt.h ****   now = chVTGetSystemTimeX();
 696:./lib/chibios/os/rt/include/chvt.h **** 
 697:./lib/chibios/os/rt/include/chvt.h ****   /* All timers within the time window are triggered and removed,
 698:./lib/chibios/os/rt/include/chvt.h ****      note that the loop is stopped by the timers header having
 699:./lib/chibios/os/rt/include/chvt.h ****      "ch.vtlist.vt_delta == (systime_t)-1" which is greater than
 700:./lib/chibios/os/rt/include/chvt.h ****      all deltas.*/
 701:./lib/chibios/os/rt/include/chvt.h ****   while (vtp->delta <= (systime_t)(now - ch.vtlist.lasttime)) {
 702:./lib/chibios/os/rt/include/chvt.h ****     vtfunc_t fn;
 703:./lib/chibios/os/rt/include/chvt.h **** 
 704:./lib/chibios/os/rt/include/chvt.h ****     /* The "last time" becomes this timer's expiration time.*/
 705:./lib/chibios/os/rt/include/chvt.h ****     ch.vtlist.lasttime += vtp->delta;
 706:./lib/chibios/os/rt/include/chvt.h **** 
 707:./lib/chibios/os/rt/include/chvt.h ****     vtp->next->prev = (virtual_timer_t *)&ch.vtlist;
 708:./lib/chibios/os/rt/include/chvt.h ****     ch.vtlist.next = vtp->next;
 709:./lib/chibios/os/rt/include/chvt.h ****     fn = vtp->func;
 710:./lib/chibios/os/rt/include/chvt.h ****     vtp->func = NULL;
 486              		.loc 5 710 0
 487 000a 0025     		movs	r5, #0
 488              	.LBE210:
 694:./lib/chibios/os/rt/include/chvt.h ****   now = chVTGetSystemTimeX();
 489              		.loc 5 694 0
 490 000c E769     		ldr	r7, [r4, #28]
 491              	.LVL54:
 492              	.LBB231:
 493              	.LBB209:
 494              	.LBB208:
 495              	.LBB207:
 496              		.loc 6 141 0
 497 000e 586A     		ldr	r0, [r3, #36]
 498 0010 04F11C08 		add	r8, r4, #28
 499 0014 2E46     		mov	r6, r5
 500              	.L38:
 501              	.LVL55:
 502              	.LBE207:
 503              	.LBE208:
 504              	.LBE209:
 505              	.LBE231:
 701:./lib/chibios/os/rt/include/chvt.h ****     vtfunc_t fn;
 506              		.loc 5 701 0
 507 0016 A26A     		ldr	r2, [r4, #40]
 508 0018 BB68     		ldr	r3, [r7, #8]
 509 001a 811A     		subs	r1, r0, r2
 510 001c 8B42     		cmp	r3, r1
 511 001e 0CD9     		bls	.L40
 711:./lib/chibios/os/rt/include/chvt.h **** 
 712:./lib/chibios/os/rt/include/chvt.h ****     /* if the list becomes empty then the timer is stopped.*/
 713:./lib/chibios/os/rt/include/chvt.h ****     if (ch.vtlist.next == (virtual_timer_t *)&ch.vtlist) {
 714:./lib/chibios/os/rt/include/chvt.h ****       port_timer_stop_alarm();
 715:./lib/chibios/os/rt/include/chvt.h ****     }
 716:./lib/chibios/os/rt/include/chvt.h **** 
 717:./lib/chibios/os/rt/include/chvt.h ****     /* Leaving the system critical zone in order to execute the callback
 718:./lib/chibios/os/rt/include/chvt.h ****        and in order to give a preemption chance to higher priority
 719:./lib/chibios/os/rt/include/chvt.h ****        interrupts.*/
 720:./lib/chibios/os/rt/include/chvt.h ****     chSysUnlockFromISR();
 721:./lib/chibios/os/rt/include/chvt.h **** 
 722:./lib/chibios/os/rt/include/chvt.h ****     /* The callback is invoked outside the kernel critical zone.*/
 723:./lib/chibios/os/rt/include/chvt.h ****     fn(vtp->par);
 724:./lib/chibios/os/rt/include/chvt.h **** 
 725:./lib/chibios/os/rt/include/chvt.h ****     /* Re-entering the critical zone in order to continue the exploration
 726:./lib/chibios/os/rt/include/chvt.h ****        of the list.*/
 727:./lib/chibios/os/rt/include/chvt.h ****     chSysLockFromISR();
 728:./lib/chibios/os/rt/include/chvt.h **** 
 729:./lib/chibios/os/rt/include/chvt.h ****     /* Next element in the list, the current time could have advanced so
 730:./lib/chibios/os/rt/include/chvt.h ****        recalculating the time window.*/
 731:./lib/chibios/os/rt/include/chvt.h ****     vtp = ch.vtlist.next;
 732:./lib/chibios/os/rt/include/chvt.h ****     now = chVTGetSystemTimeX();
 733:./lib/chibios/os/rt/include/chvt.h ****   }
 734:./lib/chibios/os/rt/include/chvt.h **** 
 735:./lib/chibios/os/rt/include/chvt.h ****   /* if the list is empty, nothing else to do.*/
 736:./lib/chibios/os/rt/include/chvt.h ****   if (ch.vtlist.next == (virtual_timer_t *)&ch.vtlist) {
 512              		.loc 5 736 0
 513 0020 E169     		ldr	r1, [r4, #28]
 514 0022 4145     		cmp	r1, r8
 515 0024 22D0     		beq	.L37
 737:./lib/chibios/os/rt/include/chvt.h ****     return;
 738:./lib/chibios/os/rt/include/chvt.h ****   }
 739:./lib/chibios/os/rt/include/chvt.h **** 
 740:./lib/chibios/os/rt/include/chvt.h ****   /* Recalculating the next alarm time.*/
 741:./lib/chibios/os/rt/include/chvt.h ****   delta = ch.vtlist.lasttime + vtp->delta - now;
 516              		.loc 5 741 0
 517 0026 1344     		add	r3, r3, r2
 518 0028 1B1A     		subs	r3, r3, r0
 519              	.LVL56:
 520              	.LBB232:
 521              	.LBB233:
 522              		.file 7 "./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @file    chcore_timer.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   System timer header file.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @addtogroup ARMCMx_TIMER
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #ifndef CHCORE_TIMER_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #define CHCORE_TIMER_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* This is the only header in the HAL designed to be include-able alone.*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** #include "hal_st.h"
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module pre-compile time settings.                                         */
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Derived constants and error checks.                                       */
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module data structures and types.                                         */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module macros.                                                            */
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* External declarations.                                                    */
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /* Module inline functions.                                                  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /*===========================================================================*/
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Starts the alarm.
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @note    Makes sure that no spurious alarms are triggered after
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *          this call.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the first alarm
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_start_alarm(systime_t time) {
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStartAlarm(time);
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Stops the alarm interrupt.
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_stop_alarm(void) {
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stStopAlarm();
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** /**
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @brief   Sets the alarm time.
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @param[in] time      the time to be set for the next alarm
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  *
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  * @notapi
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****  */
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** static inline void port_timer_set_alarm(systime_t time) {
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** 
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h ****   stSetAlarm(time);
 523              		.loc 7 95 0
 524 002a 022B     		cmp	r3, #2
 525 002c 2CBF     		ite	cs
 526 002e C018     		addcs	r0, r0, r3
 527 0030 0230     		addcc	r0, r0, #2
 528              	.LVL57:
 529              	.LBE233:
 530              	.LBE232:
 531              	.LBE202:
 532              	.LBE201:
 336:lib/chibios/os/rt/src/chsys.c **** 
 337:lib/chibios/os/rt/src/chsys.c ****   chDbgCheckClassI();
 338:lib/chibios/os/rt/src/chsys.c **** 
 339:lib/chibios/os/rt/src/chsys.c **** #if CH_CFG_TIME_QUANTUM > 0
 340:lib/chibios/os/rt/src/chsys.c ****   /* Running thread has not used up quantum yet? */
 341:lib/chibios/os/rt/src/chsys.c ****   if (currp->preempt > (tslices_t)0) {
 342:lib/chibios/os/rt/src/chsys.c ****     /* Decrement remaining quantum.*/
 343:lib/chibios/os/rt/src/chsys.c ****     currp->preempt--;
 344:lib/chibios/os/rt/src/chsys.c ****   }
 345:lib/chibios/os/rt/src/chsys.c **** #endif
 346:lib/chibios/os/rt/src/chsys.c **** #if CH_DBG_THREADS_PROFILING == TRUE
 347:lib/chibios/os/rt/src/chsys.c ****   currp->time++;
 348:lib/chibios/os/rt/src/chsys.c **** #endif
 349:lib/chibios/os/rt/src/chsys.c ****   chVTDoTickI();
 350:lib/chibios/os/rt/src/chsys.c ****   CH_CFG_SYSTEM_TICK_HOOK();
 351:lib/chibios/os/rt/src/chsys.c **** }
 533              		.loc 1 351 0
 534 0032 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 535              		.cfi_remember_state
 536              		.cfi_restore 14
 537              		.cfi_restore 9
 538              		.cfi_restore 8
 539              		.cfi_restore 7
 540              		.cfi_restore 6
 541              		.cfi_restore 5
 542              		.cfi_restore 4
 543              		.cfi_restore 3
 544              		.cfi_def_cfa_offset 0
 545              	.LVL58:
 546              	.LBB238:
 547              	.LBB237:
 548              	.LBB235:
 549              	.LBB234:
 550              		.loc 7 95 0
 551 0036 FFF7FEBF 		b	stSetAlarm
 552              	.LVL59:
 553              	.L40:
 554              		.cfi_restore_state
 555              	.LBE234:
 556              	.LBE235:
 557              	.LBB236:
 705:./lib/chibios/os/rt/include/chvt.h **** 
 558              		.loc 5 705 0
 559 003a 1344     		add	r3, r3, r2
 560 003c A362     		str	r3, [r4, #40]
 707:./lib/chibios/os/rt/include/chvt.h ****     ch.vtlist.next = vtp->next;
 561              		.loc 5 707 0
 562 003e 3B68     		ldr	r3, [r7]
 709:./lib/chibios/os/rt/include/chvt.h ****     vtp->func = NULL;
 563              		.loc 5 709 0
 564 0040 D7F80C90 		ldr	r9, [r7, #12]
 565              	.LVL60:
 707:./lib/chibios/os/rt/include/chvt.h ****     ch.vtlist.next = vtp->next;
 566              		.loc 5 707 0
 567 0044 C3F80480 		str	r8, [r3, #4]
 713:./lib/chibios/os/rt/include/chvt.h ****       port_timer_stop_alarm();
 568              		.loc 5 713 0
 569 0048 4345     		cmp	r3, r8
 708:./lib/chibios/os/rt/include/chvt.h ****     fn = vtp->func;
 570              		.loc 5 708 0
 571 004a E361     		str	r3, [r4, #28]
 710:./lib/chibios/os/rt/include/chvt.h **** 
 572              		.loc 5 710 0
 573 004c FD60     		str	r5, [r7, #12]
 713:./lib/chibios/os/rt/include/chvt.h ****       port_timer_stop_alarm();
 574              		.loc 5 713 0
 575 004e 01D1     		bne	.L39
 576              	.LBB211:
 577              	.LBB212:
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_timer.h **** }
 578              		.loc 7 83 0
 579 0050 FFF7FEFF 		bl	stStopAlarm
 580              	.LVL61:
 581              	.L39:
 582              	.LBE212:
 583              	.LBE211:
 584              	.LBB213:
 585              	.LBB214:
 586              	.LBB215:
 587              	.LBB216:
 588              	.LBB217:
 589              		.loc 4 264 0
 590              		.syntax unified
 591              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 592 0054 86F31188 		MSR basepri, r6
 593              	@ 0 "" 2
 594              	.LVL62:
 595              		.thumb
 596              		.syntax unified
 597              	.LBE217:
 598              	.LBE216:
 599              	.LBE215:
 600              	.LBE214:
 601              	.LBE213:
 723:./lib/chibios/os/rt/include/chvt.h **** 
 602              		.loc 5 723 0
 603 0058 3869     		ldr	r0, [r7, #16]
 604 005a C847     		blx	r9
 605              	.LVL63:
 606              	.LBB218:
 607              	.LBB219:
 608              	.LBB220:
 609              	.LBB221:
 610              	.LBB222:
 611              		.loc 4 264 0
 612 005c 2023     		movs	r3, #32
 613              		.syntax unified
 614              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 615 005e 83F31188 		MSR basepri, r3
 616              	@ 0 "" 2
 617              	.LVL64:
 618              		.thumb
 619              		.syntax unified
 620              	.LBE222:
 621              	.LBE221:
 622              	.LBE220:
 623              	.LBE219:
 624              	.LBE218:
 625              	.LBB223:
 626              	.LBB224:
 627              	.LBB225:
 628              	.LBB226:
 629              		.loc 6 141 0
 630 0062 4FF08043 		mov	r3, #1073741824
 631              	.LBE226:
 632              	.LBE225:
 633              	.LBE224:
 634              	.LBE223:
 731:./lib/chibios/os/rt/include/chvt.h ****     now = chVTGetSystemTimeX();
 635              		.loc 5 731 0
 636 0066 E769     		ldr	r7, [r4, #28]
 637              	.LVL65:
 638              	.LBB230:
 639              	.LBB229:
 640              	.LBB228:
 641              	.LBB227:
 642              		.loc 6 141 0
 643 0068 586A     		ldr	r0, [r3, #36]
 644 006a D4E7     		b	.L38
 645              	.LVL66:
 646              	.L37:
 647              	.LBE227:
 648              	.LBE228:
 649              	.LBE229:
 650              	.LBE230:
 651              	.LBE236:
 652              	.LBE237:
 653              	.LBE238:
 654              		.loc 1 351 0
 655 006c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 656              	.LVL67:
 657              	.L43:
 658              		.align	2
 659              	.L42:
 660 0070 00000000 		.word	ch
 661              		.cfi_endproc
 662              	.LFE252:
 664              		.section	.text.chSysGetStatusAndLockX,"ax",%progbits
 665              		.align	1
 666              		.global	chSysGetStatusAndLockX
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 672              	chSysGetStatusAndLockX:
 673              	.LFB253:
 352:lib/chibios/os/rt/src/chsys.c **** 
 353:lib/chibios/os/rt/src/chsys.c **** /**
 354:lib/chibios/os/rt/src/chsys.c ****  * @brief   Returns the execution status and enters a critical zone.
 355:lib/chibios/os/rt/src/chsys.c ****  * @details This functions enters into a critical zone and can be called
 356:lib/chibios/os/rt/src/chsys.c ****  *          from any context. Because its flexibility it is less efficient
 357:lib/chibios/os/rt/src/chsys.c ****  *          than @p chSysLock() which is preferable when the calling context
 358:lib/chibios/os/rt/src/chsys.c ****  *          is known.
 359:lib/chibios/os/rt/src/chsys.c ****  * @post    The system is in a critical zone.
 360:lib/chibios/os/rt/src/chsys.c ****  *
 361:lib/chibios/os/rt/src/chsys.c ****  * @return              The previous system status, the encoding of this
 362:lib/chibios/os/rt/src/chsys.c ****  *                      status word is architecture-dependent and opaque.
 363:lib/chibios/os/rt/src/chsys.c ****  *
 364:lib/chibios/os/rt/src/chsys.c ****  * @xclass
 365:lib/chibios/os/rt/src/chsys.c ****  */
 366:lib/chibios/os/rt/src/chsys.c **** syssts_t chSysGetStatusAndLockX(void) {
 674              		.loc 1 366 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LBB256:
 680              	.LBB257:
 681              	.LBB258:
 682              	.LBB259:
 252:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 683              		.loc 4 252 0
 684              		.syntax unified
 685              	@ 252 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 686 0000 EFF31180 		MRS r0, basepri
 687              	@ 0 "" 2
 688              		.thumb
 689              		.syntax unified
 690              	.LBE259:
 691              	.LBE258:
 692              	.LBE257:
 693              	.LBE256:
 367:lib/chibios/os/rt/src/chsys.c **** 
 368:lib/chibios/os/rt/src/chsys.c ****   syssts_t sts = port_get_irq_status();
 369:lib/chibios/os/rt/src/chsys.c ****   if (port_irq_enabled(sts)) {
 694              		.loc 1 369 0
 695 0004 20B9     		cbnz	r0, .L44
 696              	.LBB260:
 697              	.LBB261:
 698              	.LBB262:
 699              	.LBB263:
 109:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 700              		.loc 4 109 0
 701              		.syntax unified
 702              	@ 109 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 703 0006 EFF30583 		MRS r3, ipsr
 704              	@ 0 "" 2
 705              		.thumb
 706              		.syntax unified
 707 000a 2022     		movs	r2, #32
 708              	.LVL68:
 709              	.LBE263:
 710              	.LBE262:
 711              	.LBE261:
 712              	.LBE260:
 713              	.LBB264:
 714              	.LBB265:
 715              	.LBB266:
 716              	.LBB267:
 717              		.loc 4 264 0
 718              		.syntax unified
 719              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 720 000c 82F31188 		MSR basepri, r2
 721              	@ 0 "" 2
 722              	.LVL69:
 723              		.thumb
 724              		.syntax unified
 725              	.L44:
 726              	.LBE267:
 727              	.LBE266:
 728              	.LBE265:
 729              	.LBE264:
 370:lib/chibios/os/rt/src/chsys.c ****     if (port_is_isr_context()) {
 371:lib/chibios/os/rt/src/chsys.c ****       chSysLockFromISR();
 372:lib/chibios/os/rt/src/chsys.c ****     }
 373:lib/chibios/os/rt/src/chsys.c ****     else {
 374:lib/chibios/os/rt/src/chsys.c ****       chSysLock();
 375:lib/chibios/os/rt/src/chsys.c ****     }
 376:lib/chibios/os/rt/src/chsys.c ****   }
 377:lib/chibios/os/rt/src/chsys.c ****   return sts;
 378:lib/chibios/os/rt/src/chsys.c **** }
 730              		.loc 1 378 0
 731 0010 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE253:
 735              		.section	.text.chSysRestoreStatusX,"ax",%progbits
 736              		.align	1
 737              		.global	chSysRestoreStatusX
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 741              		.fpu softvfp
 743              	chSysRestoreStatusX:
 744              	.LFB254:
 379:lib/chibios/os/rt/src/chsys.c **** 
 380:lib/chibios/os/rt/src/chsys.c **** /**
 381:lib/chibios/os/rt/src/chsys.c ****  * @brief   Restores the specified execution status and leaves a critical zone.
 382:lib/chibios/os/rt/src/chsys.c ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 383:lib/chibios/os/rt/src/chsys.c ****  *          if exiting the critical zone and if not in ISR context.
 384:lib/chibios/os/rt/src/chsys.c ****  *
 385:lib/chibios/os/rt/src/chsys.c ****  * @param[in] sts       the system status to be restored.
 386:lib/chibios/os/rt/src/chsys.c ****  *
 387:lib/chibios/os/rt/src/chsys.c ****  * @xclass
 388:lib/chibios/os/rt/src/chsys.c ****  */
 389:lib/chibios/os/rt/src/chsys.c **** void chSysRestoreStatusX(syssts_t sts) {
 745              		.loc 1 389 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              	.LVL70:
 750 0000 10B5     		push	{r4, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 4, -8
 753              		.cfi_offset 14, -4
 390:lib/chibios/os/rt/src/chsys.c **** 
 391:lib/chibios/os/rt/src/chsys.c ****   if (port_irq_enabled(sts)) {
 754              		.loc 1 391 0
 755 0002 30B9     		cbnz	r0, .L47
 756              	.LBB282:
 757              	.LBB283:
 758              	.LBB284:
 759              	.LBB285:
 109:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 760              		.loc 4 109 0
 761              		.syntax unified
 762              	@ 109 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 763 0004 EFF30584 		MRS r4, ipsr
 764              	@ 0 "" 2
 765              		.thumb
 766              		.syntax unified
 767              	.LBE285:
 768              	.LBE284:
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Initialization of the system vectors used by the port.*/
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   NVIC_SetPriority(SVCall_IRQn, CORTEX_PRIORITY_SVCALL);
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   NVIC_SetPriority(PendSV_IRQn, CORTEX_PRIORITY_PENDSV);
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == TRUE
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   {
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     extern stkalign_t __main_thread_stack_base__;
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     /* Setting up the guard page on the main() function stack base
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****        initially.*/
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     mpuConfigureRegion(MPU_REGION_0,
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                        &__main_thread_stack_base__,
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                        MPU_RASR_ATTR_AP_NA_NA |
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                        MPU_RASR_ATTR_NON_CACHEABLE |
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                        MPU_RASR_SIZE_32 |
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                        MPU_RASR_ENABLE);
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     /* MPU is enabled.*/
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     mpuEnable(MPU_CTRL_PRIVDEFENA);
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline syssts_t port_get_irq_status(void) {
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline bool port_irq_enabled(syssts_t sts) {
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline bool port_is_isr_context(void) {
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 769              		.loc 3 586 0
 770 0008 C4F30804 		ubfx	r4, r4, #0, #9
 771              	.LBE283:
 772              	.LBE282:
 392:lib/chibios/os/rt/src/chsys.c ****     if (port_is_isr_context()) {
 773              		.loc 1 392 0
 774 000c 14B1     		cbz	r4, .L49
 775              	.LVL71:
 776              	.LBB286:
 777              	.LBB287:
 778              	.LBB288:
 779              	.LBB289:
 780              	.LBB290:
 781              		.loc 4 264 0
 782              		.syntax unified
 783              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 784 000e 80F31188 		MSR basepri, r0
 785              	@ 0 "" 2
 786              	.LVL72:
 787              		.thumb
 788              		.syntax unified
 789              	.L47:
 790              	.LBE290:
 791              	.LBE289:
 792              	.LBE288:
 793              	.LBE287:
 794              	.LBE286:
 393:lib/chibios/os/rt/src/chsys.c ****       chSysUnlockFromISR();
 394:lib/chibios/os/rt/src/chsys.c ****     }
 395:lib/chibios/os/rt/src/chsys.c ****     else {
 396:lib/chibios/os/rt/src/chsys.c ****       chSchRescheduleS();
 397:lib/chibios/os/rt/src/chsys.c ****       chSysUnlock();
 398:lib/chibios/os/rt/src/chsys.c ****     }
 399:lib/chibios/os/rt/src/chsys.c ****   }
 400:lib/chibios/os/rt/src/chsys.c **** }
 795              		.loc 1 400 0
 796 0012 10BD     		pop	{r4, pc}
 797              	.LVL73:
 798              	.L49:
 396:lib/chibios/os/rt/src/chsys.c ****       chSysUnlock();
 799              		.loc 1 396 0
 800 0014 FFF7FEFF 		bl	chSchRescheduleS
 801              	.LVL74:
 802              	.LBB291:
 803              	.LBB292:
 804              	.LBB293:
 805              	.LBB294:
 806              	.LBB295:
 807              		.loc 4 264 0
 808              		.syntax unified
 809              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 810 0018 84F31188 		MSR basepri, r4
 811              	@ 0 "" 2
 812              	.LVL75:
 813              		.thumb
 814              		.syntax unified
 815              	.LBE295:
 816              	.LBE294:
 817              	.LBE293:
 818              	.LBE292:
 819              	.LBE291:
 820              		.loc 1 400 0
 821 001c F9E7     		b	.L47
 822              		.cfi_endproc
 823              	.LFE254:
 825              		.section	.text.chSysIsCounterWithinX,"ax",%progbits
 826              		.align	1
 827              		.global	chSysIsCounterWithinX
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu softvfp
 833              	chSysIsCounterWithinX:
 834              	.LFB255:
 401:lib/chibios/os/rt/src/chsys.c **** 
 402:lib/chibios/os/rt/src/chsys.c **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 403:lib/chibios/os/rt/src/chsys.c **** /**
 404:lib/chibios/os/rt/src/chsys.c ****  * @brief   Realtime window test.
 405:lib/chibios/os/rt/src/chsys.c ****  * @details This function verifies if the current realtime counter value
 406:lib/chibios/os/rt/src/chsys.c ****  *          lies within the specified range or not. The test takes care
 407:lib/chibios/os/rt/src/chsys.c ****  *          of the realtime counter wrapping to zero on overflow.
 408:lib/chibios/os/rt/src/chsys.c ****  * @note    When start==end then the function returns always true because the
 409:lib/chibios/os/rt/src/chsys.c ****  *          whole time range is specified.
 410:lib/chibios/os/rt/src/chsys.c ****  * @note    This function is only available if the port layer supports the
 411:lib/chibios/os/rt/src/chsys.c ****  *          option @p PORT_SUPPORTS_RT.
 412:lib/chibios/os/rt/src/chsys.c ****  *
 413:lib/chibios/os/rt/src/chsys.c ****  * @param[in] cnt       the counter value to be tested
 414:lib/chibios/os/rt/src/chsys.c ****  * @param[in] start     the start of the time window (inclusive)
 415:lib/chibios/os/rt/src/chsys.c ****  * @param[in] end       the end of the time window (non inclusive)
 416:lib/chibios/os/rt/src/chsys.c ****  * @retval true         current time within the specified time window.
 417:lib/chibios/os/rt/src/chsys.c ****  * @retval false        current time not within the specified time window.
 418:lib/chibios/os/rt/src/chsys.c ****  *
 419:lib/chibios/os/rt/src/chsys.c ****  * @xclass
 420:lib/chibios/os/rt/src/chsys.c ****  */
 421:lib/chibios/os/rt/src/chsys.c **** bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end) {
 835              		.loc 1 421 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840              	.LVL76:
 422:lib/chibios/os/rt/src/chsys.c **** 
 423:lib/chibios/os/rt/src/chsys.c ****   return (bool)((cnt - start) < (end - start));
 841              		.loc 1 423 0
 842 0000 401A     		subs	r0, r0, r1
 843              	.LVL77:
 844 0002 521A     		subs	r2, r2, r1
 845              	.LVL78:
 424:lib/chibios/os/rt/src/chsys.c **** }
 846              		.loc 1 424 0
 847 0004 9042     		cmp	r0, r2
 848 0006 2CBF     		ite	cs
 849 0008 0020     		movcs	r0, #0
 850 000a 0120     		movcc	r0, #1
 851 000c 7047     		bx	lr
 852              		.cfi_endproc
 853              	.LFE255:
 855              		.section	.text.chSysPolledDelayX,"ax",%progbits
 856              		.align	1
 857              		.global	chSysPolledDelayX
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu softvfp
 863              	chSysPolledDelayX:
 864              	.LFB256:
 425:lib/chibios/os/rt/src/chsys.c **** 
 426:lib/chibios/os/rt/src/chsys.c **** /**
 427:lib/chibios/os/rt/src/chsys.c ****  * @brief   Polled delay.
 428:lib/chibios/os/rt/src/chsys.c ****  * @note    The real delay is always few cycles in excess of the specified
 429:lib/chibios/os/rt/src/chsys.c ****  *          value.
 430:lib/chibios/os/rt/src/chsys.c ****  * @note    This function is only available if the port layer supports the
 431:lib/chibios/os/rt/src/chsys.c ****  *          option @p PORT_SUPPORTS_RT.
 432:lib/chibios/os/rt/src/chsys.c ****  *
 433:lib/chibios/os/rt/src/chsys.c ****  * @param[in] cycles    number of cycles
 434:lib/chibios/os/rt/src/chsys.c ****  *
 435:lib/chibios/os/rt/src/chsys.c ****  * @xclass
 436:lib/chibios/os/rt/src/chsys.c ****  */
 437:lib/chibios/os/rt/src/chsys.c **** void chSysPolledDelayX(rtcnt_t cycles) {
 865              		.loc 1 437 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL79:
 871              	.LBB296:
 872              	.LBB297:
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_lock(void) {
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_unlock(void) {
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_lock_from_isr(void) {
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_unlock_from_isr(void) {
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disables all the interrupt sources.
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it disables all the interrupt sources by raising
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the priority mask to level 0.
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_disable(void) {
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disables the interrupt sources below kernel-level priority.
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Interrupt sources above kernel level remains enabled.
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it raises/lowers the base priority to kernel level.
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_suspend(void) {
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables all the interrupt sources.
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it lowers the base priority to user level.
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_enable(void) {
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enters an architecture-dependent IRQ-waiting mode.
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The function is meant to return when an interrupt becomes pending.
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          The simplest implementation is an empty function or macro but this
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          would not take advantage of architecture-specific power saving
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          modes.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Implemented as an inlined @p WFI instruction.
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline void port_wait_for_interrupt(void) {
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_ENABLE_WFI_IDLE == TRUE
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __WFI();
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns the current value of the realtime counter.
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The realtime counter value.
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** static inline rtcnt_t port_rt_get_counter_value(void) {
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return DWT->CYCCNT;
 873              		.loc 3 708 0
 874 0000 034B     		ldr	r3, .L54
 875 0002 5968     		ldr	r1, [r3, #4]
 876              	.LVL80:
 877              	.L52:
 878              	.LBE297:
 879              	.LBE296:
 880              	.LBB298:
 881              	.LBB299:
 882              		.loc 3 708 0 is_stmt 0 discriminator 1
 883 0004 5A68     		ldr	r2, [r3, #4]
 884              	.LBE299:
 885              	.LBE298:
 886              	.LBB300:
 887              	.LBB301:
 423:lib/chibios/os/rt/src/chsys.c **** }
 888              		.loc 1 423 0 is_stmt 1 discriminator 1
 889 0006 521A     		subs	r2, r2, r1
 890              	.LBE301:
 891              	.LBE300:
 438:lib/chibios/os/rt/src/chsys.c ****   rtcnt_t start = chSysGetRealtimeCounterX();
 439:lib/chibios/os/rt/src/chsys.c ****   rtcnt_t end  = start + cycles;
 440:lib/chibios/os/rt/src/chsys.c **** 
 441:lib/chibios/os/rt/src/chsys.c ****   while (chSysIsCounterWithinX(chSysGetRealtimeCounterX(), start, end)) {
 892              		.loc 1 441 0 discriminator 1
 893 0008 9042     		cmp	r0, r2
 894 000a FBD8     		bhi	.L52
 442:lib/chibios/os/rt/src/chsys.c ****   }
 443:lib/chibios/os/rt/src/chsys.c **** }
 895              		.loc 1 443 0
 896 000c 7047     		bx	lr
 897              	.L55:
 898 000e 00BF     		.align	2
 899              	.L54:
 900 0010 001000E0 		.word	-536866816
 901              		.cfi_endproc
 902              	.LFE256:
 904              		.global	ch_idle_thread_wa
 905              		.section	.bss.ch_idle_thread_wa,"aw",%nobits
 906              		.align	3
 909              	ch_idle_thread_wa:
 910 0000 00000000 		.space	352
 910      00000000 
 910      00000000 
 910      00000000 
 910      00000000 
 911              		.section	.rodata.idle_descriptor.6511,"a",%progbits
 912              		.align	2
 913              		.set	.LANCHOR0,. + 0
 916              	idle_descriptor.6511:
 917 0000 00000000 		.word	.LC0
 918 0004 00000000 		.word	ch_idle_thread_wa
 919 0008 60010000 		.word	ch_idle_thread_wa+352
 920 000c 01000000 		.word	1
 921 0010 00000000 		.word	_idle_thread
 922 0014 00000000 		.word	0
 923              		.section	.rodata.str1.1,"aMS",%progbits,1
 924              	.LC0:
 925 0000 69646C65 		.ascii	"idle\000"
 925      00
 926              		.text
 927              	.Letext0:
 928              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 929              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 930              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 931              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 932              		.file 12 "./lib/chibios/os/rt/include/chsystypes.h"
 933              		.file 13 "./lib/chibios/os/rt/include/chschd.h"
 934              		.file 14 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 935              		.file 15 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 936              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 937              		.file 17 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 938              		.file 18 "./lib/chibios/os/rt/include/chtm.h"
 939              		.file 19 "./lib/chibios/os/rt/include/chsem.h"
 940              		.file 20 "./lib/chibios/os/rt/include/chmtx.h"
 941              		.file 21 "./lib/chibios/os/rt/include/chsys.h"
 942              		.file 22 "./lib/chibios/os/rt/include/chthreads.h"
 943              		.file 23 "./lib/chibios/os/rt/include/chregistry.h"
 944              		.file 24 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 945              		.file 25 "./lib/chibios/os/hal/include/hal_st.h"
 946              		.file 26 "./lib/chibios/os/common/oslib/include/chheap.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chsys.c
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:16     .text._idle_thread:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:22     .text._idle_thread:0000000000000000 _idle_thread
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:38     .text.chSysInit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:45     .text.chSysInit:0000000000000000 chSysInit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:203    .text.chSysInit:0000000000000074 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:216    .text.chSysHalt:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:223    .text.chSysHalt:0000000000000000 chSysHalt
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:253    .text.chSysHalt:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:258    .text.chSysIntegrityCheckI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:265    .text.chSysIntegrityCheckI:0000000000000000 chSysIntegrityCheckI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:440    .text.chSysIntegrityCheckI:000000000000007c $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:446    .text.chSysTimerHandlerI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:453    .text.chSysTimerHandlerI:0000000000000000 chSysTimerHandlerI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:660    .text.chSysTimerHandlerI:0000000000000070 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:665    .text.chSysGetStatusAndLockX:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:672    .text.chSysGetStatusAndLockX:0000000000000000 chSysGetStatusAndLockX
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:736    .text.chSysRestoreStatusX:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:743    .text.chSysRestoreStatusX:0000000000000000 chSysRestoreStatusX
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:826    .text.chSysIsCounterWithinX:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:833    .text.chSysIsCounterWithinX:0000000000000000 chSysIsCounterWithinX
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:856    .text.chSysPolledDelayX:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:863    .text.chSysPolledDelayX:0000000000000000 chSysPolledDelayX
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:900    .text.chSysPolledDelayX:0000000000000010 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:909    .bss.ch_idle_thread_wa:0000000000000000 ch_idle_thread_wa
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:906    .bss.ch_idle_thread_wa:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:912    .rodata.idle_descriptor.6511:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccMu10RY.s:916    .rodata.idle_descriptor.6511:0000000000000000 idle_descriptor.6511

UNDEFINED SYMBOLS
_scheduler_init
_vt_init
_tm_init
_core_init
_heap_init
_thread_init
chThdCreate
ch
ch_debug
__main_thread_stack_base__
stSetAlarm
stStopAlarm
chSchRescheduleS
