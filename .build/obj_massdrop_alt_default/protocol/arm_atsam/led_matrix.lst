   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"led_matrix.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.led_set_one,"ax",%progbits
  18              		.align	1
  19              		.global	led_set_one
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	led_set_one:
  26              	.LFB150:
  27              		.file 1 "tmk_core/protocol/arm_atsam/led_matrix.c"
   1:tmk_core/protocol/arm_atsam/led_matrix.c **** /*
   2:tmk_core/protocol/arm_atsam/led_matrix.c **** Copyright 2018 Massdrop Inc.
   3:tmk_core/protocol/arm_atsam/led_matrix.c **** 
   4:tmk_core/protocol/arm_atsam/led_matrix.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/protocol/arm_atsam/led_matrix.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/protocol/arm_atsam/led_matrix.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/protocol/arm_atsam/led_matrix.c **** (at your option) any later version.
   8:tmk_core/protocol/arm_atsam/led_matrix.c **** 
   9:tmk_core/protocol/arm_atsam/led_matrix.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/protocol/arm_atsam/led_matrix.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/protocol/arm_atsam/led_matrix.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/protocol/arm_atsam/led_matrix.c **** GNU General Public License for more details.
  13:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  14:tmk_core/protocol/arm_atsam/led_matrix.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/protocol/arm_atsam/led_matrix.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/protocol/arm_atsam/led_matrix.c **** */
  17:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  18:tmk_core/protocol/arm_atsam/led_matrix.c **** #include "arm_atsam_protocol.h"
  19:tmk_core/protocol/arm_atsam/led_matrix.c **** #include "tmk_core/common/led.h"
  20:tmk_core/protocol/arm_atsam/led_matrix.c **** #include "rgb_matrix.h"
  21:tmk_core/protocol/arm_atsam/led_matrix.c **** #include <string.h>
  22:tmk_core/protocol/arm_atsam/led_matrix.c **** #include <math.h>
  23:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  24:tmk_core/protocol/arm_atsam/led_matrix.c **** #ifdef USE_MASSDROP_CONFIGURATOR
  25:tmk_core/protocol/arm_atsam/led_matrix.c **** __attribute__((weak)) led_instruction_t led_instructions[] = {{.end = 1}};
  26:tmk_core/protocol/arm_atsam/led_matrix.c **** static void                             led_matrix_massdrop_config_override(int i);
  27:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif  // USE_MASSDROP_CONFIGURATOR
  28:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  29:tmk_core/protocol/arm_atsam/led_matrix.c **** void SERCOM1_0_Handler(void) {
  30:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (SERCOM1->I2CM.INTFLAG.bit.ERROR) {
  31:tmk_core/protocol/arm_atsam/led_matrix.c ****         SERCOM1->I2CM.INTFLAG.reg = SERCOM_I2CM_INTENCLR_ERROR;
  32:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
  33:tmk_core/protocol/arm_atsam/led_matrix.c **** }
  34:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  35:tmk_core/protocol/arm_atsam/led_matrix.c **** void DMAC_0_Handler(void) {
  36:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (DMAC->Channel[0].CHINTFLAG.bit.TCMPL) {
  37:tmk_core/protocol/arm_atsam/led_matrix.c ****         DMAC->Channel[0].CHINTFLAG.reg = DMAC_CHINTENCLR_TCMPL;
  38:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  39:tmk_core/protocol/arm_atsam/led_matrix.c ****         i2c1_stop();
  40:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  41:tmk_core/protocol/arm_atsam/led_matrix.c ****         i2c_led_q_running = 0;
  42:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  43:tmk_core/protocol/arm_atsam/led_matrix.c ****         i2c_led_q_run();
  44:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  45:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
  46:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
  47:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  48:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (DMAC->Channel[0].CHINTFLAG.bit.TERR) {
  49:tmk_core/protocol/arm_atsam/led_matrix.c ****         DMAC->Channel[0].CHINTFLAG.reg = DMAC_CHINTENCLR_TERR;
  50:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
  51:tmk_core/protocol/arm_atsam/led_matrix.c **** }
  52:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  53:tmk_core/protocol/arm_atsam/led_matrix.c **** issi3733_driver_t issidrv[ISSI3733_DRIVER_COUNT];
  54:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  55:tmk_core/protocol/arm_atsam/led_matrix.c **** issi3733_led_t led_map[ISSI3733_LED_COUNT] = ISSI3733_LED_MAP;
  56:tmk_core/protocol/arm_atsam/led_matrix.c **** RGB            led_buffer[ISSI3733_LED_COUNT];
  57:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  58:tmk_core/protocol/arm_atsam/led_matrix.c **** uint8_t gcr_desired;
  59:tmk_core/protocol/arm_atsam/led_matrix.c **** uint8_t gcr_actual;
  60:tmk_core/protocol/arm_atsam/led_matrix.c **** uint8_t gcr_actual_last;
  61:tmk_core/protocol/arm_atsam/led_matrix.c **** #ifdef USE_MASSDROP_CONFIGURATOR
  62:tmk_core/protocol/arm_atsam/led_matrix.c **** uint8_t gcr_breathe;
  63:tmk_core/protocol/arm_atsam/led_matrix.c **** float   breathe_mult;
  64:tmk_core/protocol/arm_atsam/led_matrix.c **** float   pomod;
  65:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif
  66:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  67:tmk_core/protocol/arm_atsam/led_matrix.c **** #define ACT_GCR_NONE 0
  68:tmk_core/protocol/arm_atsam/led_matrix.c **** #define ACT_GCR_INC 1
  69:tmk_core/protocol/arm_atsam/led_matrix.c **** #define ACT_GCR_DEC 2
  70:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  71:tmk_core/protocol/arm_atsam/led_matrix.c **** #define LED_GCR_STEP_AUTO 2
  72:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  73:tmk_core/protocol/arm_atsam/led_matrix.c **** static uint8_t gcr_min_counter;
  74:tmk_core/protocol/arm_atsam/led_matrix.c **** static uint8_t v_5v_cat_hit;
  75:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  76:tmk_core/protocol/arm_atsam/led_matrix.c **** // WARNING: Automatic GCR is in place to prevent USB shutdown and LED driver overloading
  77:tmk_core/protocol/arm_atsam/led_matrix.c **** void gcr_compute(void) {
  78:tmk_core/protocol/arm_atsam/led_matrix.c ****     uint8_t action  = ACT_GCR_NONE;
  79:tmk_core/protocol/arm_atsam/led_matrix.c ****     uint8_t gcr_use = gcr_desired;
  80:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  81:tmk_core/protocol/arm_atsam/led_matrix.c **** #ifdef USE_MASSDROP_CONFIGURATOR
  82:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (led_animation_breathing) {
  83:tmk_core/protocol/arm_atsam/led_matrix.c ****         gcr_use = gcr_breathe;
  84:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
  85:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif
  86:tmk_core/protocol/arm_atsam/led_matrix.c **** 
  87:tmk_core/protocol/arm_atsam/led_matrix.c ****     // If the 5v takes a catastrophic hit, disable the LED drivers briefly, assert auto gcr mode, m
  88:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (v_5v < V5_CAT) {
  89:tmk_core/protocol/arm_atsam/led_matrix.c ****         I2C3733_Control_Set(0);
  90:tmk_core/protocol/arm_atsam/led_matrix.c ****         // CDC_print("USB: WARNING: 5V catastrophic level reached! Disabling LED drivers!\r\n"); //
  91:tmk_core/protocol/arm_atsam/led_matrix.c ****         v_5v_cat_hit = 20;  //~100ms recover
  92:tmk_core/protocol/arm_atsam/led_matrix.c ****         gcr_actual   = 0;   // Minimize GCR
  93:tmk_core/protocol/arm_atsam/led_matrix.c ****         usb_gcr_auto = 1;   // Force auto mode enabled
  94:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
  95:tmk_core/protocol/arm_atsam/led_matrix.c ****     } else if (v_5v_cat_hit > 1) {
  96:tmk_core/protocol/arm_atsam/led_matrix.c ****         v_5v_cat_hit--;
  97:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
  98:tmk_core/protocol/arm_atsam/led_matrix.c ****     } else if (v_5v_cat_hit == 1) {
  99:tmk_core/protocol/arm_atsam/led_matrix.c ****         I2C3733_Control_Set(1);
 100:tmk_core/protocol/arm_atsam/led_matrix.c ****         CDC_print("USB: WARNING: Re-enabling LED drivers\r\n");
 101:tmk_core/protocol/arm_atsam/led_matrix.c ****         v_5v_cat_hit = 0;
 102:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
 103:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 104:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 105:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (usb_gcr_auto) {
 106:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (v_5v_avg < V5_LOW)
 107:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_DEC;
 108:tmk_core/protocol/arm_atsam/led_matrix.c ****         else if (v_5v_avg > V5_HIGH && gcr_actual < gcr_use)
 109:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_INC;
 110:tmk_core/protocol/arm_atsam/led_matrix.c ****         else if (gcr_actual > gcr_use)
 111:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_DEC;
 112:tmk_core/protocol/arm_atsam/led_matrix.c ****     } else {
 113:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (gcr_actual < gcr_use)
 114:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_INC;
 115:tmk_core/protocol/arm_atsam/led_matrix.c ****         else if (gcr_actual > gcr_use)
 116:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_DEC;
 117:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 118:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 119:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (action == ACT_GCR_NONE) {
 120:tmk_core/protocol/arm_atsam/led_matrix.c ****         gcr_min_counter = 0;
 121:tmk_core/protocol/arm_atsam/led_matrix.c ****     } else if (action == ACT_GCR_INC) {
 122:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (LED_GCR_STEP_AUTO > LED_GCR_MAX - gcr_actual)
 123:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_actual = LED_GCR_MAX;  // Obey max and prevent wrapping
 124:tmk_core/protocol/arm_atsam/led_matrix.c ****         else
 125:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_actual += LED_GCR_STEP_AUTO;
 126:tmk_core/protocol/arm_atsam/led_matrix.c ****         gcr_min_counter = 0;
 127:tmk_core/protocol/arm_atsam/led_matrix.c ****     } else if (action == ACT_GCR_DEC) {
 128:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (LED_GCR_STEP_AUTO > gcr_actual)  // Prevent wrapping
 129:tmk_core/protocol/arm_atsam/led_matrix.c ****         {
 130:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_actual = 0;
 131:tmk_core/protocol/arm_atsam/led_matrix.c ****             // At this point, power can no longer be cut from the LED drivers, so focus on cutting 
 132:tmk_core/protocol/arm_atsam/led_matrix.c ****             if (usb_extra_state != USB_EXTRA_STATE_DISABLED_UNTIL_REPLUG)  // If not in a wait for 
 133:tmk_core/protocol/arm_atsam/led_matrix.c ****             {
 134:tmk_core/protocol/arm_atsam/led_matrix.c ****                 if (usb_extra_state == USB_EXTRA_STATE_ENABLED)  // If extra usb is enabled
 135:tmk_core/protocol/arm_atsam/led_matrix.c ****                 {
 136:tmk_core/protocol/arm_atsam/led_matrix.c ****                     gcr_min_counter++;
 137:tmk_core/protocol/arm_atsam/led_matrix.c ****                     if (gcr_min_counter > 200)  // 5ms per check = 1s delay
 138:tmk_core/protocol/arm_atsam/led_matrix.c ****                     {
 139:tmk_core/protocol/arm_atsam/led_matrix.c ****                         USB_ExtraSetState(USB_EXTRA_STATE_DISABLED_UNTIL_REPLUG);
 140:tmk_core/protocol/arm_atsam/led_matrix.c ****                         usb_extra_manual = 0;  // Force disable manual mode of extra port
 141:tmk_core/protocol/arm_atsam/led_matrix.c ****                         if (usb_extra_manual)
 142:tmk_core/protocol/arm_atsam/led_matrix.c ****                             CDC_print("USB: Disabling extra port until replug and manual mode toggl
 143:tmk_core/protocol/arm_atsam/led_matrix.c ****                         else
 144:tmk_core/protocol/arm_atsam/led_matrix.c ****                             CDC_print("USB: Disabling extra port until replug!\r\n");
 145:tmk_core/protocol/arm_atsam/led_matrix.c ****                     }
 146:tmk_core/protocol/arm_atsam/led_matrix.c ****                 }
 147:tmk_core/protocol/arm_atsam/led_matrix.c ****             }
 148:tmk_core/protocol/arm_atsam/led_matrix.c ****         } else {
 149:tmk_core/protocol/arm_atsam/led_matrix.c ****             // Power successfully cut back from LED drivers
 150:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_actual -= LED_GCR_STEP_AUTO;
 151:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_min_counter = 0;
 152:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 153:tmk_core/protocol/arm_atsam/led_matrix.c **** #ifdef USE_MASSDROP_CONFIGURATOR
 154:tmk_core/protocol/arm_atsam/led_matrix.c ****             // If breathe mode is active, the top end can fluctuate if the host can not supply enou
 155:tmk_core/protocol/arm_atsam/led_matrix.c ****             // So set the breathe GCR to where it becomes stable
 156:tmk_core/protocol/arm_atsam/led_matrix.c ****             if (led_animation_breathing == 1) {
 157:tmk_core/protocol/arm_atsam/led_matrix.c ****                 gcr_breathe = gcr_actual;
 158:tmk_core/protocol/arm_atsam/led_matrix.c ****                 // PS: At this point, setting breathing to exhale makes a noticebly shorter cycle
 159:tmk_core/protocol/arm_atsam/led_matrix.c ****                 //    and the same would happen maybe one or two more times. Therefore I'm favoring
 160:tmk_core/protocol/arm_atsam/led_matrix.c ****                 //    powering through one full breathe and letting gcr settle completely
 161:tmk_core/protocol/arm_atsam/led_matrix.c ****             }
 162:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif
 163:tmk_core/protocol/arm_atsam/led_matrix.c ****         }
 164:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 165:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 166:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 167:tmk_core/protocol/arm_atsam/led_matrix.c **** void issi3733_prepare_arrays(void) {
 168:tmk_core/protocol/arm_atsam/led_matrix.c ****     memset(issidrv, 0, sizeof(issi3733_driver_t) * ISSI3733_DRIVER_COUNT);
 169:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 170:tmk_core/protocol/arm_atsam/led_matrix.c ****     int     i;
 171:tmk_core/protocol/arm_atsam/led_matrix.c ****     uint8_t addrs[ISSI3733_DRIVER_COUNT] = ISSI3773_DRIVER_ADDRESSES;
 172:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 173:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (i = 0; i < ISSI3733_DRIVER_COUNT; i++) {
 174:tmk_core/protocol/arm_atsam/led_matrix.c ****         issidrv[i].addr = addrs[i];
 175:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 176:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 177:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (uint8_t i = 0; i < ISSI3733_LED_COUNT; i++) {
 178:tmk_core/protocol/arm_atsam/led_matrix.c ****         // BYTE: 1 + (SW-1)*16 + (CS-1)
 179:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.g = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swg - 1) * 16
 180:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.r = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swr - 1) * 16
 181:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.b = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swb - 1) * 16
 182:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 183:tmk_core/protocol/arm_atsam/led_matrix.c ****         // BYTE: 1 + (SW-1)*2 + (CS-1)/8
 184:tmk_core/protocol/arm_atsam/led_matrix.c ****         // BIT: (CS-1)%8
 185:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swg - 1) * 2 + (led_map[i].ad
 186:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swr - 1) * 2 + (led_map[i].ad
 187:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swb - 1) * 2 + (led_map[i].ad
 188:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 189:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 190:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 191:tmk_core/protocol/arm_atsam/led_matrix.c **** void led_matrix_prepare(void) {
 192:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (uint8_t i = 0; i < ISSI3733_LED_COUNT; i++) {
 193:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.r = 0;
 194:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.g = 0;
 195:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.b = 0;
 196:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 197:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 198:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 199:tmk_core/protocol/arm_atsam/led_matrix.c **** void led_set_one(int i, uint8_t r, uint8_t g, uint8_t b) {
  28              		.loc 1 199 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 200:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (i < ISSI3733_LED_COUNT) {
  33              		.loc 1 200 0
  34 0000 6828     		cmp	r0, #104
 199:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (i < ISSI3733_LED_COUNT) {
  35              		.loc 1 199 0
  36 0002 30B5     		push	{r4, r5, lr}
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 200 0
  42 0004 06DC     		bgt	.L1
 201:tmk_core/protocol/arm_atsam/led_matrix.c **** #ifdef USE_MASSDROP_CONFIGURATOR
 202:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_matrix_massdrop_config_override(i);
 203:tmk_core/protocol/arm_atsam/led_matrix.c **** #else
 204:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_buffer[i].r = r;
  43              		.loc 1 204 0
  44 0006 044D     		ldr	r5, .L3
  45 0008 00EB4000 		add	r0, r0, r0, lsl #1
  46              	.LVL1:
  47 000c 2C18     		adds	r4, r5, r0
 205:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_buffer[i].g = g;
  48              		.loc 1 205 0
  49 000e 2A54     		strb	r2, [r5, r0]
 204:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_buffer[i].g = g;
  50              		.loc 1 204 0
  51 0010 6170     		strb	r1, [r4, #1]
 206:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_buffer[i].b = b;
  52              		.loc 1 206 0
  53 0012 A370     		strb	r3, [r4, #2]
  54              	.L1:
 207:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif
 208:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 209:tmk_core/protocol/arm_atsam/led_matrix.c **** }
  55              		.loc 1 209 0
  56 0014 30BD     		pop	{r4, r5, pc}
  57              	.L4:
  58 0016 00BF     		.align	2
  59              	.L3:
  60 0018 00000000 		.word	led_buffer
  61              		.cfi_endproc
  62              	.LFE150:
  64              		.section	.text.flush,"ax",%progbits
  65              		.align	1
  66              		.global	flush
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv4-sp-d16
  72              	flush:
  73              	.LFB153:
 210:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 211:tmk_core/protocol/arm_atsam/led_matrix.c **** void led_set_all(uint8_t r, uint8_t g, uint8_t b) {
 212:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (uint8_t i = 0; i < ISSI3733_LED_COUNT; i++) {
 213:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_set_one(i, r, g, b);
 214:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 215:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 216:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 217:tmk_core/protocol/arm_atsam/led_matrix.c **** void init(void) {
 218:tmk_core/protocol/arm_atsam/led_matrix.c ****     DBGC(DC_LED_MATRIX_INIT_BEGIN);
 219:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 220:tmk_core/protocol/arm_atsam/led_matrix.c ****     issi3733_prepare_arrays();
 221:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 222:tmk_core/protocol/arm_atsam/led_matrix.c ****     led_matrix_prepare();
 223:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 224:tmk_core/protocol/arm_atsam/led_matrix.c ****     gcr_min_counter = 0;
 225:tmk_core/protocol/arm_atsam/led_matrix.c ****     v_5v_cat_hit    = 0;
 226:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 227:tmk_core/protocol/arm_atsam/led_matrix.c ****     DBGC(DC_LED_MATRIX_INIT_COMPLETE);
 228:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 229:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 230:tmk_core/protocol/arm_atsam/led_matrix.c **** void flush(void) {
  74              		.loc 1 230 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 70B5     		push	{r4, r5, r6, lr}
  79              		.cfi_def_cfa_offset 16
  80              		.cfi_offset 4, -16
  81              		.cfi_offset 5, -12
  82              		.cfi_offset 6, -8
  83              		.cfi_offset 14, -4
 231:tmk_core/protocol/arm_atsam/led_matrix.c **** #ifdef USE_MASSDROP_CONFIGURATOR
 232:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (!led_enabled) {
 233:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
 234:tmk_core/protocol/arm_atsam/led_matrix.c ****     }  // Prevent calculations and I2C traffic if LED drivers are not enabled
 235:tmk_core/protocol/arm_atsam/led_matrix.c **** #else
 236:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (!sr_exp_data.bit.SDB_N) {
  84              		.loc 1 236 0
  85 0002 304B     		ldr	r3, .L24
  86 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87 0006 DB06     		lsls	r3, r3, #27
  88 0008 5AD5     		bpl	.L5
 237:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
 238:tmk_core/protocol/arm_atsam/led_matrix.c ****     }  // Prevent calculations and I2C traffic if LED drivers are not enabled
 239:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif
 240:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 241:tmk_core/protocol/arm_atsam/led_matrix.c ****     // Wait for previous transfer to complete
 242:tmk_core/protocol/arm_atsam/led_matrix.c ****     while (i2c_led_q_running) {
  89              		.loc 1 242 0
  90 000a 2F4A     		ldr	r2, .L24+4
  91              	.L7:
  92              		.loc 1 242 0 is_stmt 0 discriminator 1
  93 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  94 000e 002B     		cmp	r3, #0
  95 0010 FCD1     		bne	.L7
  96 0012 2E4B     		ldr	r3, .L24+8
  97 0014 2E4A     		ldr	r2, .L24+12
  98 0016 2F49     		ldr	r1, .L24+16
  99              	.L8:
 100              	.LBB2:
 243:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 244:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 245:tmk_core/protocol/arm_atsam/led_matrix.c ****     // Copy buffer to live DMA region
 246:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (uint8_t i = 0; i < ISSI3733_LED_COUNT; i++) {
 247:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.r = led_buffer[i].r;
 101              		.loc 1 247 0 is_stmt 1 discriminator 3
 102 0018 5868     		ldr	r0, [r3, #4]
 103 001a 5478     		ldrb	r4, [r2, #1]	@ zero_extendqisi2
 104 001c 0470     		strb	r4, [r0]
 248:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.g = led_buffer[i].g;
 105              		.loc 1 248 0 discriminator 3
 106 001e 9868     		ldr	r0, [r3, #8]
 107 0020 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 108 0022 0470     		strb	r4, [r0]
 249:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.b = led_buffer[i].b;
 109              		.loc 1 249 0 discriminator 3
 110 0024 D868     		ldr	r0, [r3, #12]
 111 0026 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 112 0028 0470     		strb	r4, [r0]
 113              	.LVL2:
 114 002a 2C33     		adds	r3, r3, #44
 246:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.r = led_buffer[i].r;
 115              		.loc 1 246 0 discriminator 3
 116 002c 8B42     		cmp	r3, r1
 117 002e 02F10302 		add	r2, r2, #3
 118 0032 F1D1     		bne	.L8
 119              	.LBE2:
 250:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 251:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 252:tmk_core/protocol/arm_atsam/led_matrix.c **** #ifdef USE_MASSDROP_CONFIGURATOR
 253:tmk_core/protocol/arm_atsam/led_matrix.c ****     breathe_mult = 1;
 254:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 255:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (led_animation_breathing) {
 256:tmk_core/protocol/arm_atsam/led_matrix.c ****         //+60us 119 LED
 257:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_animation_breathe_cur += BREATHE_STEP * breathe_dir;
 258:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 259:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (led_animation_breathe_cur >= BREATHE_MAX_STEP)
 260:tmk_core/protocol/arm_atsam/led_matrix.c ****             breathe_dir = -1;
 261:tmk_core/protocol/arm_atsam/led_matrix.c ****         else if (led_animation_breathe_cur <= BREATHE_MIN_STEP)
 262:tmk_core/protocol/arm_atsam/led_matrix.c ****             breathe_dir = 1;
 263:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 264:tmk_core/protocol/arm_atsam/led_matrix.c ****         // Brightness curve created for 256 steps, 0 - ~98%
 265:tmk_core/protocol/arm_atsam/led_matrix.c ****         breathe_mult = 0.000015 * led_animation_breathe_cur * led_animation_breathe_cur;
 266:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (breathe_mult > 1)
 267:tmk_core/protocol/arm_atsam/led_matrix.c ****             breathe_mult = 1;
 268:tmk_core/protocol/arm_atsam/led_matrix.c ****         else if (breathe_mult < 0)
 269:tmk_core/protocol/arm_atsam/led_matrix.c ****             breathe_mult = 0;
 270:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 271:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 272:tmk_core/protocol/arm_atsam/led_matrix.c ****     // This should only be performed once per frame
 273:tmk_core/protocol/arm_atsam/led_matrix.c ****     pomod = (float)((g_rgb_counters.tick / 10) % (uint32_t)(1000.0f / led_animation_speed)) / 10.0f
 274:tmk_core/protocol/arm_atsam/led_matrix.c ****     pomod *= 100.0f;
 275:tmk_core/protocol/arm_atsam/led_matrix.c ****     pomod = (uint32_t)pomod % 10000;
 276:tmk_core/protocol/arm_atsam/led_matrix.c ****     pomod /= 100.0f;
 277:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 278:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif  // USE_MASSDROP_CONFIGURATOR
 279:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 280:tmk_core/protocol/arm_atsam/led_matrix.c ****     uint8_t drvid;
 281:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 282:tmk_core/protocol/arm_atsam/led_matrix.c ****     // NOTE: GCR does not need to be timed with LED processing, but there is really no harm
 283:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (gcr_actual != gcr_actual_last) {
 120              		.loc 1 283 0
 121 0034 284E     		ldr	r6, .L24+20
 122 0036 294D     		ldr	r5, .L24+24
 123 0038 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 124 003a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 125 003c 8842     		cmp	r0, r1
 126 003e 1CD0     		beq	.L9
 284:tmk_core/protocol/arm_atsam/led_matrix.c ****         for (drvid = 0; drvid < ISSI3733_DRIVER_COUNT; drvid++) I2C_LED_Q_GCR(drvid);  // Queue dat
 127              		.loc 1 284 0
 128 0040 0024     		movs	r4, #0
 129              	.L11:
 130              	.LVL3:
 131              		.loc 1 284 0 is_stmt 0 discriminator 6
 132 0042 0720     		movs	r0, #7
 133 0044 FFF7FEFF 		bl	i2c_led_q_request_room
 134              	.LVL4:
 135 0048 A0B1     		cbz	r0, .L10
 136              		.loc 1 284 0 discriminator 2
 137 004a 6520     		movs	r0, #101
 138 004c FFF7FEFF 		bl	i2c_led_q_add
 139              	.LVL5:
 140 0050 2046     		mov	r0, r4
 141 0052 FFF7FEFF 		bl	i2c_led_q_add
 142              	.LVL6:
 143 0056 6620     		movs	r0, #102
 144 0058 FFF7FEFF 		bl	i2c_led_q_add
 145              	.LVL7:
 146 005c 2046     		mov	r0, r4
 147 005e FFF7FEFF 		bl	i2c_led_q_add
 148              	.LVL8:
 149 0062 0320     		movs	r0, #3
 150 0064 FFF7FEFF 		bl	i2c_led_q_add
 151              	.LVL9:
 152 0068 6820     		movs	r0, #104
 153 006a FFF7FEFF 		bl	i2c_led_q_add
 154              	.LVL10:
 155 006e 2046     		mov	r0, r4
 156 0070 FFF7FEFF 		bl	i2c_led_q_add
 157              	.LVL11:
 158              	.L10:
 159              		.loc 1 284 0 discriminator 4
 160 0074 04B3     		cbz	r4, .L14
 285:tmk_core/protocol/arm_atsam/led_matrix.c ****         gcr_actual_last = gcr_actual;
 161              		.loc 1 285 0 is_stmt 1
 162 0076 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 163 0078 2B70     		strb	r3, [r5]
 164              	.LVL12:
 165              	.L9:
 284:tmk_core/protocol/arm_atsam/led_matrix.c ****         for (drvid = 0; drvid < ISSI3733_DRIVER_COUNT; drvid++) I2C_LED_Q_GCR(drvid);  // Queue dat
 166              		.loc 1 284 0 discriminator 6
 167 007a 0024     		movs	r4, #0
 168              	.L13:
 169              	.LVL13:
 286:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 287:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 288:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (drvid = 0; drvid < ISSI3733_DRIVER_COUNT; drvid++) I2C_LED_Q_PWM(drvid);  // Queue data
 170              		.loc 1 288 0 discriminator 6
 171 007c 0720     		movs	r0, #7
 172 007e FFF7FEFF 		bl	i2c_led_q_request_room
 173              	.LVL14:
 174 0082 A0B1     		cbz	r0, .L12
 175              		.loc 1 288 0 is_stmt 0 discriminator 2
 176 0084 6520     		movs	r0, #101
 177 0086 FFF7FEFF 		bl	i2c_led_q_add
 178              	.LVL15:
 179 008a 2046     		mov	r0, r4
 180 008c FFF7FEFF 		bl	i2c_led_q_add
 181              	.LVL16:
 182 0090 6620     		movs	r0, #102
 183 0092 FFF7FEFF 		bl	i2c_led_q_add
 184              	.LVL17:
 185 0096 2046     		mov	r0, r4
 186 0098 FFF7FEFF 		bl	i2c_led_q_add
 187              	.LVL18:
 188 009c 0120     		movs	r0, #1
 189 009e FFF7FEFF 		bl	i2c_led_q_add
 190              	.LVL19:
 191 00a2 6720     		movs	r0, #103
 192 00a4 FFF7FEFF 		bl	i2c_led_q_add
 193              	.LVL20:
 194 00a8 2046     		mov	r0, r4
 195 00aa FFF7FEFF 		bl	i2c_led_q_add
 196              	.LVL21:
 197              	.L12:
 198              		.loc 1 288 0 discriminator 4
 199 00ae 2CB1     		cbz	r4, .L15
 289:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 290:tmk_core/protocol/arm_atsam/led_matrix.c ****     i2c_led_q_run();
 291:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 200              		.loc 1 291 0 is_stmt 1
 201 00b0 BDE87040 		pop	{r4, r5, r6, lr}
 202              		.cfi_remember_state
 203              		.cfi_restore 14
 204              		.cfi_restore 6
 205              		.cfi_restore 5
 206              		.cfi_restore 4
 207              		.cfi_def_cfa_offset 0
 208              	.LVL22:
 290:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 209              		.loc 1 290 0
 210 00b4 FFF7FEBF 		b	i2c_led_q_run
 211              	.LVL23:
 212              	.L14:
 213              		.cfi_restore_state
 214 00b8 0124     		movs	r4, #1
 215              	.LVL24:
 216 00ba C2E7     		b	.L11
 217              	.LVL25:
 218              	.L15:
 219 00bc 0124     		movs	r4, #1
 220              	.LVL26:
 221 00be DDE7     		b	.L13
 222              	.L5:
 223              		.loc 1 291 0
 224 00c0 70BD     		pop	{r4, r5, r6, pc}
 225              	.L25:
 226 00c2 00BF     		.align	2
 227              	.L24:
 228 00c4 00000000 		.word	sr_exp_data
 229 00c8 00000000 		.word	i2c_led_q_running
 230 00cc 00000000 		.word	led_map
 231 00d0 00000000 		.word	led_buffer
 232 00d4 0C120000 		.word	led_map+4620
 233 00d8 00000000 		.word	gcr_actual
 234 00dc 00000000 		.word	gcr_actual_last
 235              		.cfi_endproc
 236              	.LFE153:
 238              		.section	.text.led_set_all,"ax",%progbits
 239              		.align	1
 240              		.global	led_set_all
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	led_set_all:
 247              	.LFB151:
 211:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (uint8_t i = 0; i < ISSI3733_LED_COUNT; i++) {
 248              		.loc 1 211 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL27:
 253 0000 054B     		ldr	r3, .L29
 254 0002 10B5     		push	{r4, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 4, -8
 257              		.cfi_offset 14, -4
 258 0004 03F23B14 		addw	r4, r3, #315
 259              	.LVL28:
 260              	.L27:
 261              	.LBB6:
 262              	.LBB7:
 263              	.LBB8:
 204:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_buffer[i].g = g;
 264              		.loc 1 204 0 discriminator 3
 265 0008 5870     		strb	r0, [r3, #1]
 205:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_buffer[i].b = b;
 266              		.loc 1 205 0 discriminator 3
 267 000a 1970     		strb	r1, [r3]
 206:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif
 268              		.loc 1 206 0 discriminator 3
 269 000c 9A70     		strb	r2, [r3, #2]
 270              	.LVL29:
 271 000e 0333     		adds	r3, r3, #3
 272              	.LBE8:
 273              	.LBE7:
 212:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_set_one(i, r, g, b);
 274              		.loc 1 212 0 discriminator 3
 275 0010 A342     		cmp	r3, r4
 276 0012 F9D1     		bne	.L27
 277              	.LBE6:
 215:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 278              		.loc 1 215 0
 279 0014 10BD     		pop	{r4, pc}
 280              	.L30:
 281 0016 00BF     		.align	2
 282              	.L29:
 283 0018 00000000 		.word	led_buffer
 284              		.cfi_endproc
 285              	.LFE151:
 287              		.section	.text.SERCOM1_0_Handler,"ax",%progbits
 288              		.align	1
 289              		.global	SERCOM1_0_Handler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	SERCOM1_0_Handler:
 296              	.LFB145:
  29:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (SERCOM1->I2CM.INTFLAG.bit.ERROR) {
 297              		.loc 1 29 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
  30:tmk_core/protocol/arm_atsam/led_matrix.c ****         SERCOM1->I2CM.INTFLAG.reg = SERCOM_I2CM_INTENCLR_ERROR;
 302              		.loc 1 30 0
 303 0000 034B     		ldr	r3, .L36
 304 0002 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 305 0004 D209     		lsrs	r2, r2, #7
  31:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 306              		.loc 1 31 0
 307 0006 1CBF     		itt	ne
 308 0008 8022     		movne	r2, #128
 309 000a 1A76     		strbne	r2, [r3, #24]
  33:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 310              		.loc 1 33 0
 311 000c 7047     		bx	lr
 312              	.L37:
 313 000e 00BF     		.align	2
 314              	.L36:
 315 0010 00340040 		.word	1073755136
 316              		.cfi_endproc
 317              	.LFE145:
 319              		.section	.text.DMAC_0_Handler,"ax",%progbits
 320              		.align	1
 321              		.global	DMAC_0_Handler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	DMAC_0_Handler:
 328              	.LFB146:
  35:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (DMAC->Channel[0].CHINTFLAG.bit.TCMPL) {
 329              		.loc 1 35 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
  36:tmk_core/protocol/arm_atsam/led_matrix.c ****         DMAC->Channel[0].CHINTFLAG.reg = DMAC_CHINTENCLR_TCMPL;
 337              		.loc 1 36 0
 338 0002 0C4B     		ldr	r3, .L44
 339 0004 93F84E20 		ldrb	r2, [r3, #78]	@ zero_extendqisi2
 340 0008 9107     		lsls	r1, r2, #30
 341 000a 0BD5     		bpl	.L39
  37:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 342              		.loc 1 37 0
 343 000c 0222     		movs	r2, #2
 344 000e 83F84E20 		strb	r2, [r3, #78]
  39:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 345              		.loc 1 39 0
 346 0012 FFF7FEFF 		bl	i2c1_stop
 347              	.LVL30:
  41:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 348              		.loc 1 41 0
 349 0016 084B     		ldr	r3, .L44+4
 350 0018 0022     		movs	r2, #0
 351 001a 1A70     		strb	r2, [r3]
  51:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 352              		.loc 1 51 0
 353 001c BDE80840 		pop	{r3, lr}
 354              		.cfi_remember_state
 355              		.cfi_restore 14
 356              		.cfi_restore 3
 357              		.cfi_def_cfa_offset 0
  43:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 358              		.loc 1 43 0
 359 0020 FFF7FEBF 		b	i2c_led_q_run
 360              	.LVL31:
 361              	.L39:
 362              		.cfi_restore_state
  48:tmk_core/protocol/arm_atsam/led_matrix.c ****         DMAC->Channel[0].CHINTFLAG.reg = DMAC_CHINTENCLR_TERR;
 363              		.loc 1 48 0
 364 0024 93F84E20 		ldrb	r2, [r3, #78]	@ zero_extendqisi2
 365 0028 D207     		lsls	r2, r2, #31
  49:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 366              		.loc 1 49 0
 367 002a 44BF     		itt	mi
 368 002c 0122     		movmi	r2, #1
 369 002e 83F84E20 		strbmi	r2, [r3, #78]
  51:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 370              		.loc 1 51 0
 371 0032 08BD     		pop	{r3, pc}
 372              	.L45:
 373              		.align	2
 374              	.L44:
 375 0034 00A00041 		.word	1090560000
 376 0038 00000000 		.word	i2c_led_q_running
 377              		.cfi_endproc
 378              	.LFE146:
 380              		.section	.text.gcr_compute,"ax",%progbits
 381              		.align	1
 382              		.global	gcr_compute
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu fpv4-sp-d16
 388              	gcr_compute:
 389              	.LFB147:
  77:tmk_core/protocol/arm_atsam/led_matrix.c ****     uint8_t action  = ACT_GCR_NONE;
 390              		.loc 1 77 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              	.LVL32:
 395 0000 38B5     		push	{r3, r4, r5, lr}
 396              		.cfi_def_cfa_offset 16
 397              		.cfi_offset 3, -16
 398              		.cfi_offset 4, -12
 399              		.cfi_offset 5, -8
 400              		.cfi_offset 14, -4
  88:tmk_core/protocol/arm_atsam/led_matrix.c ****         I2C3733_Control_Set(0);
 401              		.loc 1 88 0
 402 0002 2E4B     		ldr	r3, .L65
 403 0004 2E4C     		ldr	r4, .L65+4
 404 0006 1A88     		ldrh	r2, [r3]
 405 0008 40F69703 		movw	r3, #2199
 406 000c 9A42     		cmp	r2, r3
 407 000e 0BD8     		bhi	.L47
  89:tmk_core/protocol/arm_atsam/led_matrix.c ****         // CDC_print("USB: WARNING: 5V catastrophic level reached! Disabling LED drivers!\r\n"); //
 408              		.loc 1 89 0
 409 0010 0020     		movs	r0, #0
 410 0012 FFF7FEFF 		bl	I2C3733_Control_Set
 411              	.LVL33:
  91:tmk_core/protocol/arm_atsam/led_matrix.c ****         gcr_actual   = 0;   // Minimize GCR
 412              		.loc 1 91 0
 413 0016 1423     		movs	r3, #20
 414 0018 2370     		strb	r3, [r4]
  92:tmk_core/protocol/arm_atsam/led_matrix.c ****         usb_gcr_auto = 1;   // Force auto mode enabled
 415              		.loc 1 92 0
 416 001a 2A4B     		ldr	r3, .L65+8
 417 001c 0022     		movs	r2, #0
 418 001e 1A70     		strb	r2, [r3]
  93:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
 419              		.loc 1 93 0
 420 0020 294B     		ldr	r3, .L65+12
 421 0022 0122     		movs	r2, #1
 422 0024 1A70     		strb	r2, [r3]
 423              	.L46:
 165:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 424              		.loc 1 165 0
 425 0026 38BD     		pop	{r3, r4, r5, pc}
 426              	.LVL34:
 427              	.L47:
  95:tmk_core/protocol/arm_atsam/led_matrix.c ****         v_5v_cat_hit--;
 428              		.loc 1 95 0
 429 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 430 002a 0128     		cmp	r0, #1
 431 002c 02D9     		bls	.L49
  96:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
 432              		.loc 1 96 0
 433 002e 0138     		subs	r0, r0, #1
 434 0030 2070     		strb	r0, [r4]
  97:tmk_core/protocol/arm_atsam/led_matrix.c ****     } else if (v_5v_cat_hit == 1) {
 435              		.loc 1 97 0
 436 0032 F8E7     		b	.L46
 437              	.L49:
  98:tmk_core/protocol/arm_atsam/led_matrix.c ****         I2C3733_Control_Set(1);
 438              		.loc 1 98 0
 439 0034 07D1     		bne	.L50
  99:tmk_core/protocol/arm_atsam/led_matrix.c ****         CDC_print("USB: WARNING: Re-enabling LED drivers\r\n");
 440              		.loc 1 99 0
 441 0036 FFF7FEFF 		bl	I2C3733_Control_Set
 442              	.LVL35:
 100:tmk_core/protocol/arm_atsam/led_matrix.c ****         v_5v_cat_hit = 0;
 443              		.loc 1 100 0
 444 003a 2448     		ldr	r0, .L65+16
 445 003c FFF7FEFF 		bl	CDC_print
 446              	.LVL36:
 101:tmk_core/protocol/arm_atsam/led_matrix.c ****         return;
 447              		.loc 1 101 0
 448 0040 0023     		movs	r3, #0
 449 0042 2370     		strb	r3, [r4]
 102:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 450              		.loc 1 102 0
 451 0044 EFE7     		b	.L46
 452              	.LVL37:
 453              	.L50:
 105:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (v_5v_avg < V5_LOW)
 454              		.loc 1 105 0
 455 0046 2048     		ldr	r0, .L65+12
  79:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 456              		.loc 1 79 0
 457 0048 214B     		ldr	r3, .L65+20
 458 004a 1E4A     		ldr	r2, .L65+8
 105:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (v_5v_avg < V5_LOW)
 459              		.loc 1 105 0
 460 004c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  79:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 461              		.loc 1 79 0
 462 004e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 463 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 105:tmk_core/protocol/arm_atsam/led_matrix.c ****         if (v_5v_avg < V5_LOW)
 464              		.loc 1 105 0
 465 0052 78B1     		cbz	r0, .L51
 106:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_DEC;
 466              		.loc 1 106 0
 467 0054 1F48     		ldr	r0, .L65+24
 468 0056 0088     		ldrh	r0, [r0]
 469 0058 B0F51B6F 		cmp	r0, #2480
 470 005c 14D3     		bcc	.L52
 108:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_INC;
 471              		.loc 1 108 0
 472 005e 40F6EC15 		movw	r5, #2540
 473 0062 A842     		cmp	r0, r5
 474 0064 01D9     		bls	.L53
 108:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_INC;
 475              		.loc 1 108 0 is_stmt 0 discriminator 1
 476 0066 9942     		cmp	r1, r3
 477 0068 06D8     		bhi	.L54
 478              	.L53:
 110:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_DEC;
 479              		.loc 1 110 0 is_stmt 1
 480 006a 9942     		cmp	r1, r3
 481              	.L61:
 115:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_DEC;
 482              		.loc 1 115 0
 483 006c 0CD3     		bcc	.L52
 484              	.L63:
 151:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 485              		.loc 1 151 0
 486 006e 0023     		movs	r3, #0
 487 0070 6370     		strb	r3, [r4, #1]
 488 0072 D8E7     		b	.L46
 489              	.L51:
 113:tmk_core/protocol/arm_atsam/led_matrix.c ****             action = ACT_GCR_INC;
 490              		.loc 1 113 0
 491 0074 9942     		cmp	r1, r3
 492 0076 F9D9     		bls	.L61
 493              	.L54:
 122:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_actual = LED_GCR_MAX;  // Obey max and prevent wrapping
 494              		.loc 1 122 0
 495 0078 C3F1A501 		rsb	r1, r3, #165
 496 007c 0129     		cmp	r1, #1
 123:tmk_core/protocol/arm_atsam/led_matrix.c ****         else
 497              		.loc 1 123 0
 498 007e D4BF     		ite	le
 499 0080 A523     		movle	r3, #165
 125:tmk_core/protocol/arm_atsam/led_matrix.c ****         gcr_min_counter = 0;
 500              		.loc 1 125 0
 501 0082 0233     		addgt	r3, r3, #2
 502              	.L64:
 150:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_min_counter = 0;
 503              		.loc 1 150 0
 504 0084 1370     		strb	r3, [r2]
 505 0086 F2E7     		b	.L63
 506              	.L52:
 128:tmk_core/protocol/arm_atsam/led_matrix.c ****         {
 507              		.loc 1 128 0
 508 0088 012B     		cmp	r3, #1
 509 008a 15D8     		bhi	.L57
 132:tmk_core/protocol/arm_atsam/led_matrix.c ****             {
 510              		.loc 1 132 0
 511 008c 124B     		ldr	r3, .L65+28
 134:tmk_core/protocol/arm_atsam/led_matrix.c ****                 {
 512              		.loc 1 134 0
 513 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130:tmk_core/protocol/arm_atsam/led_matrix.c ****             // At this point, power can no longer be cut from the LED drivers, so focus on cutting 
 514              		.loc 1 130 0
 515 0090 0025     		movs	r5, #0
 134:tmk_core/protocol/arm_atsam/led_matrix.c ****                 {
 516              		.loc 1 134 0
 517 0092 012B     		cmp	r3, #1
 130:tmk_core/protocol/arm_atsam/led_matrix.c ****             // At this point, power can no longer be cut from the LED drivers, so focus on cutting 
 518              		.loc 1 130 0
 519 0094 1570     		strb	r5, [r2]
 134:tmk_core/protocol/arm_atsam/led_matrix.c ****                 {
 520              		.loc 1 134 0
 521 0096 C6D1     		bne	.L46
 136:tmk_core/protocol/arm_atsam/led_matrix.c ****                     if (gcr_min_counter > 200)  // 5ms per check = 1s delay
 522              		.loc 1 136 0
 523 0098 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 524 009a 0133     		adds	r3, r3, #1
 525 009c DBB2     		uxtb	r3, r3
 137:tmk_core/protocol/arm_atsam/led_matrix.c ****                     {
 526              		.loc 1 137 0
 527 009e C82B     		cmp	r3, #200
 136:tmk_core/protocol/arm_atsam/led_matrix.c ****                     if (gcr_min_counter > 200)  // 5ms per check = 1s delay
 528              		.loc 1 136 0
 529 00a0 6370     		strb	r3, [r4, #1]
 137:tmk_core/protocol/arm_atsam/led_matrix.c ****                     {
 530              		.loc 1 137 0
 531 00a2 C0D9     		bls	.L46
 139:tmk_core/protocol/arm_atsam/led_matrix.c ****                         usb_extra_manual = 0;  // Force disable manual mode of extra port
 532              		.loc 1 139 0
 533 00a4 0320     		movs	r0, #3
 534 00a6 FFF7FEFF 		bl	USB_ExtraSetState
 535              	.LVL38:
 140:tmk_core/protocol/arm_atsam/led_matrix.c ****                         if (usb_extra_manual)
 536              		.loc 1 140 0
 537 00aa 0C4B     		ldr	r3, .L65+32
 144:tmk_core/protocol/arm_atsam/led_matrix.c ****                     }
 538              		.loc 1 144 0
 539 00ac 0C48     		ldr	r0, .L65+36
 140:tmk_core/protocol/arm_atsam/led_matrix.c ****                         if (usb_extra_manual)
 540              		.loc 1 140 0
 541 00ae 1D70     		strb	r5, [r3]
 165:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 542              		.loc 1 165 0
 543 00b0 BDE83840 		pop	{r3, r4, r5, lr}
 544              		.cfi_remember_state
 545              		.cfi_restore 14
 546              		.cfi_restore 5
 547              		.cfi_restore 4
 548              		.cfi_restore 3
 549              		.cfi_def_cfa_offset 0
 144:tmk_core/protocol/arm_atsam/led_matrix.c ****                     }
 550              		.loc 1 144 0
 551 00b4 FFF7FEBF 		b	CDC_print
 552              	.LVL39:
 553              	.L57:
 554              		.cfi_restore_state
 150:tmk_core/protocol/arm_atsam/led_matrix.c ****             gcr_min_counter = 0;
 555              		.loc 1 150 0
 556 00b8 023B     		subs	r3, r3, #2
 557 00ba E3E7     		b	.L64
 558              	.L66:
 559              		.align	2
 560              	.L65:
 561 00bc 00000000 		.word	v_5v
 562 00c0 00000000 		.word	.LANCHOR0
 563 00c4 00000000 		.word	gcr_actual
 564 00c8 00000000 		.word	usb_gcr_auto
 565 00cc 00000000 		.word	.LC1
 566 00d0 00000000 		.word	gcr_desired
 567 00d4 00000000 		.word	v_5v_avg
 568 00d8 00000000 		.word	usb_extra_state
 569 00dc 00000000 		.word	usb_extra_manual
 570 00e0 28000000 		.word	.LC2
 571              		.cfi_endproc
 572              	.LFE147:
 574              		.section	.text.issi3733_prepare_arrays,"ax",%progbits
 575              		.align	1
 576              		.global	issi3733_prepare_arrays
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	issi3733_prepare_arrays:
 583              	.LFB148:
 167:tmk_core/protocol/arm_atsam/led_matrix.c ****     memset(issidrv, 0, sizeof(issi3733_driver_t) * ISSI3733_DRIVER_COUNT);
 584              		.loc 1 167 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 589              		.cfi_def_cfa_offset 40
 590              		.cfi_offset 3, -40
 591              		.cfi_offset 4, -36
 592              		.cfi_offset 5, -32
 593              		.cfi_offset 6, -28
 594              		.cfi_offset 7, -24
 595              		.cfi_offset 8, -20
 596              		.cfi_offset 9, -16
 597              		.cfi_offset 10, -12
 598              		.cfi_offset 11, -8
 599              		.cfi_offset 14, -4
 168:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 600              		.loc 1 168 0
 601 0004 2F4B     		ldr	r3, .L70
 602 0006 40F2C232 		movw	r2, #962
 603 000a 0021     		movs	r1, #0
 604 000c 1846     		mov	r0, r3
 605 000e FFF7FEFF 		bl	memset
 606              	.LVL40:
 174:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 607              		.loc 1 174 0
 608 0012 A022     		movs	r2, #160
 609 0014 0270     		strb	r2, [r0]
 610              	.LVL41:
 611 0016 2C49     		ldr	r1, .L70+4
 612 0018 DFF8B0C0 		ldr	ip, .L70+8
 613 001c BE22     		movs	r2, #190
 614 001e 80F8E121 		strb	r2, [r0, #481]
 615              	.LVL42:
 616 0022 40F2E119 		movw	r9, #481
 617              	.LBB9:
 185:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swr - 1) * 2 + (led_map[i].ad
 618              		.loc 1 185 0
 619 0026 4FF00808 		mov	r8, #8
 620 002a 4FF0010E 		mov	lr, #1
 621              	.LVL43:
 622              	.L68:
 179:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.r = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swr - 1) * 16
 623              		.loc 1 179 0 discriminator 3
 624 002e 0A7C     		ldrb	r2, [r1, #16]	@ zero_extendqisi2
 625 0030 CD7C     		ldrb	r5, [r1, #19]	@ zero_extendqisi2
 626 0032 91F811B0 		ldrb	fp, [r1, #17]	@ zero_extendqisi2
 180:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.b = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swb - 1) * 16
 627              		.loc 1 180 0 discriminator 3
 628 0036 8C7C     		ldrb	r4, [r1, #18]	@ zero_extendqisi2
 181:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 629              		.loc 1 181 0 discriminator 3
 630 0038 0F7D     		ldrb	r7, [r1, #20]	@ zero_extendqisi2
 179:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.r = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swr - 1) * 16
 631              		.loc 1 179 0 discriminator 3
 632 003a 013A     		subs	r2, r2, #1
 633 003c 09FB02F2 		mul	r2, r9, r2
 634 0040 02F14C0A 		add	r10, r2, #76
 635 0044 013D     		subs	r5, r5, #1
 636 0046 8244     		add	r10, r10, r0
 637 0048 0BEB0513 		add	r3, fp, r5, lsl #4
 638 004c 5344     		add	r3, r3, r10
 180:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.b = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swb - 1) * 16
 639              		.loc 1 180 0 discriminator 3
 640 004e 013C     		subs	r4, r4, #1
 179:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.r = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swr - 1) * 16
 641              		.loc 1 179 0 discriminator 3
 642 0050 8B60     		str	r3, [r1, #8]
 180:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.b = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swb - 1) * 16
 643              		.loc 1 180 0 discriminator 3
 644 0052 0BEB0413 		add	r3, fp, r4, lsl #4
 645 0056 5344     		add	r3, r3, r10
 181:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 646              		.loc 1 181 0 discriminator 3
 647 0058 013F     		subs	r7, r7, #1
 180:tmk_core/protocol/arm_atsam/led_matrix.c ****         led_map[i].rgb.b = issidrv[led_map[i].adr.drv - 1].pwm + 1 + ((led_map[i].adr.swb - 1) * 16
 648              		.loc 1 180 0 discriminator 3
 649 005a 4B60     		str	r3, [r1, #4]
 181:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 650              		.loc 1 181 0 discriminator 3
 651 005c 0BF1FF33 		add	r3, fp, #-1
 652 0060 0BEB071B 		add	fp, fp, r7, lsl #4
 653 0064 0AEB0B06 		add	r6, r10, fp
 654 0068 CE60     		str	r6, [r1, #12]
 185:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swr - 1) * 2 + (led_map[i].ad
 655              		.loc 1 185 0 discriminator 3
 656 006a D3F1000A 		rsbs	r10, r3, #0
 657 006e 93FBF8F6 		sdiv	r6, r3, r8
 658 0072 02F10102 		add	r2, r2, #1
 659 0076 06EB4505 		add	r5, r6, r5, lsl #1
 660 007a 0244     		add	r2, r2, r0
 661 007c 05F10105 		add	r5, r5, #1
 662 0080 0AF0070A 		and	r10, r10, #7
 663 0084 03F00703 		and	r3, r3, #7
 664 0088 58BF     		it	pl
 665 008a CAF10003 		rsbpl	r3, r10, #0
 666 008e 0EFA03F3 		lsl	r3, lr, r3
 667 0092 12F805A0 		ldrb	r10, [r2, r5]	@ zero_extendqisi2
 668 0096 5BB2     		sxtb	r3, r3
 669 0098 43EA0A0A 		orr	r10, r3, r10
 186:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swb - 1) * 2 + (led_map[i].ad
 670              		.loc 1 186 0 discriminator 3
 671 009c 06EB4404 		add	r4, r6, r4, lsl #1
 185:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swr - 1) * 2 + (led_map[i].ad
 672              		.loc 1 185 0 discriminator 3
 673 00a0 02F805A0 		strb	r10, [r2, r5]
 186:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swb - 1) * 2 + (led_map[i].ad
 674              		.loc 1 186 0 discriminator 3
 675 00a4 0134     		adds	r4, r4, #1
 187:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 676              		.loc 1 187 0 discriminator 3
 677 00a6 06EB4706 		add	r6, r6, r7, lsl #1
 186:tmk_core/protocol/arm_atsam/led_matrix.c ****         *(issidrv[led_map[i].adr.drv - 1].onoff + 1 + (led_map[i].adr.swb - 1) * 2 + (led_map[i].ad
 678              		.loc 1 186 0 discriminator 3
 679 00aa 155D     		ldrb	r5, [r2, r4]	@ zero_extendqisi2
 680 00ac 1D43     		orrs	r5, r5, r3
 681 00ae 1555     		strb	r5, [r2, r4]
 187:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 682              		.loc 1 187 0 discriminator 3
 683 00b0 0136     		adds	r6, r6, #1
 684 00b2 2C31     		adds	r1, r1, #44
 685 00b4 945D     		ldrb	r4, [r2, r6]	@ zero_extendqisi2
 177:tmk_core/protocol/arm_atsam/led_matrix.c ****         // BYTE: 1 + (SW-1)*16 + (CS-1)
 686              		.loc 1 177 0 discriminator 3
 687 00b6 8C45     		cmp	ip, r1
 187:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 688              		.loc 1 187 0 discriminator 3
 689 00b8 43EA0403 		orr	r3, r3, r4
 690 00bc 9355     		strb	r3, [r2, r6]
 177:tmk_core/protocol/arm_atsam/led_matrix.c ****         // BYTE: 1 + (SW-1)*16 + (CS-1)
 691              		.loc 1 177 0 discriminator 3
 692 00be B6D1     		bne	.L68
 693              	.LBE9:
 189:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 694              		.loc 1 189 0
 695 00c0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 696              	.L71:
 697              		.align	2
 698              	.L70:
 699 00c4 00000000 		.word	issidrv
 700 00c8 00000000 		.word	led_map
 701 00cc 0C120000 		.word	led_map+4620
 702              		.cfi_endproc
 703              	.LFE148:
 705              		.section	.text.led_matrix_prepare,"ax",%progbits
 706              		.align	1
 707              		.global	led_matrix_prepare
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu fpv4-sp-d16
 713              	led_matrix_prepare:
 714              	.LFB149:
 191:tmk_core/protocol/arm_atsam/led_matrix.c ****     for (uint8_t i = 0; i < ISSI3733_LED_COUNT; i++) {
 715              		.loc 1 191 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL44:
 721 0000 064B     		ldr	r3, .L75
 722 0002 0749     		ldr	r1, .L75+4
 723              	.LBB10:
 193:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.g = 0;
 724              		.loc 1 193 0
 725 0004 0022     		movs	r2, #0
 726              	.LVL45:
 727              	.L73:
 193:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.g = 0;
 728              		.loc 1 193 0 is_stmt 0 discriminator 3
 729 0006 5868     		ldr	r0, [r3, #4]
 730 0008 0270     		strb	r2, [r0]
 194:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.b = 0;
 731              		.loc 1 194 0 is_stmt 1 discriminator 3
 732 000a 9868     		ldr	r0, [r3, #8]
 733 000c 0270     		strb	r2, [r0]
 195:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 734              		.loc 1 195 0 discriminator 3
 735 000e D868     		ldr	r0, [r3, #12]
 736 0010 2C33     		adds	r3, r3, #44
 192:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.r = 0;
 737              		.loc 1 192 0 discriminator 3
 738 0012 8B42     		cmp	r3, r1
 195:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 739              		.loc 1 195 0 discriminator 3
 740 0014 0270     		strb	r2, [r0]
 192:tmk_core/protocol/arm_atsam/led_matrix.c ****         *led_map[i].rgb.r = 0;
 741              		.loc 1 192 0 discriminator 3
 742 0016 F6D1     		bne	.L73
 743              	.LBE10:
 197:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 744              		.loc 1 197 0
 745 0018 7047     		bx	lr
 746              	.L76:
 747 001a 00BF     		.align	2
 748              	.L75:
 749 001c 00000000 		.word	led_map
 750 0020 0C120000 		.word	led_map+4620
 751              		.cfi_endproc
 752              	.LFE149:
 754              		.section	.text.init,"ax",%progbits
 755              		.align	1
 756              		.global	init
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu fpv4-sp-d16
 762              	init:
 763              	.LFB152:
 217:tmk_core/protocol/arm_atsam/led_matrix.c ****     DBGC(DC_LED_MATRIX_INIT_BEGIN);
 764              		.loc 1 217 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768 0000 10B5     		push	{r4, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 4, -8
 771              		.cfi_offset 14, -4
 218:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 772              		.loc 1 218 0
 773 0002 074C     		ldr	r4, .L78
 774 0004 6B23     		movs	r3, #107
 775 0006 2360     		str	r3, [r4]
 220:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 776              		.loc 1 220 0
 777 0008 FFF7FEFF 		bl	issi3733_prepare_arrays
 778              	.LVL46:
 222:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 779              		.loc 1 222 0
 780 000c FFF7FEFF 		bl	led_matrix_prepare
 781              	.LVL47:
 224:tmk_core/protocol/arm_atsam/led_matrix.c ****     v_5v_cat_hit    = 0;
 782              		.loc 1 224 0
 783 0010 044B     		ldr	r3, .L78+4
 784 0012 0022     		movs	r2, #0
 785 0014 5A70     		strb	r2, [r3, #1]
 225:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 786              		.loc 1 225 0
 787 0016 1A70     		strb	r2, [r3]
 227:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 788              		.loc 1 227 0
 789 0018 6C23     		movs	r3, #108
 790 001a 2360     		str	r3, [r4]
 228:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 791              		.loc 1 228 0
 792 001c 10BD     		pop	{r4, pc}
 793              	.L79:
 794 001e 00BF     		.align	2
 795              	.L78:
 796 0020 00000000 		.word	debug_code
 797 0024 00000000 		.word	.LANCHOR0
 798              		.cfi_endproc
 799              	.LFE152:
 801              		.section	.text.led_matrix_indicators,"ax",%progbits
 802              		.align	1
 803              		.global	led_matrix_indicators
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	led_matrix_indicators:
 810              	.LFB154:
 292:tmk_core/protocol/arm_atsam/led_matrix.c **** 
 293:tmk_core/protocol/arm_atsam/led_matrix.c **** void led_matrix_indicators(void) {
 811              		.loc 1 293 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 816              		.cfi_def_cfa_offset 24
 817              		.cfi_offset 3, -24
 818              		.cfi_offset 4, -20
 819              		.cfi_offset 5, -16
 820              		.cfi_offset 6, -12
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 294:tmk_core/protocol/arm_atsam/led_matrix.c ****     uint8_t kbled = keyboard_leds();
 823              		.loc 1 294 0
 824 0002 FFF7FEFF 		bl	keyboard_leds
 825              	.LVL48:
 295:tmk_core/protocol/arm_atsam/led_matrix.c ****     if (kbled && rgb_matrix_config.enable) {
 826              		.loc 1 295 0
 827 0006 F8B1     		cbz	r0, .L80
 828              		.loc 1 295 0 is_stmt 0 discriminator 1
 829 0008 104B     		ldr	r3, .L94
 830 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 000c 9B07     		lsls	r3, r3, #30
 832 000e 1BD0     		beq	.L80
 833              	.LBB11:
 296:tmk_core/protocol/arm_atsam/led_matrix.c ****         for (uint8_t i = 0; i < ISSI3733_LED_COUNT; i++) {
 297:tmk_core/protocol/arm_atsam/led_matrix.c ****             if (
 298:tmk_core/protocol/arm_atsam/led_matrix.c **** #if USB_LED_NUM_LOCK_SCANCODE != 255
 299:tmk_core/protocol/arm_atsam/led_matrix.c ****                 (led_map[i].scan == USB_LED_NUM_LOCK_SCANCODE && (kbled & (1 << USB_LED_NUM_LOCK)))
 300:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif  // NUM LOCK
 301:tmk_core/protocol/arm_atsam/led_matrix.c **** #if USB_LED_CAPS_LOCK_SCANCODE != 255
 302:tmk_core/protocol/arm_atsam/led_matrix.c ****                 (led_map[i].scan == USB_LED_CAPS_LOCK_SCANCODE && (kbled & (1 << USB_LED_CAPS_LOCK)
 834              		.loc 1 302 0 is_stmt 1
 835 0010 0F4F     		ldr	r7, .L94+4
 836 0012 104D     		ldr	r5, .L94+8
 837              	.LBE11:
 838 0014 0023     		movs	r3, #0
 839              	.LBB12:
 840 0016 2C26     		movs	r6, #44
 841 0018 00F00200 		and	r0, r0, #2
 842              	.LVL49:
 843              	.L83:
 844 001c 06FB0372 		mla	r2, r6, r3, r7
 297:tmk_core/protocol/arm_atsam/led_matrix.c **** #if USB_LED_NUM_LOCK_SCANCODE != 255
 845              		.loc 1 297 0
 846 0020 92F82820 		ldrb	r2, [r2, #40]	@ zero_extendqisi2
 847 0024 1E2A     		cmp	r2, #30
 848 0026 0CD1     		bne	.L82
 849              		.loc 1 302 0
 850 0028 58B1     		cbz	r0, .L82
 851 002a 03EB4301 		add	r1, r3, r3, lsl #1
 852 002e 4A19     		adds	r2, r1, r5
 303:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif  // CAPS LOCK
 304:tmk_core/protocol/arm_atsam/led_matrix.c **** #if USB_LED_SCROLL_LOCK_SCANCODE != 255
 305:tmk_core/protocol/arm_atsam/led_matrix.c ****                 (led_map[i].scan == USB_LED_SCROLL_LOCK_SCANCODE && (kbled & (1 << USB_LED_SCROLL_L
 306:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif  // SCROLL LOCK
 307:tmk_core/protocol/arm_atsam/led_matrix.c **** #if USB_LED_COMPOSE_SCANCODE != 255
 308:tmk_core/protocol/arm_atsam/led_matrix.c ****                 (led_map[i].scan == USB_LED_COMPOSE_SCANCODE && (kbled & (1 << USB_LED_COMPOSE))) |
 309:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif  // COMPOSE
 310:tmk_core/protocol/arm_atsam/led_matrix.c **** #if USB_LED_KANA_SCANCODE != 255
 311:tmk_core/protocol/arm_atsam/led_matrix.c ****                 (led_map[i].scan == USB_LED_KANA_SCANCODE && (kbled & (1 << USB_LED_KANA))) ||
 312:tmk_core/protocol/arm_atsam/led_matrix.c **** #endif  // KANA
 313:tmk_core/protocol/arm_atsam/led_matrix.c ****                 (0)) {
 314:tmk_core/protocol/arm_atsam/led_matrix.c ****                 led_buffer[i].r = 255 - led_buffer[i].r;
 853              		.loc 1 314 0
 854 0030 5478     		ldrb	r4, [r2, #1]	@ zero_extendqisi2
 855 0032 E443     		mvns	r4, r4
 856 0034 5470     		strb	r4, [r2, #1]
 315:tmk_core/protocol/arm_atsam/led_matrix.c ****                 led_buffer[i].g = 255 - led_buffer[i].g;
 857              		.loc 1 315 0
 858 0036 4C5D     		ldrb	r4, [r1, r5]	@ zero_extendqisi2
 859 0038 E443     		mvns	r4, r4
 860 003a 4C55     		strb	r4, [r1, r5]
 316:tmk_core/protocol/arm_atsam/led_matrix.c ****                 led_buffer[i].b = 255 - led_buffer[i].b;
 861              		.loc 1 316 0
 862 003c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 863 003e C943     		mvns	r1, r1
 864 0040 9170     		strb	r1, [r2, #2]
 865              	.L82:
 866              	.LVL50:
 867 0042 0133     		adds	r3, r3, #1
 868              	.LVL51:
 296:tmk_core/protocol/arm_atsam/led_matrix.c ****             if (
 869              		.loc 1 296 0 discriminator 2
 870 0044 692B     		cmp	r3, #105
 871 0046 E9D1     		bne	.L83
 872              	.L80:
 873              	.LBE12:
 317:tmk_core/protocol/arm_atsam/led_matrix.c ****             }
 318:tmk_core/protocol/arm_atsam/led_matrix.c ****         }
 319:tmk_core/protocol/arm_atsam/led_matrix.c ****     }
 320:tmk_core/protocol/arm_atsam/led_matrix.c **** }
 874              		.loc 1 320 0
 875 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 876              	.L95:
 877 004a 00BF     		.align	2
 878              	.L94:
 879 004c 00000000 		.word	rgb_matrix_config
 880 0050 00000000 		.word	led_map
 881 0054 00000000 		.word	led_buffer
 882              		.cfi_endproc
 883              	.LFE154:
 885              		.global	rgb_matrix_driver
 886              		.comm	gcr_actual_last,1,1
 887              		.comm	gcr_actual,1,1
 888              		.comm	gcr_desired,1,1
 889              		.comm	led_buffer,315,1
 890              		.global	led_map
 891              		.comm	issidrv,962,1
 892              		.comm	dmac_desc_wb,16,16
 893              		.comm	dmac_desc,16,16
 894              		.section	.rodata
 895              		.align	2
 898              	rgb_matrix_driver:
 899 0000 00000000 		.word	init
 900 0004 00000000 		.word	led_set_one
 901 0008 00000000 		.word	led_set_all
 902 000c 00000000 		.word	flush
 903              		.data
 904              		.align	2
 907              	led_map:
 908 0000 01       		.byte	1
 909 0001 00000000 		.space	15
 909      00000000 
 909      00000000 
 909      000000
 910 0010 02       		.byte	2
 911 0011 02       		.byte	2
 912 0012 02       		.byte	2
 913 0013 01       		.byte	1
 914 0014 03       		.byte	3
 915 0015 000000   		.space	3
 916 0018 00000000 		.word	0
 917 001c 00000000 		.word	0
 918 0020 00000000 		.space	8
 918      00000000 
 919 0028 00       		.byte	0
 920 0029 000000   		.space	3
 921 002c 02       		.byte	2
 922 002d 00000000 		.space	15
 922      00000000 
 922      00000000 
 922      000000
 923 003c 02       		.byte	2
 924 003d 03       		.byte	3
 925 003e 05       		.byte	5
 926 003f 04       		.byte	4
 927 0040 06       		.byte	6
 928 0041 000000   		.space	3
 929 0044 0000403F 		.word	1061158912
 930 0048 00000000 		.word	0
 931 004c 00000000 		.space	8
 931      00000000 
 932 0054 01       		.byte	1
 933 0055 000000   		.space	3
 934 0058 03       		.byte	3
 935 0059 00000000 		.space	15
 935      00000000 
 935      00000000 
 935      000000
 936 0068 02       		.byte	2
 937 0069 04       		.byte	4
 938 006a 05       		.byte	5
 939 006b 04       		.byte	4
 940 006c 06       		.byte	6
 941 006d 000000   		.space	3
 942 0070 0000C03F 		.word	1069547520
 943 0074 00000000 		.word	0
 944 0078 00000000 		.space	8
 944      00000000 
 945 0080 02       		.byte	2
 946 0081 000000   		.space	3
 947 0084 04       		.byte	4
 948 0085 00000000 		.space	15
 948      00000000 
 948      00000000 
 948      000000
 949 0094 02       		.byte	2
 950 0095 05       		.byte	5
 951 0096 05       		.byte	5
 952 0097 04       		.byte	4
 953 0098 06       		.byte	6
 954 0099 000000   		.space	3
 955 009c 00001040 		.word	1074790400
 956 00a0 00000000 		.word	0
 957 00a4 00000000 		.space	8
 957      00000000 
 958 00ac 03       		.byte	3
 959 00ad 000000   		.space	3
 960 00b0 05       		.byte	5
 961 00b1 00000000 		.space	15
 961      00000000 
 961      00000000 
 961      000000
 962 00c0 02       		.byte	2
 963 00c1 06       		.byte	6
 964 00c2 05       		.byte	5
 965 00c3 04       		.byte	4
 966 00c4 06       		.byte	6
 967 00c5 000000   		.space	3
 968 00c8 00004040 		.word	1077936128
 969 00cc 00000000 		.word	0
 970 00d0 00000000 		.space	8
 970      00000000 
 971 00d8 04       		.byte	4
 972 00d9 000000   		.space	3
 973 00dc 06       		.byte	6
 974 00dd 00000000 		.space	15
 974      00000000 
 974      00000000 
 974      000000
 975 00ec 02       		.byte	2
 976 00ed 07       		.byte	7
 977 00ee 05       		.byte	5
 978 00ef 04       		.byte	4
 979 00f0 06       		.byte	6
 980 00f1 000000   		.space	3
 981 00f4 00007040 		.word	1081081856
 982 00f8 00000000 		.word	0
 983 00fc 00000000 		.space	8
 983      00000000 
 984 0104 05       		.byte	5
 985 0105 000000   		.space	3
 986 0108 07       		.byte	7
 987 0109 00000000 		.space	15
 987      00000000 
 987      00000000 
 987      000000
 988 0118 02       		.byte	2
 989 0119 08       		.byte	8
 990 011a 05       		.byte	5
 991 011b 04       		.byte	4
 992 011c 06       		.byte	6
 993 011d 000000   		.space	3
 994 0120 00009040 		.word	1083179008
 995 0124 00000000 		.word	0
 996 0128 00000000 		.space	8
 996      00000000 
 997 0130 06       		.byte	6
 998 0131 000000   		.space	3
 999 0134 08       		.byte	8
 1000 0135 00000000 		.space	15
 1000      00000000 
 1000      00000000 
 1000      000000
 1001 0144 02       		.byte	2
 1002 0145 0D       		.byte	13
 1003 0146 02       		.byte	2
 1004 0147 01       		.byte	1
 1005 0148 03       		.byte	3
 1006 0149 000000   		.space	3
 1007 014c 0000A840 		.word	1084751872
 1008 0150 00000000 		.word	0
 1009 0154 00000000 		.space	8
 1009      00000000 
 1010 015c 07       		.byte	7
 1011 015d 000000   		.space	3
 1012 0160 09       		.byte	9
 1013 0161 00000000 		.space	15
 1013      00000000 
 1013      00000000 
 1013      000000
 1014 0170 01       		.byte	1
 1015 0171 01       		.byte	1
 1016 0172 05       		.byte	5
 1017 0173 04       		.byte	4
 1018 0174 06       		.byte	6
 1019 0175 000000   		.space	3
 1020 0178 0000C040 		.word	1086324736
 1021 017c 00000000 		.word	0
 1022 0180 00000000 		.space	8
 1022      00000000 
 1023 0188 08       		.byte	8
 1024 0189 000000   		.space	3
 1025 018c 0A       		.byte	10
 1026 018d 00000000 		.space	15
 1026      00000000 
 1026      00000000 
 1026      000000
 1027 019c 01       		.byte	1
 1028 019d 02       		.byte	2
 1029 019e 05       		.byte	5
 1030 019f 04       		.byte	4
 1031 01a0 06       		.byte	6
 1032 01a1 000000   		.space	3
 1033 01a4 0000D840 		.word	1087897600
 1034 01a8 00000000 		.word	0
 1035 01ac 00000000 		.space	8
 1035      00000000 
 1036 01b4 09       		.byte	9
 1037 01b5 000000   		.space	3
 1038 01b8 0B       		.byte	11
 1039 01b9 00000000 		.space	15
 1039      00000000 
 1039      00000000 
 1039      000000
 1040 01c8 01       		.byte	1
 1041 01c9 03       		.byte	3
 1042 01ca 05       		.byte	5
 1043 01cb 04       		.byte	4
 1044 01cc 06       		.byte	6
 1045 01cd 000000   		.space	3
 1046 01d0 0000F040 		.word	1089470464
 1047 01d4 00000000 		.word	0
 1048 01d8 00000000 		.space	8
 1048      00000000 
 1049 01e0 0A       		.byte	10
 1050 01e1 000000   		.space	3
 1051 01e4 0C       		.byte	12
 1052 01e5 00000000 		.space	15
 1052      00000000 
 1052      00000000 
 1052      000000
 1053 01f4 01       		.byte	1
 1054 01f5 04       		.byte	4
 1055 01f6 05       		.byte	5
 1056 01f7 04       		.byte	4
 1057 01f8 06       		.byte	6
 1058 01f9 000000   		.space	3
 1059 01fc 00000441 		.word	1090781184
 1060 0200 00000000 		.word	0
 1061 0204 00000000 		.space	8
 1061      00000000 
 1062 020c 0B       		.byte	11
 1063 020d 000000   		.space	3
 1064 0210 0D       		.byte	13
 1065 0211 00000000 		.space	15
 1065      00000000 
 1065      00000000 
 1065      000000
 1066 0220 01       		.byte	1
 1067 0221 05       		.byte	5
 1068 0222 05       		.byte	5
 1069 0223 04       		.byte	4
 1070 0224 06       		.byte	6
 1071 0225 000000   		.space	3
 1072 0228 00001041 		.word	1091567616
 1073 022c 00000000 		.word	0
 1074 0230 00000000 		.space	8
 1074      00000000 
 1075 0238 0C       		.byte	12
 1076 0239 000000   		.space	3
 1077 023c 0E       		.byte	14
 1078 023d 00000000 		.space	15
 1078      00000000 
 1078      00000000 
 1078      000000
 1079 024c 01       		.byte	1
 1080 024d 06       		.byte	6
 1081 024e 05       		.byte	5
 1082 024f 04       		.byte	4
 1083 0250 06       		.byte	6
 1084 0251 000000   		.space	3
 1085 0254 00002241 		.word	1092747264
 1086 0258 00000000 		.word	0
 1087 025c 00000000 		.space	8
 1087      00000000 
 1088 0264 0D       		.byte	13
 1089 0265 000000   		.space	3
 1090 0268 0F       		.byte	15
 1091 0269 00000000 		.space	15
 1091      00000000 
 1091      00000000 
 1091      000000
 1092 0278 01       		.byte	1
 1093 0279 07       		.byte	7
 1094 027a 02       		.byte	2
 1095 027b 01       		.byte	1
 1096 027c 03       		.byte	3
 1097 027d 000000   		.space	3
 1098 0280 00003441 		.word	1093926912
 1099 0284 00000000 		.word	0
 1100 0288 00000000 		.space	8
 1100      00000000 
 1101 0290 0E       		.byte	14
 1102 0291 000000   		.space	3
 1103 0294 10       		.byte	16
 1104 0295 00000000 		.space	15
 1104      00000000 
 1104      00000000 
 1104      000000
 1105 02a4 02       		.byte	2
 1106 02a5 02       		.byte	2
 1107 02a6 05       		.byte	5
 1108 02a7 04       		.byte	4
 1109 02a8 06       		.byte	6
 1110 02a9 000000   		.space	3
 1111 02ac 1283403E 		.word	1044415250
 1112 02b0 000040BF 		.word	3208642560
 1113 02b4 00000000 		.space	8
 1113      00000000 
 1114 02bc 0F       		.byte	15
 1115 02bd 000000   		.space	3
 1116 02c0 11       		.byte	17
 1117 02c1 00000000 		.space	15
 1117      00000000 
 1117      00000000 
 1117      000000
 1118 02d0 02       		.byte	2
 1119 02d1 03       		.byte	3
 1120 02d2 08       		.byte	8
 1121 02d3 07       		.byte	7
 1122 02d4 09       		.byte	9
 1123 02d5 000000   		.space	3
 1124 02d8 0000903F 		.word	1066401792
 1125 02dc 000040BF 		.word	3208642560
 1126 02e0 00000000 		.space	8
 1126      00000000 
 1127 02e8 10       		.byte	16
 1128 02e9 000000   		.space	3
 1129 02ec 12       		.byte	18
 1130 02ed 00000000 		.space	15
 1130      00000000 
 1130      00000000 
 1130      000000
 1131 02fc 02       		.byte	2
 1132 02fd 04       		.byte	4
 1133 02fe 08       		.byte	8
 1134 02ff 07       		.byte	7
 1135 0300 09       		.byte	9
 1136 0301 000000   		.space	3
 1137 0304 0000F03F 		.word	1072693248
 1138 0308 000040BF 		.word	3208642560
 1139 030c 00000000 		.space	8
 1139      00000000 
 1140 0314 11       		.byte	17
 1141 0315 000000   		.space	3
 1142 0318 13       		.byte	19
 1143 0319 00000000 		.space	15
 1143      00000000 
 1143      00000000 
 1143      000000
 1144 0328 02       		.byte	2
 1145 0329 05       		.byte	5
 1146 032a 08       		.byte	8
 1147 032b 07       		.byte	7
 1148 032c 09       		.byte	9
 1149 032d 000000   		.space	3
 1150 0330 00002840 		.word	1076363264
 1151 0334 000040BF 		.word	3208642560
 1152 0338 00000000 		.space	8
 1152      00000000 
 1153 0340 12       		.byte	18
 1154 0341 000000   		.space	3
 1155 0344 14       		.byte	20
 1156 0345 00000000 		.space	15
 1156      00000000 
 1156      00000000 
 1156      000000
 1157 0354 02       		.byte	2
 1158 0355 06       		.byte	6
 1159 0356 08       		.byte	8
 1160 0357 07       		.byte	7
 1161 0358 09       		.byte	9
 1162 0359 000000   		.space	3
 1163 035c 00005840 		.word	1079508992
 1164 0360 000040BF 		.word	3208642560
 1165 0364 00000000 		.space	8
 1165      00000000 
 1166 036c 13       		.byte	19
 1167 036d 000000   		.space	3
 1168 0370 15       		.byte	21
 1169 0371 00000000 		.space	15
 1169      00000000 
 1169      00000000 
 1169      000000
 1170 0380 02       		.byte	2
 1171 0381 07       		.byte	7
 1172 0382 08       		.byte	8
 1173 0383 07       		.byte	7
 1174 0384 09       		.byte	9
 1175 0385 000000   		.space	3
 1176 0388 00008440 		.word	1082392576
 1177 038c 000040BF 		.word	3208642560
 1178 0390 00000000 		.space	8
 1178      00000000 
 1179 0398 14       		.byte	20
 1180 0399 000000   		.space	3
 1181 039c 16       		.byte	22
 1182 039d 00000000 		.space	15
 1182      00000000 
 1182      00000000 
 1182      000000
 1183 03ac 02       		.byte	2
 1184 03ad 08       		.byte	8
 1185 03ae 08       		.byte	8
 1186 03af 07       		.byte	7
 1187 03b0 09       		.byte	9
 1188 03b1 000000   		.space	3
 1189 03b4 00009C40 		.word	1083965440
 1190 03b8 000040BF 		.word	3208642560
 1191 03bc 00000000 		.space	8
 1191      00000000 
 1192 03c4 15       		.byte	21
 1193 03c5 000000   		.space	3
 1194 03c8 17       		.byte	23
 1195 03c9 00000000 		.space	15
 1195      00000000 
 1195      00000000 
 1195      000000
 1196 03d8 01       		.byte	1
 1197 03d9 01       		.byte	1
 1198 03da 08       		.byte	8
 1199 03db 07       		.byte	7
 1200 03dc 09       		.byte	9
 1201 03dd 000000   		.space	3
 1202 03e0 0000B440 		.word	1085538304
 1203 03e4 000040BF 		.word	3208642560
 1204 03e8 00000000 		.space	8
 1204      00000000 
 1205 03f0 16       		.byte	22
 1206 03f1 000000   		.space	3
 1207 03f4 18       		.byte	24
 1208 03f5 00000000 		.space	15
 1208      00000000 
 1208      00000000 
 1208      000000
 1209 0404 01       		.byte	1
 1210 0405 02       		.byte	2
 1211 0406 08       		.byte	8
 1212 0407 07       		.byte	7
 1213 0408 09       		.byte	9
 1214 0409 000000   		.space	3
 1215 040c 0000CC40 		.word	1087111168
 1216 0410 000040BF 		.word	3208642560
 1217 0414 00000000 		.space	8
 1217      00000000 
 1218 041c 17       		.byte	23
 1219 041d 000000   		.space	3
 1220 0420 19       		.byte	25
 1221 0421 00000000 		.space	15
 1221      00000000 
 1221      00000000 
 1221      000000
 1222 0430 01       		.byte	1
 1223 0431 03       		.byte	3
 1224 0432 08       		.byte	8
 1225 0433 07       		.byte	7
 1226 0434 09       		.byte	9
 1227 0435 000000   		.space	3
 1228 0438 0000E440 		.word	1088684032
 1229 043c 000040BF 		.word	3208642560
 1230 0440 00000000 		.space	8
 1230      00000000 
 1231 0448 18       		.byte	24
 1232 0449 000000   		.space	3
 1233 044c 1A       		.byte	26
 1234 044d 00000000 		.space	15
 1234      00000000 
 1234      00000000 
 1234      000000
 1235 045c 01       		.byte	1
 1236 045d 04       		.byte	4
 1237 045e 08       		.byte	8
 1238 045f 07       		.byte	7
 1239 0460 09       		.byte	9
 1240 0461 000000   		.space	3
 1241 0464 0000FC40 		.word	1090256896
 1242 0468 000040BF 		.word	3208642560
 1243 046c 00000000 		.space	8
 1243      00000000 
 1244 0474 19       		.byte	25
 1245 0475 000000   		.space	3
 1246 0478 1B       		.byte	27
 1247 0479 00000000 		.space	15
 1247      00000000 
 1247      00000000 
 1247      000000
 1248 0488 01       		.byte	1
 1249 0489 05       		.byte	5
 1250 048a 08       		.byte	8
 1251 048b 07       		.byte	7
 1252 048c 09       		.byte	9
 1253 048d 000000   		.space	3
 1254 0490 00000A41 		.word	1091174400
 1255 0494 000040BF 		.word	3208642560
 1256 0498 00000000 		.space	8
 1256      00000000 
 1257 04a0 1A       		.byte	26
 1258 04a1 000000   		.space	3
 1259 04a4 1C       		.byte	28
 1260 04a5 00000000 		.space	15
 1260      00000000 
 1260      00000000 
 1260      000000
 1261 04b4 01       		.byte	1
 1262 04b5 0B       		.byte	11
 1263 04b6 0B       		.byte	11
 1264 04b7 0A       		.byte	10
 1265 04b8 0C       		.byte	12
 1266 04b9 000000   		.space	3
 1267 04bc 00001641 		.word	1091960832
 1268 04c0 000040BF 		.word	3208642560
 1269 04c4 00000000 		.space	8
 1269      00000000 
 1270 04cc 1B       		.byte	27
 1271 04cd 000000   		.space	3
 1272 04d0 1D       		.byte	29
 1273 04d1 00000000 		.space	15
 1273      00000000 
 1273      00000000 
 1273      000000
 1274 04e0 01       		.byte	1
 1275 04e1 06       		.byte	6
 1276 04e2 08       		.byte	8
 1277 04e3 07       		.byte	7
 1278 04e4 09       		.byte	9
 1279 04e5 000000   		.space	3
 1280 04e8 0C022541 		.word	1092944396
 1281 04ec 000040BF 		.word	3208642560
 1282 04f0 00000000 		.space	8
 1282      00000000 
 1283 04f8 1C       		.byte	28
 1284 04f9 000000   		.space	3
 1285 04fc 1E       		.byte	30
 1286 04fd 00000000 		.space	15
 1286      00000000 
 1286      00000000 
 1286      000000
 1287 050c 01       		.byte	1
 1288 050d 07       		.byte	7
 1289 050e 05       		.byte	5
 1290 050f 04       		.byte	4
 1291 0510 06       		.byte	6
 1292 0511 000000   		.space	3
 1293 0514 00003441 		.word	1093926912
 1294 0518 000040BF 		.word	3208642560
 1295 051c 00000000 		.space	8
 1295      00000000 
 1296 0524 1D       		.byte	29
 1297 0525 000000   		.space	3
 1298 0528 1F       		.byte	31
 1299 0529 00000000 		.space	15
 1299      00000000 
 1299      00000000 
 1299      000000
 1300 0538 02       		.byte	2
 1301 0539 02       		.byte	2
 1302 053a 08       		.byte	8
 1303 053b 07       		.byte	7
 1304 053c 09       		.byte	9
 1305 053d 000000   		.space	3
 1306 0540 3BDF8F3E 		.word	1049616187
 1307 0544 0000C0BF 		.word	3217031168
 1308 0548 00000000 		.space	8
 1308      00000000 
 1309 0550 1E       		.byte	30
 1310 0551 000000   		.space	3
 1311 0554 20       		.byte	32
 1312 0555 00000000 		.space	15
 1312      00000000 
 1312      00000000 
 1312      000000
 1313 0564 02       		.byte	2
 1314 0565 03       		.byte	3
 1315 0566 0B       		.byte	11
 1316 0567 0A       		.byte	10
 1317 0568 0C       		.byte	12
 1318 0569 000000   		.space	3
 1319 056c 6210A83F 		.word	1067978850
 1320 0570 0000C0BF 		.word	3217031168
 1321 0574 00000000 		.space	8
 1321      00000000 
 1322 057c 1F       		.byte	31
 1323 057d 000000   		.space	3
 1324 0580 21       		.byte	33
 1325 0581 00000000 		.space	15
 1325      00000000 
 1325      00000000 
 1325      000000
 1326 0590 02       		.byte	2
 1327 0591 04       		.byte	4
 1328 0592 0B       		.byte	11
 1329 0593 0A       		.byte	10
 1330 0594 0C       		.byte	12
 1331 0595 000000   		.space	3
 1332 0598 31080440 		.word	1074006065
 1333 059c 0000C0BF 		.word	3217031168
 1334 05a0 00000000 		.space	8
 1334      00000000 
 1335 05a8 20       		.byte	32
 1336 05a9 000000   		.space	3
 1337 05ac 22       		.byte	34
 1338 05ad 00000000 		.space	15
 1338      00000000 
 1338      00000000 
 1338      000000
 1339 05bc 02       		.byte	2
 1340 05bd 05       		.byte	5
 1341 05be 0B       		.byte	11
 1342 05bf 0A       		.byte	10
 1343 05c0 0C       		.byte	12
 1344 05c1 000000   		.space	3
 1345 05c4 31083440 		.word	1077151793
 1346 05c8 0000C0BF 		.word	3217031168
 1347 05cc 00000000 		.space	8
 1347      00000000 
 1348 05d4 21       		.byte	33
 1349 05d5 000000   		.space	3
 1350 05d8 23       		.byte	35
 1351 05d9 00000000 		.space	15
 1351      00000000 
 1351      00000000 
 1351      000000
 1352 05e8 02       		.byte	2
 1353 05e9 06       		.byte	6
 1354 05ea 0B       		.byte	11
 1355 05eb 0A       		.byte	10
 1356 05ec 0C       		.byte	12
 1357 05ed 000000   		.space	3
 1358 05f0 31086440 		.word	1080297521
 1359 05f4 0000C0BF 		.word	3217031168
 1360 05f8 00000000 		.space	8
 1360      00000000 
 1361 0600 22       		.byte	34
 1362 0601 000000   		.space	3
 1363 0604 24       		.byte	36
 1364 0605 00000000 		.space	15
 1364      00000000 
 1364      00000000 
 1364      000000
 1365 0614 02       		.byte	2
 1366 0615 07       		.byte	7
 1367 0616 0B       		.byte	11
 1368 0617 0A       		.byte	10
 1369 0618 0C       		.byte	12
 1370 0619 000000   		.space	3
 1371 061c 19048A40 		.word	1082786841
 1372 0620 0000C0BF 		.word	3217031168
 1373 0624 00000000 		.space	8
 1373      00000000 
 1374 062c 23       		.byte	35
 1375 062d 000000   		.space	3
 1376 0630 25       		.byte	37
 1377 0631 00000000 		.space	15
 1377      00000000 
 1377      00000000 
 1377      000000
 1378 0640 02       		.byte	2
 1379 0641 08       		.byte	8
 1380 0642 0B       		.byte	11
 1381 0643 0A       		.byte	10
 1382 0644 0C       		.byte	12
 1383 0645 000000   		.space	3
 1384 0648 1904A240 		.word	1084359705
 1385 064c 0000C0BF 		.word	3217031168
 1386 0650 00000000 		.space	8
 1386      00000000 
 1387 0658 24       		.byte	36
 1388 0659 000000   		.space	3
 1389 065c 26       		.byte	38
 1390 065d 00000000 		.space	15
 1390      00000000 
 1390      00000000 
 1390      000000
 1391 066c 01       		.byte	1
 1392 066d 01       		.byte	1
 1393 066e 0B       		.byte	11
 1394 066f 0A       		.byte	10
 1395 0670 0C       		.byte	12
 1396 0671 000000   		.space	3
 1397 0674 1904BA40 		.word	1085932569
 1398 0678 0000C0BF 		.word	3217031168
 1399 067c 00000000 		.space	8
 1399      00000000 
 1400 0684 25       		.byte	37
 1401 0685 000000   		.space	3
 1402 0688 27       		.byte	39
 1403 0689 00000000 		.space	15
 1403      00000000 
 1403      00000000 
 1403      000000
 1404 0698 01       		.byte	1
 1405 0699 02       		.byte	2
 1406 069a 0B       		.byte	11
 1407 069b 0A       		.byte	10
 1408 069c 0C       		.byte	12
 1409 069d 000000   		.space	3
 1410 06a0 1904D240 		.word	1087505433
 1411 06a4 0000C0BF 		.word	3217031168
 1412 06a8 00000000 		.space	8
 1412      00000000 
 1413 06b0 26       		.byte	38
 1414 06b1 000000   		.space	3
 1415 06b4 28       		.byte	40
 1416 06b5 00000000 		.space	15
 1416      00000000 
 1416      00000000 
 1416      000000
 1417 06c4 01       		.byte	1
 1418 06c5 03       		.byte	3
 1419 06c6 0B       		.byte	11
 1420 06c7 0A       		.byte	10
 1421 06c8 0C       		.byte	12
 1422 06c9 000000   		.space	3
 1423 06cc 1904EA40 		.word	1089078297
 1424 06d0 0000C0BF 		.word	3217031168
 1425 06d4 00000000 		.space	8
 1425      00000000 
 1426 06dc 27       		.byte	39
 1427 06dd 000000   		.space	3
 1428 06e0 29       		.byte	41
 1429 06e1 00000000 		.space	15
 1429      00000000 
 1429      00000000 
 1429      000000
 1430 06f0 01       		.byte	1
 1431 06f1 04       		.byte	4
 1432 06f2 0B       		.byte	11
 1433 06f3 0A       		.byte	10
 1434 06f4 0C       		.byte	12
 1435 06f5 000000   		.space	3
 1436 06f8 0C020141 		.word	1090585100
 1437 06fc 0000C0BF 		.word	3217031168
 1438 0700 00000000 		.space	8
 1438      00000000 
 1439 0708 28       		.byte	40
 1440 0709 000000   		.space	3
 1441 070c 2A       		.byte	42
 1442 070d 00000000 		.space	15
 1442      00000000 
 1442      00000000 
 1442      000000
 1443 071c 01       		.byte	1
 1444 071d 05       		.byte	5
 1445 071e 0B       		.byte	11
 1446 071f 0A       		.byte	10
 1447 0720 0C       		.byte	12
 1448 0721 000000   		.space	3
 1449 0724 0C020D41 		.word	1091371532
 1450 0728 0000C0BF 		.word	3217031168
 1451 072c 00000000 		.space	8
 1451      00000000 
 1452 0734 29       		.byte	41
 1453 0735 000000   		.space	3
 1454 0738 2B       		.byte	43
 1455 0739 00000000 		.space	15
 1455      00000000 
 1455      00000000 
 1455      000000
 1456 0748 01       		.byte	1
 1457 0749 06       		.byte	6
 1458 074a 0B       		.byte	11
 1459 074b 0A       		.byte	10
 1460 074c 0C       		.byte	12
 1461 074d 000000   		.space	3
 1462 0750 FA7E2041 		.word	1092648698
 1463 0754 0000C0BF 		.word	3217031168
 1464 0758 00000000 		.space	8
 1464      00000000 
 1465 0760 2B       		.byte	43
 1466 0761 000000   		.space	3
 1467 0764 2C       		.byte	44
 1468 0765 00000000 		.space	15
 1468      00000000 
 1468      00000000 
 1468      000000
 1469 0774 01       		.byte	1
 1470 0775 07       		.byte	7
 1471 0776 08       		.byte	8
 1472 0777 07       		.byte	7
 1473 0778 09       		.byte	9
 1474 0779 000000   		.space	3
 1475 077c 00003441 		.word	1093926912
 1476 0780 0000C0BF 		.word	3217031168
 1477 0784 00000000 		.space	8
 1477      00000000 
 1478 078c 2C       		.byte	44
 1479 078d 000000   		.space	3
 1480 0790 2D       		.byte	45
 1481 0791 00000000 		.space	15
 1481      00000000 
 1481      00000000 
 1481      000000
 1482 07a0 02       		.byte	2
 1483 07a1 02       		.byte	2
 1484 07a2 0B       		.byte	11
 1485 07a3 0A       		.byte	10
 1486 07a4 0C       		.byte	12
 1487 07a5 000000   		.space	3
 1488 07a8 C520F03E 		.word	1055924421
 1489 07ac 000010C0 		.word	3222274048
 1490 07b0 00000000 		.space	8
 1490      00000000 
 1491 07b8 2D       		.byte	45
 1492 07b9 000000   		.space	3
 1493 07bc 2E       		.byte	46
 1494 07bd 00000000 		.space	15
 1494      00000000 
 1494      00000000 
 1494      000000
 1495 07cc 02       		.byte	2
 1496 07cd 09       		.byte	9
 1497 07ce 05       		.byte	5
 1498 07cf 04       		.byte	4
 1499 07d0 06       		.byte	6
 1500 07d1 000000   		.space	3
 1501 07d4 6210D83F 		.word	1071124578
 1502 07d8 000010C0 		.word	3222274048
 1503 07dc 00000000 		.space	8
 1503      00000000 
 1504 07e4 2F       		.byte	47
 1505 07e5 000000   		.space	3
 1506 07e8 2F       		.byte	47
 1507 07e9 00000000 		.space	15
 1507      00000000 
 1507      00000000 
 1507      000000
 1508 07f8 02       		.byte	2
 1509 07f9 09       		.byte	9
 1510 07fa 02       		.byte	2
 1511 07fb 01       		.byte	1
 1512 07fc 03       		.byte	3
 1513 07fd 000000   		.space	3
 1514 0800 31081C40 		.word	1075578929
 1515 0804 000010C0 		.word	3222274048
 1516 0808 00000000 		.space	8
 1516      00000000 
 1517 0810 30       		.byte	48
 1518 0811 000000   		.space	3
 1519 0814 30       		.byte	48
 1520 0815 00000000 		.space	15
 1520      00000000 
 1520      00000000 
 1520      000000
 1521 0824 02       		.byte	2
 1522 0825 09       		.byte	9
 1523 0826 0B       		.byte	11
 1524 0827 0A       		.byte	10
 1525 0828 0C       		.byte	12
 1526 0829 000000   		.space	3
 1527 082c 31084C40 		.word	1078724657
 1528 0830 000010C0 		.word	3222274048
 1529 0834 00000000 		.space	8
 1529      00000000 
 1530 083c 31       		.byte	49
 1531 083d 000000   		.space	3
 1532 0840 31       		.byte	49
 1533 0841 00000000 		.space	15
 1533      00000000 
 1533      00000000 
 1533      000000
 1534 0850 02       		.byte	2
 1535 0851 09       		.byte	9
 1536 0852 08       		.byte	8
 1537 0853 07       		.byte	7
 1538 0854 09       		.byte	9
 1539 0855 000000   		.space	3
 1540 0858 31087C40 		.word	1081870385
 1541 085c 000010C0 		.word	3222274048
 1542 0860 00000000 		.space	8
 1542      00000000 
 1543 0868 32       		.byte	50
 1544 0869 000000   		.space	3
 1545 086c 32       		.byte	50
 1546 086d 00000000 		.space	15
 1546      00000000 
 1546      00000000 
 1546      000000
 1547 087c 02       		.byte	2
 1548 087d 0C       		.byte	12
 1549 087e 0B       		.byte	11
 1550 087f 0A       		.byte	10
 1551 0880 0C       		.byte	12
 1552 0881 000000   		.space	3
 1553 0884 19049640 		.word	1083573273
 1554 0888 000010C0 		.word	3222274048
 1555 088c 00000000 		.space	8
 1555      00000000 
 1556 0894 33       		.byte	51
 1557 0895 000000   		.space	3
 1558 0898 33       		.byte	51
 1559 0899 00000000 		.space	15
 1559      00000000 
 1559      00000000 
 1559      000000
 1560 08a8 02       		.byte	2
 1561 08a9 0D       		.byte	13
 1562 08aa 0B       		.byte	11
 1563 08ab 0A       		.byte	10
 1564 08ac 0C       		.byte	12
 1565 08ad 000000   		.space	3
 1566 08b0 1904AE40 		.word	1085146137
 1567 08b4 000010C0 		.word	3222274048
 1568 08b8 00000000 		.space	8
 1568      00000000 
 1569 08c0 34       		.byte	52
 1570 08c1 000000   		.space	3
 1571 08c4 34       		.byte	52
 1572 08c5 00000000 		.space	15
 1572      00000000 
 1572      00000000 
 1572      000000
 1573 08d4 01       		.byte	1
 1574 08d5 09       		.byte	9
 1575 08d6 0B       		.byte	11
 1576 08d7 0A       		.byte	10
 1577 08d8 0C       		.byte	12
 1578 08d9 000000   		.space	3
 1579 08dc 1904C640 		.word	1086719001
 1580 08e0 000010C0 		.word	3222274048
 1581 08e4 00000000 		.space	8
 1581      00000000 
 1582 08ec 35       		.byte	53
 1583 08ed 000000   		.space	3
 1584 08f0 35       		.byte	53
 1585 08f1 00000000 		.space	15
 1585      00000000 
 1585      00000000 
 1585      000000
 1586 0900 01       		.byte	1
 1587 0901 0A       		.byte	10
 1588 0902 0B       		.byte	11
 1589 0903 0A       		.byte	10
 1590 0904 0C       		.byte	12
 1591 0905 000000   		.space	3
 1592 0908 1904DE40 		.word	1088291865
 1593 090c 000010C0 		.word	3222274048
 1594 0910 00000000 		.space	8
 1594      00000000 
 1595 0918 36       		.byte	54
 1596 0919 000000   		.space	3
 1597 091c 36       		.byte	54
 1598 091d 00000000 		.space	15
 1598      00000000 
 1598      00000000 
 1598      000000
 1599 092c 01       		.byte	1
 1600 092d 0A       		.byte	10
 1601 092e 08       		.byte	8
 1602 092f 07       		.byte	7
 1603 0930 09       		.byte	9
 1604 0931 000000   		.space	3
 1605 0934 1904F640 		.word	1089864729
 1606 0938 000010C0 		.word	3222274048
 1607 093c 00000000 		.space	8
 1607      00000000 
 1608 0944 37       		.byte	55
 1609 0945 000000   		.space	3
 1610 0948 37       		.byte	55
 1611 0949 00000000 		.space	15
 1611      00000000 
 1611      00000000 
 1611      000000
 1612 0958 01       		.byte	1
 1613 0959 0B       		.byte	11
 1614 095a 08       		.byte	8
 1615 095b 07       		.byte	7
 1616 095c 09       		.byte	9
 1617 095d 000000   		.space	3
 1618 0960 0C020741 		.word	1090978316
 1619 0964 000010C0 		.word	3222274048
 1620 0968 00000000 		.space	8
 1620      00000000 
 1621 0970 38       		.byte	56
 1622 0971 000000   		.space	3
 1623 0974 38       		.byte	56
 1624 0975 00000000 		.space	15
 1624      00000000 
 1624      00000000 
 1624      000000
 1625 0984 01       		.byte	1
 1626 0985 0B       		.byte	11
 1627 0986 02       		.byte	2
 1628 0987 01       		.byte	1
 1629 0988 03       		.byte	3
 1630 0989 000000   		.space	3
 1631 098c 06811741 		.word	1092059398
 1632 0990 000010C0 		.word	3222274048
 1633 0994 00000000 		.space	8
 1633      00000000 
 1634 099c 39       		.byte	57
 1635 099d 000000   		.space	3
 1636 09a0 39       		.byte	57
 1637 09a1 00000000 		.space	15
 1637      00000000 
 1637      00000000 
 1637      000000
 1638 09b0 01       		.byte	1
 1639 09b1 0B       		.byte	11
 1640 09b2 05       		.byte	5
 1641 09b3 04       		.byte	4
 1642 09b4 06       		.byte	6
 1643 09b5 000000   		.space	3
 1644 09b8 00002841 		.word	1093140480
 1645 09bc 000010C0 		.word	3222274048
 1646 09c0 00000000 		.space	8
 1646      00000000 
 1647 09c8 3A       		.byte	58
 1648 09c9 000000   		.space	3
 1649 09cc 3A       		.byte	58
 1650 09cd 00000000 		.space	15
 1650      00000000 
 1650      00000000 
 1650      000000
 1651 09dc 01       		.byte	1
 1652 09dd 07       		.byte	7
 1653 09de 0B       		.byte	11
 1654 09df 0A       		.byte	10
 1655 09e0 0C       		.byte	12
 1656 09e1 000000   		.space	3
 1657 09e4 00003441 		.word	1093926912
 1658 09e8 000010C0 		.word	3222274048
 1659 09ec 00000000 		.space	8
 1659      00000000 
 1660 09f4 3B       		.byte	59
 1661 09f5 000000   		.space	3
 1662 09f8 3B       		.byte	59
 1663 09f9 00000000 		.space	15
 1663      00000000 
 1663      00000000 
 1663      000000
 1664 0a08 02       		.byte	2
 1665 0a09 0A       		.byte	10
 1666 0a0a 08       		.byte	8
 1667 0a0b 07       		.byte	7
 1668 0a0c 09       		.byte	9
 1669 0a0d 000000   		.space	3
 1670 0a10 1283C03D 		.word	1036026642
 1671 0a14 000040C0 		.word	3225419776
 1672 0a18 00000000 		.space	8
 1672      00000000 
 1673 0a20 3C       		.byte	60
 1674 0a21 000000   		.space	3
 1675 0a24 3C       		.byte	60
 1676 0a25 00000000 		.space	15
 1676      00000000 
 1676      00000000 
 1676      000000
 1677 0a34 02       		.byte	2
 1678 0a35 0A       		.byte	10
 1679 0a36 05       		.byte	5
 1680 0a37 04       		.byte	4
 1681 0a38 06       		.byte	6
 1682 0a39 000000   		.space	3
 1683 0a3c CFF7833F 		.word	1065613263
 1684 0a40 000040C0 		.word	3225419776
 1685 0a44 00000000 		.space	8
 1685      00000000 
 1686 0a4c 3D       		.byte	61
 1687 0a4d 000000   		.space	3
 1688 0a50 3D       		.byte	61
 1689 0a51 00000000 		.space	15
 1689      00000000 
 1689      00000000 
 1689      000000
 1690 0a60 02       		.byte	2
 1691 0a61 0A       		.byte	10
 1692 0a62 02       		.byte	2
 1693 0a63 01       		.byte	1
 1694 0a64 03       		.byte	3
 1695 0a65 000000   		.space	3
 1696 0a68 3108FC3F 		.word	1073481777
 1697 0a6c 000040C0 		.word	3225419776
 1698 0a70 00000000 		.space	8
 1698      00000000 
 1699 0a78 3E       		.byte	62
 1700 0a79 000000   		.space	3
 1701 0a7c 3E       		.byte	62
 1702 0a7d 00000000 		.space	15
 1702      00000000 
 1702      00000000 
 1702      000000
 1703 0a8c 02       		.byte	2
 1704 0a8d 0C       		.byte	12
 1705 0a8e 08       		.byte	8
 1706 0a8f 07       		.byte	7
 1707 0a90 09       		.byte	9
 1708 0a91 000000   		.space	3
 1709 0a94 F4FD9840 		.word	1083768308
 1710 0a98 000040C0 		.word	3225419776
 1711 0a9c 00000000 		.space	8
 1711      00000000 
 1712 0aa4 42       		.byte	66
 1713 0aa5 000000   		.space	3
 1714 0aa8 3F       		.byte	63
 1715 0aa9 00000000 		.space	15
 1715      00000000 
 1715      00000000 
 1715      000000
 1716 0ab8 01       		.byte	1
 1717 0ab9 0A       		.byte	10
 1718 0aba 05       		.byte	5
 1719 0abb 04       		.byte	4
 1720 0abc 06       		.byte	6
 1721 0abd 000000   		.space	3
 1722 0ac0 0C02F340 		.word	1089667596
 1723 0ac4 000040C0 		.word	3225419776
 1724 0ac8 00000000 		.space	8
 1724      00000000 
 1725 0ad0 46       		.byte	70
 1726 0ad1 000000   		.space	3
 1727 0ad4 40       		.byte	64
 1728 0ad5 00000000 		.space	15
 1728      00000000 
 1728      00000000 
 1728      000000
 1729 0ae4 01       		.byte	1
 1730 0ae5 0A       		.byte	10
 1731 0ae6 02       		.byte	2
 1732 0ae7 01       		.byte	1
 1733 0ae8 03       		.byte	3
 1734 0ae9 000000   		.space	3
 1735 0aec FA7E0841 		.word	1091075834
 1736 0af0 000040C0 		.word	3225419776
 1737 0af4 00000000 		.space	8
 1737      00000000 
 1738 0afc 47       		.byte	71
 1739 0afd 000000   		.space	3
 1740 0b00 41       		.byte	65
 1741 0b01 00000000 		.space	15
 1741      00000000 
 1741      00000000 
 1741      000000
 1742 0b10 01       		.byte	1
 1743 0b11 0C       		.byte	12
 1744 0b12 02       		.byte	2
 1745 0b13 01       		.byte	1
 1746 0b14 03       		.byte	3
 1747 0b15 000000   		.space	3
 1748 0b18 00001C41 		.word	1092354048
 1749 0b1c 000040C0 		.word	3225419776
 1750 0b20 00000000 		.space	8
 1750      00000000 
 1751 0b28 48       		.byte	72
 1752 0b29 000000   		.space	3
 1753 0b2c 42       		.byte	66
 1754 0b2d 00000000 		.space	15
 1754      00000000 
 1754      00000000 
 1754      000000
 1755 0b3c 01       		.byte	1
 1756 0b3d 0C       		.byte	12
 1757 0b3e 08       		.byte	8
 1758 0b3f 07       		.byte	7
 1759 0b40 09       		.byte	9
 1760 0b41 000000   		.space	3
 1761 0b44 00002841 		.word	1093140480
 1762 0b48 000040C0 		.word	3225419776
 1763 0b4c 00000000 		.space	8
 1763      00000000 
 1764 0b54 49       		.byte	73
 1765 0b55 000000   		.space	3
 1766 0b58 43       		.byte	67
 1767 0b59 00000000 		.space	15
 1767      00000000 
 1767      00000000 
 1767      000000
 1768 0b68 01       		.byte	1
 1769 0b69 0C       		.byte	12
 1770 0b6a 05       		.byte	5
 1771 0b6b 04       		.byte	4
 1772 0b6c 06       		.byte	6
 1773 0b6d 000000   		.space	3
 1774 0b70 00003441 		.word	1093926912
 1775 0b74 000040C0 		.word	3225419776
 1776 0b78 00000000 		.space	8
 1776      00000000 
 1777 0b80 4A       		.byte	74
 1778 0b81 000000   		.space	3
 1779 0b84 44       		.byte	68
 1780 0b85 00000000 		.space	15
 1780      00000000 
 1780      00000000 
 1780      000000
 1781 0b94 02       		.byte	2
 1782 0b95 0B       		.byte	11
 1783 0b96 0B       		.byte	11
 1784 0b97 0A       		.byte	10
 1785 0b98 0C       		.byte	12
 1786 0b99 000000   		.space	3
 1787 0b9c 560EADBE 		.word	3199012438
 1788 0ba0 CBA155C0 		.word	3226837451
 1789 0ba4 00000000 		.space	8
 1789      00000000 
 1790 0bac FF       		.byte	-1
 1791 0bad 000000   		.space	3
 1792 0bb0 45       		.byte	69
 1793 0bb1 00000000 		.space	15
 1793      00000000 
 1793      00000000 
 1793      000000
 1794 0bc0 02       		.byte	2
 1795 0bc1 0B       		.byte	11
 1796 0bc2 08       		.byte	8
 1797 0bc3 07       		.byte	7
 1798 0bc4 09       		.byte	9
 1799 0bc5 000000   		.space	3
 1800 0bc8 14AEC73E 		.word	1053273620
 1801 0bcc 1D5A5CC0 		.word	3227277853
 1802 0bd0 00000000 		.space	8
 1802      00000000 
 1803 0bd8 FF       		.byte	-1
 1804 0bd9 000000   		.space	3
 1805 0bdc 46       		.byte	70
 1806 0bdd 00000000 		.space	15
 1806      00000000 
 1806      00000000 
 1806      000000
 1807 0bec 02       		.byte	2
 1808 0bed 0B       		.byte	11
 1809 0bee 05       		.byte	5
 1810 0bef 04       		.byte	4
 1811 0bf0 06       		.byte	6
 1812 0bf1 000000   		.space	3
 1813 0bf4 FCA9A13F 		.word	1067559420
 1814 0bf8 1D5A5CC0 		.word	3227277853
 1815 0bfc 00000000 		.space	8
 1815      00000000 
 1816 0c04 FF       		.byte	-1
 1817 0c05 000000   		.space	3
 1818 0c08 47       		.byte	71
 1819 0c09 00000000 		.space	15
 1819      00000000 
 1819      00000000 
 1819      000000
 1820 0c18 02       		.byte	2
 1821 0c19 0B       		.byte	11
 1822 0c1a 02       		.byte	2
 1823 0c1b 01       		.byte	1
 1824 0c1c 03       		.byte	3
 1825 0c1d 000000   		.space	3
 1826 0c20 D7A30840 		.word	1074308055
 1827 0c24 1D5A5CC0 		.word	3227277853
 1828 0c28 00000000 		.space	8
 1828      00000000 
 1829 0c30 FF       		.byte	-1
 1830 0c31 000000   		.space	3
 1831 0c34 48       		.byte	72
 1832 0c35 00000000 		.space	15
 1832      00000000 
 1832      00000000 
 1832      000000
 1833 0c44 02       		.byte	2
 1834 0c45 0C       		.byte	12
 1835 0c46 02       		.byte	2
 1836 0c47 01       		.byte	1
 1837 0c48 03       		.byte	3
 1838 0c49 000000   		.space	3
 1839 0c4c 12834040 		.word	1077969682
 1840 0c50 1D5A5CC0 		.word	3227277853
 1841 0c54 00000000 		.space	8
 1841      00000000 
 1842 0c5c FF       		.byte	-1
 1843 0c5d 000000   		.space	3
 1844 0c60 49       		.byte	73
 1845 0c61 00000000 		.space	15
 1845      00000000 
 1845      00000000 
 1845      000000
 1846 0c70 02       		.byte	2
 1847 0c71 0C       		.byte	12
 1848 0c72 05       		.byte	5
 1849 0c73 04       		.byte	4
 1850 0c74 06       		.byte	6
 1851 0c75 000000   		.space	3
 1852 0c78 EC517840 		.word	1081627116
 1853 0c7c 1D5A5CC0 		.word	3227277853
 1854 0c80 00000000 		.space	8
 1854      00000000 
 1855 0c88 FF       		.byte	-1
 1856 0c89 000000   		.space	3
 1857 0c8c 4A       		.byte	74
 1858 0c8d 00000000 		.space	15
 1858      00000000 
 1858      00000000 
 1858      000000
 1859 0c9c 02       		.byte	2
 1860 0c9d 0D       		.byte	13
 1861 0c9e 05       		.byte	5
 1862 0c9f 04       		.byte	4
 1863 0ca0 06       		.byte	6
 1864 0ca1 000000   		.space	3
 1865 0ca4 93189840 		.word	1083709587
 1866 0ca8 1D5A5CC0 		.word	3227277853
 1867 0cac 00000000 		.space	8
 1867      00000000 
 1868 0cb4 FF       		.byte	-1
 1869 0cb5 000000   		.space	3
 1870 0cb8 4B       		.byte	75
 1871 0cb9 00000000 		.space	15
 1871      00000000 
 1871      00000000 
 1871      000000
 1872 0cc8 02       		.byte	2
 1873 0cc9 0D       		.byte	13
 1874 0cca 08       		.byte	8
 1875 0ccb 07       		.byte	7
 1876 0ccc 09       		.byte	9
 1877 0ccd 000000   		.space	3
 1878 0cd0 0000B440 		.word	1085538304
 1879 0cd4 1D5A5CC0 		.word	3227277853
 1880 0cd8 00000000 		.space	8
 1880      00000000 
 1881 0ce0 FF       		.byte	-1
 1882 0ce1 000000   		.space	3
 1883 0ce4 4C       		.byte	76
 1884 0ce5 00000000 		.space	15
 1884      00000000 
 1884      00000000 
 1884      000000
 1885 0cf4 01       		.byte	1
 1886 0cf5 09       		.byte	9
 1887 0cf6 08       		.byte	8
 1888 0cf7 07       		.byte	7
 1889 0cf8 09       		.byte	9
 1890 0cf9 000000   		.space	3
 1891 0cfc 6DE7CF40 		.word	1087367021
 1892 0d00 1D5A5CC0 		.word	3227277853
 1893 0d04 00000000 		.space	8
 1893      00000000 
 1894 0d0c FF       		.byte	-1
 1895 0d0d 000000   		.space	3
 1896 0d10 4D       		.byte	77
 1897 0d11 00000000 		.space	15
 1897      00000000 
 1897      00000000 
 1897      000000
 1898 0d20 01       		.byte	1
 1899 0d21 09       		.byte	9
 1900 0d22 05       		.byte	5
 1901 0d23 04       		.byte	4
 1902 0d24 06       		.byte	6
 1903 0d25 000000   		.space	3
 1904 0d28 0AD7EB40 		.word	1089197834
 1905 0d2c 1D5A5CC0 		.word	3227277853
 1906 0d30 00000000 		.space	8
 1906      00000000 
 1907 0d38 FF       		.byte	-1
 1908 0d39 000000   		.space	3
 1909 0d3c 4E       		.byte	78
 1910 0d3d 00000000 		.space	15
 1910      00000000 
 1910      00000000 
 1910      000000
 1911 0d4c 01       		.byte	1
 1912 0d4d 09       		.byte	9
 1913 0d4e 02       		.byte	2
 1914 0d4f 01       		.byte	1
 1915 0d50 03       		.byte	3
 1916 0d51 000000   		.space	3
 1917 0d54 3BDF0341 		.word	1090772795
 1918 0d58 1D5A5CC0 		.word	3227277853
 1919 0d5c 00000000 		.space	8
 1919      00000000 
 1920 0d64 FF       		.byte	-1
 1921 0d65 000000   		.space	3
 1922 0d68 4F       		.byte	79
 1923 0d69 00000000 		.space	15
 1923      00000000 
 1923      00000000 
 1923      000000
 1924 0d78 01       		.byte	1
 1925 0d79 0D       		.byte	13
 1926 0d7a 02       		.byte	2
 1927 0d7b 01       		.byte	1
 1928 0d7c 03       		.byte	3
 1929 0d7d 000000   		.space	3
 1930 0d80 0AD71141 		.word	1091688202
 1931 0d84 1D5A5CC0 		.word	3227277853
 1932 0d88 00000000 		.space	8
 1932      00000000 
 1933 0d90 FF       		.byte	-1
 1934 0d91 000000   		.space	3
 1935 0d94 50       		.byte	80
 1936 0d95 00000000 		.space	15
 1936      00000000 
 1936      00000000 
 1936      000000
 1937 0da4 01       		.byte	1
 1938 0da5 0D       		.byte	13
 1939 0da6 08       		.byte	8
 1940 0da7 07       		.byte	7
 1941 0da8 09       		.byte	9
 1942 0da9 000000   		.space	3
 1943 0dac C1CA1F41 		.word	1092602561
 1944 0db0 1D5A5CC0 		.word	3227277853
 1945 0db4 00000000 		.space	8
 1945      00000000 
 1946 0dbc FF       		.byte	-1
 1947 0dbd 000000   		.space	3
 1948 0dc0 51       		.byte	81
 1949 0dc1 00000000 		.space	15
 1949      00000000 
 1949      00000000 
 1949      000000
 1950 0dd0 01       		.byte	1
 1951 0dd1 0D       		.byte	13
 1952 0dd2 05       		.byte	5
 1953 0dd3 04       		.byte	4
 1954 0dd4 06       		.byte	6
 1955 0dd5 000000   		.space	3
 1956 0dd8 8FC22D41 		.word	1093517967
 1957 0ddc 1D5A5CC0 		.word	3227277853
 1958 0de0 00000000 		.space	8
 1958      00000000 
 1959 0de8 FF       		.byte	-1
 1960 0de9 000000   		.space	3
 1961 0dec 52       		.byte	82
 1962 0ded 00000000 		.space	15
 1962      00000000 
 1962      00000000 
 1962      000000
 1963 0dfc 01       		.byte	1
 1964 0dfd 0D       		.byte	13
 1965 0dfe 0B       		.byte	11
 1966 0dff 0A       		.byte	10
 1967 0e00 0C       		.byte	12
 1968 0e01 000000   		.space	3
 1969 0e04 73683941 		.word	1094281331
 1970 0e08 CBA155C0 		.word	3226837451
 1971 0e0c 00000000 		.space	8
 1971      00000000 
 1972 0e14 FF       		.byte	-1
 1973 0e15 000000   		.space	3
 1974 0e18 53       		.byte	83
 1975 0e19 00000000 		.space	15
 1975      00000000 
 1975      00000000 
 1975      000000
 1976 0e28 01       		.byte	1
 1977 0e29 0C       		.byte	12
 1978 0e2a 0B       		.byte	11
 1979 0e2b 0A       		.byte	10
 1980 0e2c 0C       		.byte	12
 1981 0e2d 000000   		.space	3
 1982 0e30 87163B41 		.word	1094391431
 1983 0e34 3BDF27C0 		.word	3223838523
 1984 0e38 00000000 		.space	8
 1984      00000000 
 1985 0e40 FF       		.byte	-1
 1986 0e41 000000   		.space	3
 1987 0e44 54       		.byte	84
 1988 0e45 00000000 		.space	15
 1988      00000000 
 1988      00000000 
 1988      000000
 1989 0e54 01       		.byte	1
 1990 0e55 08       		.byte	8
 1991 0e56 0B       		.byte	11
 1992 0e57 0A       		.byte	10
 1993 0e58 0C       		.byte	12
 1994 0e59 000000   		.space	3
 1995 0e5c 87163B41 		.word	1094391431
 1996 0e60 77BEEFBF 		.word	3220160119
 1997 0e64 00000000 		.space	8
 1997      00000000 
 1998 0e6c FF       		.byte	-1
 1999 0e6d 000000   		.space	3
 2000 0e70 55       		.byte	85
 2001 0e71 00000000 		.space	15
 2001      00000000 
 2001      00000000 
 2001      000000
 2002 0e80 01       		.byte	1
 2003 0e81 08       		.byte	8
 2004 0e82 08       		.byte	8
 2005 0e83 07       		.byte	7
 2006 0e84 09       		.byte	9
 2007 0e85 000000   		.space	3
 2008 0e88 87163B41 		.word	1094391431
 2009 0e8c 77BE8FBF 		.word	3213868663
 2010 0e90 00000000 		.space	8
 2010      00000000 
 2011 0e98 FF       		.byte	-1
 2012 0e99 000000   		.space	3
 2013 0e9c 56       		.byte	86
 2014 0e9d 00000000 		.space	15
 2014      00000000 
 2014      00000000 
 2014      000000
 2015 0eac 01       		.byte	1
 2016 0ead 08       		.byte	8
 2017 0eae 05       		.byte	5
 2018 0eaf 04       		.byte	4
 2019 0eb0 06       		.byte	6
 2020 0eb1 000000   		.space	3
 2021 0eb4 87163B41 		.word	1094391431
 2022 0eb8 DBF9BEBE 		.word	3200186843
 2023 0ebc 00000000 		.space	8
 2023      00000000 
 2024 0ec4 FF       		.byte	-1
 2025 0ec5 000000   		.space	3
 2026 0ec8 57       		.byte	87
 2027 0ec9 00000000 		.space	15
 2027      00000000 
 2027      00000000 
 2027      000000
 2028 0ed8 01       		.byte	1
 2029 0ed9 08       		.byte	8
 2030 0eda 02       		.byte	2
 2031 0edb 01       		.byte	1
 2032 0edc 03       		.byte	3
 2033 0edd 000000   		.space	3
 2034 0ee0 73683941 		.word	1094281331
 2035 0ee4 560EAD3E 		.word	1051528790
 2036 0ee8 00000000 		.space	8
 2036      00000000 
 2037 0ef0 FF       		.byte	-1
 2038 0ef1 000000   		.space	3
 2039 0ef4 58       		.byte	88
 2040 0ef5 00000000 		.space	15
 2040      00000000 
 2040      00000000 
 2040      000000
 2041 0f04 01       		.byte	1
 2042 0f05 06       		.byte	6
 2043 0f06 02       		.byte	2
 2044 0f07 01       		.byte	1
 2045 0f08 03       		.byte	3
 2046 0f09 000000   		.space	3
 2047 0f0c 2B871E41 		.word	1092519723
 2048 0f10 E5D0E23E 		.word	1055052005
 2049 0f14 00000000 		.space	8
 2049      00000000 
 2050 0f1c FF       		.byte	-1
 2051 0f1d 000000   		.space	3
 2052 0f20 59       		.byte	89
 2053 0f21 00000000 		.space	15
 2053      00000000 
 2053      00000000 
 2053      000000
 2054 0f30 01       		.byte	1
 2055 0f31 05       		.byte	5
 2056 0f32 02       		.byte	2
 2057 0f33 01       		.byte	1
 2058 0f34 03       		.byte	3
 2059 0f35 000000   		.space	3
 2060 0f38 A69B1441 		.word	1091869606
 2061 0f3c E5D0E23E 		.word	1055052005
 2062 0f40 00000000 		.space	8
 2062      00000000 
 2063 0f48 FF       		.byte	-1
 2064 0f49 000000   		.space	3
 2065 0f4c 5A       		.byte	90
 2066 0f4d 00000000 		.space	15
 2066      00000000 
 2066      00000000 
 2066      000000
 2067 0f5c 01       		.byte	1
 2068 0f5d 04       		.byte	4
 2069 0f5e 02       		.byte	2
 2070 0f5f 01       		.byte	1
 2071 0f60 03       		.byte	3
 2072 0f61 000000   		.space	3
 2073 0f64 00000A41 		.word	1091174400
 2074 0f68 E5D0E23E 		.word	1055052005
 2075 0f6c 00000000 		.space	8
 2075      00000000 
 2076 0f74 FF       		.byte	-1
 2077 0f75 000000   		.space	3
 2078 0f78 5B       		.byte	91
 2079 0f79 00000000 		.space	15
 2079      00000000 
 2079      00000000 
 2079      000000
 2080 0f88 01       		.byte	1
 2081 0f89 03       		.byte	3
 2082 0f8a 02       		.byte	2
 2083 0f8b 01       		.byte	1
 2084 0f8c 03       		.byte	3
 2085 0f8d 000000   		.space	3
 2086 0f90 0000FC40 		.word	1090256896
 2087 0f94 E5D0E23E 		.word	1055052005
 2088 0f98 00000000 		.space	8
 2088      00000000 
 2089 0fa0 FF       		.byte	-1
 2090 0fa1 000000   		.space	3
 2091 0fa4 5C       		.byte	92
 2092 0fa5 00000000 		.space	15
 2092      00000000 
 2092      00000000 
 2092      000000
 2093 0fb4 01       		.byte	1
 2094 0fb5 02       		.byte	2
 2095 0fb6 02       		.byte	2
 2096 0fb7 01       		.byte	1
 2097 0fb8 03       		.byte	3
 2098 0fb9 000000   		.space	3
 2099 0fbc 0000E440 		.word	1088684032
 2100 0fc0 E5D0E23E 		.word	1055052005
 2101 0fc4 00000000 		.space	8
 2101      00000000 
 2102 0fcc FF       		.byte	-1
 2103 0fcd 000000   		.space	3
 2104 0fd0 5D       		.byte	93
 2105 0fd1 00000000 		.space	15
 2105      00000000 
 2105      00000000 
 2105      000000
 2106 0fe0 01       		.byte	1
 2107 0fe1 01       		.byte	1
 2108 0fe2 02       		.byte	2
 2109 0fe3 01       		.byte	1
 2110 0fe4 03       		.byte	3
 2111 0fe5 000000   		.space	3
 2112 0fe8 0000CC40 		.word	1087111168
 2113 0fec E5D0E23E 		.word	1055052005
 2114 0ff0 00000000 		.space	8
 2114      00000000 
 2115 0ff8 FF       		.byte	-1
 2116 0ff9 000000   		.space	3
 2117 0ffc 5E       		.byte	94
 2118 0ffd 00000000 		.space	15
 2118      00000000 
 2118      00000000 
 2118      000000
 2119 100c 01       		.byte	1
 2120 100d 0E       		.byte	14
 2121 100e 02       		.byte	2
 2122 100f 01       		.byte	1
 2123 1010 03       		.byte	3
 2124 1011 000000   		.space	3
 2125 1014 0000B440 		.word	1085538304
 2126 1018 E5D0E23E 		.word	1055052005
 2127 101c 00000000 		.space	8
 2127      00000000 
 2128 1024 FF       		.byte	-1
 2129 1025 000000   		.space	3
 2130 1028 5F       		.byte	95
 2131 1029 00000000 		.space	15
 2131      00000000 
 2131      00000000 
 2131      000000
 2132 1038 02       		.byte	2
 2133 1039 08       		.byte	8
 2134 103a 02       		.byte	2
 2135 103b 01       		.byte	1
 2136 103c 03       		.byte	3
 2137 103d 000000   		.space	3
 2138 1040 00009C40 		.word	1083965440
 2139 1044 E5D0E23E 		.word	1055052005
 2140 1048 00000000 		.space	8
 2140      00000000 
 2141 1050 FF       		.byte	-1
 2142 1051 000000   		.space	3
 2143 1054 60       		.byte	96
 2144 1055 00000000 		.space	15
 2144      00000000 
 2144      00000000 
 2144      000000
 2145 1064 02       		.byte	2
 2146 1065 07       		.byte	7
 2147 1066 02       		.byte	2
 2148 1067 01       		.byte	1
 2149 1068 03       		.byte	3
 2150 1069 000000   		.space	3
 2151 106c 00008440 		.word	1082392576
 2152 1070 E5D0E23E 		.word	1055052005
 2153 1074 00000000 		.space	8
 2153      00000000 
 2154 107c FF       		.byte	-1
 2155 107d 000000   		.space	3
 2156 1080 61       		.byte	97
 2157 1081 00000000 		.space	15
 2157      00000000 
 2157      00000000 
 2157      000000
 2158 1090 02       		.byte	2
 2159 1091 06       		.byte	6
 2160 1092 02       		.byte	2
 2161 1093 01       		.byte	1
 2162 1094 03       		.byte	3
 2163 1095 000000   		.space	3
 2164 1098 00005840 		.word	1079508992
 2165 109c E5D0E23E 		.word	1055052005
 2166 10a0 00000000 		.space	8
 2166      00000000 
 2167 10a8 FF       		.byte	-1
 2168 10a9 000000   		.space	3
 2169 10ac 62       		.byte	98
 2170 10ad 00000000 		.space	15
 2170      00000000 
 2170      00000000 
 2170      000000
 2171 10bc 02       		.byte	2
 2172 10bd 05       		.byte	5
 2173 10be 02       		.byte	2
 2174 10bf 01       		.byte	1
 2175 10c0 03       		.byte	3
 2176 10c1 000000   		.space	3
 2177 10c4 00002840 		.word	1076363264
 2178 10c8 E5D0E23E 		.word	1055052005
 2179 10cc 00000000 		.space	8
 2179      00000000 
 2180 10d4 FF       		.byte	-1
 2181 10d5 000000   		.space	3
 2182 10d8 63       		.byte	99
 2183 10d9 00000000 		.space	15
 2183      00000000 
 2183      00000000 
 2183      000000
 2184 10e8 02       		.byte	2
 2185 10e9 04       		.byte	4
 2186 10ea 02       		.byte	2
 2187 10eb 01       		.byte	1
 2188 10ec 03       		.byte	3
 2189 10ed 000000   		.space	3
 2190 10f0 0000F03F 		.word	1072693248
 2191 10f4 E5D0E23E 		.word	1055052005
 2192 10f8 00000000 		.space	8
 2192      00000000 
 2193 1100 FF       		.byte	-1
 2194 1101 000000   		.space	3
 2195 1104 64       		.byte	100
 2196 1105 00000000 		.space	15
 2196      00000000 
 2196      00000000 
 2196      000000
 2197 1114 02       		.byte	2
 2198 1115 03       		.byte	3
 2199 1116 02       		.byte	2
 2200 1117 01       		.byte	1
 2201 1118 03       		.byte	3
 2202 1119 000000   		.space	3
 2203 111c 0000903F 		.word	1066401792
 2204 1120 E5D0E23E 		.word	1055052005
 2205 1124 00000000 		.space	8
 2205      00000000 
 2206 112c FF       		.byte	-1
 2207 112d 000000   		.space	3
 2208 1130 65       		.byte	101
 2209 1131 00000000 		.space	15
 2209      00000000 
 2209      00000000 
 2209      000000
 2210 1140 02       		.byte	2
 2211 1141 01       		.byte	1
 2212 1142 02       		.byte	2
 2213 1143 01       		.byte	1
 2214 1144 03       		.byte	3
 2215 1145 000000   		.space	3
 2216 1148 560EADBE 		.word	3199012438
 2217 114c 560EAD3E 		.word	1051528790
 2218 1150 00000000 		.space	8
 2218      00000000 
 2219 1158 FF       		.byte	-1
 2220 1159 000000   		.space	3
 2221 115c 66       		.byte	102
 2222 115d 00000000 		.space	15
 2222      00000000 
 2222      00000000 
 2222      000000
 2223 116c 02       		.byte	2
 2224 116d 01       		.byte	1
 2225 116e 05       		.byte	5
 2226 116f 04       		.byte	4
 2227 1170 06       		.byte	6
 2228 1171 000000   		.space	3
 2229 1174 E5D0E2BE 		.word	3202535653
 2230 1178 DBF9BEBE 		.word	3200186843
 2231 117c 00000000 		.space	8
 2231      00000000 
 2232 1184 FF       		.byte	-1
 2233 1185 000000   		.space	3
 2234 1188 67       		.byte	103
 2235 1189 00000000 		.space	15
 2235      00000000 
 2235      00000000 
 2235      000000
 2236 1198 02       		.byte	2
 2237 1199 01       		.byte	1
 2238 119a 08       		.byte	8
 2239 119b 07       		.byte	7
 2240 119c 09       		.byte	9
 2241 119d 000000   		.space	3
 2242 11a0 E5D0E2BE 		.word	3202535653
 2243 11a4 77BE8FBF 		.word	3213868663
 2244 11a8 00000000 		.space	8
 2244      00000000 
 2245 11b0 FF       		.byte	-1
 2246 11b1 000000   		.space	3
 2247 11b4 68       		.byte	104
 2248 11b5 00000000 		.space	15
 2248      00000000 
 2248      00000000 
 2248      000000
 2249 11c4 02       		.byte	2
 2250 11c5 01       		.byte	1
 2251 11c6 0B       		.byte	11
 2252 11c7 0A       		.byte	10
 2253 11c8 0C       		.byte	12
 2254 11c9 000000   		.space	3
 2255 11cc E5D0E2BE 		.word	3202535653
 2256 11d0 77BEEFBF 		.word	3220160119
 2257 11d4 00000000 		.space	8
 2257      00000000 
 2258 11dc FF       		.byte	-1
 2259 11dd 000000   		.space	3
 2260 11e0 69       		.byte	105
 2261 11e1 00000000 		.space	15
 2261      00000000 
 2261      00000000 
 2261      000000
 2262 11f0 02       		.byte	2
 2263 11f1 0A       		.byte	10
 2264 11f2 0B       		.byte	11
 2265 11f3 0A       		.byte	10
 2266 11f4 0C       		.byte	12
 2267 11f5 000000   		.space	3
 2268 11f8 E5D0E2BE 		.word	3202535653
 2269 11fc 3BDF27C0 		.word	3223838523
 2270 1200 00000000 		.space	8
 2270      00000000 
 2271 1208 FF       		.byte	-1
 2272 1209 000000   		.space	3
 2273              		.bss
 2274              		.set	.LANCHOR0,. + 0
 2277              	v_5v_cat_hit:
 2278 0000 00       		.space	1
 2281              	gcr_min_counter:
 2282 0001 00       		.space	1
 2283              		.section	.rodata.str1.1,"aMS",%progbits,1
 2284              	.LC1:
 2285 0000 5553423A 		.ascii	"USB: WARNING: Re-enabling LED drivers\015\012\000"
 2285      20574152 
 2285      4E494E47 
 2285      3A205265 
 2285      2D656E61 
 2286              	.LC2:
 2287 0028 5553423A 		.ascii	"USB: Disabling extra port until replug!\015\012\000"
 2287      20446973 
 2287      61626C69 
 2287      6E672065 
 2287      78747261 
 2288              		.text
 2289              	.Letext0:
 2290              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 2291              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 2292              		.file 4 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/samd51j18a.h"
 2293              		.file 5 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/core_cm4.h"
 2294              		.file 6 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/system_samd51.h"
 2295              		.file 7 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/component/dmac.h"
 2296              		.file 8 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/component/sercom.h"
 2297              		.file 9 "tmk_core/protocol/arm_atsam/md_bootloader.h"
 2298              		.file 10 "tmk_core/common/timer.h"
 2299              		.file 11 "tmk_core/protocol/arm_atsam/d51_util.h"
 2300              		.file 12 "tmk_core/protocol/arm_atsam/clks.h"
 2301              		.file 13 "tmk_core/protocol/arm_atsam/adc.h"
 2302              		.file 14 "tmk_core/protocol/arm_atsam/i2c_master.h"
 2303              		.file 15 "tmk_core/protocol/arm_atsam/spi.h"
 2304              		.file 16 "tmk_core/protocol/arm_atsam/./usb/usb2422.h"
 2305              		.file 17 "tmk_core/common/action.h"
 2306              		.file 18 "tmk_core/common/report.h"
 2307              		.file 19 "tmk_core/common/host.h"
 2308              		.file 20 "tmk_core/common/debug.h"
 2309              		.file 21 "quantum/keycode_config.h"
 2310              		.file 22 "quantum/keymap.h"
 2311              		.file 23 "quantum/color.h"
 2312              		.file 24 "quantum/rgb_matrix_types.h"
 2313              		.file 25 "quantum/rgb_matrix.h"
 2314              		.file 26 "tmk_core/common/action_layer.h"
 2315              		.file 27 "tmk_core/common/action_util.h"
 2316              		.file 28 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 2317              		.file 29 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 2318              		.file 30 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 2319              		.file 31 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 2320              		.file 32 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 2321              		.file 33 "quantum/quantum.h"
 2322              		.file 34 "tmk_core/protocol/arm_atsam/led_matrix.h"
 2323              		.file 35 "tmk_core/protocol/arm_atsam/./usb/compiler.h"
 2324              		.file 36 "tmk_core/protocol/arm_atsam/./usb/usb_protocol.h"
 2325              		.file 37 "tmk_core/protocol/arm_atsam/./usb/udi_device_conf.h"
 2326              		.file 38 "tmk_core/protocol/arm_atsam/./usb/udi.h"
 2327              		.file 39 "tmk_core/protocol/arm_atsam/./usb/udc_desc.h"
 2328              		.file 40 "tmk_core/protocol/arm_atsam/./usb/udi_hid_kbd.h"
 2329              		.file 41 "tmk_core/protocol/arm_atsam/./usb/usb_main.h"
 2330              		.file 42 "tmk_core/protocol/arm_atsam/./usb/udd.h"
 2331              		.file 43 "tmk_core/protocol/arm_atsam/./usb/udi_cdc.h"
 2332              		.file 44 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 2333              		.file 45 "tmk_core/protocol/arm_atsam/main_arm_atsam.h"
 2334              		.file 46 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 led_matrix.c
/var/tmp//cctyUIEs.s:18     .text.led_set_one:0000000000000000 $t
/var/tmp//cctyUIEs.s:25     .text.led_set_one:0000000000000000 led_set_one
/var/tmp//cctyUIEs.s:60     .text.led_set_one:0000000000000018 $d
                            *COM*:000000000000013b led_buffer
/var/tmp//cctyUIEs.s:65     .text.flush:0000000000000000 $t
/var/tmp//cctyUIEs.s:72     .text.flush:0000000000000000 flush
/var/tmp//cctyUIEs.s:228    .text.flush:00000000000000c4 $d
/var/tmp//cctyUIEs.s:907    .data:0000000000000000 led_map
                            *COM*:0000000000000001 gcr_actual
                            *COM*:0000000000000001 gcr_actual_last
/var/tmp//cctyUIEs.s:239    .text.led_set_all:0000000000000000 $t
/var/tmp//cctyUIEs.s:246    .text.led_set_all:0000000000000000 led_set_all
/var/tmp//cctyUIEs.s:283    .text.led_set_all:0000000000000018 $d
/var/tmp//cctyUIEs.s:288    .text.SERCOM1_0_Handler:0000000000000000 $t
/var/tmp//cctyUIEs.s:295    .text.SERCOM1_0_Handler:0000000000000000 SERCOM1_0_Handler
/var/tmp//cctyUIEs.s:315    .text.SERCOM1_0_Handler:0000000000000010 $d
/var/tmp//cctyUIEs.s:320    .text.DMAC_0_Handler:0000000000000000 $t
/var/tmp//cctyUIEs.s:327    .text.DMAC_0_Handler:0000000000000000 DMAC_0_Handler
/var/tmp//cctyUIEs.s:375    .text.DMAC_0_Handler:0000000000000034 $d
/var/tmp//cctyUIEs.s:381    .text.gcr_compute:0000000000000000 $t
/var/tmp//cctyUIEs.s:388    .text.gcr_compute:0000000000000000 gcr_compute
/var/tmp//cctyUIEs.s:561    .text.gcr_compute:00000000000000bc $d
                            *COM*:0000000000000001 gcr_desired
/var/tmp//cctyUIEs.s:575    .text.issi3733_prepare_arrays:0000000000000000 $t
/var/tmp//cctyUIEs.s:582    .text.issi3733_prepare_arrays:0000000000000000 issi3733_prepare_arrays
/var/tmp//cctyUIEs.s:699    .text.issi3733_prepare_arrays:00000000000000c4 $d
                            *COM*:00000000000003c2 issidrv
/var/tmp//cctyUIEs.s:706    .text.led_matrix_prepare:0000000000000000 $t
/var/tmp//cctyUIEs.s:713    .text.led_matrix_prepare:0000000000000000 led_matrix_prepare
/var/tmp//cctyUIEs.s:749    .text.led_matrix_prepare:000000000000001c $d
/var/tmp//cctyUIEs.s:755    .text.init:0000000000000000 $t
/var/tmp//cctyUIEs.s:762    .text.init:0000000000000000 init
/var/tmp//cctyUIEs.s:796    .text.init:0000000000000020 $d
/var/tmp//cctyUIEs.s:802    .text.led_matrix_indicators:0000000000000000 $t
/var/tmp//cctyUIEs.s:809    .text.led_matrix_indicators:0000000000000000 led_matrix_indicators
/var/tmp//cctyUIEs.s:879    .text.led_matrix_indicators:000000000000004c $d
/var/tmp//cctyUIEs.s:898    .rodata:0000000000000000 rgb_matrix_driver
                            *COM*:0000000000000010 dmac_desc_wb
                            *COM*:0000000000000010 dmac_desc
/var/tmp//cctyUIEs.s:895    .rodata:0000000000000000 $d
/var/tmp//cctyUIEs.s:904    .data:0000000000000000 $d
/var/tmp//cctyUIEs.s:2277   .bss:0000000000000000 v_5v_cat_hit
/var/tmp//cctyUIEs.s:2278   .bss:0000000000000000 $d
/var/tmp//cctyUIEs.s:2281   .bss:0000000000000001 gcr_min_counter

UNDEFINED SYMBOLS
i2c_led_q_request_room
i2c_led_q_add
i2c_led_q_run
sr_exp_data
i2c_led_q_running
i2c1_stop
I2C3733_Control_Set
CDC_print
USB_ExtraSetState
v_5v
usb_gcr_auto
v_5v_avg
usb_extra_state
usb_extra_manual
memset
debug_code
keyboard_leds
rgb_matrix_config
