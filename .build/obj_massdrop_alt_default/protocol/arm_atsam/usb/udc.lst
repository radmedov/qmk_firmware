   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"udc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.udc_update_iface_desc,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	udc_update_iface_desc:
  25              	.LFB18:
  26              		.file 1 "tmk_core/protocol/arm_atsam/usb/udc.c"
   1:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
   2:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \file
   3:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
   4:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief USB Device Controller (UDC)
   5:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
   6:tmk_core/protocol/arm_atsam/usb/udc.c ****  * Copyright (c) 2009-2015 Atmel Corporation. All rights reserved.
   7:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
   8:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \asf_license_start
   9:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  10:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \page License
  11:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  12:tmk_core/protocol/arm_atsam/usb/udc.c ****  * Redistribution and use in source and binary forms, with or without
  13:tmk_core/protocol/arm_atsam/usb/udc.c ****  * modification, are permitted provided that the following conditions are met:
  14:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  15:tmk_core/protocol/arm_atsam/usb/udc.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:tmk_core/protocol/arm_atsam/usb/udc.c ****  *    this list of conditions and the following disclaimer.
  17:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  18:tmk_core/protocol/arm_atsam/usb/udc.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:tmk_core/protocol/arm_atsam/usb/udc.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:tmk_core/protocol/arm_atsam/usb/udc.c ****  *    and/or other materials provided with the distribution.
  21:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  22:tmk_core/protocol/arm_atsam/usb/udc.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:tmk_core/protocol/arm_atsam/usb/udc.c ****  *    from this software without specific prior written permission.
  24:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  25:tmk_core/protocol/arm_atsam/usb/udc.c ****  * 4. This software may only be redistributed and used in connection with an
  26:tmk_core/protocol/arm_atsam/usb/udc.c ****  *    Atmel microcontroller product.
  27:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  28:tmk_core/protocol/arm_atsam/usb/udc.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:tmk_core/protocol/arm_atsam/usb/udc.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:tmk_core/protocol/arm_atsam/usb/udc.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:tmk_core/protocol/arm_atsam/usb/udc.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:tmk_core/protocol/arm_atsam/usb/udc.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:tmk_core/protocol/arm_atsam/usb/udc.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:tmk_core/protocol/arm_atsam/usb/udc.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:tmk_core/protocol/arm_atsam/usb/udc.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:tmk_core/protocol/arm_atsam/usb/udc.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:tmk_core/protocol/arm_atsam/usb/udc.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:tmk_core/protocol/arm_atsam/usb/udc.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  40:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \asf_license_stop
  41:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  42:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
  43:tmk_core/protocol/arm_atsam/usb/udc.c **** /*
  44:tmk_core/protocol/arm_atsam/usb/udc.c ****  * Support and FAQ: visit <a href="http://www.atmel.com/design-support/">Atmel Support</a>
  45:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
  46:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  47:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "conf_usb.h"
  48:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "usb_protocol.h"
  49:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "udd.h"
  50:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "udc_desc.h"
  51:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "udi_device_conf.h"
  52:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "udi.h"
  53:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "udc.h"
  54:tmk_core/protocol/arm_atsam/usb/udc.c **** #include "md_bootloader.h"
  55:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  56:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
  57:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \ingroup udc_group
  58:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \defgroup udc_group_interne Implementation of UDC
  59:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
  60:tmk_core/protocol/arm_atsam/usb/udc.c ****  * Internal implementation
  61:tmk_core/protocol/arm_atsam/usb/udc.c ****  * @{
  62:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
  63:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  64:tmk_core/protocol/arm_atsam/usb/udc.c **** //! \name Internal variables to manage the USB device
  65:tmk_core/protocol/arm_atsam/usb/udc.c **** //! @{
  66:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  67:tmk_core/protocol/arm_atsam/usb/udc.c **** //! Device status state (see enum usb_device_status in usb_protocol.h)
  68:tmk_core/protocol/arm_atsam/usb/udc.c **** static le16_t udc_device_status;
  69:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  70:tmk_core/protocol/arm_atsam/usb/udc.c **** COMPILER_WORD_ALIGNED
  71:tmk_core/protocol/arm_atsam/usb/udc.c **** //! Device interface setting value
  72:tmk_core/protocol/arm_atsam/usb/udc.c **** static uint8_t udc_iface_setting = 0;
  73:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  74:tmk_core/protocol/arm_atsam/usb/udc.c **** //! Device Configuration number selected by the USB host
  75:tmk_core/protocol/arm_atsam/usb/udc.c **** COMPILER_WORD_ALIGNED
  76:tmk_core/protocol/arm_atsam/usb/udc.c **** static uint8_t udc_num_configuration = 0;
  77:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  78:tmk_core/protocol/arm_atsam/usb/udc.c **** //! Pointer on the selected speed device configuration
  79:tmk_core/protocol/arm_atsam/usb/udc.c **** static udc_config_speed_t UDC_DESC_STORAGE *udc_ptr_conf;
  80:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  81:tmk_core/protocol/arm_atsam/usb/udc.c **** //! Pointer on interface descriptor used by SETUP request.
  82:tmk_core/protocol/arm_atsam/usb/udc.c **** static usb_iface_desc_t UDC_DESC_STORAGE *udc_ptr_iface;
  83:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  84:tmk_core/protocol/arm_atsam/usb/udc.c **** //! @}
  85:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  86:tmk_core/protocol/arm_atsam/usb/udc.c **** //! \name Internal structure to store the USB device main strings
  87:tmk_core/protocol/arm_atsam/usb/udc.c **** //! @{
  88:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  89:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
  90:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Language ID of USB device (US ID by default)
  91:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
  92:tmk_core/protocol/arm_atsam/usb/udc.c **** COMPILER_WORD_ALIGNED
  93:tmk_core/protocol/arm_atsam/usb/udc.c **** static UDC_DESC_STORAGE usb_str_lgid_desc_t udc_string_desc_languageid = {.desc.bLength = sizeof(us
  94:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  95:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
  96:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief USB device manufacture name storage
  97:tmk_core/protocol/arm_atsam/usb/udc.c ****  * String is allocated only if USB_DEVICE_MANUFACTURE_NAME is declared
  98:tmk_core/protocol/arm_atsam/usb/udc.c ****  * by usb application configuration
  99:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 100:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_MANUFACTURE_NAME
 101:tmk_core/protocol/arm_atsam/usb/udc.c **** static uint8_t udc_string_manufacturer_name[] = USB_DEVICE_MANUFACTURE_NAME;
 102:tmk_core/protocol/arm_atsam/usb/udc.c **** #    define USB_DEVICE_MANUFACTURE_NAME_SIZE (sizeof(udc_string_manufacturer_name) - 1)
 103:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
 104:tmk_core/protocol/arm_atsam/usb/udc.c **** #    define USB_DEVICE_MANUFACTURE_NAME_SIZE 0
 105:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 106:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 107:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 108:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief USB device product name storage
 109:tmk_core/protocol/arm_atsam/usb/udc.c ****  * String is allocated only if USB_DEVICE_PRODUCT_NAME is declared
 110:tmk_core/protocol/arm_atsam/usb/udc.c ****  * by usb application configuration
 111:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 112:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_PRODUCT_NAME
 113:tmk_core/protocol/arm_atsam/usb/udc.c **** static uint8_t udc_string_product_name[] = USB_DEVICE_PRODUCT_NAME;
 114:tmk_core/protocol/arm_atsam/usb/udc.c **** #    define USB_DEVICE_PRODUCT_NAME_SIZE (sizeof(udc_string_product_name) - 1)
 115:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
 116:tmk_core/protocol/arm_atsam/usb/udc.c **** #    define USB_DEVICE_PRODUCT_NAME_SIZE 0
 117:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 118:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 119:tmk_core/protocol/arm_atsam/usb/udc.c **** #if defined USB_DEVICE_SERIAL_NAME
 120:tmk_core/protocol/arm_atsam/usb/udc.c **** #    define USB_DEVICE_SERIAL_NAME_SIZE (sizeof(USB_DEVICE_SERIAL_NAME) - 1)
 121:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
 122:tmk_core/protocol/arm_atsam/usb/udc.c **** #    define USB_DEVICE_SERIAL_NAME_SIZE 0
 123:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 124:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 125:tmk_core/protocol/arm_atsam/usb/udc.c **** uint8_t     usb_device_serial_name_size = 0;
 126:tmk_core/protocol/arm_atsam/usb/udc.c **** #if defined USB_DEVICE_SERIAL_USE_BOOTLOADER_SERIAL
 127:tmk_core/protocol/arm_atsam/usb/udc.c **** uint8_t     bootloader_serial_number[BOOTLOADER_SERIAL_MAX_SIZE + 1] = "";
 128:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 129:tmk_core/protocol/arm_atsam/usb/udc.c **** static const uint8_t *udc_get_string_serial_name(void) {
 130:tmk_core/protocol/arm_atsam/usb/udc.c **** #if defined           USB_DEVICE_SERIAL_USE_BOOTLOADER_SERIAL
 131:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint32_t serial_ptrloc  = (uint32_t)&_srom - 4;
 132:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint32_t serial_address = *(uint32_t *)serial_ptrloc;  // Address of bootloader's serial number
 133:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 134:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (serial_address != 0xFFFFFFFF && serial_address < serial_ptrloc)  // Check for factory progr
 135:tmk_core/protocol/arm_atsam/usb/udc.c ****     {
 136:tmk_core/protocol/arm_atsam/usb/udc.c ****         if ((serial_address & 0xFF) % 4 == 0)  // Check alignment
 137:tmk_core/protocol/arm_atsam/usb/udc.c ****         {
 138:tmk_core/protocol/arm_atsam/usb/udc.c ****             uint16_t *serial_use    = (uint16_t *)(serial_address);  // Point to address of string 
 139:tmk_core/protocol/arm_atsam/usb/udc.c ****             uint8_t   serial_length = 0;
 140:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 141:tmk_core/protocol/arm_atsam/usb/udc.c ****             while ((*(serial_use + serial_length) > 32 && *(serial_use + serial_length) < 127) && s
 142:tmk_core/protocol/arm_atsam/usb/udc.c ****                 bootloader_serial_number[serial_length] = *(serial_use + serial_length) & 0xFF;
 143:tmk_core/protocol/arm_atsam/usb/udc.c ****                 serial_length++;
 144:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 145:tmk_core/protocol/arm_atsam/usb/udc.c ****             bootloader_serial_number[serial_length] = 0;
 146:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 147:tmk_core/protocol/arm_atsam/usb/udc.c ****             usb_device_serial_name_size = serial_length;
 148:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 149:tmk_core/protocol/arm_atsam/usb/udc.c ****             return bootloader_serial_number;  // Use serial programmed into bootloader rom
 150:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 151:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 152:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 153:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 154:tmk_core/protocol/arm_atsam/usb/udc.c ****     usb_device_serial_name_size = USB_DEVICE_SERIAL_NAME_SIZE;
 155:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 156:tmk_core/protocol/arm_atsam/usb/udc.c **** #if defined USB_DEVICE_SERIAL_NAME
 157:tmk_core/protocol/arm_atsam/usb/udc.c ****     return (const uint8_t *)USB_DEVICE_SERIAL_NAME;  // Use serial supplied by keyboard's config.h
 158:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
 159:tmk_core/protocol/arm_atsam/usb/udc.c ****     return 0;  // No serial supplied
 160:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 161:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 162:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 163:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 164:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief USB device string descriptor
 165:tmk_core/protocol/arm_atsam/usb/udc.c ****  * Structure used to transfer ASCII strings to USB String descriptor structure.
 166:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 167:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifndef BOOTLOADER_SERIAL_MAX_SIZE
 168:tmk_core/protocol/arm_atsam/usb/udc.c **** #    define BOOTLOADER_SERIAL_MAX_SIZE 0
 169:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif  // BOOTLOADER_SERIAL_MAX_SIZE
 170:tmk_core/protocol/arm_atsam/usb/udc.c **** struct udc_string_desc_t {
 171:tmk_core/protocol/arm_atsam/usb/udc.c ****     usb_str_desc_t header;
 172:tmk_core/protocol/arm_atsam/usb/udc.c ****     le16_t         string[Max(Max(Max(USB_DEVICE_MANUFACTURE_NAME_SIZE, USB_DEVICE_PRODUCT_NAME_SIZ
 173:tmk_core/protocol/arm_atsam/usb/udc.c **** };
 174:tmk_core/protocol/arm_atsam/usb/udc.c **** COMPILER_WORD_ALIGNED
 175:tmk_core/protocol/arm_atsam/usb/udc.c **** static UDC_DESC_STORAGE struct udc_string_desc_t udc_string_desc = {.header.bDescriptorType = USB_D
 176:tmk_core/protocol/arm_atsam/usb/udc.c **** //! @}
 177:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 178:tmk_core/protocol/arm_atsam/usb/udc.c **** usb_iface_desc_t UDC_DESC_STORAGE *udc_get_interface_desc(void) { return udc_ptr_iface; }
 179:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 180:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 181:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Returns a value to check the end of USB Configuration descriptor
 182:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 183:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return address after the last byte of USB Configuration descriptor
 184:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 185:tmk_core/protocol/arm_atsam/usb/udc.c **** static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void) { return (UDC_DESC_STORAGE usb_conf
 186:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 187:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 188:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 189:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Search specific descriptor in global interface descriptor
 190:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 191:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \param desc       Address of interface descriptor
 192:tmk_core/protocol/arm_atsam/usb/udc.c ****  *                   or previous specific descriptor found
 193:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \param desc_id    Descriptor ID to search
 194:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 195:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return address of specific descriptor found
 196:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return NULL if it is the end of global interface descriptor
 197:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 198:tmk_core/protocol/arm_atsam/usb/udc.c **** static usb_conf_desc_t UDC_DESC_STORAGE *udc_next_desc_in_iface(usb_conf_desc_t UDC_DESC_STORAGE *d
 199:tmk_core/protocol/arm_atsam/usb/udc.c ****     usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;
 200:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 201:tmk_core/protocol/arm_atsam/usb/udc.c ****     ptr_eof_desc = udc_get_eof_conf();
 202:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Go to next descriptor
 203:tmk_core/protocol/arm_atsam/usb/udc.c ****     desc = (UDC_DESC_STORAGE usb_conf_desc_t *)((uint8_t *)desc + desc->bLength);
 204:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Check the end of configuration descriptor
 205:tmk_core/protocol/arm_atsam/usb/udc.c ****     while (ptr_eof_desc > desc) {
 206:tmk_core/protocol/arm_atsam/usb/udc.c ****         // If new interface descriptor is found,
 207:tmk_core/protocol/arm_atsam/usb/udc.c ****         // then it is the end of the current global interface descriptor
 208:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_DT_INTERFACE == desc->bDescriptorType) {
 209:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;  // End of global interface descriptor
 210:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 211:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (desc_id == desc->bDescriptorType) {
 212:tmk_core/protocol/arm_atsam/usb/udc.c ****             return desc;  // Specific descriptor found
 213:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 214:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Go to next descriptor
 215:tmk_core/protocol/arm_atsam/usb/udc.c ****         desc = (UDC_DESC_STORAGE usb_conf_desc_t *)((uint8_t *)desc + desc->bLength);
 216:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 217:tmk_core/protocol/arm_atsam/usb/udc.c ****     return NULL;  // No specific descriptor found
 218:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 219:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 220:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 221:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 222:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Search an interface descriptor
 223:tmk_core/protocol/arm_atsam/usb/udc.c ****  * This routine updates the internal pointer udc_ptr_iface.
 224:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 225:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \param iface_num     Interface number to find in Configuration Descriptor
 226:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \param setting_num   Setting number of interface to find
 227:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 228:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return 1 if found or 0 if not found
 229:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 230:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_update_iface_desc(uint8_t iface_num, uint8_t setting_num) {
  27              		.loc 1 230 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
 231:tmk_core/protocol/arm_atsam/usb/udc.c ****     usb_conf_desc_t UDC_DESC_STORAGE *ptr_end_desc;
 232:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 233:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (0 == udc_num_configuration) {
  38              		.loc 1 233 0
  39 0002 114A     		ldr	r2, .L17
  40 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41 0006 63B1     		cbz	r3, .L2
 234:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 235:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 236:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 237:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  42              		.loc 1 237 0
  43 0008 5368     		ldr	r3, [r2, #4]
  44 000a 1B68     		ldr	r3, [r3]
  45 000c 1C79     		ldrb	r4, [r3, #4]	@ zero_extendqisi2
  46 000e 8442     		cmp	r4, r0
  47 0010 07D9     		bls	.L2
 238:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 239:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 240:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 241:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Start at the beginning of configuration descriptor
 242:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)udc_ptr_conf->desc;
  48              		.loc 1 242 0
  49 0012 9360     		str	r3, [r2, #8]
  50              	.LBB4:
  51              	.LBB5:
 185:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  52              		.loc 1 185 0
  53 0014 5D88     		ldrh	r5, [r3, #2]	@ unaligned
  54              	.LBE5:
  55              	.LBE4:
 243:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 244:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Check the end of configuration descriptor
 245:tmk_core/protocol/arm_atsam/usb/udc.c ****     ptr_end_desc = udc_get_eof_conf();
 246:tmk_core/protocol/arm_atsam/usb/udc.c ****     while (ptr_end_desc > (UDC_DESC_STORAGE usb_conf_desc_t *)udc_ptr_iface) {
  56              		.loc 1 246 0
  57 0016 0024     		movs	r4, #0
  58              	.LBB7:
  59              	.LBB6:
 185:tmk_core/protocol/arm_atsam/usb/udc.c **** 
  60              		.loc 1 185 0
  61 0018 1D44     		add	r5, r5, r3
  62              	.L3:
  63              	.LBE6:
  64              	.LBE7:
  65              		.loc 1 246 0
  66 001a AB42     		cmp	r3, r5
  67 001c 03D3     		bcc	.L7
  68 001e 04B1     		cbz	r4, .L2
  69 0020 9360     		str	r3, [r2, #8]
  70              	.L2:
 247:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
 248:tmk_core/protocol/arm_atsam/usb/udc.c ****             // A interface descriptor is found
 249:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Check interface and alternate setting number
 250:tmk_core/protocol/arm_atsam/usb/udc.c ****             if ((iface_num == udc_ptr_iface->bInterfaceNumber) && (setting_num == udc_ptr_iface->bA
 251:tmk_core/protocol/arm_atsam/usb/udc.c ****                 return true;  // Interface found
 252:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 253:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 254:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Go to next descriptor
 255:tmk_core/protocol/arm_atsam/usb/udc.c ****         udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)((uint8_t *)udc_ptr_iface + udc_ptr_if
 256:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 257:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;  // Interface not found
  71              		.loc 1 257 0
  72 0022 0020     		movs	r0, #0
  73              	.LVL1:
  74 0024 0BE0     		b	.L6
  75              	.LVL2:
  76              	.L7:
 247:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
  77              		.loc 1 247 0
  78 0026 5E78     		ldrb	r6, [r3, #1]	@ zero_extendqisi2
  79 0028 042E     		cmp	r6, #4
  80 002a 09D1     		bne	.L4
 250:tmk_core/protocol/arm_atsam/usb/udc.c ****                 return true;  // Interface found
  81              		.loc 1 250 0
  82 002c 9E78     		ldrb	r6, [r3, #2]	@ zero_extendqisi2
  83 002e 8642     		cmp	r6, r0
  84 0030 06D1     		bne	.L4
 250:tmk_core/protocol/arm_atsam/usb/udc.c ****                 return true;  // Interface found
  85              		.loc 1 250 0 is_stmt 0 discriminator 1
  86 0032 DE78     		ldrb	r6, [r3, #3]	@ zero_extendqisi2
  87 0034 8E42     		cmp	r6, r1
  88 0036 03D1     		bne	.L4
  89 0038 04B1     		cbz	r4, .L5
  90 003a 9360     		str	r3, [r2, #8]
  91              	.L5:
 251:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
  92              		.loc 1 251 0 is_stmt 1
  93 003c 0120     		movs	r0, #1
  94              	.LVL3:
  95              	.L6:
 258:tmk_core/protocol/arm_atsam/usb/udc.c **** }
  96              		.loc 1 258 0
  97 003e 70BD     		pop	{r4, r5, r6, pc}
  98              	.LVL4:
  99              	.L4:
 255:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 100              		.loc 1 255 0
 101 0040 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 102 0042 2344     		add	r3, r3, r4
 103 0044 0124     		movs	r4, #1
 104 0046 E8E7     		b	.L3
 105              	.L18:
 106              		.align	2
 107              	.L17:
 108 0048 00000000 		.word	.LANCHOR0
 109              		.cfi_endproc
 110              	.LFE18:
 112              		.section	.text.udc_valid_address,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	udc_valid_address:
 120              	.LFB31:
 259:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 260:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 261:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Disables an usb device interface (UDI)
 262:tmk_core/protocol/arm_atsam/usb/udc.c ****  * This routine call the UDI corresponding to interface number
 263:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 264:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \param iface_num     Interface number to disable
 265:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 266:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return 1 if it is done or 0 if interface is not found
 267:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 268:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_iface_disable(uint8_t iface_num) {
 269:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api_t UDC_DESC_STORAGE *udi_api;
 270:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 271:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select first alternate setting of the interface
 272:tmk_core/protocol/arm_atsam/usb/udc.c ****     // to update udc_ptr_iface before call iface->getsetting()
 273:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_update_iface_desc(iface_num, 0)) {
 274:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 275:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 276:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 277:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select the interface with the current alternate setting
 278:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api = udc_ptr_conf->udi_apis[iface_num];
 279:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 280:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 281:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
 282:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 283:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 284:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 285:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Start at the beginning of interface descriptor
 286:tmk_core/protocol/arm_atsam/usb/udc.c ****     {
 287:tmk_core/protocol/arm_atsam/usb/udc.c ****         usb_ep_desc_t UDC_DESC_STORAGE *ep_desc;
 288:tmk_core/protocol/arm_atsam/usb/udc.c ****         ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)udc_ptr_iface;
 289:tmk_core/protocol/arm_atsam/usb/udc.c ****         while (1) {
 290:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Search Endpoint descriptor included in global interface descriptor
 291:tmk_core/protocol/arm_atsam/usb/udc.c ****             ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)udc_next_desc_in_iface((UDC_DESC_STORAGE us
 292:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (NULL == ep_desc) {
 293:tmk_core/protocol/arm_atsam/usb/udc.c ****                 break;
 294:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 295:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Free the endpoint used by the interface
 296:tmk_core/protocol/arm_atsam/usb/udc.c ****             udd_ep_free(ep_desc->bEndpointAddress);
 297:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 298:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 299:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 300:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 301:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Disable interface
 302:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api->disable();
 303:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 304:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 305:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 306:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 307:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Enables an usb device interface (UDI)
 308:tmk_core/protocol/arm_atsam/usb/udc.c ****  * This routine calls the UDI corresponding
 309:tmk_core/protocol/arm_atsam/usb/udc.c ****  * to the interface and setting number.
 310:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 311:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \param iface_num     Interface number to enable
 312:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \param setting_num   Setting number to enable
 313:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 314:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return 1 if it is done or 0 if interface is not found
 315:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 316:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_iface_enable(uint8_t iface_num, uint8_t setting_num) {
 317:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select the interface descriptor
 318:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_update_iface_desc(iface_num, setting_num)) {
 319:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 320:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 321:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 322:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 323:tmk_core/protocol/arm_atsam/usb/udc.c ****     usb_ep_desc_t UDC_DESC_STORAGE *ep_desc;
 324:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 325:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Start at the beginning of the global interface descriptor
 326:tmk_core/protocol/arm_atsam/usb/udc.c ****     ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)udc_ptr_iface;
 327:tmk_core/protocol/arm_atsam/usb/udc.c ****     while (1) {
 328:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Search Endpoint descriptor included in the global interface descriptor
 329:tmk_core/protocol/arm_atsam/usb/udc.c ****         ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)udc_next_desc_in_iface((UDC_DESC_STORAGE usb_co
 330:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (NULL == ep_desc) break;
 331:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Alloc the endpoint used by the interface
 332:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (!udd_ep_alloc(ep_desc->bEndpointAddress, ep_desc->bmAttributes, le16_to_cpu(ep_desc->wM
 333:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 334:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 335:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 336:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 337:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Enable the interface
 338:tmk_core/protocol/arm_atsam/usb/udc.c ****     return udc_ptr_conf->udi_apis[iface_num]->enable();
 339:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 340:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 341:tmk_core/protocol/arm_atsam/usb/udc.c **** /*! \brief Start the USB Device stack
 342:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 343:tmk_core/protocol/arm_atsam/usb/udc.c **** void udc_start(void) { udd_enable(); }
 344:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 345:tmk_core/protocol/arm_atsam/usb/udc.c **** /*! \brief Stop the USB Device stack
 346:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 347:tmk_core/protocol/arm_atsam/usb/udc.c **** void udc_stop(void) {
 348:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_disable();
 349:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_reset();
 350:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 351:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 352:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 353:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Reset the current configuration of the USB device,
 354:tmk_core/protocol/arm_atsam/usb/udc.c ****  * This routines can be called by UDD when a RESET on the USB line occurs.
 355:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 356:tmk_core/protocol/arm_atsam/usb/udc.c **** void udc_reset(void) {
 357:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t iface_num;
 358:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 359:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udc_num_configuration) {
 360:tmk_core/protocol/arm_atsam/usb/udc.c ****         for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces; iface_num++) {
 361:tmk_core/protocol/arm_atsam/usb/udc.c ****             udc_iface_disable(iface_num);
 362:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 363:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 364:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_num_configuration = 0;
 365:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_CONFIG_ATTR_REMOTE_WAKEUP == (USB_DEVICE_ATTR & USB_CONFIG_ATTR_REMOTE_WAKEUP))
 366:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (CPU_TO_LE16(USB_DEV_STATUS_REMOTEWAKEUP) & udc_device_status) {
 367:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Remote wakeup is enabled then disable it
 368:tmk_core/protocol/arm_atsam/usb/udc.c ****         UDC_REMOTEWAKEUP_DISABLE();
 369:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 370:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 371:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_device_status =
 372:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_DEVICE_ATTR & USB_CONFIG_ATTR_SELF_POWERED)
 373:tmk_core/protocol/arm_atsam/usb/udc.c ****         CPU_TO_LE16(USB_DEV_STATUS_SELF_POWERED);
 374:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
 375:tmk_core/protocol/arm_atsam/usb/udc.c ****         CPU_TO_LE16(USB_DEV_STATUS_BUS_POWERED);
 376:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 377:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 378:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 379:tmk_core/protocol/arm_atsam/usb/udc.c **** void udc_sof_notify(void) {
 380:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t iface_num;
 381:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 382:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udc_num_configuration) {
 383:tmk_core/protocol/arm_atsam/usb/udc.c ****         for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces; iface_num++) {
 384:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
 385:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udc_ptr_conf->udi_apis[iface_num]->sof_notify();
 386:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 387:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 388:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 389:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 390:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 391:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 392:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to get device status
 393:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 394:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 395:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 396:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_get_status(void) {
 397:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
 398:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 399:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 400:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 401:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_set_setup_payload((uint8_t *)&udc_device_status, sizeof(udc_device_status));
 402:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 403:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 404:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 405:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 406:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 407:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard endpoint request to get endpoint status
 408:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 409:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 410:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 411:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_ep_get_status(void) {
 412:tmk_core/protocol/arm_atsam/usb/udc.c ****     static le16_t udc_ep_status;
 413:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 414:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
 415:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 416:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 417:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 418:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_H
 419:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 420:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_set_setup_payload((uint8_t *)&udc_ep_status, sizeof(udc_ep_status));
 421:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 422:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 423:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 424:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 425:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 426:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to change device status
 427:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 428:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 429:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 430:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_clear_feature(void) {
 431:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength) {
 432:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 433:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 434:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 435:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
 436:tmk_core/protocol/arm_atsam/usb/udc.c ****         udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
 437:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_CONFIG_ATTR_REMOTE_WAKEUP == (USB_DEVICE_ATTR & USB_CONFIG_ATTR_REMOTE_WAKEUP))
 438:tmk_core/protocol/arm_atsam/usb/udc.c ****         UDC_REMOTEWAKEUP_DISABLE();
 439:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 440:tmk_core/protocol/arm_atsam/usb/udc.c ****         return true;
 441:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 442:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;
 443:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 444:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 445:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 446:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 447:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard endpoint request to clear endpoint feature
 448:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 449:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 450:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 451:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_ep_clear_feature(void) {
 452:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength) {
 453:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 454:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 455:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 456:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
 457:tmk_core/protocol/arm_atsam/usb/udc.c ****         return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
 458:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 459:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;
 460:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 461:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 462:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 463:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 464:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to set a feature
 465:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 466:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 467:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 468:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_set_feature(void) {
 469:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength) {
 470:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 471:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 472:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 473:tmk_core/protocol/arm_atsam/usb/udc.c ****     switch (udd_g_ctrlreq.req.wValue) {
 474:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DEV_FEATURE_REMOTE_WAKEUP:
 475:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_CONFIG_ATTR_REMOTE_WAKEUP == (USB_DEVICE_ATTR & USB_CONFIG_ATTR_REMOTE_WAKEUP))
 476:tmk_core/protocol/arm_atsam/usb/udc.c ****             udc_device_status |= CPU_TO_LE16(USB_DEV_STATUS_REMOTEWAKEUP);
 477:tmk_core/protocol/arm_atsam/usb/udc.c ****             UDC_REMOTEWAKEUP_ENABLE();
 478:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
 479:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
 480:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 481:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 482:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 483:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_HS_SUPPORT
 484:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DEV_FEATURE_TEST_MODE:
 485:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (!udd_is_high_speed()) {
 486:tmk_core/protocol/arm_atsam/usb/udc.c ****                 break;
 487:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 488:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (udd_g_ctrlreq.req.wIndex & 0xff) {
 489:tmk_core/protocol/arm_atsam/usb/udc.c ****                 break;
 490:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 491:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Unconfigure the device, terminating all ongoing requests
 492:tmk_core/protocol/arm_atsam/usb/udc.c ****             udc_reset();
 493:tmk_core/protocol/arm_atsam/usb/udc.c ****             switch ((udd_g_ctrlreq.req.wIndex >> 8) & 0xFF) {
 494:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_DEV_TEST_MODE_J:
 495:tmk_core/protocol/arm_atsam/usb/udc.c ****                     udd_g_ctrlreq.callback = udd_test_mode_j;
 496:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return true;
 497:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 498:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_DEV_TEST_MODE_K:
 499:tmk_core/protocol/arm_atsam/usb/udc.c ****                     udd_g_ctrlreq.callback = udd_test_mode_k;
 500:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return true;
 501:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 502:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_DEV_TEST_MODE_SE0_NAK:
 503:tmk_core/protocol/arm_atsam/usb/udc.c ****                     udd_g_ctrlreq.callback = udd_test_mode_se0_nak;
 504:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return true;
 505:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 506:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_DEV_TEST_MODE_PACKET:
 507:tmk_core/protocol/arm_atsam/usb/udc.c ****                     udd_g_ctrlreq.callback = udd_test_mode_packet;
 508:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return true;
 509:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 510:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_DEV_TEST_MODE_FORCE_ENABLE:  // Only for downstream facing hub ports
 511:tmk_core/protocol/arm_atsam/usb/udc.c ****                 default:
 512:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 513:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 514:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 515:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 516:tmk_core/protocol/arm_atsam/usb/udc.c ****         default:
 517:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 518:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 519:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;
 520:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 521:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 522:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 523:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard endpoint request to halt an endpoint
 524:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 525:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 526:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 527:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 528:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_ep_set_feature(void) {
 529:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength) {
 530:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 531:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 532:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
 533:tmk_core/protocol/arm_atsam/usb/udc.c ****         udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
 534:tmk_core/protocol/arm_atsam/usb/udc.c ****         return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
 535:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 536:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;
 537:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 538:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 539:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 540:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 541:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Change the address of device
 542:tmk_core/protocol/arm_atsam/usb/udc.c ****  * Callback called at the end of request set address
 543:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 544:tmk_core/protocol/arm_atsam/usb/udc.c **** static void udc_valid_address(void) { udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F); }
 121              		.loc 1 544 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              		.loc 1 544 0
 127 0000 024B     		ldr	r3, .L20
 128 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 129 0004 00F07F00 		and	r0, r0, #127
 130 0008 FFF7FEBF 		b	udd_set_address
 131              	.LVL5:
 132              	.L21:
 133              		.align	2
 134              	.L20:
 135 000c 00000000 		.word	udd_g_ctrlreq
 136              		.cfi_endproc
 137              	.LFE31:
 139              		.section	.text.udc_next_desc_in_iface.constprop.0,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	udc_next_desc_in_iface.constprop.0:
 147              	.LFB43:
 198:tmk_core/protocol/arm_atsam/usb/udc.c ****     usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;
 148              		.loc 1 198 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL6:
 154              	.LBB10:
 155              	.LBB11:
 185:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 156              		.loc 1 185 0
 157 0000 084B     		ldr	r3, .L31
 158 0002 5B68     		ldr	r3, [r3, #4]
 159 0004 1B68     		ldr	r3, [r3]
 160 0006 5A88     		ldrh	r2, [r3, #2]	@ unaligned
 161 0008 1A44     		add	r2, r2, r3
 162              	.L30:
 163              	.LBE11:
 164              	.LBE10:
 215:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 165              		.loc 1 215 0
 166 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 167 000c 1844     		add	r0, r0, r3
 168              	.LVL7:
 205:tmk_core/protocol/arm_atsam/usb/udc.c ****         // If new interface descriptor is found,
 169              		.loc 1 205 0
 170 000e 9042     		cmp	r0, r2
 171 0010 01D3     		bcc	.L25
 172              	.L26:
 217:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 173              		.loc 1 217 0
 174 0012 0020     		movs	r0, #0
 175              	.LVL8:
 176 0014 04E0     		b	.L22
 177              	.LVL9:
 178              	.L25:
 208:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;  // End of global interface descriptor
 179              		.loc 1 208 0
 180 0016 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 181 0018 042B     		cmp	r3, #4
 182 001a FAD0     		beq	.L26
 211:tmk_core/protocol/arm_atsam/usb/udc.c ****             return desc;  // Specific descriptor found
 183              		.loc 1 211 0
 184 001c 052B     		cmp	r3, #5
 185 001e F4D1     		bne	.L30
 186              	.LVL10:
 187              	.L22:
 218:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 188              		.loc 1 218 0
 189 0020 7047     		bx	lr
 190              	.L32:
 191 0022 00BF     		.align	2
 192              	.L31:
 193 0024 00000000 		.word	.LANCHOR0
 194              		.cfi_endproc
 195              	.LFE43:
 197              		.section	.text.udc_iface_enable,"ax",%progbits
 198              		.align	1
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv4-sp-d16
 204              	udc_iface_enable:
 205              	.LFB20:
 316:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select the interface descriptor
 206              		.loc 1 316 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL11:
 211 0000 70B5     		push	{r4, r5, r6, lr}
 212              		.cfi_def_cfa_offset 16
 213              		.cfi_offset 4, -16
 214              		.cfi_offset 5, -12
 215              		.cfi_offset 6, -8
 216              		.cfi_offset 14, -4
 316:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select the interface descriptor
 217              		.loc 1 316 0
 218 0002 0646     		mov	r6, r0
 318:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 219              		.loc 1 318 0
 220 0004 FFF7FEFF 		bl	udc_update_iface_desc
 221              	.LVL12:
 222 0008 68B1     		cbz	r0, .L35
 326:tmk_core/protocol/arm_atsam/usb/udc.c ****     while (1) {
 223              		.loc 1 326 0
 224 000a 0C4D     		ldr	r5, .L40
 225 000c AC68     		ldr	r4, [r5, #8]
 226              	.LVL13:
 227              	.L37:
 329:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (NULL == ep_desc) break;
 228              		.loc 1 329 0
 229 000e 2046     		mov	r0, r4
 230 0010 FFF7FEFF 		bl	udc_next_desc_in_iface.constprop.0
 231              	.LVL14:
 330:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Alloc the endpoint used by the interface
 232              		.loc 1 330 0
 233 0014 0446     		mov	r4, r0
 234 0016 40B1     		cbz	r0, .L36
 332:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 235              		.loc 1 332 0
 236 0018 8288     		ldrh	r2, [r0, #4]	@ unaligned
 237 001a C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 238 001c 8078     		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 239              	.LVL15:
 240 001e FFF7FEFF 		bl	udd_ep_alloc
 241              	.LVL16:
 242 0022 0028     		cmp	r0, #0
 243 0024 F3D1     		bne	.L37
 244              	.LVL17:
 245              	.L35:
 339:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 246              		.loc 1 339 0
 247 0026 0020     		movs	r0, #0
 248 0028 70BD     		pop	{r4, r5, r6, pc}
 249              	.LVL18:
 250              	.L36:
 338:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 251              		.loc 1 338 0
 252 002a 6B68     		ldr	r3, [r5, #4]
 253 002c 5B68     		ldr	r3, [r3, #4]
 254 002e 53F82630 		ldr	r3, [r3, r6, lsl #2]
 339:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 255              		.loc 1 339 0
 256 0032 BDE87040 		pop	{r4, r5, r6, lr}
 257              		.cfi_restore 14
 258              		.cfi_restore 6
 259              		.cfi_restore 5
 260              		.cfi_restore 4
 261              		.cfi_def_cfa_offset 0
 338:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 262              		.loc 1 338 0
 263 0036 1B68     		ldr	r3, [r3]
 264 0038 1847     		bx	r3
 265              	.LVL19:
 266              	.L41:
 267 003a 00BF     		.align	2
 268              	.L40:
 269 003c 00000000 		.word	.LANCHOR0
 270              		.cfi_endproc
 271              	.LFE20:
 273              		.section	.text.udc_iface_disable,"ax",%progbits
 274              		.align	1
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	udc_iface_disable:
 281              	.LFB19:
 268:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api_t UDC_DESC_STORAGE *udi_api;
 282              		.loc 1 268 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL20:
 287 0000 70B5     		push	{r4, r5, r6, lr}
 288              		.cfi_def_cfa_offset 16
 289              		.cfi_offset 4, -16
 290              		.cfi_offset 5, -12
 291              		.cfi_offset 6, -8
 292              		.cfi_offset 14, -4
 273:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 293              		.loc 1 273 0
 294 0002 0021     		movs	r1, #0
 268:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api_t UDC_DESC_STORAGE *udi_api;
 295              		.loc 1 268 0
 296 0004 0546     		mov	r5, r0
 273:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 297              		.loc 1 273 0
 298 0006 FFF7FEFF 		bl	udc_update_iface_desc
 299              	.LVL21:
 300 000a 10B9     		cbnz	r0, .L43
 301              	.L45:
 274:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 302              		.loc 1 274 0
 303 000c 0025     		movs	r5, #0
 304              	.L44:
 304:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 305              		.loc 1 304 0
 306 000e 2846     		mov	r0, r5
 307 0010 70BD     		pop	{r4, r5, r6, pc}
 308              	.L43:
 278:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 309              		.loc 1 278 0
 310 0012 0D4C     		ldr	r4, .L51
 311 0014 6368     		ldr	r3, [r4, #4]
 312 0016 5B68     		ldr	r3, [r3, #4]
 313 0018 53F82560 		ldr	r6, [r3, r5, lsl #2]
 314              	.LVL22:
 281:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 315              		.loc 1 281 0
 316 001c F368     		ldr	r3, [r6, #12]
 317 001e 9847     		blx	r3
 318              	.LVL23:
 319 0020 0146     		mov	r1, r0
 320 0022 2846     		mov	r0, r5
 321 0024 FFF7FEFF 		bl	udc_update_iface_desc
 322              	.LVL24:
 323 0028 0546     		mov	r5, r0
 324 002a 0028     		cmp	r0, #0
 325 002c EED0     		beq	.L45
 326              	.LBB12:
 288:tmk_core/protocol/arm_atsam/usb/udc.c ****         while (1) {
 327              		.loc 1 288 0
 328 002e A468     		ldr	r4, [r4, #8]
 329              	.LVL25:
 330              	.L47:
 291:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (NULL == ep_desc) {
 331              		.loc 1 291 0
 332 0030 2046     		mov	r0, r4
 333 0032 FFF7FEFF 		bl	udc_next_desc_in_iface.constprop.0
 334              	.LVL26:
 292:tmk_core/protocol/arm_atsam/usb/udc.c ****                 break;
 335              		.loc 1 292 0
 336 0036 0446     		mov	r4, r0
 337 0038 18B1     		cbz	r0, .L46
 296:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 338              		.loc 1 296 0
 339 003a 8078     		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 340              	.LVL27:
 341 003c FFF7FEFF 		bl	udd_ep_free
 342              	.LVL28:
 291:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (NULL == ep_desc) {
 343              		.loc 1 291 0
 344 0040 F6E7     		b	.L47
 345              	.LVL29:
 346              	.L46:
 347              	.LBE12:
 302:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 348              		.loc 1 302 0
 349 0042 7368     		ldr	r3, [r6, #4]
 350 0044 9847     		blx	r3
 351              	.LVL30:
 303:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 352              		.loc 1 303 0
 353 0046 E2E7     		b	.L44
 354              	.L52:
 355              		.align	2
 356              	.L51:
 357 0048 00000000 		.word	.LANCHOR0
 358              		.cfi_endproc
 359              	.LFE19:
 361              		.section	.text.udc_get_interface_desc,"ax",%progbits
 362              		.align	1
 363              		.global	udc_get_interface_desc
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv4-sp-d16
 369              	udc_get_interface_desc:
 370              	.LFB15:
 178:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 371              		.loc 1 178 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 178:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 376              		.loc 1 178 0
 377 0000 014B     		ldr	r3, .L54
 378 0002 9868     		ldr	r0, [r3, #8]
 379 0004 7047     		bx	lr
 380              	.L55:
 381 0006 00BF     		.align	2
 382              	.L54:
 383 0008 00000000 		.word	.LANCHOR0
 384              		.cfi_endproc
 385              	.LFE15:
 387              		.section	.text.udc_start,"ax",%progbits
 388              		.align	1
 389              		.global	udc_start
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv4-sp-d16
 395              	udc_start:
 396              	.LFB21:
 343:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 397              		.loc 1 343 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 343:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 402              		.loc 1 343 0
 403 0000 FFF7FEBF 		b	udd_enable
 404              	.LVL31:
 405              		.cfi_endproc
 406              	.LFE21:
 408              		.section	.text.udc_reset,"ax",%progbits
 409              		.align	1
 410              		.global	udc_reset
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu fpv4-sp-d16
 416              	udc_reset:
 417              	.LFB23:
 356:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t iface_num;
 418              		.loc 1 356 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 38B5     		push	{r3, r4, r5, lr}
 423              		.cfi_def_cfa_offset 16
 424              		.cfi_offset 3, -16
 425              		.cfi_offset 4, -12
 426              		.cfi_offset 5, -8
 427              		.cfi_offset 14, -4
 359:tmk_core/protocol/arm_atsam/usb/udc.c ****         for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces; iface_num++) {
 428              		.loc 1 359 0
 429 0002 0D4C     		ldr	r4, .L64
 430 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 431 0006 ABB9     		cbnz	r3, .L63
 432              	.L62:
 366:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Remote wakeup is enabled then disable it
 433              		.loc 1 366 0
 434 0008 A289     		ldrh	r2, [r4, #12]
 364:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_CONFIG_ATTR_REMOTE_WAKEUP == (USB_DEVICE_ATTR & USB_CONFIG_ATTR_REMOTE_WAKEUP))
 435              		.loc 1 364 0
 436 000a 0023     		movs	r3, #0
 366:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Remote wakeup is enabled then disable it
 437              		.loc 1 366 0
 438 000c 12F0020F 		tst	r2, #2
 364:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_CONFIG_ATTR_REMOTE_WAKEUP == (USB_DEVICE_ATTR & USB_CONFIG_ATTR_REMOTE_WAKEUP))
 439              		.loc 1 364 0
 440 0010 2370     		strb	r3, [r4]
 441 0012 1D46     		mov	r5, r3
 366:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Remote wakeup is enabled then disable it
 442              		.loc 1 366 0
 443 0014 01D0     		beq	.L60
 368:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 444              		.loc 1 368 0
 445 0016 FFF7FEFF 		bl	main_remotewakeup_disable
 446              	.LVL32:
 447              	.L60:
 371:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_DEVICE_ATTR & USB_CONFIG_ATTR_SELF_POWERED)
 448              		.loc 1 371 0
 449 001a A581     		strh	r5, [r4, #12]	@ movhi
 377:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 450              		.loc 1 377 0
 451 001c 38BD     		pop	{r3, r4, r5, pc}
 452              	.LVL33:
 453              	.L61:
 361:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 454              		.loc 1 361 0 discriminator 3
 455 001e FFF7FEFF 		bl	udc_iface_disable
 456              	.LVL34:
 457              	.L58:
 360:tmk_core/protocol/arm_atsam/usb/udc.c ****             udc_iface_disable(iface_num);
 458              		.loc 1 360 0 discriminator 1
 459 0022 6368     		ldr	r3, [r4, #4]
 460 0024 1B68     		ldr	r3, [r3]
 461 0026 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 462 0028 E8B2     		uxtb	r0, r5
 463              	.LVL35:
 464 002a 8342     		cmp	r3, r0
 465 002c 05F10105 		add	r5, r5, #1
 466 0030 F5D8     		bhi	.L61
 467 0032 E9E7     		b	.L62
 468              	.LVL36:
 469              	.L63:
 470 0034 0025     		movs	r5, #0
 471 0036 F4E7     		b	.L58
 472              	.L65:
 473              		.align	2
 474              	.L64:
 475 0038 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE23:
 479              		.section	.text.udc_stop,"ax",%progbits
 480              		.align	1
 481              		.global	udc_stop
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv4-sp-d16
 487              	udc_stop:
 488              	.LFB22:
 347:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_disable();
 489              		.loc 1 347 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493 0000 08B5     		push	{r3, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 3, -8
 496              		.cfi_offset 14, -4
 348:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_reset();
 497              		.loc 1 348 0
 498 0002 FFF7FEFF 		bl	udd_disable
 499              	.LVL37:
 350:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 500              		.loc 1 350 0
 501 0006 BDE80840 		pop	{r3, lr}
 502              		.cfi_restore 14
 503              		.cfi_restore 3
 504              		.cfi_def_cfa_offset 0
 349:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 505              		.loc 1 349 0
 506 000a FFF7FEBF 		b	udc_reset
 507              	.LVL38:
 508              		.cfi_endproc
 509              	.LFE22:
 511              		.section	.text.udc_sof_notify,"ax",%progbits
 512              		.align	1
 513              		.global	udc_sof_notify
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv4-sp-d16
 519              	udc_sof_notify:
 520              	.LFB24:
 379:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t iface_num;
 521              		.loc 1 379 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525 0000 38B5     		push	{r3, r4, r5, lr}
 526              		.cfi_def_cfa_offset 16
 527              		.cfi_offset 3, -16
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 5, -8
 530              		.cfi_offset 14, -4
 382:tmk_core/protocol/arm_atsam/usb/udc.c ****         for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces; iface_num++) {
 531              		.loc 1 382 0
 532 0002 0A4C     		ldr	r4, .L76
 533 0004 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 534 0006 72B9     		cbnz	r2, .L72
 535              	.L67:
 389:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 536              		.loc 1 389 0
 537 0008 38BD     		pop	{r3, r4, r5, pc}
 538              	.LVL39:
 539              	.L70:
 384:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udc_ptr_conf->udi_apis[iface_num]->sof_notify();
 540              		.loc 1 384 0
 541 000a 5268     		ldr	r2, [r2, #4]
 542 000c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 543 0010 1B69     		ldr	r3, [r3, #16]
 544 0012 03B1     		cbz	r3, .L69
 385:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 545              		.loc 1 385 0
 546 0014 9847     		blx	r3
 547              	.LVL40:
 548              	.L69:
 549 0016 0135     		adds	r5, r5, #1
 550              	.LVL41:
 551              	.L68:
 383:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
 552              		.loc 1 383 0 discriminator 1
 553 0018 6268     		ldr	r2, [r4, #4]
 554 001a 1368     		ldr	r3, [r2]
 555 001c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 556 001e EBB2     		uxtb	r3, r5
 557 0020 9942     		cmp	r1, r3
 558 0022 F2D8     		bhi	.L70
 559 0024 F0E7     		b	.L67
 560              	.LVL42:
 561              	.L72:
 562 0026 0025     		movs	r5, #0
 563 0028 F6E7     		b	.L68
 564              	.L77:
 565 002a 00BF     		.align	2
 566              	.L76:
 567 002c 00000000 		.word	.LANCHOR0
 568              		.cfi_endproc
 569              	.LFE24:
 571              		.section	.text.udc_process_setup,"ax",%progbits
 572              		.align	1
 573              		.global	udc_process_setup
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu fpv4-sp-d16
 579              	udc_process_setup:
 580              	.LFB42:
 545:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 546:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 547:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to set device address
 548:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 549:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 550:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 551:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_set_address(void) {
 552:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength) {
 553:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 554:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 555:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 556:tmk_core/protocol/arm_atsam/usb/udc.c ****     // The address must be changed at the end of setup request after the handshake
 557:tmk_core/protocol/arm_atsam/usb/udc.c ****     // then we use a callback to change address
 558:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_g_ctrlreq.callback = udc_valid_address;
 559:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 560:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 561:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 562:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 563:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to get device string descriptor
 564:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 565:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 566:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 567:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_get_str_desc(void) {
 568:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t        i;
 569:tmk_core/protocol/arm_atsam/usb/udc.c ****     const uint8_t *str;
 570:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t        str_length = 0;
 571:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 572:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Link payload pointer to the string corresponding at request
 573:tmk_core/protocol/arm_atsam/usb/udc.c ****     switch (udd_g_ctrlreq.req.wValue & 0xff) {
 574:tmk_core/protocol/arm_atsam/usb/udc.c ****         case 0:
 575:tmk_core/protocol/arm_atsam/usb/udc.c ****             udd_set_setup_payload((uint8_t *)&udc_string_desc_languageid, sizeof(udc_string_desc_la
 576:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 577:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 578:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_MANUFACTURE_NAME
 579:tmk_core/protocol/arm_atsam/usb/udc.c ****         case 1:
 580:tmk_core/protocol/arm_atsam/usb/udc.c ****             str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
 581:tmk_core/protocol/arm_atsam/usb/udc.c ****             str        = udc_string_manufacturer_name;
 582:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 583:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 584:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_PRODUCT_NAME
 585:tmk_core/protocol/arm_atsam/usb/udc.c ****         case 2:
 586:tmk_core/protocol/arm_atsam/usb/udc.c ****             str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
 587:tmk_core/protocol/arm_atsam/usb/udc.c ****             str        = udc_string_product_name;
 588:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 589:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 590:tmk_core/protocol/arm_atsam/usb/udc.c ****         case 3:
 591:tmk_core/protocol/arm_atsam/usb/udc.c ****             str        = udc_get_string_serial_name();
 592:tmk_core/protocol/arm_atsam/usb/udc.c ****             str_length = usb_device_serial_name_size;
 593:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 594:tmk_core/protocol/arm_atsam/usb/udc.c ****         default:
 595:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef UDC_GET_EXTRA_STRING
 596:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (UDC_GET_EXTRA_STRING()) {
 597:tmk_core/protocol/arm_atsam/usb/udc.c ****                 break;
 598:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 599:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 600:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 601:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 602:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 603:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (str_length) {
 604:tmk_core/protocol/arm_atsam/usb/udc.c ****         for (i = 0; i < str_length; i++) {
 605:tmk_core/protocol/arm_atsam/usb/udc.c ****             udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
 606:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 607:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 608:tmk_core/protocol/arm_atsam/usb/udc.c ****         udc_string_desc.header.bLength = 2 + (str_length)*2;
 609:tmk_core/protocol/arm_atsam/usb/udc.c ****         udd_set_setup_payload((uint8_t *)&udc_string_desc, udc_string_desc.header.bLength);
 610:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 611:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 612:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 613:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 614:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 615:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 616:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to get descriptors about USB device
 617:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 618:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 619:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 620:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_get_descriptor(void) {
 621:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t conf_num;
 622:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 623:tmk_core/protocol/arm_atsam/usb/udc.c ****     conf_num = udd_g_ctrlreq.req.wValue & 0xff;
 624:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 625:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Check descriptor ID
 626:tmk_core/protocol/arm_atsam/usb/udc.c ****     switch ((uint8_t)(udd_g_ctrlreq.req.wValue >> 8)) {
 627:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_DEVICE:
 628:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Device descriptor requested
 629:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_HS_SUPPORT
 630:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (!udd_is_high_speed()) {
 631:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udd_set_setup_payload((uint8_t *)udc_config.confdev_hs, udc_config.confdev_hs->bLen
 632:tmk_core/protocol/arm_atsam/usb/udc.c ****             } else
 633:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 634:tmk_core/protocol/arm_atsam/usb/udc.c ****             {
 635:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udd_set_setup_payload((uint8_t *)udc_config.confdev_lsfs, udc_config.confdev_lsfs->
 636:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 637:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 638:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 639:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_CONFIGURATION:
 640:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Configuration descriptor requested
 641:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_HS_SUPPORT
 642:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (udd_is_high_speed()) {
 643:tmk_core/protocol/arm_atsam/usb/udc.c ****                 // HS descriptor
 644:tmk_core/protocol/arm_atsam/usb/udc.c ****                 if (conf_num >= udc_config.confdev_hs->bNumConfigurations) {
 645:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return false;
 646:tmk_core/protocol/arm_atsam/usb/udc.c ****                 }
 647:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udd_set_setup_payload((uint8_t *)udc_config.conf_hs[conf_num].desc, le16_to_cpu(udc
 648:tmk_core/protocol/arm_atsam/usb/udc.c ****             } else
 649:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 650:tmk_core/protocol/arm_atsam/usb/udc.c ****             {
 651:tmk_core/protocol/arm_atsam/usb/udc.c ****                 // FS descriptor
 652:tmk_core/protocol/arm_atsam/usb/udc.c ****                 if (conf_num >= udc_config.confdev_lsfs->bNumConfigurations) {
 653:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return false;
 654:tmk_core/protocol/arm_atsam/usb/udc.c ****                 }
 655:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udd_set_setup_payload((uint8_t *)udc_config.conf_lsfs[conf_num].desc, le16_to_cpu(u
 656:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 657:tmk_core/protocol/arm_atsam/usb/udc.c ****             ((usb_conf_desc_t *)udd_g_ctrlreq.payload)->bDescriptorType = USB_DT_CONFIGURATION;
 658:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 659:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 660:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_HS_SUPPORT
 661:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_DEVICE_QUALIFIER:
 662:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Device qualifier descriptor requested
 663:tmk_core/protocol/arm_atsam/usb/udc.c ****             udd_set_setup_payload((uint8_t *)udc_config.qualifier, udc_config.qualifier->bLength);
 664:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 665:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 666:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_OTHER_SPEED_CONFIGURATION:
 667:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Other configuration descriptor requested
 668:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (!udd_is_high_speed()) {
 669:tmk_core/protocol/arm_atsam/usb/udc.c ****                 // HS descriptor
 670:tmk_core/protocol/arm_atsam/usb/udc.c ****                 if (conf_num >= udc_config.confdev_hs->bNumConfigurations) {
 671:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return false;
 672:tmk_core/protocol/arm_atsam/usb/udc.c ****                 }
 673:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udd_set_setup_payload((uint8_t *)udc_config.conf_hs[conf_num].desc, le16_to_cpu(udc
 674:tmk_core/protocol/arm_atsam/usb/udc.c ****             } else {
 675:tmk_core/protocol/arm_atsam/usb/udc.c ****                 // FS descriptor
 676:tmk_core/protocol/arm_atsam/usb/udc.c ****                 if (conf_num >= udc_config.confdev_lsfs->bNumConfigurations) {
 677:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return false;
 678:tmk_core/protocol/arm_atsam/usb/udc.c ****                 }
 679:tmk_core/protocol/arm_atsam/usb/udc.c ****                 udd_set_setup_payload((uint8_t *)udc_config.conf_lsfs[conf_num].desc, le16_to_cpu(u
 680:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 681:tmk_core/protocol/arm_atsam/usb/udc.c ****             ((usb_conf_desc_t *)udd_g_ctrlreq.payload)->bDescriptorType = USB_DT_OTHER_SPEED_CONFIG
 682:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 683:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 684:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 685:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_BOS:
 686:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Device BOS descriptor requested
 687:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (udc_config.conf_bos == NULL) {
 688:tmk_core/protocol/arm_atsam/usb/udc.c ****                 return false;
 689:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 690:tmk_core/protocol/arm_atsam/usb/udc.c ****             udd_set_setup_payload((uint8_t *)udc_config.conf_bos, udc_config.conf_bos->wTotalLength
 691:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 692:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 693:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_STRING:
 694:tmk_core/protocol/arm_atsam/usb/udc.c ****             // String descriptor requested
 695:tmk_core/protocol/arm_atsam/usb/udc.c ****             if (!udc_req_std_dev_get_str_desc()) {
 696:tmk_core/protocol/arm_atsam/usb/udc.c ****                 return false;
 697:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 698:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 699:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 700:tmk_core/protocol/arm_atsam/usb/udc.c ****         default:
 701:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Unknown descriptor requested
 702:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 703:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 704:tmk_core/protocol/arm_atsam/usb/udc.c ****     // if the descriptor is larger than length requested, then reduce it
 705:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
 706:tmk_core/protocol/arm_atsam/usb/udc.c ****         udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
 707:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 708:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 709:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 710:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 711:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 712:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to get configuration number
 713:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 714:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 715:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 716:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_get_configuration(void) {
 717:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength != 1) {
 718:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 719:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 720:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 721:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_set_setup_payload(&udc_num_configuration, 1);
 722:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 723:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 724:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 725:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 726:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard device request to enable a configuration
 727:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 728:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 729:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 730:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_dev_set_configuration(void) {
 731:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t iface_num;
 732:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 733:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Check request length
 734:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength) {
 735:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 736:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 737:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Authorize configuration only if the address is valid
 738:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udd_getaddress()) {
 739:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 740:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 741:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Check the configuration number requested
 742:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_HS_SUPPORT
 743:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_is_high_speed()) {
 744:tmk_core/protocol/arm_atsam/usb/udc.c ****         // HS descriptor
 745:tmk_core/protocol/arm_atsam/usb/udc.c ****         if ((udd_g_ctrlreq.req.wValue & 0xFF) > udc_config.confdev_hs->bNumConfigurations) {
 746:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 747:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 748:tmk_core/protocol/arm_atsam/usb/udc.c ****     } else
 749:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 750:tmk_core/protocol/arm_atsam/usb/udc.c ****     {
 751:tmk_core/protocol/arm_atsam/usb/udc.c ****         // FS descriptor
 752:tmk_core/protocol/arm_atsam/usb/udc.c ****         if ((udd_g_ctrlreq.req.wValue & 0xFF) > udc_config.confdev_lsfs->bNumConfigurations) {
 753:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 754:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 755:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 756:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 757:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Reset current configuration
 758:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_reset();
 759:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 760:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Enable new configuration
 761:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
 762:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udc_num_configuration == 0) {
 763:tmk_core/protocol/arm_atsam/usb/udc.c ****         return true;  // Default empty configuration requested
 764:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 765:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Update pointer of the configuration descriptor
 766:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_HS_SUPPORT
 767:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_is_high_speed()) {
 768:tmk_core/protocol/arm_atsam/usb/udc.c ****         // HS descriptor
 769:tmk_core/protocol/arm_atsam/usb/udc.c ****         udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
 770:tmk_core/protocol/arm_atsam/usb/udc.c ****     } else
 771:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 772:tmk_core/protocol/arm_atsam/usb/udc.c ****     {
 773:tmk_core/protocol/arm_atsam/usb/udc.c ****         // FS descriptor
 774:tmk_core/protocol/arm_atsam/usb/udc.c ****         udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
 775:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 776:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Enable all interfaces of the selected configuration
 777:tmk_core/protocol/arm_atsam/usb/udc.c ****     for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces; iface_num++) {
 778:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (!udc_iface_enable(iface_num, 0)) {
 779:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 780:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 781:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 782:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 783:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 784:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 785:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 786:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard interface request
 787:tmk_core/protocol/arm_atsam/usb/udc.c ****  * to get the alternate setting number of an interface
 788:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 789:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 790:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 791:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_iface_get_setting(void) {
 792:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t   iface_num;
 793:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api_t UDC_DESC_STORAGE *udi_api;
 794:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 795:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength != 1) {
 796:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // Error in request
 797:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 798:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_num_configuration) {
 799:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 800:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 801:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 802:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Check the interface number included in the request
 803:tmk_core/protocol/arm_atsam/usb/udc.c ****     iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
 804:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
 805:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 806:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 807:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 808:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select first alternate setting of the interface to update udc_ptr_iface
 809:tmk_core/protocol/arm_atsam/usb/udc.c ****     // before call iface->getsetting()
 810:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_update_iface_desc(iface_num, 0)) {
 811:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 812:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 813:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Get alternate setting from UDI
 814:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api           = udc_ptr_conf->udi_apis[iface_num];
 815:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_iface_setting = udi_api->getsetting();
 816:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 817:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Link value to payload pointer of request
 818:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_set_setup_payload(&udc_iface_setting, 1);
 819:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 820:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 821:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 822:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 823:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Standard interface request
 824:tmk_core/protocol/arm_atsam/usb/udc.c ****  * to set an alternate setting of an interface
 825:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 826:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if success
 827:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 828:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_std_iface_set_setting(void) {
 829:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t iface_num, setting_num;
 830:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 831:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udd_g_ctrlreq.req.wLength) {
 832:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // Error in request
 833:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 834:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_num_configuration) {
 835:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 836:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 837:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 838:tmk_core/protocol/arm_atsam/usb/udc.c ****     iface_num   = udd_g_ctrlreq.req.wIndex & 0xFF;
 839:tmk_core/protocol/arm_atsam/usb/udc.c ****     setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
 840:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 841:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Disable current setting
 842:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_iface_disable(iface_num)) {
 843:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 844:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 845:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 846:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Enable new setting
 847:tmk_core/protocol/arm_atsam/usb/udc.c ****     return udc_iface_enable(iface_num, setting_num);
 848:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 849:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 850:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 851:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Main routine to manage the standard USB SETUP request
 852:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 853:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if the request is supported
 854:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 855:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_reqstd(void) {
 856:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (Udd_setup_is_in()) {
 857:tmk_core/protocol/arm_atsam/usb/udc.c ****         // GET Standard Requests
 858:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udd_g_ctrlreq.req.wLength == 0) {
 859:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;  // Error for USB host
 860:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 861:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 862:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
 863:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Get Device request
 864:tmk_core/protocol/arm_atsam/usb/udc.c ****             switch (udd_g_ctrlreq.req.bRequest) {
 865:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_STATUS:
 866:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_dev_get_status();
 867:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_DESCRIPTOR:
 868:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_dev_get_descriptor();
 869:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_CONFIGURATION:
 870:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_dev_get_configuration();
 871:tmk_core/protocol/arm_atsam/usb/udc.c ****                 default:
 872:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 873:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 874:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 875:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 876:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
 877:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Get Interface request
 878:tmk_core/protocol/arm_atsam/usb/udc.c ****             switch (udd_g_ctrlreq.req.bRequest) {
 879:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_INTERFACE:
 880:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_iface_get_setting();
 881:tmk_core/protocol/arm_atsam/usb/udc.c ****                 default:
 882:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 883:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 884:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 885:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 886:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
 887:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Get Endpoint request
 888:tmk_core/protocol/arm_atsam/usb/udc.c ****             switch (udd_g_ctrlreq.req.bRequest) {
 889:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_STATUS:
 890:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_ep_get_status();
 891:tmk_core/protocol/arm_atsam/usb/udc.c ****                 default:
 892:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 893:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 894:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 895:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 896:tmk_core/protocol/arm_atsam/usb/udc.c ****     } else {
 897:tmk_core/protocol/arm_atsam/usb/udc.c ****         // SET Standard Requests
 898:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
 899:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Set Device request
 900:tmk_core/protocol/arm_atsam/usb/udc.c ****             switch (udd_g_ctrlreq.req.bRequest) {
 901:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_ADDRESS:
 902:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_dev_set_address();
 903:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_CLEAR_FEATURE:
 904:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_dev_clear_feature();
 905:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_FEATURE:
 906:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_dev_set_feature();
 907:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_CONFIGURATION:
 908:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_dev_set_configuration();
 909:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_DESCRIPTOR:
 910:tmk_core/protocol/arm_atsam/usb/udc.c ****                     /* Not supported (defined as optional by the USB 2.0 spec) */
 911:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 912:tmk_core/protocol/arm_atsam/usb/udc.c ****                 default:
 913:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 914:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 915:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 916:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 917:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
 918:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Set Interface request
 919:tmk_core/protocol/arm_atsam/usb/udc.c ****             switch (udd_g_ctrlreq.req.bRequest) {
 920:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_INTERFACE:
 921:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_iface_set_setting();
 922:tmk_core/protocol/arm_atsam/usb/udc.c ****                 default:
 923:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 924:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 925:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 926:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (0 != USB_DEVICE_MAX_EP)
 927:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
 928:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Set Endpoint request
 929:tmk_core/protocol/arm_atsam/usb/udc.c ****             switch (udd_g_ctrlreq.req.bRequest) {
 930:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_CLEAR_FEATURE:
 931:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_ep_clear_feature();
 932:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_FEATURE:
 933:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return udc_req_std_ep_set_feature();
 934:tmk_core/protocol/arm_atsam/usb/udc.c ****                 default:
 935:tmk_core/protocol/arm_atsam/usb/udc.c ****                     break;
 936:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 937:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 938:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 939:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 940:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;
 941:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 942:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 943:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 944:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Send the SETUP interface request to UDI
 945:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 946:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if the request is supported
 947:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 948:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_iface(void) {
 949:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t   iface_num;
 950:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api_t UDC_DESC_STORAGE *udi_api;
 951:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 952:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (0 == udc_num_configuration) {
 953:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 954:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 955:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Check interface number
 956:tmk_core/protocol/arm_atsam/usb/udc.c ****     iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
 957:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
 958:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 959:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 960:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 961:tmk_core/protocol/arm_atsam/usb/udc.c ****     //* To update udc_ptr_iface with the selected interface in request
 962:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select first alternate setting of interface to update udc_ptr_iface
 963:tmk_core/protocol/arm_atsam/usb/udc.c ****     // before calling udi_api->getsetting()
 964:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_update_iface_desc(iface_num, 0)) {
 965:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 966:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 967:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Select the interface with the current alternate setting
 968:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api = udc_ptr_conf->udi_apis[iface_num];
 969:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
 970:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 971:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 972:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 973:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Send the SETUP request to the UDI corresponding to the interface number
 974:tmk_core/protocol/arm_atsam/usb/udc.c ****     return udi_api->setup();
 975:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 976:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 977:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
 978:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Send the SETUP interface request to UDI
 979:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
 980:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if the request is supported
 981:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
 982:tmk_core/protocol/arm_atsam/usb/udc.c **** static bool udc_req_ep(void) {
 983:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint8_t   iface_num;
 984:tmk_core/protocol/arm_atsam/usb/udc.c ****     udi_api_t UDC_DESC_STORAGE *udi_api;
 985:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 986:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (0 == udc_num_configuration) {
 987:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 988:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 989:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Send this request on all enabled interfaces
 990:tmk_core/protocol/arm_atsam/usb/udc.c ****     iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
 991:tmk_core/protocol/arm_atsam/usb/udc.c ****     for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces; iface_num++) {
 992:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Select the interface with the current alternate setting
 993:tmk_core/protocol/arm_atsam/usb/udc.c ****         udi_api = udc_ptr_conf->udi_apis[iface_num];
 994:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
 995:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 996:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 997:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 998:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Send the SETUP request to the UDI
 999:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udi_api->setup()) {
1000:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
1001:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
1002:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
1003:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;
1004:tmk_core/protocol/arm_atsam/usb/udc.c **** }
1005:tmk_core/protocol/arm_atsam/usb/udc.c **** 
1006:tmk_core/protocol/arm_atsam/usb/udc.c **** /**
1007:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \brief Main routine to manage the USB SETUP request.
1008:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
1009:tmk_core/protocol/arm_atsam/usb/udc.c ****  * This function parses a USB SETUP request and submits an appropriate
1010:tmk_core/protocol/arm_atsam/usb/udc.c ****  * response back to the host or, in the case of SETUP OUT requests
1011:tmk_core/protocol/arm_atsam/usb/udc.c ****  * with data, sets up a buffer for receiving the data payload.
1012:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
1013:tmk_core/protocol/arm_atsam/usb/udc.c ****  * The main standard requests defined by the USB 2.0 standard are handled
1014:tmk_core/protocol/arm_atsam/usb/udc.c ****  * internally. The interface requests are sent to UDI, and the specific request
1015:tmk_core/protocol/arm_atsam/usb/udc.c ****  * sent to a specific application callback.
1016:tmk_core/protocol/arm_atsam/usb/udc.c ****  *
1017:tmk_core/protocol/arm_atsam/usb/udc.c ****  * \return true if the request is supported, else the request is stalled by UDD
1018:tmk_core/protocol/arm_atsam/usb/udc.c ****  */
1019:tmk_core/protocol/arm_atsam/usb/udc.c **** bool udc_process_setup(void) {
 581              		.loc 1 1019 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 586              		.cfi_def_cfa_offset 24
 587              		.cfi_offset 4, -24
 588              		.cfi_offset 5, -20
 589              		.cfi_offset 6, -16
 590              		.cfi_offset 7, -12
 591              		.cfi_offset 8, -8
 592              		.cfi_offset 14, -4
1020:tmk_core/protocol/arm_atsam/usb/udc.c ****     // By default no data (receive/send) and no callbacks registered
1021:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_g_ctrlreq.payload_size   = 0;
 593              		.loc 1 1021 0
 594 0004 A94C     		ldr	r4, .L187
 595 0006 0023     		movs	r3, #0
 596 0008 A381     		strh	r3, [r4, #12]	@ movhi
1022:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_g_ctrlreq.callback       = NULL;
1023:tmk_core/protocol/arm_atsam/usb/udc.c ****     udd_g_ctrlreq.over_under_run = NULL;
 597              		.loc 1 1023 0
 598 000a C4E90433 		strd	r3, r3, [r4, #16]
1024:tmk_core/protocol/arm_atsam/usb/udc.c **** 
1025:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (Udd_setup_is_in()) {
 599              		.loc 1 1025 0
 600 000e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 601 0010 5AB2     		sxtb	r2, r3
 602 0012 002A     		cmp	r2, #0
 603 0014 05DA     		bge	.L79
1026:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udd_g_ctrlreq.req.wLength == 0) {
 604              		.loc 1 1026 0
 605 0016 E188     		ldrh	r1, [r4, #6]
 606 0018 19B9     		cbnz	r1, .L79
 607              	.L129:
1027:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;  // Error from USB host
 608              		.loc 1 1027 0
 609 001a 0025     		movs	r5, #0
 610              	.L80:
1028:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
1029:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
1030:tmk_core/protocol/arm_atsam/usb/udc.c **** 
1031:tmk_core/protocol/arm_atsam/usb/udc.c ****     // If standard request then try to decode it in UDC
1032:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
1033:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udc_reqstd()) {
1034:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
1035:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
1036:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
1037:tmk_core/protocol/arm_atsam/usb/udc.c **** 
1038:tmk_core/protocol/arm_atsam/usb/udc.c ****     // If interface request then try to decode it in UDI
1039:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
1040:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udc_req_iface()) {
1041:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
1042:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
1043:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
1044:tmk_core/protocol/arm_atsam/usb/udc.c **** 
1045:tmk_core/protocol/arm_atsam/usb/udc.c ****     // If endpoint request then try to decode it in UDI
1046:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
1047:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udc_req_ep()) {
1048:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
1049:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
1050:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
1051:tmk_core/protocol/arm_atsam/usb/udc.c **** 
1052:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Here SETUP request unknown by UDC and UDIs
1053:tmk_core/protocol/arm_atsam/usb/udc.c **** #ifdef USB_DEVICE_SPECIFIC_REQUEST
1054:tmk_core/protocol/arm_atsam/usb/udc.c ****     // Try to decode it in specific callback
1055:tmk_core/protocol/arm_atsam/usb/udc.c ****     return USB_DEVICE_SPECIFIC_REQUEST();  // Ex: Vendor request,...
1056:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
1057:tmk_core/protocol/arm_atsam/usb/udc.c ****     return false;
1058:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
1059:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 611              		.loc 1 1059 0
 612 001c 2846     		mov	r0, r5
 613 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 614              	.L79:
1032:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udc_reqstd()) {
 615              		.loc 1 1032 0
 616 0022 13F06001 		ands	r1, r3, #96
 617 0026 1ED1     		bne	.L82
 618              	.LBB48:
 619              	.LBB49:
 856:tmk_core/protocol/arm_atsam/usb/udc.c ****         // GET Standard Requests
 620              		.loc 1 856 0
 621 0028 002A     		cmp	r2, #0
 622 002a 03F01F03 		and	r3, r3, #31
 623 002e 80F2F880 		bge	.L83
 858:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;  // Error for USB host
 624              		.loc 1 858 0
 625 0032 E588     		ldrh	r5, [r4, #6]
 626 0034 BDB1     		cbz	r5, .L82
 862:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Get Device request
 627              		.loc 1 862 0
 628 0036 002B     		cmp	r3, #0
 629 0038 40F0B680 		bne	.L85
 864:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_STATUS:
 630              		.loc 1 864 0
 631 003c 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 632 003e 062B     		cmp	r3, #6
 633 0040 0AD0     		beq	.L86
 634 0042 082B     		cmp	r3, #8
 635 0044 00F0A880 		beq	.L87
 636 0048 6BB9     		cbnz	r3, .L82
 637              	.LBB50:
 638              	.LBB51:
 397:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 639              		.loc 1 397 0
 640 004a 022D     		cmp	r5, #2
 641 004c 11D1     		bne	.L89
 401:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 642              		.loc 1 401 0
 643 004e 9848     		ldr	r0, .L187+4
 644 0050 2946     		mov	r1, r5
 645              	.L186:
 646              	.LBE51:
 647              	.LBE50:
 648              	.LBB52:
 649              	.LBB53:
 420:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 650              		.loc 1 420 0
 651 0052 FFF7FEFF 		bl	udd_set_setup_payload
 652              	.LVL43:
 653 0056 50E0     		b	.L184
 654              	.L86:
 655              	.LBE53:
 656              	.LBE52:
 657              	.LBB55:
 658              	.LBB56:
 623:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 659              		.loc 1 623 0
 660 0058 6388     		ldrh	r3, [r4, #2]
 661              	.LVL44:
 626:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_DEVICE:
 662              		.loc 1 626 0
 663 005a 1D0A     		lsrs	r5, r3, #8
 664 005c 022D     		cmp	r5, #2
 665 005e 39D0     		beq	.L90
 666 0060 28D8     		bhi	.L91
 667 0062 012D     		cmp	r5, #1
 668 0064 30D0     		beq	.L92
 669              	.LVL45:
 670              	.L82:
 671              	.LBE56:
 672              	.LBE55:
 673              	.LBE49:
 674              	.LBE48:
1039:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udc_req_iface()) {
 675              		.loc 1 1039 0
 676 0066 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 677 0068 03F01F03 		and	r3, r3, #31
 678 006c 012B     		cmp	r3, #1
 679 006e 00F0A381 		beq	.L111
 680              	.L89:
1046:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (udc_req_ep()) {
 681              		.loc 1 1046 0
 682 0072 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 683 0074 03F01F03 		and	r3, r3, #31
 684 0078 022B     		cmp	r3, #2
 685 007a CED1     		bne	.L129
 686              	.LBB92:
 687              	.LBB93:
 986:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 688              		.loc 1 986 0
 689 007c 8D4F     		ldr	r7, .L187+8
 690 007e 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 691 0080 002A     		cmp	r2, #0
 692 0082 CAD0     		beq	.L129
 693 0084 0025     		movs	r5, #0
 694              	.L130:
 991:tmk_core/protocol/arm_atsam/usb/udc.c ****         // Select the interface with the current alternate setting
 695              		.loc 1 991 0
 696 0086 7B68     		ldr	r3, [r7, #4]
 697 0088 1A68     		ldr	r2, [r3]
 698 008a 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 699 008c ECB2     		uxtb	r4, r5
 700              	.LVL46:
 701 008e A242     		cmp	r2, r4
 702 0090 C3D9     		bls	.L129
 993:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
 703              		.loc 1 993 0
 704 0092 5B68     		ldr	r3, [r3, #4]
 705 0094 53F82460 		ldr	r6, [r3, r4, lsl #2]
 706              	.LVL47:
 994:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 707              		.loc 1 994 0
 708 0098 F368     		ldr	r3, [r6, #12]
 709 009a 9847     		blx	r3
 710              	.LVL48:
 711 009c 0146     		mov	r1, r0
 712 009e 2046     		mov	r0, r4
 713 00a0 FFF7FEFF 		bl	udc_update_iface_desc
 714              	.LVL49:
 715 00a4 0028     		cmp	r0, #0
 716 00a6 B8D0     		beq	.L129
 999:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
 717              		.loc 1 999 0
 718 00a8 B368     		ldr	r3, [r6, #8]
 719 00aa 9847     		blx	r3
 720              	.LVL50:
 721 00ac 0135     		adds	r5, r5, #1
 722 00ae 0028     		cmp	r0, #0
 723 00b0 E9D0     		beq	.L130
 724 00b2 22E0     		b	.L184
 725              	.LVL51:
 726              	.L91:
 727              	.LBE93:
 728              	.LBE92:
 729              	.LBB94:
 730              	.LBB89:
 731              	.LBB66:
 732              	.LBB64:
 626:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DT_DEVICE:
 733              		.loc 1 626 0
 734 00b4 032D     		cmp	r5, #3
 735 00b6 22D0     		beq	.L93
 736 00b8 0F2D     		cmp	r5, #15
 737 00ba D4D1     		bne	.L82
 687:tmk_core/protocol/arm_atsam/usb/udc.c ****                 return false;
 738              		.loc 1 687 0
 739 00bc 7E4B     		ldr	r3, .L187+12
 740              	.LVL52:
 741 00be 9868     		ldr	r0, [r3, #8]
 742 00c0 0028     		cmp	r0, #0
 743 00c2 D6D0     		beq	.L89
 690:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 744              		.loc 1 690 0
 745 00c4 4188     		ldrh	r1, [r0, #2]	@ unaligned
 746 00c6 02E0     		b	.L183
 747              	.LVL53:
 748              	.L92:
 635:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 749              		.loc 1 635 0
 750 00c8 7B4B     		ldr	r3, .L187+12
 751              	.LVL54:
 752 00ca 1868     		ldr	r0, [r3]
 753 00cc 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 754              	.L183:
 755              	.LBB57:
 756              	.LBB58:
 609:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 757              		.loc 1 609 0
 758 00ce FFF7FEFF 		bl	udd_set_setup_payload
 759              	.LVL55:
 760 00d2 0DE0     		b	.L95
 761              	.LVL56:
 762              	.L90:
 763              	.LBE58:
 764              	.LBE57:
 652:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return false;
 765              		.loc 1 652 0
 766 00d4 784A     		ldr	r2, .L187+12
 767 00d6 1168     		ldr	r1, [r2]
 768 00d8 497C     		ldrb	r1, [r1, #17]	@ zero_extendqisi2
 623:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 769              		.loc 1 623 0
 770 00da DBB2     		uxtb	r3, r3
 652:tmk_core/protocol/arm_atsam/usb/udc.c ****                     return false;
 771              		.loc 1 652 0
 772 00dc 9942     		cmp	r1, r3
 773 00de C8D9     		bls	.L89
 655:tmk_core/protocol/arm_atsam/usb/udc.c ****             }
 774              		.loc 1 655 0
 775 00e0 5268     		ldr	r2, [r2, #4]
 776 00e2 52F83300 		ldr	r0, [r2, r3, lsl #3]
 777 00e6 4188     		ldrh	r1, [r0, #2]	@ unaligned
 778 00e8 FFF7FEFF 		bl	udd_set_setup_payload
 779              	.LVL57:
 657:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 780              		.loc 1 657 0
 781 00ec A368     		ldr	r3, [r4, #8]
 782 00ee 5D70     		strb	r5, [r3, #1]
 783              	.L95:
 705:tmk_core/protocol/arm_atsam/usb/udc.c ****         udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
 784              		.loc 1 705 0
 785 00f0 E388     		ldrh	r3, [r4, #6]
 786 00f2 A289     		ldrh	r2, [r4, #12]
 787 00f4 9A42     		cmp	r2, r3
 706:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 788              		.loc 1 706 0
 789 00f6 88BF     		it	hi
 790 00f8 A381     		strhhi	r3, [r4, #12]	@ movhi
 791              	.L184:
 792              	.LBE64:
 793              	.LBE66:
 794              	.LBE89:
 795              	.LBE94:
1034:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 796              		.loc 1 1034 0
 797 00fa 0125     		movs	r5, #1
 798 00fc 8EE7     		b	.L80
 799              	.LVL58:
 800              	.L93:
 801              	.LBB95:
 802              	.LBB90:
 803              	.LBB67:
 804              	.LBB65:
 805              	.LBB63:
 806              	.LBB62:
 573:tmk_core/protocol/arm_atsam/usb/udc.c ****         case 0:
 807              		.loc 1 573 0
 808 00fe DBB2     		uxtb	r3, r3
 809 0100 032B     		cmp	r3, #3
 810 0102 B0D8     		bhi	.L82
 811 0104 DFE803F0 		tbb	[pc, r3]
 812              	.L97:
 813 0108 02       		.byte	(.L96-.L97)/2
 814 0109 45       		.byte	(.L132-.L97)/2
 815 010a 42       		.byte	(.L99-.L97)/2
 816 010b 05       		.byte	(.L100-.L97)/2
 817              		.p2align 1
 818              	.L96:
 575:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 819              		.loc 1 575 0
 820 010c 0421     		movs	r1, #4
 821 010e 6B48     		ldr	r0, .L187+16
 822 0110 DDE7     		b	.L183
 823              	.L100:
 824              	.LBB59:
 825              	.LBB60:
 131:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint32_t serial_address = *(uint32_t *)serial_ptrloc;  // Address of bootloader's serial number
 826              		.loc 1 131 0
 827 0112 6B4B     		ldr	r3, .L187+20
 828              	.LVL59:
 132:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 829              		.loc 1 132 0
 830 0114 53F8042C 		ldr	r2, [r3, #-4]
 131:tmk_core/protocol/arm_atsam/usb/udc.c ****     uint32_t serial_address = *(uint32_t *)serial_ptrloc;  // Address of bootloader's serial number
 831              		.loc 1 131 0
 832 0118 191F     		subs	r1, r3, #4
 833              	.LVL60:
 134:tmk_core/protocol/arm_atsam/usb/udc.c ****     {
 834              		.loc 1 134 0
 835 011a 531C     		adds	r3, r2, #1
 836 011c 04D0     		beq	.L101
 837 011e 9142     		cmp	r1, r2
 838 0120 02D9     		bls	.L101
 136:tmk_core/protocol/arm_atsam/usb/udc.c ****         {
 839              		.loc 1 136 0
 840 0122 12F00303 		ands	r3, r2, #3
 841 0126 20D0     		beq	.L133
 842              	.L101:
 154:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 843              		.loc 1 154 0
 844 0128 624B     		ldr	r3, .L187+8
 845 012a 0B22     		movs	r2, #11
 846              	.LVL61:
 847 012c 83F82320 		strb	r2, [r3, #35]
 157:tmk_core/protocol/arm_atsam/usb/udc.c **** #else
 848              		.loc 1 157 0
 849 0130 644B     		ldr	r3, .L187+24
 850 0132 12E0     		b	.L105
 851              	.LVL62:
 852              	.L104:
 853              	.LBB61:
 142:tmk_core/protocol/arm_atsam/usb/udc.c ****                 serial_length++;
 854              		.loc 1 142 0
 855 0134 E854     		strb	r0, [r5, r3]
 856              	.LVL63:
 857 0136 0133     		adds	r3, r3, #1
 858              	.LVL64:
 859              	.L102:
 141:tmk_core/protocol/arm_atsam/usb/udc.c ****                 bootloader_serial_number[serial_length] = *(serial_use + serial_length) & 0xFF;
 860              		.loc 1 141 0
 861 0138 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 862 013c A0F12106 		sub	r6, r0, #33
 863 0140 5D2E     		cmp	r6, #93
 864 0142 D9B2     		uxtb	r1, r3
 865              	.LVL65:
 866 0144 02D8     		bhi	.L103
 867 0146 142B     		cmp	r3, #20
 868 0148 F4D1     		bne	.L104
 869 014a 1946     		mov	r1, r3
 870              	.LVL66:
 871              	.L103:
 145:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 872              		.loc 1 145 0
 873 014c 594B     		ldr	r3, .L187+8
 874              	.LVL67:
 875 014e 5A18     		adds	r2, r3, r1
 876              	.LVL68:
 877 0150 0020     		movs	r0, #0
 147:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 878              		.loc 1 147 0
 879 0152 83F82310 		strb	r1, [r3, #35]
 145:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 880              		.loc 1 145 0
 881 0156 9073     		strb	r0, [r2, #14]
 149:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 882              		.loc 1 149 0
 883 0158 0E33     		adds	r3, r3, #14
 884              	.L105:
 885              	.LVL69:
 886              	.LBE61:
 887              	.LBE60:
 888              	.LBE59:
 592:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 889              		.loc 1 592 0
 890 015a 564A     		ldr	r2, .L187+8
 891 015c 92F82310 		ldrb	r1, [r2, #35]	@ zero_extendqisi2
 892              	.LVL70:
 603:tmk_core/protocol/arm_atsam/usb/udc.c ****         for (i = 0; i < str_length; i++) {
 893              		.loc 1 603 0
 894 0160 0029     		cmp	r1, #0
 895 0162 C5D0     		beq	.L95
 896              	.LVL71:
 897              	.L98:
 581:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 898              		.loc 1 581 0
 899 0164 0022     		movs	r2, #0
 900 0166 5848     		ldr	r0, .L187+28
 901 0168 06E0     		b	.L106
 902              	.LVL72:
 903              	.L133:
 904 016a 584D     		ldr	r5, .L187+32
 905 016c E4E7     		b	.L102
 906              	.LVL73:
 907              	.L107:
 605:tmk_core/protocol/arm_atsam/usb/udc.c ****         }
 908              		.loc 1 605 0
 909 016e 00EB4205 		add	r5, r0, r2, lsl #1
 910 0172 9E5C     		ldrb	r6, [r3, r2]	@ zero_extendqisi2
 911 0174 6E80     		strh	r6, [r5, #2]	@ movhi
 912              	.LVL74:
 913 0176 0132     		adds	r2, r2, #1
 914              	.LVL75:
 915              	.L106:
 604:tmk_core/protocol/arm_atsam/usb/udc.c ****             udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
 916              		.loc 1 604 0
 917 0178 D5B2     		uxtb	r5, r2
 918 017a A942     		cmp	r1, r5
 919 017c F7D8     		bhi	.L107
 608:tmk_core/protocol/arm_atsam/usb/udc.c ****         udd_set_setup_payload((uint8_t *)&udc_string_desc, udc_string_desc.header.bLength);
 920              		.loc 1 608 0
 921 017e 0131     		adds	r1, r1, #1
 922 0180 4900     		lsls	r1, r1, #1
 923 0182 534B     		ldr	r3, .L187+36
 924 0184 C9B2     		uxtb	r1, r1
 925 0186 83F82010 		strb	r1, [r3, #32]
 926 018a A0E7     		b	.L183
 927              	.LVL76:
 928              	.L99:
 586:tmk_core/protocol/arm_atsam/usb/udc.c ****             str        = udc_string_product_name;
 929              		.loc 1 586 0
 930 018c 0C21     		movs	r1, #12
 587:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 931              		.loc 1 587 0
 932 018e 504B     		ldr	r3, .L187+36
 933 0190 E8E7     		b	.L98
 934              	.L132:
 580:tmk_core/protocol/arm_atsam/usb/udc.c ****             str        = udc_string_manufacturer_name;
 935              		.loc 1 580 0
 936 0192 0D21     		movs	r1, #13
 581:tmk_core/protocol/arm_atsam/usb/udc.c ****             break;
 937              		.loc 1 581 0
 938 0194 4F4B     		ldr	r3, .L187+40
 939 0196 E5E7     		b	.L98
 940              	.LVL77:
 941              	.L87:
 942              	.LBE62:
 943              	.LBE63:
 944              	.LBE65:
 945              	.LBE67:
 946              	.LBB68:
 947              	.LBB69:
 717:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 948              		.loc 1 717 0
 949 0198 012D     		cmp	r5, #1
 950 019a 7FF46AAF 		bne	.L89
 721:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 951              		.loc 1 721 0
 952 019e 4548     		ldr	r0, .L187+8
 953 01a0 2946     		mov	r1, r5
 954              	.L185:
 955              	.LBE69:
 956              	.LBE68:
 957              	.LBB70:
 958              	.LBB71:
 818:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 959              		.loc 1 818 0
 960 01a2 FFF7FEFF 		bl	udd_set_setup_payload
 961              	.LVL78:
 962 01a6 39E7     		b	.L80
 963              	.L85:
 964              	.LBE71:
 965              	.LBE70:
 876:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Get Interface request
 966              		.loc 1 876 0
 967 01a8 012B     		cmp	r3, #1
 968 01aa 27D1     		bne	.L109
 878:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_INTERFACE:
 969              		.loc 1 878 0
 970 01ac 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 971 01ae 0A2B     		cmp	r3, #10
 972 01b0 7FF459AF 		bne	.L82
 973              	.LBB73:
 974              	.LBB72:
 795:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // Error in request
 975              		.loc 1 795 0
 976 01b4 012D     		cmp	r5, #1
 977 01b6 40F0FF80 		bne	.L111
 798:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 978              		.loc 1 798 0
 979 01ba 3E4E     		ldr	r6, .L187+8
 980 01bc 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 981 01be 002B     		cmp	r3, #0
 982 01c0 00F0FA80 		beq	.L111
 804:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 983              		.loc 1 804 0
 984 01c4 D6F80480 		ldr	r8, [r6, #4]
 803:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
 985              		.loc 1 803 0
 986 01c8 2779     		ldrb	r7, [r4, #4]	@ zero_extendqisi2
 987              	.LVL79:
 804:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 988              		.loc 1 804 0
 989 01ca D8F80030 		ldr	r3, [r8]
 990 01ce 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 991 01d0 BB42     		cmp	r3, r7
 992 01d2 40F2F180 		bls	.L111
 810:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 993              		.loc 1 810 0
 994 01d6 3846     		mov	r0, r7
 995 01d8 FFF7FEFF 		bl	udc_update_iface_desc
 996              	.LVL80:
 997 01dc 0546     		mov	r5, r0
 998 01de 0028     		cmp	r0, #0
 999 01e0 3FF441AF 		beq	.L82
 1000              	.LVL81:
 814:tmk_core/protocol/arm_atsam/usb/udc.c ****     udc_iface_setting = udi_api->getsetting();
 1001              		.loc 1 814 0
 1002 01e4 D8F80430 		ldr	r3, [r8, #4]
 815:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 1003              		.loc 1 815 0
 1004 01e8 53F82730 		ldr	r3, [r3, r7, lsl #2]
 1005 01ec DB68     		ldr	r3, [r3, #12]
 1006 01ee 9847     		blx	r3
 1007              	.LVL82:
 818:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 1008              		.loc 1 818 0
 1009 01f0 0121     		movs	r1, #1
 815:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 1010              		.loc 1 815 0
 1011 01f2 86F82400 		strb	r0, [r6, #36]
 818:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 1012              		.loc 1 818 0
 1013 01f6 06F12400 		add	r0, r6, #36
 1014 01fa D2E7     		b	.L185
 1015              	.LVL83:
 1016              	.L109:
 1017              	.LBE72:
 1018              	.LBE73:
 886:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Get Endpoint request
 1019              		.loc 1 886 0
 1020 01fc 022B     		cmp	r3, #2
 1021 01fe 7FF432AF 		bne	.L82
 888:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_GET_STATUS:
 1022              		.loc 1 888 0
 1023 0202 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1024 0204 002B     		cmp	r3, #0
 1025 0206 7FF42EAF 		bne	.L82
 1026              	.LBB74:
 1027              	.LBB54:
 414:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1028              		.loc 1 414 0
 1029 020a 022D     		cmp	r5, #2
 1030 020c 7FF431AF 		bne	.L89
 418:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 1031              		.loc 1 418 0
 1032 0210 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1033 0212 FFF7FEFF 		bl	udd_ep_is_halted
 1034              	.LVL84:
 1035 0216 0346     		mov	r3, r0
 1036 0218 2648     		ldr	r0, .L187+8
 420:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 1037              		.loc 1 420 0
 1038 021a 2946     		mov	r1, r5
 418:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 1039              		.loc 1 418 0
 1040 021c 20F8263F 		strh	r3, [r0, #38]!	@ movhi
 1041 0220 17E7     		b	.L186
 1042              	.L83:
 1043              	.LBE54:
 1044              	.LBE74:
 898:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Set Device request
 1045              		.loc 1 898 0
 1046 0222 002B     		cmp	r3, #0
 1047 0224 40F08780 		bne	.L113
 900:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_ADDRESS:
 1048              		.loc 1 900 0
 1049 0228 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1050 022a 013B     		subs	r3, r3, #1
 1051 022c 082B     		cmp	r3, #8
 1052 022e 3FF61AAF 		bhi	.L82
 1053 0232 01A2     		adr	r2, .L115
 1054 0234 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1055              		.p2align 2
 1056              	.L115:
 1057 0238 6B020000 		.word	.L114+1
 1058 023c 67000000 		.word	.L82+1
 1059 0240 8B020000 		.word	.L116+1
 1060 0244 67000000 		.word	.L82+1
 1061 0248 5D020000 		.word	.L117+1
 1062 024c 67000000 		.word	.L82+1
 1063 0250 67000000 		.word	.L82+1
 1064 0254 67000000 		.word	.L82+1
 1065 0258 DD020000 		.word	.L118+1
 1066              		.p2align 1
 1067              	.L117:
 1068              	.LBB75:
 1069              	.LBB76:
 552:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1070              		.loc 1 552 0
 1071 025c E388     		ldrh	r3, [r4, #6]
 1072 025e 002B     		cmp	r3, #0
 1073 0260 7FF407AF 		bne	.L89
 558:tmk_core/protocol/arm_atsam/usb/udc.c ****     return true;
 1074              		.loc 1 558 0
 1075 0264 1C4B     		ldr	r3, .L187+44
 1076 0266 2361     		str	r3, [r4, #16]
 1077 0268 47E7     		b	.L184
 1078              	.L114:
 1079              	.LBE76:
 1080              	.LBE75:
 1081              	.LBB77:
 1082              	.LBB78:
 431:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1083              		.loc 1 431 0
 1084 026a E388     		ldrh	r3, [r4, #6]
 1085 026c 002B     		cmp	r3, #0
 1086 026e 7FF400AF 		bne	.L89
 435:tmk_core/protocol/arm_atsam/usb/udc.c ****         udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
 1087              		.loc 1 435 0
 1088 0272 6588     		ldrh	r5, [r4, #2]
 1089 0274 012D     		cmp	r5, #1
 1090 0276 7FF4FCAE 		bne	.L89
 436:tmk_core/protocol/arm_atsam/usb/udc.c **** #if (USB_CONFIG_ATTR_REMOTE_WAKEUP == (USB_DEVICE_ATTR & USB_CONFIG_ATTR_REMOTE_WAKEUP))
 1091              		.loc 1 436 0
 1092 027a 0E4A     		ldr	r2, .L187+8
 1093 027c 9389     		ldrh	r3, [r2, #12]
 1094 027e 23F00203 		bic	r3, r3, #2
 1095 0282 9381     		strh	r3, [r2, #12]	@ movhi
 438:tmk_core/protocol/arm_atsam/usb/udc.c **** #endif
 1096              		.loc 1 438 0
 1097 0284 FFF7FEFF 		bl	main_remotewakeup_disable
 1098              	.LVL85:
 1099 0288 C8E6     		b	.L80
 1100              	.L116:
 1101              	.LBE78:
 1102              	.LBE77:
 1103              	.LBB79:
 1104              	.LBB80:
 469:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1105              		.loc 1 469 0
 1106 028a E388     		ldrh	r3, [r4, #6]
 1107 028c 002B     		cmp	r3, #0
 1108 028e 7FF4F0AE 		bne	.L89
 473:tmk_core/protocol/arm_atsam/usb/udc.c ****         case USB_DEV_FEATURE_REMOTE_WAKEUP:
 1109              		.loc 1 473 0
 1110 0292 6588     		ldrh	r5, [r4, #2]
 1111 0294 012D     		cmp	r5, #1
 1112 0296 7FF4E6AE 		bne	.L82
 476:tmk_core/protocol/arm_atsam/usb/udc.c ****             UDC_REMOTEWAKEUP_ENABLE();
 1113              		.loc 1 476 0
 1114 029a 064A     		ldr	r2, .L187+8
 1115 029c 9389     		ldrh	r3, [r2, #12]
 1116 029e 43F00203 		orr	r3, r3, #2
 1117 02a2 9381     		strh	r3, [r2, #12]	@ movhi
 477:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
 1118              		.loc 1 477 0
 1119 02a4 FFF7FEFF 		bl	main_remotewakeup_enable
 1120              	.LVL86:
 1121 02a8 B8E6     		b	.L80
 1122              	.L188:
 1123 02aa 00BF     		.align	2
 1124              	.L187:
 1125 02ac 00000000 		.word	udd_g_ctrlreq
 1126 02b0 0C000000 		.word	.LANCHOR0+12
 1127 02b4 00000000 		.word	.LANCHOR0
 1128 02b8 00000000 		.word	udc_config
 1129 02bc 1C000000 		.word	.LANCHOR1+28
 1130 02c0 00000000 		.word	_srom
 1131 02c4 00000000 		.word	.LC0
 1132 02c8 20000000 		.word	.LANCHOR1+32
 1133 02cc 0E000000 		.word	.LANCHOR0+14
 1134 02d0 00000000 		.word	.LANCHOR1
 1135 02d4 0D000000 		.word	.LANCHOR1+13
 1136 02d8 00000000 		.word	udc_valid_address
 1137              	.L118:
 1138              	.LBE80:
 1139              	.LBE79:
 1140              	.LBB81:
 1141              	.LBB82:
 734:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1142              		.loc 1 734 0
 1143 02dc E588     		ldrh	r5, [r4, #6]
 1144 02de 002D     		cmp	r5, #0
 1145 02e0 7FF4C7AE 		bne	.L89
 738:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1146              		.loc 1 738 0
 1147 02e4 FFF7FEFF 		bl	udd_getaddress
 1148              	.LVL87:
 1149 02e8 0028     		cmp	r0, #0
 1150 02ea 3FF4BCAE 		beq	.L82
 752:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 1151              		.loc 1 752 0
 1152 02ee 454F     		ldr	r7, .L189
 1153 02f0 3B68     		ldr	r3, [r7]
 1154 02f2 5A7C     		ldrb	r2, [r3, #17]	@ zero_extendqisi2
 1155 02f4 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1156 02f6 9A42     		cmp	r2, r3
 1157 02f8 FFF4B5AE 		bcc	.L82
 758:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 1158              		.loc 1 758 0
 1159 02fc FFF7FEFF 		bl	udc_reset
 1160              	.LVL88:
 761:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (udc_num_configuration == 0) {
 1161              		.loc 1 761 0
 1162 0300 414E     		ldr	r6, .L189+4
 1163 0302 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1164 0304 3370     		strb	r3, [r6]
 762:tmk_core/protocol/arm_atsam/usb/udc.c ****         return true;  // Default empty configuration requested
 1165              		.loc 1 762 0
 1166 0306 002B     		cmp	r3, #0
 1167 0308 3FF4F7AE 		beq	.L184
 774:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 1168              		.loc 1 774 0
 1169 030c 03F10053 		add	r3, r3, #536870912
 1170 0310 7A68     		ldr	r2, [r7, #4]
 1171 0312 013B     		subs	r3, r3, #1
 1172 0314 02EBC303 		add	r3, r2, r3, lsl #3
 1173 0318 7360     		str	r3, [r6, #4]
 1174              	.LVL89:
 1175              	.L121:
 777:tmk_core/protocol/arm_atsam/usb/udc.c ****         if (!udc_iface_enable(iface_num, 0)) {
 1176              		.loc 1 777 0
 1177 031a 7368     		ldr	r3, [r6, #4]
 1178 031c 1B68     		ldr	r3, [r3]
 1179 031e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1180 0320 E8B2     		uxtb	r0, r5
 1181              	.LVL90:
 1182 0322 8342     		cmp	r3, r0
 1183 0324 7FF6E9AE 		bls	.L184
 778:tmk_core/protocol/arm_atsam/usb/udc.c ****             return false;
 1184              		.loc 1 778 0
 1185 0328 0021     		movs	r1, #0
 1186 032a FFF7FEFF 		bl	udc_iface_enable
 1187              	.LVL91:
 1188 032e 0135     		adds	r5, r5, #1
 1189              	.LVL92:
 1190 0330 0028     		cmp	r0, #0
 1191 0332 F2D1     		bne	.L121
 1192 0334 97E6     		b	.L82
 1193              	.L113:
 1194              	.LBE82:
 1195              	.LBE81:
 917:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Set Interface request
 1196              		.loc 1 917 0
 1197 0336 012B     		cmp	r3, #1
 1198 0338 1AD1     		bne	.L123
 919:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_SET_INTERFACE:
 1199              		.loc 1 919 0
 1200 033a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1201 033c 0B2B     		cmp	r3, #11
 1202 033e 7FF492AE 		bne	.L82
 1203              	.LBB83:
 1204              	.LBB84:
 831:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // Error in request
 1205              		.loc 1 831 0
 1206 0342 E388     		ldrh	r3, [r4, #6]
 1207 0344 002B     		cmp	r3, #0
 1208 0346 37D1     		bne	.L111
 834:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 1209              		.loc 1 834 0
 1210 0348 2F4B     		ldr	r3, .L189+4
 1211 034a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1212 034c 002B     		cmp	r3, #0
 1213 034e 33D0     		beq	.L111
 838:tmk_core/protocol/arm_atsam/usb/udc.c ****     setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
 1214              		.loc 1 838 0
 1215 0350 2579     		ldrb	r5, [r4, #4]	@ zero_extendqisi2
 1216              	.LVL93:
 839:tmk_core/protocol/arm_atsam/usb/udc.c **** 
 1217              		.loc 1 839 0
 1218 0352 6688     		ldrh	r6, [r4, #2]
 1219              	.LVL94:
 842:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1220              		.loc 1 842 0
 1221 0354 2846     		mov	r0, r5
 1222 0356 FFF7FEFF 		bl	udc_iface_disable
 1223              	.LVL95:
 1224 035a 0028     		cmp	r0, #0
 1225 035c 3FF483AE 		beq	.L82
 847:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 1226              		.loc 1 847 0
 1227 0360 F1B2     		uxtb	r1, r6
 1228 0362 2846     		mov	r0, r5
 1229 0364 FFF7FEFF 		bl	udc_iface_enable
 1230              	.LVL96:
 1231              	.L125:
 1232              	.LBE84:
 1233              	.LBE83:
 1234              	.LBE90:
 1235              	.LBE95:
1033:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
 1236              		.loc 1 1033 0
 1237 0368 0028     		cmp	r0, #0
 1238 036a 7FF4C6AE 		bne	.L184
 1239 036e 7AE6     		b	.L82
 1240              	.L123:
 1241              	.LBB96:
 1242              	.LBB91:
 927:tmk_core/protocol/arm_atsam/usb/udc.c ****             // Standard Set Endpoint request
 1243              		.loc 1 927 0
 1244 0370 022B     		cmp	r3, #2
 1245 0372 7FF478AE 		bne	.L82
 929:tmk_core/protocol/arm_atsam/usb/udc.c ****                 case USB_REQ_CLEAR_FEATURE:
 1246              		.loc 1 929 0
 1247 0376 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1248 0378 012B     		cmp	r3, #1
 1249 037a 11D0     		beq	.L126
 1250 037c 032B     		cmp	r3, #3
 1251 037e 7FF472AE 		bne	.L82
 1252              	.LBB85:
 1253              	.LBB86:
 529:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1254              		.loc 1 529 0
 1255 0382 E388     		ldrh	r3, [r4, #6]
 1256 0384 002B     		cmp	r3, #0
 1257 0386 7FF474AE 		bne	.L89
 532:tmk_core/protocol/arm_atsam/usb/udc.c ****         udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
 1258              		.loc 1 532 0
 1259 038a 6388     		ldrh	r3, [r4, #2]
 1260 038c 002B     		cmp	r3, #0
 1261 038e 7FF470AE 		bne	.L89
 533:tmk_core/protocol/arm_atsam/usb/udc.c ****         return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
 1262              		.loc 1 533 0
 1263 0392 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1264 0394 FFF7FEFF 		bl	udd_ep_abort
 1265              	.LVL97:
 534:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 1266              		.loc 1 534 0
 1267 0398 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1268 039a FFF7FEFF 		bl	udd_ep_set_halt
 1269              	.LVL98:
 1270 039e E3E7     		b	.L125
 1271              	.L126:
 1272              	.LBE86:
 1273              	.LBE85:
 1274              	.LBB87:
 1275              	.LBB88:
 452:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1276              		.loc 1 452 0
 1277 03a0 E388     		ldrh	r3, [r4, #6]
 1278 03a2 002B     		cmp	r3, #0
 1279 03a4 7FF465AE 		bne	.L89
 456:tmk_core/protocol/arm_atsam/usb/udc.c ****         return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
 1280              		.loc 1 456 0
 1281 03a8 6388     		ldrh	r3, [r4, #2]
 1282 03aa 002B     		cmp	r3, #0
 1283 03ac 7FF461AE 		bne	.L89
 457:tmk_core/protocol/arm_atsam/usb/udc.c ****     }
 1284              		.loc 1 457 0
 1285 03b0 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 1286 03b2 FFF7FEFF 		bl	udd_ep_clear_halt
 1287              	.LVL99:
 1288 03b6 D7E7     		b	.L125
 1289              	.L111:
 1290              	.LBE88:
 1291              	.LBE87:
 1292              	.LBE91:
 1293              	.LBE96:
 1294              	.LBB97:
 1295              	.LBB98:
 952:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;  // The device is not is configured state yet
 1296              		.loc 1 952 0
 1297 03b8 134B     		ldr	r3, .L189+4
 1298 03ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1299 03bc 002A     		cmp	r2, #0
 1300 03be 3FF458AE 		beq	.L89
 957:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1301              		.loc 1 957 0
 1302 03c2 5E68     		ldr	r6, [r3, #4]
 956:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
 1303              		.loc 1 956 0
 1304 03c4 2579     		ldrb	r5, [r4, #4]	@ zero_extendqisi2
 1305              	.LVL100:
 957:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1306              		.loc 1 957 0
 1307 03c6 3368     		ldr	r3, [r6]
 1308 03c8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1309 03ca AB42     		cmp	r3, r5
 1310 03cc 7FF651AE 		bls	.L89
 964:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1311              		.loc 1 964 0
 1312 03d0 0021     		movs	r1, #0
 1313 03d2 2846     		mov	r0, r5
 1314 03d4 FFF7FEFF 		bl	udc_update_iface_desc
 1315              	.LVL101:
 1316 03d8 0028     		cmp	r0, #0
 1317 03da 3FF44AAE 		beq	.L89
 968:tmk_core/protocol/arm_atsam/usb/udc.c ****     if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
 1318              		.loc 1 968 0
 1319 03de 7368     		ldr	r3, [r6, #4]
 1320 03e0 53F82560 		ldr	r6, [r3, r5, lsl #2]
 1321              	.LVL102:
 969:tmk_core/protocol/arm_atsam/usb/udc.c ****         return false;
 1322              		.loc 1 969 0
 1323 03e4 F368     		ldr	r3, [r6, #12]
 1324 03e6 9847     		blx	r3
 1325              	.LVL103:
 1326 03e8 0146     		mov	r1, r0
 1327 03ea 2846     		mov	r0, r5
 1328 03ec FFF7FEFF 		bl	udc_update_iface_desc
 1329              	.LVL104:
 1330 03f0 0028     		cmp	r0, #0
 1331 03f2 3FF43EAE 		beq	.L89
 974:tmk_core/protocol/arm_atsam/usb/udc.c **** }
 1332              		.loc 1 974 0
 1333 03f6 B368     		ldr	r3, [r6, #8]
 1334 03f8 9847     		blx	r3
 1335              	.LVL105:
 1336              	.LBE98:
 1337              	.LBE97:
1040:tmk_core/protocol/arm_atsam/usb/udc.c ****             return true;
 1338              		.loc 1 1040 0
 1339 03fa 0028     		cmp	r0, #0
 1340 03fc 7FF47DAE 		bne	.L184
 1341 0400 37E6     		b	.L89
 1342              	.L190:
 1343 0402 00BF     		.align	2
 1344              	.L189:
 1345 0404 00000000 		.word	udc_config
 1346 0408 00000000 		.word	.LANCHOR0
 1347              		.cfi_endproc
 1348              	.LFE42:
 1350              		.global	bootloader_serial_number
 1351              		.global	usb_device_serial_name_size
 1352              		.data
 1353              		.align	2
 1354              		.set	.LANCHOR1,. + 0
 1357              	udc_string_product_name:
 1358 0000 414C5420 		.ascii	"ALT Keyboard\000"
 1358      4B657962 
 1358      6F617264 
 1358      00
 1361              	udc_string_manufacturer_name:
 1362 000d 4D617373 		.ascii	"Massdrop Inc.\000"
 1362      64726F70 
 1362      20496E63 
 1362      2E00
 1363 001b 00       		.space	1
 1366              	udc_string_desc_languageid:
 1367 001c 04       		.byte	4
 1368 001d 03       		.byte	3
 1369 001e 0904     		.short	1033
 1372              	udc_string_desc:
 1373 0020 00       		.space	1
 1374 0021 03       		.byte	3
 1375 0022 00000000 		.space	40
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1375      00000000 
 1376              		.bss
 1377              		.align	2
 1378              		.set	.LANCHOR0,. + 0
 1381              	udc_num_configuration:
 1382 0000 00       		.space	1
 1383 0001 000000   		.space	3
 1386              	udc_ptr_conf:
 1387 0004 00000000 		.space	4
 1390              	udc_ptr_iface:
 1391 0008 00000000 		.space	4
 1394              	udc_device_status:
 1395 000c 0000     		.space	2
 1398              	bootloader_serial_number:
 1399 000e 00000000 		.space	21
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1402              	usb_device_serial_name_size:
 1403 0023 00       		.space	1
 1406              	udc_iface_setting:
 1407 0024 00       		.space	1
 1408 0025 00       		.space	1
 1411              	udc_ep_status.7524:
 1412 0026 0000     		.space	2
 1413              		.section	.rodata.str1.1,"aMS",%progbits,1
 1414              	.LC0:
 1415 0000 556E6176 		.ascii	"Unavailable\000"
 1415      61696C61 
 1415      626C6500 
 1416              		.text
 1417              	.Letext0:
 1418              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1419              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1420              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1421              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1422              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1423              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1424              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 1425              		.file 9 "tmk_core/protocol/arm_atsam/usb/compiler.h"
 1426              		.file 10 "tmk_core/protocol/arm_atsam/usb/usb_protocol.h"
 1427              		.file 11 "tmk_core/protocol/arm_atsam/usb/udi_device_conf.h"
 1428              		.file 12 "tmk_core/protocol/arm_atsam/usb/udi.h"
 1429              		.file 13 "tmk_core/protocol/arm_atsam/usb/udc_desc.h"
 1430              		.file 14 "tmk_core/protocol/arm_atsam/usb/udi_hid_kbd.h"
 1431              		.file 15 "tmk_core/protocol/arm_atsam/usb/usb_main.h"
 1432              		.file 16 "tmk_core/protocol/arm_atsam/usb/udd.h"
 1433              		.file 17 "tmk_core/protocol/arm_atsam/md_bootloader.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 udc.c
/var/tmp//ccuhsfd7.s:18     .text.udc_update_iface_desc:0000000000000000 $t
/var/tmp//ccuhsfd7.s:24     .text.udc_update_iface_desc:0000000000000000 udc_update_iface_desc
/var/tmp//ccuhsfd7.s:108    .text.udc_update_iface_desc:0000000000000048 $d
/var/tmp//ccuhsfd7.s:113    .text.udc_valid_address:0000000000000000 $t
/var/tmp//ccuhsfd7.s:119    .text.udc_valid_address:0000000000000000 udc_valid_address
/var/tmp//ccuhsfd7.s:135    .text.udc_valid_address:000000000000000c $d
/var/tmp//ccuhsfd7.s:140    .text.udc_next_desc_in_iface.constprop.0:0000000000000000 $t
/var/tmp//ccuhsfd7.s:146    .text.udc_next_desc_in_iface.constprop.0:0000000000000000 udc_next_desc_in_iface.constprop.0
/var/tmp//ccuhsfd7.s:193    .text.udc_next_desc_in_iface.constprop.0:0000000000000024 $d
/var/tmp//ccuhsfd7.s:198    .text.udc_iface_enable:0000000000000000 $t
/var/tmp//ccuhsfd7.s:204    .text.udc_iface_enable:0000000000000000 udc_iface_enable
/var/tmp//ccuhsfd7.s:269    .text.udc_iface_enable:000000000000003c $d
/var/tmp//ccuhsfd7.s:274    .text.udc_iface_disable:0000000000000000 $t
/var/tmp//ccuhsfd7.s:280    .text.udc_iface_disable:0000000000000000 udc_iface_disable
/var/tmp//ccuhsfd7.s:357    .text.udc_iface_disable:0000000000000048 $d
/var/tmp//ccuhsfd7.s:362    .text.udc_get_interface_desc:0000000000000000 $t
/var/tmp//ccuhsfd7.s:369    .text.udc_get_interface_desc:0000000000000000 udc_get_interface_desc
/var/tmp//ccuhsfd7.s:383    .text.udc_get_interface_desc:0000000000000008 $d
/var/tmp//ccuhsfd7.s:388    .text.udc_start:0000000000000000 $t
/var/tmp//ccuhsfd7.s:395    .text.udc_start:0000000000000000 udc_start
/var/tmp//ccuhsfd7.s:409    .text.udc_reset:0000000000000000 $t
/var/tmp//ccuhsfd7.s:416    .text.udc_reset:0000000000000000 udc_reset
/var/tmp//ccuhsfd7.s:475    .text.udc_reset:0000000000000038 $d
/var/tmp//ccuhsfd7.s:480    .text.udc_stop:0000000000000000 $t
/var/tmp//ccuhsfd7.s:487    .text.udc_stop:0000000000000000 udc_stop
/var/tmp//ccuhsfd7.s:512    .text.udc_sof_notify:0000000000000000 $t
/var/tmp//ccuhsfd7.s:519    .text.udc_sof_notify:0000000000000000 udc_sof_notify
/var/tmp//ccuhsfd7.s:567    .text.udc_sof_notify:000000000000002c $d
/var/tmp//ccuhsfd7.s:572    .text.udc_process_setup:0000000000000000 $t
/var/tmp//ccuhsfd7.s:579    .text.udc_process_setup:0000000000000000 udc_process_setup
/var/tmp//ccuhsfd7.s:813    .text.udc_process_setup:0000000000000108 $d
/var/tmp//ccuhsfd7.s:817    .text.udc_process_setup:000000000000010c $t
/var/tmp//ccuhsfd7.s:1057   .text.udc_process_setup:0000000000000238 $d
/var/tmp//ccuhsfd7.s:1066   .text.udc_process_setup:000000000000025c $t
/var/tmp//ccuhsfd7.s:1125   .text.udc_process_setup:00000000000002ac $d
/var/tmp//ccuhsfd7.s:1143   .text.udc_process_setup:00000000000002dc $t
/var/tmp//ccuhsfd7.s:1345   .text.udc_process_setup:0000000000000404 $d
/var/tmp//ccuhsfd7.s:1398   .bss:000000000000000e bootloader_serial_number
/var/tmp//ccuhsfd7.s:1402   .bss:0000000000000023 usb_device_serial_name_size
/var/tmp//ccuhsfd7.s:1353   .data:0000000000000000 $d
/var/tmp//ccuhsfd7.s:1357   .data:0000000000000000 udc_string_product_name
/var/tmp//ccuhsfd7.s:1361   .data:000000000000000d udc_string_manufacturer_name
/var/tmp//ccuhsfd7.s:1366   .data:000000000000001c udc_string_desc_languageid
/var/tmp//ccuhsfd7.s:1372   .data:0000000000000020 udc_string_desc
/var/tmp//ccuhsfd7.s:1377   .bss:0000000000000000 $d
/var/tmp//ccuhsfd7.s:1381   .bss:0000000000000000 udc_num_configuration
/var/tmp//ccuhsfd7.s:1386   .bss:0000000000000004 udc_ptr_conf
/var/tmp//ccuhsfd7.s:1390   .bss:0000000000000008 udc_ptr_iface
/var/tmp//ccuhsfd7.s:1394   .bss:000000000000000c udc_device_status
/var/tmp//ccuhsfd7.s:1406   .bss:0000000000000024 udc_iface_setting
/var/tmp//ccuhsfd7.s:1411   .bss:0000000000000026 udc_ep_status.7524

UNDEFINED SYMBOLS
udd_set_address
udd_g_ctrlreq
udd_ep_alloc
udd_ep_free
udd_enable
main_remotewakeup_disable
udd_disable
udd_set_setup_payload
udd_ep_is_halted
main_remotewakeup_enable
udc_config
_srom
udd_getaddress
udd_ep_abort
udd_ep_set_halt
udd_ep_clear_halt
