   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usb_util.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.digit,"ax",%progbits
  18              		.align	1
  19              		.global	digit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	digit:
  26              	.LFB123:
  27              		.file 1 "tmk_core/protocol/arm_atsam/usb/usb_util.c"
   1:tmk_core/protocol/arm_atsam/usb/usb_util.c **** #include "samd51j18a.h"
   2:tmk_core/protocol/arm_atsam/usb/usb_util.c **** #include "string.h"
   3:tmk_core/protocol/arm_atsam/usb/usb_util.c **** #include "usb_util.h"
   4:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
   5:tmk_core/protocol/arm_atsam/usb/usb_util.c **** char digit(int d, int radix) {
  28              		.loc 1 5 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 C3B2     		uxtb	r3, r0
   6:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     if (d < 10) {
  35              		.loc 1 6 0
  36 0002 0928     		cmp	r0, #9
   7:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         return d + '0';
  37              		.loc 1 7 0
  38 0004 D4BF     		ite	le
  39 0006 03F13000 		addle	r0, r3, #48
  40              	.LVL1:
   8:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     } else {
   9:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         return d - 10 + 'A';
  41              		.loc 1 9 0
  42 000a 03F13700 		addgt	r0, r3, #55
  43 000e C0B2     		uxtb	r0, r0
  10:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     }
  11:tmk_core/protocol/arm_atsam/usb/usb_util.c **** }
  44              		.loc 1 11 0
  45 0010 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE123:
  49              		.global	__aeabi_ldivmod
  50              		.section	.text.UTIL_ltoa_radix,"ax",%progbits
  51              		.align	1
  52              		.global	UTIL_ltoa_radix
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu fpv4-sp-d16
  58              	UTIL_ltoa_radix:
  59              	.LFB124:
  12:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  13:tmk_core/protocol/arm_atsam/usb/usb_util.c **** int UTIL_ltoa_radix(int64_t value, char *dest, int radix) {
  60              		.loc 1 13 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 32
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL2:
  65 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  66              		.cfi_def_cfa_offset 36
  67              		.cfi_offset 4, -36
  68              		.cfi_offset 5, -32
  69              		.cfi_offset 6, -28
  70              		.cfi_offset 7, -24
  71              		.cfi_offset 8, -20
  72              		.cfi_offset 9, -16
  73              		.cfi_offset 10, -12
  74              		.cfi_offset 11, -8
  75              		.cfi_offset 14, -4
  76 0004 89B0     		sub	sp, sp, #36
  77              		.cfi_def_cfa_offset 72
  78              		.loc 1 13 0
  79 0006 0646     		mov	r6, r0
  80 0008 0F46     		mov	r7, r1
  81              	.LVL3:
  82 000a 9346     		mov	fp, r2
  14:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     int64_t original = value;  // save original value
  15:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     char    buf[25]  = "";
  83              		.loc 1 15 0
  84 000c 0021     		movs	r1, #0
  85 000e 1522     		movs	r2, #21
  86              	.LVL4:
  87 0010 02A8     		add	r0, sp, #8
  88              	.LVL5:
  13:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     int64_t original = value;  // save original value
  89              		.loc 1 13 0
  90 0012 9846     		mov	r8, r3
  91              		.loc 1 15 0
  92 0014 0191     		str	r1, [sp, #4]
  93 0016 FFF7FEFF 		bl	memset
  94              	.LVL6:
  95 001a 002E     		cmp	r6, #0
  96 001c 77F10001 		sbcs	r1, r7, #0
  97 0020 3246     		mov	r2, r6
  98 0022 3B46     		mov	r3, r7
  99 0024 02DA     		bge	.L6
 100 0026 7242     		rsbs	r2, r6, #0
 101 0028 67EB4703 		sbc	r3, r7, r7, lsl #1
 102              	.L6:
 103 002c 9646     		mov	lr, r2
 104 002e 9C46     		mov	ip, r3
 105 0030 1825     		movs	r5, #24
  16:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     int     c        = sizeof(buf) - 1;
  17:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     int     last     = c;
  18:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     int     d;
  19:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     int     size;
  20:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  21:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     if (value < 0)  // if it's negative, take the absolute value
  22:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         value = -value;
  23:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  24:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     do  // write least significant digit of value that's left
  25:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     {
  26:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         d        = (value % radix);
 106              		.loc 1 26 0
 107 0032 4FEAE879 		asr	r9, r8, #31
  27:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         buf[--c] = digit(d, radix);
 108              		.loc 1 27 0
 109 0036 0DF1040A 		add	r10, sp, #4
 110              	.LVL7:
 111              	.L9:
 112 003a 7046     		mov	r0, lr
 113 003c 6146     		mov	r1, ip
 114 003e 4246     		mov	r2, r8
 115 0040 4B46     		mov	r3, r9
 116 0042 FFF7FEFF 		bl	__aeabi_ldivmod
 117              	.LVL8:
 118 0046 D3B2     		uxtb	r3, r2
 119              	.LBB4:
 120              	.LBB5:
   6:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         return d + '0';
 121              		.loc 1 6 0 discriminator 1
 122 0048 092A     		cmp	r2, #9
   7:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     } else {
 123              		.loc 1 7 0 discriminator 1
 124 004a D4BF     		ite	le
 125 004c 3033     		addle	r3, r3, #48
   9:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     }
 126              		.loc 1 9 0 discriminator 1
 127 004e 3733     		addgt	r3, r3, #55
 128              	.LBE5:
 129              	.LBE4:
 130              		.loc 1 27 0 discriminator 1
 131 0050 6C1E     		subs	r4, r5, #1
 132              	.LVL9:
 133              	.LBB7:
 134              	.LBB6:
   9:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     }
 135              		.loc 1 9 0 discriminator 1
 136 0052 DBB2     		uxtb	r3, r3
 137              	.LVL10:
 138              	.LBE6:
 139              	.LBE7:
 140              		.loc 1 27 0 discriminator 1
 141 0054 04F80A30 		strb	r3, [r4, r10]
  28:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         value /= radix;
  29:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     } while (value);
 142              		.loc 1 29 0 discriminator 1
 143 0058 50EA0103 		orrs	r3, r0, r1
  28:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         value /= radix;
 144              		.loc 1 28 0 discriminator 1
 145 005c 8646     		mov	lr, r0
 146 005e 8C46     		mov	ip, r1
 147              	.LVL11:
 148              		.loc 1 29 0 discriminator 1
 149 0060 15D1     		bne	.L11
  30:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  31:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     if (original < 0) buf[--c] = '-';
 150              		.loc 1 31 0
 151 0062 002E     		cmp	r6, #0
 152 0064 77F10003 		sbcs	r3, r7, #0
 153 0068 05DA     		bge	.L10
 154              		.loc 1 31 0 is_stmt 0 discriminator 1
 155 006a AC1E     		subs	r4, r5, #2
 156              	.LVL12:
 157 006c 08AB     		add	r3, sp, #32
 158 006e 2344     		add	r3, r3, r4
 159 0070 2D22     		movs	r2, #45
 160              	.LVL13:
 161 0072 03F81C2C 		strb	r2, [r3, #-28]
 162              	.L10:
 163              	.LVL14:
  32:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  33:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     size = last - c + 1;  // includes null at end
  34:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     memcpy(dest, &buf[c], last - c + 1);
 164              		.loc 1 34 0 is_stmt 1
 165 0076 C4F11902 		rsb	r2, r4, #25
 166              	.LVL15:
 167 007a 0AEB0401 		add	r1, r10, r4
 168 007e 5846     		mov	r0, fp
 169              	.LVL16:
 170 0080 FFF7FEFF 		bl	memcpy
 171              	.LVL17:
  35:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  36:tmk_core/protocol/arm_atsam/usb/usb_util.c ****     return (size - 1);  // without null termination
  37:tmk_core/protocol/arm_atsam/usb/usb_util.c **** }
 172              		.loc 1 37 0
 173 0084 C4F11800 		rsb	r0, r4, #24
 174 0088 09B0     		add	sp, sp, #36
 175              		.cfi_remember_state
 176              		.cfi_def_cfa_offset 36
 177              		@ sp needed
 178 008a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 179              	.LVL18:
 180              	.L11:
 181              		.cfi_restore_state
  27:tmk_core/protocol/arm_atsam/usb/usb_util.c ****         value /= radix;
 182              		.loc 1 27 0
 183 008e 2546     		mov	r5, r4
 184 0090 D3E7     		b	.L9
 185              		.cfi_endproc
 186              	.LFE124:
 188              		.section	.text.UTIL_ltoa,"ax",%progbits
 189              		.align	1
 190              		.global	UTIL_ltoa
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	UTIL_ltoa:
 197              	.LFB125:
  38:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  39:tmk_core/protocol/arm_atsam/usb/usb_util.c **** int UTIL_ltoa(int64_t value, char *dest) { return UTIL_ltoa_radix(value, dest, 10); }
 198              		.loc 1 39 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              	.LVL19:
 204              		.loc 1 39 0
 205 0000 0A23     		movs	r3, #10
 206 0002 FFF7FEBF 		b	UTIL_ltoa_radix
 207              	.LVL20:
 208              		.cfi_endproc
 209              	.LFE125:
 211              		.section	.text.UTIL_itoa,"ax",%progbits
 212              		.align	1
 213              		.global	UTIL_itoa
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	UTIL_itoa:
 220              	.LFB126:
  40:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  41:tmk_core/protocol/arm_atsam/usb/usb_util.c **** int UTIL_itoa(int value, char *dest) { return UTIL_ltoa_radix((int64_t)value, dest, 10); }
 221              		.loc 1 41 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL21:
 227              		.loc 1 41 0
 228 0000 0A46     		mov	r2, r1
 229 0002 0A23     		movs	r3, #10
 230 0004 C117     		asrs	r1, r0, #31
 231              	.LVL22:
 232 0006 FFF7FEBF 		b	UTIL_ltoa_radix
 233              	.LVL23:
 234              		.cfi_endproc
 235              	.LFE126:
 237              		.section	.text.UTIL_utoa,"ax",%progbits
 238              		.align	1
 239              		.global	UTIL_utoa
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	UTIL_utoa:
 246              	.LFB127:
  42:tmk_core/protocol/arm_atsam/usb/usb_util.c **** 
  43:tmk_core/protocol/arm_atsam/usb/usb_util.c **** int UTIL_utoa(uint32_t value, char *dest) { return UTIL_ltoa_radix((int64_t)value, dest, 10); }
 247              		.loc 1 43 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252              	.LVL24:
 253              		.loc 1 43 0
 254 0000 0A46     		mov	r2, r1
 255 0002 0A23     		movs	r3, #10
 256 0004 0021     		movs	r1, #0
 257              	.LVL25:
 258 0006 FFF7FEBF 		b	UTIL_ltoa_radix
 259              	.LVL26:
 260              		.cfi_endproc
 261              	.LFE127:
 263              		.text
 264              	.Letext0:
 265              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 266              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 267              		.file 4 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/core_cm4.h"
 268              		.file 5 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/system_samd51.h"
 269              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 270              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 271              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 272              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 273              		.file 10 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_util.c
/var/tmp//ccdsNuN8.s:18     .text.digit:0000000000000000 $t
/var/tmp//ccdsNuN8.s:25     .text.digit:0000000000000000 digit
/var/tmp//ccdsNuN8.s:51     .text.UTIL_ltoa_radix:0000000000000000 $t
/var/tmp//ccdsNuN8.s:58     .text.UTIL_ltoa_radix:0000000000000000 UTIL_ltoa_radix
/var/tmp//ccdsNuN8.s:189    .text.UTIL_ltoa:0000000000000000 $t
/var/tmp//ccdsNuN8.s:196    .text.UTIL_ltoa:0000000000000000 UTIL_ltoa
/var/tmp//ccdsNuN8.s:212    .text.UTIL_itoa:0000000000000000 $t
/var/tmp//ccdsNuN8.s:219    .text.UTIL_itoa:0000000000000000 UTIL_itoa
/var/tmp//ccdsNuN8.s:238    .text.UTIL_utoa:0000000000000000 $t
/var/tmp//ccdsNuN8.s:245    .text.UTIL_utoa:0000000000000000 UTIL_utoa

UNDEFINED SYMBOLS
__aeabi_ldivmod
memset
memcpy
