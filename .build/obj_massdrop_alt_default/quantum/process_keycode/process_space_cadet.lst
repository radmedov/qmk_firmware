   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"process_space_cadet.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.perform_space_cadet,"ax",%progbits
  18              		.align	1
  19              		.global	perform_space_cadet
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	perform_space_cadet:
  26              	.LFB8:
  27              		.file 1 "quantum/process_keycode/process_space_cadet.c"
   1:quantum/process_keycode/process_space_cadet.c **** /* Copyright 2019 Jack Humbert
   2:quantum/process_keycode/process_space_cadet.c ****  *
   3:quantum/process_keycode/process_space_cadet.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_space_cadet.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_space_cadet.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_space_cadet.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_space_cadet.c ****  *
   8:quantum/process_keycode/process_space_cadet.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_space_cadet.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_space_cadet.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_space_cadet.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_space_cadet.c ****  *
  13:quantum/process_keycode/process_space_cadet.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_space_cadet.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_space_cadet.c ****  */
  16:quantum/process_keycode/process_space_cadet.c **** #include "process_space_cadet.h"
  17:quantum/process_keycode/process_space_cadet.c **** 
  18:quantum/process_keycode/process_space_cadet.c **** #ifndef TAPPING_TERM
  19:quantum/process_keycode/process_space_cadet.c **** #    define TAPPING_TERM 200
  20:quantum/process_keycode/process_space_cadet.c **** #endif
  21:quantum/process_keycode/process_space_cadet.c **** 
  22:quantum/process_keycode/process_space_cadet.c **** // ********** OBSOLETE DEFINES, STOP USING! (pls?) **********
  23:quantum/process_keycode/process_space_cadet.c **** // Shift / paren setup
  24:quantum/process_keycode/process_space_cadet.c **** #ifndef LSPO_KEY
  25:quantum/process_keycode/process_space_cadet.c **** #    define LSPO_KEY KC_9
  26:quantum/process_keycode/process_space_cadet.c **** #endif
  27:quantum/process_keycode/process_space_cadet.c **** #ifndef RSPC_KEY
  28:quantum/process_keycode/process_space_cadet.c **** #    define RSPC_KEY KC_0
  29:quantum/process_keycode/process_space_cadet.c **** #endif
  30:quantum/process_keycode/process_space_cadet.c **** 
  31:quantum/process_keycode/process_space_cadet.c **** // Shift / Enter setup
  32:quantum/process_keycode/process_space_cadet.c **** #ifndef SFTENT_KEY
  33:quantum/process_keycode/process_space_cadet.c **** #    define SFTENT_KEY KC_ENT
  34:quantum/process_keycode/process_space_cadet.c **** #endif
  35:quantum/process_keycode/process_space_cadet.c **** 
  36:quantum/process_keycode/process_space_cadet.c **** #ifdef DISABLE_SPACE_CADET_MODIFIER
  37:quantum/process_keycode/process_space_cadet.c **** #    ifndef LSPO_MOD
  38:quantum/process_keycode/process_space_cadet.c **** #        define LSPO_MOD KC_TRNS
  39:quantum/process_keycode/process_space_cadet.c **** #    endif
  40:quantum/process_keycode/process_space_cadet.c **** #    ifndef RSPC_MOD
  41:quantum/process_keycode/process_space_cadet.c **** #        define RSPC_MOD KC_TRNS
  42:quantum/process_keycode/process_space_cadet.c **** #    endif
  43:quantum/process_keycode/process_space_cadet.c **** #else
  44:quantum/process_keycode/process_space_cadet.c **** #    ifndef LSPO_MOD
  45:quantum/process_keycode/process_space_cadet.c **** #        define LSPO_MOD KC_LSFT
  46:quantum/process_keycode/process_space_cadet.c **** #    endif
  47:quantum/process_keycode/process_space_cadet.c **** #    ifndef RSPC_MOD
  48:quantum/process_keycode/process_space_cadet.c **** #        define RSPC_MOD KC_RSFT
  49:quantum/process_keycode/process_space_cadet.c **** #    endif
  50:quantum/process_keycode/process_space_cadet.c **** #endif
  51:quantum/process_keycode/process_space_cadet.c **** // **********************************************************
  52:quantum/process_keycode/process_space_cadet.c **** 
  53:quantum/process_keycode/process_space_cadet.c **** // Shift / paren setup
  54:quantum/process_keycode/process_space_cadet.c **** #ifndef LSPO_KEYS
  55:quantum/process_keycode/process_space_cadet.c **** #    define LSPO_KEYS KC_LSFT, LSPO_MOD, LSPO_KEY
  56:quantum/process_keycode/process_space_cadet.c **** #endif
  57:quantum/process_keycode/process_space_cadet.c **** #ifndef RSPC_KEYS
  58:quantum/process_keycode/process_space_cadet.c **** #    define RSPC_KEYS KC_RSFT, RSPC_MOD, RSPC_KEY
  59:quantum/process_keycode/process_space_cadet.c **** #endif
  60:quantum/process_keycode/process_space_cadet.c **** 
  61:quantum/process_keycode/process_space_cadet.c **** // Control / paren setup
  62:quantum/process_keycode/process_space_cadet.c **** #ifndef LCPO_KEYS
  63:quantum/process_keycode/process_space_cadet.c **** #    define LCPO_KEYS KC_LCTL, KC_LSFT, KC_9
  64:quantum/process_keycode/process_space_cadet.c **** #endif
  65:quantum/process_keycode/process_space_cadet.c **** #ifndef RCPC_KEYS
  66:quantum/process_keycode/process_space_cadet.c **** #    define RCPC_KEYS KC_RCTL, KC_RSFT, KC_0
  67:quantum/process_keycode/process_space_cadet.c **** #endif
  68:quantum/process_keycode/process_space_cadet.c **** 
  69:quantum/process_keycode/process_space_cadet.c **** // Alt / paren setup
  70:quantum/process_keycode/process_space_cadet.c **** #ifndef LAPO_KEYS
  71:quantum/process_keycode/process_space_cadet.c **** #    define LAPO_KEYS KC_LALT, KC_LSFT, KC_9
  72:quantum/process_keycode/process_space_cadet.c **** #endif
  73:quantum/process_keycode/process_space_cadet.c **** #ifndef RAPC_KEYS
  74:quantum/process_keycode/process_space_cadet.c **** #    define RAPC_KEYS KC_RALT, KC_RSFT, KC_0
  75:quantum/process_keycode/process_space_cadet.c **** #endif
  76:quantum/process_keycode/process_space_cadet.c **** 
  77:quantum/process_keycode/process_space_cadet.c **** // Shift / Enter setup
  78:quantum/process_keycode/process_space_cadet.c **** #ifndef SFTENT_KEYS
  79:quantum/process_keycode/process_space_cadet.c **** #    define SFTENT_KEYS KC_RSFT, KC_TRNS, SFTENT_KEY
  80:quantum/process_keycode/process_space_cadet.c **** #endif
  81:quantum/process_keycode/process_space_cadet.c **** 
  82:quantum/process_keycode/process_space_cadet.c **** static uint8_t  sc_last  = 0;
  83:quantum/process_keycode/process_space_cadet.c **** static uint16_t sc_timer = 0;
  84:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
  85:quantum/process_keycode/process_space_cadet.c **** static uint8_t sc_mods = 0;
  86:quantum/process_keycode/process_space_cadet.c **** #endif
  87:quantum/process_keycode/process_space_cadet.c **** 
  88:quantum/process_keycode/process_space_cadet.c **** void perform_space_cadet(keyrecord_t *record, uint8_t holdMod, uint8_t tapMod, uint8_t keycode) {
  28              		.loc 1 88 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 88 0
  42 0004 9846     		mov	r8, r3
  89:quantum/process_keycode/process_space_cadet.c ****     if (record->event.pressed) {
  43              		.loc 1 89 0
  44 0006 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  45              	.LVL1:
  46 0008 2B4F     		ldr	r7, .L11
  88:quantum/process_keycode/process_space_cadet.c ****     if (record->event.pressed) {
  47              		.loc 1 88 0
  48 000a 0C46     		mov	r4, r1
  49 000c 1546     		mov	r5, r2
  50              		.loc 1 89 0
  51 000e 8BB1     		cbz	r3, .L2
  90:quantum/process_keycode/process_space_cadet.c ****         sc_last  = holdMod;
  52              		.loc 1 90 0
  53 0010 3970     		strb	r1, [r7]
  91:quantum/process_keycode/process_space_cadet.c ****         sc_timer = timer_read();
  54              		.loc 1 91 0
  55 0012 FFF7FEFF 		bl	timer_read
  56              	.LVL2:
  92:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
  93:quantum/process_keycode/process_space_cadet.c ****         sc_mods = get_mods();
  94:quantum/process_keycode/process_space_cadet.c **** #endif
  95:quantum/process_keycode/process_space_cadet.c ****         if (IS_MOD(holdMod)) {
  57              		.loc 1 95 0
  58 0016 04F12003 		add	r3, r4, #32
  59 001a DBB2     		uxtb	r3, r3
  60 001c 072B     		cmp	r3, #7
  91:quantum/process_keycode/process_space_cadet.c ****         sc_timer = timer_read();
  61              		.loc 1 91 0
  62 001e 7880     		strh	r0, [r7, #2]	@ movhi
  63              		.loc 1 95 0
  64 0020 48D8     		bhi	.L1
  96:quantum/process_keycode/process_space_cadet.c ****             register_mods(MOD_BIT(holdMod));
  65              		.loc 1 96 0
  66 0022 04F00704 		and	r4, r4, #7
  67 0026 0120     		movs	r0, #1
  68 0028 A040     		lsls	r0, r0, r4
  69 002a C0B2     		uxtb	r0, r0
  97:quantum/process_keycode/process_space_cadet.c ****         }
  98:quantum/process_keycode/process_space_cadet.c ****     } else {
  99:quantum/process_keycode/process_space_cadet.c ****         if (sc_last == holdMod && timer_elapsed(sc_timer) < TAPPING_TERM) {
 100:quantum/process_keycode/process_space_cadet.c ****             if (holdMod != tapMod) {
 101:quantum/process_keycode/process_space_cadet.c ****                 if (IS_MOD(holdMod)) {
 102:quantum/process_keycode/process_space_cadet.c ****                     unregister_mods(MOD_BIT(holdMod));
 103:quantum/process_keycode/process_space_cadet.c ****                 }
 104:quantum/process_keycode/process_space_cadet.c ****                 if (IS_MOD(tapMod)) {
 105:quantum/process_keycode/process_space_cadet.c ****                     register_mods(MOD_BIT(tapMod));
 106:quantum/process_keycode/process_space_cadet.c ****                 }
 107:quantum/process_keycode/process_space_cadet.c ****             }
 108:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
 109:quantum/process_keycode/process_space_cadet.c ****             set_weak_mods(sc_mods);
 110:quantum/process_keycode/process_space_cadet.c **** #endif
 111:quantum/process_keycode/process_space_cadet.c ****             tap_code(keycode);
 112:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
 113:quantum/process_keycode/process_space_cadet.c ****             clear_weak_mods();
 114:quantum/process_keycode/process_space_cadet.c **** #endif
 115:quantum/process_keycode/process_space_cadet.c ****             if (IS_MOD(tapMod)) {
 116:quantum/process_keycode/process_space_cadet.c ****                 unregister_mods(MOD_BIT(tapMod));
 117:quantum/process_keycode/process_space_cadet.c ****             }
 118:quantum/process_keycode/process_space_cadet.c ****         } else {
 119:quantum/process_keycode/process_space_cadet.c ****             if (IS_MOD(holdMod)) {
 120:quantum/process_keycode/process_space_cadet.c ****                 unregister_mods(MOD_BIT(holdMod));
 121:quantum/process_keycode/process_space_cadet.c ****             }
 122:quantum/process_keycode/process_space_cadet.c ****         }
 123:quantum/process_keycode/process_space_cadet.c ****     }
 124:quantum/process_keycode/process_space_cadet.c **** }
  70              		.loc 1 124 0
  71 002c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
  72              		.cfi_remember_state
  73              		.cfi_restore 14
  74              		.cfi_restore 8
  75              		.cfi_restore 7
  76              		.cfi_restore 6
  77              		.cfi_restore 5
  78              		.cfi_restore 4
  79              		.cfi_def_cfa_offset 0
  96:quantum/process_keycode/process_space_cadet.c ****             register_mods(MOD_BIT(holdMod));
  80              		.loc 1 96 0
  81 0030 FFF7FEBF 		b	register_mods
  82              	.LVL3:
  83              	.L2:
  84              		.cfi_restore_state
  99:quantum/process_keycode/process_space_cadet.c ****             if (holdMod != tapMod) {
  85              		.loc 1 99 0
  86 0034 3E78     		ldrb	r6, [r7]	@ zero_extendqisi2
  87 0036 8E42     		cmp	r6, r1
  88 0038 2DD1     		bne	.L5
  99:quantum/process_keycode/process_space_cadet.c ****             if (holdMod != tapMod) {
  89              		.loc 1 99 0 is_stmt 0 discriminator 1
  90 003a 7888     		ldrh	r0, [r7, #2]
  91              	.LVL4:
  92 003c FFF7FEFF 		bl	timer_elapsed
  93              	.LVL5:
  94 0040 C728     		cmp	r0, #199
  95 0042 28D8     		bhi	.L5
 100:quantum/process_keycode/process_space_cadet.c ****                 if (IS_MOD(holdMod)) {
  96              		.loc 1 100 0 is_stmt 1
  97 0044 AE42     		cmp	r6, r5
  98 0046 05F12004 		add	r4, r5, #32
  99 004a 15D0     		beq	.L6
 101:quantum/process_keycode/process_space_cadet.c ****                     unregister_mods(MOD_BIT(holdMod));
 100              		.loc 1 101 0
 101 004c 06F12003 		add	r3, r6, #32
 102 0050 DBB2     		uxtb	r3, r3
 103 0052 072B     		cmp	r3, #7
 104 0054 06D8     		bhi	.L7
 102:quantum/process_keycode/process_space_cadet.c ****                 }
 105              		.loc 1 102 0
 106 0056 06F00706 		and	r6, r6, #7
 107 005a 0120     		movs	r0, #1
 108 005c B040     		lsls	r0, r0, r6
 109 005e C0B2     		uxtb	r0, r0
 110 0060 FFF7FEFF 		bl	unregister_mods
 111              	.LVL6:
 112              	.L7:
 104:quantum/process_keycode/process_space_cadet.c ****                     register_mods(MOD_BIT(tapMod));
 113              		.loc 1 104 0
 114 0064 E3B2     		uxtb	r3, r4
 115 0066 072B     		cmp	r3, #7
 116 0068 1FD8     		bhi	.L8
 105:quantum/process_keycode/process_space_cadet.c ****                 }
 117              		.loc 1 105 0
 118 006a 05F00703 		and	r3, r5, #7
 119 006e 0120     		movs	r0, #1
 120 0070 9840     		lsls	r0, r0, r3
 121 0072 C0B2     		uxtb	r0, r0
 122 0074 FFF7FEFF 		bl	register_mods
 123              	.LVL7:
 124              	.L6:
 111:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
 125              		.loc 1 111 0
 126 0078 4046     		mov	r0, r8
 115:quantum/process_keycode/process_space_cadet.c ****                 unregister_mods(MOD_BIT(tapMod));
 127              		.loc 1 115 0
 128 007a E4B2     		uxtb	r4, r4
 111:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
 129              		.loc 1 111 0
 130 007c FFF7FEFF 		bl	tap_code
 131              	.LVL8:
 115:quantum/process_keycode/process_space_cadet.c ****                 unregister_mods(MOD_BIT(tapMod));
 132              		.loc 1 115 0
 133 0080 072C     		cmp	r4, #7
 134 0082 17D8     		bhi	.L1
 116:quantum/process_keycode/process_space_cadet.c ****             }
 135              		.loc 1 116 0
 136 0084 05F00705 		and	r5, r5, #7
 137 0088 0120     		movs	r0, #1
 138 008a A840     		lsls	r0, r0, r5
 139              	.L10:
 120:quantum/process_keycode/process_space_cadet.c ****             }
 140              		.loc 1 120 0
 141 008c C0B2     		uxtb	r0, r0
 142              		.loc 1 124 0
 143 008e BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 144              		.cfi_remember_state
 145              		.cfi_restore 14
 146              		.cfi_restore 8
 147              		.cfi_restore 7
 148              		.cfi_restore 6
 149              		.cfi_restore 5
 150              		.cfi_restore 4
 151              		.cfi_def_cfa_offset 0
 120:quantum/process_keycode/process_space_cadet.c ****             }
 152              		.loc 1 120 0
 153 0092 FFF7FEBF 		b	unregister_mods
 154              	.LVL9:
 155              	.L5:
 156              		.cfi_restore_state
 119:quantum/process_keycode/process_space_cadet.c ****                 unregister_mods(MOD_BIT(holdMod));
 157              		.loc 1 119 0
 158 0096 04F12003 		add	r3, r4, #32
 159 009a DBB2     		uxtb	r3, r3
 160 009c 072B     		cmp	r3, #7
 161 009e 09D8     		bhi	.L1
 120:quantum/process_keycode/process_space_cadet.c ****             }
 162              		.loc 1 120 0
 163 00a0 04F00704 		and	r4, r4, #7
 164 00a4 0120     		movs	r0, #1
 165 00a6 A040     		lsls	r0, r0, r4
 166 00a8 F0E7     		b	.L10
 167              	.L8:
 111:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
 168              		.loc 1 111 0
 169 00aa 4046     		mov	r0, r8
 170              		.loc 1 124 0
 171 00ac BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 172              		.cfi_remember_state
 173              		.cfi_restore 14
 174              		.cfi_restore 8
 175              		.cfi_restore 7
 176              		.cfi_restore 6
 177              		.cfi_restore 5
 178              		.cfi_restore 4
 179              		.cfi_def_cfa_offset 0
 111:quantum/process_keycode/process_space_cadet.c **** #ifdef SPACE_CADET_MODIFIER_CARRYOVER
 180              		.loc 1 111 0
 181 00b0 FFF7FEBF 		b	tap_code
 182              	.LVL10:
 183              	.L1:
 184              		.cfi_restore_state
 185              		.loc 1 124 0
 186 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 187              	.L12:
 188              		.align	2
 189              	.L11:
 190 00b8 00000000 		.word	.LANCHOR0
 191              		.cfi_endproc
 192              	.LFE8:
 194              		.section	.text.process_space_cadet,"ax",%progbits
 195              		.align	1
 196              		.global	process_space_cadet
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	process_space_cadet:
 203              	.LFB9:
 125:quantum/process_keycode/process_space_cadet.c **** 
 126:quantum/process_keycode/process_space_cadet.c **** bool process_space_cadet(uint16_t keycode, keyrecord_t *record) {
 204              		.loc 1 126 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              	.LVL11:
 209 0000 08B5     		push	{r3, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
 127:quantum/process_keycode/process_space_cadet.c ****     switch (keycode) {
 213              		.loc 1 127 0
 214 0002 45F6F342 		movw	r2, #23795
 126:quantum/process_keycode/process_space_cadet.c ****     switch (keycode) {
 215              		.loc 1 126 0
 216 0006 0346     		mov	r3, r0
 217              		.loc 1 127 0
 218 0008 9342     		cmp	r3, r2
 126:quantum/process_keycode/process_space_cadet.c ****     switch (keycode) {
 219              		.loc 1 126 0
 220 000a 0846     		mov	r0, r1
 221              	.LVL12:
 222              		.loc 1 127 0
 223 000c 26D0     		beq	.L15
 224 000e 12D8     		bhi	.L16
 225 0010 45F6D842 		movw	r2, #23768
 226 0014 9342     		cmp	r3, r2
 227 0016 1DD0     		beq	.L17
 228 0018 45F6D942 		movw	r2, #23769
 229 001c 9342     		cmp	r3, r2
 230 001e 2DD0     		beq	.L18
 231 0020 45F6D742 		movw	r2, #23767
 232 0024 9342     		cmp	r3, r2
 233 0026 0FD1     		bne	.L14
 128:quantum/process_keycode/process_space_cadet.c ****         case KC_LSPO: {
 129:quantum/process_keycode/process_space_cadet.c ****             perform_space_cadet(record, LSPO_KEYS);
 234              		.loc 1 129 0
 235 0028 E122     		movs	r2, #225
 236 002a 2623     		movs	r3, #38
 237 002c 1146     		mov	r1, r2
 238              	.LVL13:
 239              	.L25:
 130:quantum/process_keycode/process_space_cadet.c ****             return false;
 131:quantum/process_keycode/process_space_cadet.c ****         }
 132:quantum/process_keycode/process_space_cadet.c ****         case KC_RSPC: {
 133:quantum/process_keycode/process_space_cadet.c ****             perform_space_cadet(record, RSPC_KEYS);
 134:quantum/process_keycode/process_space_cadet.c ****             return false;
 135:quantum/process_keycode/process_space_cadet.c ****         }
 136:quantum/process_keycode/process_space_cadet.c ****         case KC_LCPO: {
 137:quantum/process_keycode/process_space_cadet.c ****             perform_space_cadet(record, LCPO_KEYS);
 138:quantum/process_keycode/process_space_cadet.c ****             return false;
 139:quantum/process_keycode/process_space_cadet.c ****         }
 140:quantum/process_keycode/process_space_cadet.c ****         case KC_RCPC: {
 141:quantum/process_keycode/process_space_cadet.c ****             perform_space_cadet(record, RCPC_KEYS);
 142:quantum/process_keycode/process_space_cadet.c ****             return false;
 143:quantum/process_keycode/process_space_cadet.c ****         }
 144:quantum/process_keycode/process_space_cadet.c ****         case KC_LAPO: {
 145:quantum/process_keycode/process_space_cadet.c ****             perform_space_cadet(record, LAPO_KEYS);
 146:quantum/process_keycode/process_space_cadet.c ****             return false;
 147:quantum/process_keycode/process_space_cadet.c ****         }
 148:quantum/process_keycode/process_space_cadet.c ****         case KC_RAPC: {
 149:quantum/process_keycode/process_space_cadet.c ****             perform_space_cadet(record, RAPC_KEYS);
 150:quantum/process_keycode/process_space_cadet.c ****             return false;
 151:quantum/process_keycode/process_space_cadet.c ****         }
 152:quantum/process_keycode/process_space_cadet.c ****         case KC_SFTENT: {
 153:quantum/process_keycode/process_space_cadet.c ****             perform_space_cadet(record, SFTENT_KEYS);
 240              		.loc 1 153 0
 241 002e FFF7FEFF 		bl	perform_space_cadet
 242              	.LVL14:
 154:quantum/process_keycode/process_space_cadet.c ****             return false;
 243              		.loc 1 154 0
 244 0032 0020     		movs	r0, #0
 245              	.L23:
 155:quantum/process_keycode/process_space_cadet.c ****         }
 156:quantum/process_keycode/process_space_cadet.c ****         default: {
 157:quantum/process_keycode/process_space_cadet.c ****             if (record->event.pressed) {
 158:quantum/process_keycode/process_space_cadet.c ****                 sc_last = 0;
 159:quantum/process_keycode/process_space_cadet.c ****             }
 160:quantum/process_keycode/process_space_cadet.c ****             break;
 161:quantum/process_keycode/process_space_cadet.c ****         }
 162:quantum/process_keycode/process_space_cadet.c ****     }
 163:quantum/process_keycode/process_space_cadet.c ****     return true;
 164:quantum/process_keycode/process_space_cadet.c **** }
 246              		.loc 1 164 0
 247 0034 08BD     		pop	{r3, pc}
 248              	.LVL15:
 249              	.L16:
 127:quantum/process_keycode/process_space_cadet.c ****         case KC_LSPO: {
 250              		.loc 1 127 0
 251 0036 45F6F542 		movw	r2, #23797
 252 003a 9342     		cmp	r3, r2
 253 003c 16D0     		beq	.L20
 254 003e 11D3     		bcc	.L21
 255 0040 45F6F642 		movw	r2, #23798
 256 0044 9342     		cmp	r3, r2
 257 0046 15D0     		beq	.L22
 258              	.L14:
 157:quantum/process_keycode/process_space_cadet.c ****                 sc_last = 0;
 259              		.loc 1 157 0
 260 0048 8078     		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 261              	.LVL16:
 262 004a D0B1     		cbz	r0, .L24
 158:quantum/process_keycode/process_space_cadet.c ****             }
 263              		.loc 1 158 0
 264 004c 0E4B     		ldr	r3, .L27
 265 004e 0022     		movs	r2, #0
 266 0050 1A70     		strb	r2, [r3]
 267 0052 EFE7     		b	.L23
 268              	.LVL17:
 269              	.L17:
 133:quantum/process_keycode/process_space_cadet.c ****             return false;
 270              		.loc 1 133 0
 271 0054 2723     		movs	r3, #39
 272 0056 E522     		movs	r2, #229
 273              	.L26:
 153:quantum/process_keycode/process_space_cadet.c ****             return false;
 274              		.loc 1 153 0
 275 0058 E521     		movs	r1, #229
 276 005a E8E7     		b	.L25
 277              	.L15:
 137:quantum/process_keycode/process_space_cadet.c ****             return false;
 278              		.loc 1 137 0
 279 005c 2623     		movs	r3, #38
 280 005e E122     		movs	r2, #225
 281 0060 E021     		movs	r1, #224
 282 0062 E4E7     		b	.L25
 283              	.L21:
 141:quantum/process_keycode/process_space_cadet.c ****             return false;
 284              		.loc 1 141 0
 285 0064 2723     		movs	r3, #39
 286 0066 E522     		movs	r2, #229
 287 0068 E421     		movs	r1, #228
 288 006a E0E7     		b	.L25
 289              	.L20:
 145:quantum/process_keycode/process_space_cadet.c ****             return false;
 290              		.loc 1 145 0
 291 006c 2623     		movs	r3, #38
 292 006e E122     		movs	r2, #225
 293 0070 E221     		movs	r1, #226
 294 0072 DCE7     		b	.L25
 295              	.L22:
 149:quantum/process_keycode/process_space_cadet.c ****             return false;
 296              		.loc 1 149 0
 297 0074 2723     		movs	r3, #39
 298 0076 E522     		movs	r2, #229
 299 0078 E621     		movs	r1, #230
 300 007a D8E7     		b	.L25
 301              	.L18:
 153:quantum/process_keycode/process_space_cadet.c ****             return false;
 302              		.loc 1 153 0
 303 007c 2823     		movs	r3, #40
 304 007e 0122     		movs	r2, #1
 305 0080 EAE7     		b	.L26
 306              	.LVL18:
 307              	.L24:
 163:quantum/process_keycode/process_space_cadet.c **** }
 308              		.loc 1 163 0
 309 0082 0120     		movs	r0, #1
 310 0084 D6E7     		b	.L23
 311              	.L28:
 312 0086 00BF     		.align	2
 313              	.L27:
 314 0088 00000000 		.word	.LANCHOR0
 315              		.cfi_endproc
 316              	.LFE9:
 318              		.bss
 319              		.align	1
 320              		.set	.LANCHOR0,. + 0
 323              	sc_last:
 324 0000 00       		.space	1
 325 0001 00       		.space	1
 328              	sc_timer:
 329 0002 0000     		.space	2
 330              		.text
 331              	.Letext0:
 332              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 333              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 334              		.file 4 "tmk_core/protocol/arm_atsam/clks.h"
 335              		.file 5 "tmk_core/common/keyboard.h"
 336              		.file 6 "tmk_core/common/action.h"
 337              		.file 7 "tmk_core/common/report.h"
 338              		.file 8 "tmk_core/common/host.h"
 339              		.file 9 "tmk_core/common/debug.h"
 340              		.file 10 "quantum/keycode_config.h"
 341              		.file 11 "tmk_core/common/keycode.h"
 342              		.file 12 "quantum/quantum_keycodes.h"
 343              		.file 13 "quantum/keymap.h"
 344              		.file 14 "quantum/color.h"
 345              		.file 15 "quantum/rgb_matrix_types.h"
 346              		.file 16 "quantum/rgb_matrix.h"
 347              		.file 17 "tmk_core/common/action_layer.h"
 348              		.file 18 "tmk_core/common/timer.h"
 349              		.file 19 "tmk_core/common/action_util.h"
 350              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 351              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 352              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 353              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 354              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 355              		.file 25 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_space_cadet.c
/var/tmp//ccYwub4R.s:18     .text.perform_space_cadet:0000000000000000 $t
/var/tmp//ccYwub4R.s:25     .text.perform_space_cadet:0000000000000000 perform_space_cadet
/var/tmp//ccYwub4R.s:190    .text.perform_space_cadet:00000000000000b8 $d
/var/tmp//ccYwub4R.s:195    .text.process_space_cadet:0000000000000000 $t
/var/tmp//ccYwub4R.s:202    .text.process_space_cadet:0000000000000000 process_space_cadet
/var/tmp//ccYwub4R.s:314    .text.process_space_cadet:0000000000000088 $d
/var/tmp//ccYwub4R.s:319    .bss:0000000000000000 $d
/var/tmp//ccYwub4R.s:323    .bss:0000000000000000 sc_last
/var/tmp//ccYwub4R.s:328    .bss:0000000000000002 sc_timer

UNDEFINED SYMBOLS
timer_read
register_mods
timer_elapsed
unregister_mods
tap_code
