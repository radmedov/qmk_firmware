   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keymap_common.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.action_get_macro,"ax",%progbits
  18              		.align	1
  19              		.weak	action_get_macro
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	action_get_macro:
  26              	.LFB9:
  27              		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "backlight.h"
  30:quantum/keymap_common.c **** #include "quantum.h"
  31:quantum/keymap_common.c **** 
  32:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  33:quantum/keymap_common.c **** #    include "process_midi.h"
  34:quantum/keymap_common.c **** #endif
  35:quantum/keymap_common.c **** 
  36:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  37:quantum/keymap_common.c **** 
  38:quantum/keymap_common.c **** #include <inttypes.h>
  39:quantum/keymap_common.c **** 
  40:quantum/keymap_common.c **** /* converts key to action */
  41:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  42:quantum/keymap_common.c ****     // 16bit keycodes - important
  43:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  44:quantum/keymap_common.c **** 
  45:quantum/keymap_common.c ****     // keycode remapping
  46:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     action_t action;
  49:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     switch (keycode) {
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  53:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  54:quantum/keymap_common.c ****             break;
  55:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  56:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  57:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  58:quantum/keymap_common.c ****             break;
  59:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  60:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  61:quantum/keymap_common.c ****             break;
  62:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  63:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  64:quantum/keymap_common.c ****             break;
  65:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  66:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  67:quantum/keymap_common.c ****             break;
  68:quantum/keymap_common.c ****         case KC_TRNS:
  69:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  70:quantum/keymap_common.c ****             break;
  71:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  72:quantum/keymap_common.c ****             // Has a modifier
  73:quantum/keymap_common.c ****             // Split it up
  74:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  75:quantum/keymap_common.c ****             break;
  76:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  77:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  78:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  79:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  80:quantum/keymap_common.c ****             break;
  81:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  82:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  83:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  84:quantum/keymap_common.c ****             else
  85:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  86:quantum/keymap_common.c ****             break;
  87:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  88:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  89:quantum/keymap_common.c ****             break;
  90:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
  91:quantum/keymap_common.c ****             // Layer set "GOTO"
  92:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
  93:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  94:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
  95:quantum/keymap_common.c ****             break;
  96:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
  97:quantum/keymap_common.c ****             // Momentary action_layer
  98:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
  99:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 100:quantum/keymap_common.c ****             break;
 101:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 102:quantum/keymap_common.c ****             // Set default action_layer
 103:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 104:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 105:quantum/keymap_common.c ****             break;
 106:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 107:quantum/keymap_common.c ****             // Set toggle
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 109:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 110:quantum/keymap_common.c ****             break;
 111:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 112:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 113:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 114:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 115:quantum/keymap_common.c ****             break;
 116:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 117:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 118:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 119:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 120:quantum/keymap_common.c ****             break;
 121:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 122:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 123:quantum/keymap_common.c ****             break;
 124:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 125:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 126:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 127:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 128:quantum/keymap_common.c ****             break;
 129:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 130:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 131:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 132:quantum/keymap_common.c ****             break;
 133:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 134:quantum/keymap_common.c ****         case BL_ON:
 135:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 136:quantum/keymap_common.c ****             break;
 137:quantum/keymap_common.c ****         case BL_OFF:
 138:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 139:quantum/keymap_common.c ****             break;
 140:quantum/keymap_common.c ****         case BL_DEC:
 141:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 142:quantum/keymap_common.c ****             break;
 143:quantum/keymap_common.c ****         case BL_INC:
 144:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 145:quantum/keymap_common.c ****             break;
 146:quantum/keymap_common.c ****         case BL_TOGG:
 147:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c ****         case BL_STEP:
 150:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 151:quantum/keymap_common.c ****             break;
 152:quantum/keymap_common.c **** #endif
 153:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 154:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 155:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 156:quantum/keymap_common.c ****             break;
 157:quantum/keymap_common.c **** #endif
 158:quantum/keymap_common.c **** 
 159:quantum/keymap_common.c ****         default:
 160:quantum/keymap_common.c ****             action.code = ACTION_NO;
 161:quantum/keymap_common.c ****             break;
 162:quantum/keymap_common.c ****     }
 163:quantum/keymap_common.c ****     return action;
 164:quantum/keymap_common.c **** }
 165:quantum/keymap_common.c **** 
 166:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 167:quantum/keymap_common.c **** 
 168:quantum/keymap_common.c **** };
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** /* Macro */
 171:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  28              		.loc 1 171 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              		.loc 1 171 0
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE9:
  41              		.section	.text.action_function,"ax",%progbits
  42              		.align	1
  43              		.weak	action_function
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	action_function:
  50              	.LFB10:
 172:quantum/keymap_common.c **** 
 173:quantum/keymap_common.c **** /* Function */
 174:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  51              		.loc 1 174 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.LVL2:
  57              		.loc 1 174 0
  58 0000 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE10:
  62              		.section	.text.keymap_key_to_keycode,"ax",%progbits
  63              		.align	1
  64              		.weak	keymap_key_to_keycode
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	keymap_key_to_keycode:
  71              	.LFB11:
 175:quantum/keymap_common.c **** 
 176:quantum/keymap_common.c **** // translates key to keycode
 177:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  72              		.loc 1 177 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.LVL3:
 178:quantum/keymap_common.c ****     // Read entire word (16bits)
 179:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  78              		.loc 1 179 0
  79 0000 C1F30723 		ubfx	r3, r1, #8, #8
  80 0004 C3EB0312 		rsb	r2, r3, r3, lsl #4
  81 0008 4B23     		movs	r3, #75
  82 000a 03FB0020 		mla	r0, r3, r0, r2
  83              	.LVL4:
  84 000e 50FA81F0 		uxtab	r0, r0, r1
 180:quantum/keymap_common.c **** }
  85              		.loc 1 180 0
  86 0012 034B     		ldr	r3, .L4
  87 0014 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 177:quantum/keymap_common.c ****     // Read entire word (16bits)
  88              		.loc 1 177 0
  89 0018 82B0     		sub	sp, sp, #8
  90              		.cfi_def_cfa_offset 8
  91              		.loc 1 180 0
  92 001a 02B0     		add	sp, sp, #8
  93              		.cfi_def_cfa_offset 0
  94              		@ sp needed
  95 001c 7047     		bx	lr
  96              	.L5:
  97 001e 00BF     		.align	2
  98              	.L4:
  99 0020 00000000 		.word	keymaps
 100              		.cfi_endproc
 101              	.LFE11:
 103              		.section	.text.keymap_function_id_to_action,"ax",%progbits
 104              		.align	1
 105              		.weak	keymap_function_id_to_action
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv4-sp-d16
 111              	keymap_function_id_to_action:
 112              	.LFB12:
 181:quantum/keymap_common.c **** 
 182:quantum/keymap_common.c **** // translates function id to action
 183:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 113              		.loc 1 183 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL5:
 184:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 185:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 186:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 187:quantum/keymap_common.c **** // is comparing against the wrong array
 188:quantum/keymap_common.c **** #pragma GCC diagnostic push
 189:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 190:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 191:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 192:quantum/keymap_common.c **** }
 119              		.loc 1 192 0
 120 0000 014B     		ldr	r3, .L7
 121 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 122              	.LVL6:
 123 0006 7047     		bx	lr
 124              	.L8:
 125              		.align	2
 126              	.L7:
 127 0008 00000000 		.word	fn_actions
 128              		.cfi_endproc
 129              	.LFE12:
 131              		.section	.text.action_for_key,"ax",%progbits
 132              		.align	1
 133              		.global	action_for_key
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	action_for_key:
 140              	.LFB8:
  41:quantum/keymap_common.c ****     // 16bit keycodes - important
 141              		.loc 1 41 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL7:
 146 0000 13B5     		push	{r0, r1, r4, lr}
 147              		.cfi_def_cfa_offset 16
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
  41:quantum/keymap_common.c ****     // 16bit keycodes - important
 150              		.loc 1 41 0
 151 0002 ADF80410 		strh	r1, [sp, #4]	@ movhi
  43:quantum/keymap_common.c **** 
 152              		.loc 1 43 0
 153 0006 0199     		ldr	r1, [sp, #4]
 154 0008 FFF7FEFF 		bl	keymap_key_to_keycode
 155              	.LVL8:
  46:quantum/keymap_common.c **** 
 156              		.loc 1 46 0
 157 000c FFF7FEFF 		bl	keycode_config
 158              	.LVL9:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 159              		.loc 1 51 0
 160 0010 B0F5A04F 		cmp	r0, #20480
  46:quantum/keymap_common.c **** 
 161              		.loc 1 46 0
 162 0014 0446     		mov	r4, r0
 163              	.LVL10:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 164              		.loc 1 51 0
 165 0016 2FD2     		bcs	.L11
 166 0018 B0F5804F 		cmp	r0, #16384
 167 001c 80F0D480 		bcs	.L12
 168 0020 E728     		cmp	r0, #231
 169 0022 16D8     		bhi	.L13
 170 0024 E028     		cmp	r0, #224
 171 0026 7BD2     		bcs	.L14
 172 0028 A728     		cmp	r0, #167
 173 002a 08D8     		bhi	.L15
 174 002c A528     		cmp	r0, #165
 175 002e 6DD2     		bcs	.L16
 176 0030 0128     		cmp	r0, #1
 177 0032 75D0     		beq	.L14
 178 0034 01D3     		bcc	.L10
 179 0036 0428     		cmp	r0, #4
 180 0038 72D2     		bcs	.L14
 181              	.L10:
 182              	.LVL11:
 160:quantum/keymap_common.c ****             break;
 183              		.loc 1 160 0
 184 003a 0024     		movs	r4, #0
 161:quantum/keymap_common.c ****     }
 185              		.loc 1 161 0
 186 003c 70E0     		b	.L14
 187              	.LVL12:
 188              	.L15:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 189              		.loc 1 51 0
 190 003e BE28     		cmp	r0, #190
 191 0040 71D9     		bls	.L17
 192 0042 C028     		cmp	r0, #192
 193 0044 F9D3     		bcc	.L10
  53:quantum/keymap_common.c ****             break;
 194              		.loc 1 53 0
 195 0046 C038     		subs	r0, r0, #192
 196              	.LVL13:
 197 0048 80B2     		uxth	r0, r0
 198              	.L73:
  79:quantum/keymap_common.c ****             break;
 199              		.loc 1 79 0
 200 004a FFF7FEFF 		bl	keymap_function_id_to_action
 201              	.LVL14:
 202 004e 0446     		mov	r4, r0
 203              	.LVL15:
  80:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
 204              		.loc 1 80 0
 205 0050 66E0     		b	.L14
 206              	.LVL16:
 207              	.L13:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 208              		.loc 1 51 0
 209 0052 B0F5005F 		cmp	r0, #8192
 210 0056 08D2     		bcs	.L19
 211 0058 B0F5807F 		cmp	r0, #256
 212 005c 03D2     		bcs	.L72
 213 005e F028     		cmp	r0, #240
 214 0060 EBD3     		bcc	.L10
  66:quantum/keymap_common.c ****             break;
 215              		.loc 1 66 0
 216 0062 40F4A044 		orr	r4, r0, #20480
 217              	.LVL17:
 218              	.L72:
 104:quantum/keymap_common.c ****             break;
 219              		.loc 1 104 0
 220 0066 A4B2     		uxth	r4, r4
 221              	.LVL18:
 105:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 222              		.loc 1 105 0
 223 0068 5AE0     		b	.L14
 224              	.LVL19:
 225              	.L19:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 226              		.loc 1 51 0
 227 006a B0F5405F 		cmp	r0, #12288
 228 006e 80F0A380 		bcs	.L67
  79:quantum/keymap_common.c ****             break;
 229              		.loc 1 79 0
 230 0072 C0F30B00 		ubfx	r0, r0, #0, #12
 231              	.LVL20:
 232 0076 E8E7     		b	.L73
 233              	.LVL21:
 234              	.L11:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 235              		.loc 1 51 0
 236 0078 B0F5AA4F 		cmp	r0, #21760
 237 007c 1ED2     		bcs	.L24
 238 007e B0F5A84F 		cmp	r0, #21504
 239 0082 C3B2     		uxtb	r3, r0
 240 0084 80F0BF80 		bcs	.L25
 241 0088 B0F5A44F 		cmp	r0, #20992
 242 008c 08D2     		bcs	.L26
 243 008e B0F5A24F 		cmp	r0, #20736
 244 0092 C0F09E80 		bcc	.L68
 245              	.LVL22:
  99:quantum/keymap_common.c ****             break;
 246              		.loc 1 99 0
 247 0096 4AF2F100 		movw	r0, #41201
 248 009a 40EA0324 		orr	r4, r0, r3, lsl #8
 249              	.LVL23:
 100:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 250              		.loc 1 100 0
 251 009e 3FE0     		b	.L14
 252              	.LVL24:
 253              	.L26:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 254              		.loc 1 51 0
 255 00a0 B0F5A64F 		cmp	r0, #21248
 256 00a4 80F0A580 		bcs	.L69
 257              	.LVL25:
 104:quantum/keymap_common.c ****             break;
 258              		.loc 1 104 0
 259 00a8 9808     		lsrs	r0, r3, #2
 260              	.LVL26:
 261 00aa 0124     		movs	r4, #1
 262              	.LVL27:
 263 00ac 03F00303 		and	r3, r3, #3
 264              	.LVL28:
 265 00b0 9C40     		lsls	r4, r4, r3
 266 00b2 44EA4014 		orr	r4, r4, r0, lsl #5
 267 00b6 44F40C44 		orr	r4, r4, #35840
 268 00ba D4E7     		b	.L72
 269              	.LVL29:
 270              	.L24:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 271              		.loc 1 51 0
 272 00bc B0F5B24F 		cmp	r0, #22784
 273 00c0 0FD2     		bcs	.L31
 274 00c2 B0F5B04F 		cmp	r0, #22528
 275 00c6 80F0A380 		bcs	.L32
 276 00ca B0F5AC4F 		cmp	r0, #22016
 277 00ce B4D2     		bcs	.L10
 118:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 278              		.loc 1 118 0
 279 00d0 C0B2     		uxtb	r0, r0
 280              	.LVL30:
 281 00d2 FFF7FEFF 		bl	mod_config
 282              	.LVL31:
 119:quantum/keymap_common.c ****             break;
 283              		.loc 1 119 0
 284 00d6 0402     		lsls	r4, r0, #8
 285              	.LVL32:
 286 00d8 04F4F854 		and	r4, r4, #7936
 287              	.LVL33:
 288 00dc 44F40054 		orr	r4, r4, #8192
 289              	.LVL34:
 120:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 290              		.loc 1 120 0
 291 00e0 1EE0     		b	.L14
 292              	.LVL35:
 293              	.L31:
  51:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 294              		.loc 1 51 0
 295 00e2 B0F5B44F 		cmp	r0, #23040
 296 00e6 C0F09880 		bcc	.L34
 297 00ea A0F5C043 		sub	r3, r0, #24576
 298 00ee B3F5005F 		cmp	r3, #8192
 299 00f2 A2D2     		bcs	.L10
 130:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 300              		.loc 1 130 0
 301 00f4 C0F30420 		ubfx	r0, r0, #8, #5
 302              	.LVL36:
 303 00f8 FFF7FEFF 		bl	mod_config
 304              	.LVL37:
 131:quantum/keymap_common.c ****             break;
 305              		.loc 1 131 0
 306 00fc E4B2     		uxtb	r4, r4
 307              	.LVL38:
 308 00fe 0002     		lsls	r0, r0, #8
 309              	.LVL39:
 310 0100 00F4F850 		and	r0, r0, #7936
 311 0104 44F40054 		orr	r4, r4, #8192
 312              	.LVL40:
 313 0108 0443     		orrs	r4, r4, r0
 314              	.LVL41:
 132:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 315              		.loc 1 132 0
 316 010a 09E0     		b	.L14
 317              	.LVL42:
 318              	.L16:
  60:quantum/keymap_common.c ****             break;
 319              		.loc 1 60 0
 320 010c 00F09080 		beq	.L37
  60:quantum/keymap_common.c ****             break;
 321              		.loc 1 60 0 is_stmt 0 discriminator 1
 322 0110 44F28202 		movw	r2, #16514
 323 0114 44F28303 		movw	r3, #16515
 324 0118 A628     		cmp	r0, #166
 325 011a 0CBF     		ite	eq
 326 011c 1446     		moveq	r4, r2
 327 011e 1C46     		movne	r4, r3
 328              	.LVL43:
 329              	.L14:
 164:quantum/keymap_common.c **** 
 330              		.loc 1 164 0 is_stmt 1
 331 0120 2046     		mov	r0, r4	@ movhi
 332 0122 02B0     		add	sp, sp, #8
 333              		.cfi_remember_state
 334              		.cfi_def_cfa_offset 8
 335              		@ sp needed
 336 0124 10BD     		pop	{r4, pc}
 337              	.LVL44:
 338              	.L17:
 339              		.cfi_restore_state
  63:quantum/keymap_common.c ****             break;
 340              		.loc 1 63 0
 341 0126 A828     		cmp	r0, #168
 342 0128 00F08580 		beq	.L39
  63:quantum/keymap_common.c ****             break;
 343              		.loc 1 63 0 is_stmt 0 discriminator 1
 344 012c A928     		cmp	r0, #169
 345 012e 00F08580 		beq	.L40
  63:quantum/keymap_common.c ****             break;
 346              		.loc 1 63 0 discriminator 3
 347 0132 AA28     		cmp	r0, #170
 348 0134 00F08580 		beq	.L41
  63:quantum/keymap_common.c ****             break;
 349              		.loc 1 63 0 discriminator 5
 350 0138 AB28     		cmp	r0, #171
 351 013a 00F08580 		beq	.L42
  63:quantum/keymap_common.c ****             break;
 352              		.loc 1 63 0 discriminator 7
 353 013e AC28     		cmp	r0, #172
 354 0140 00F08580 		beq	.L43
  63:quantum/keymap_common.c ****             break;
 355              		.loc 1 63 0 discriminator 9
 356 0144 BB28     		cmp	r0, #187
 357 0146 00F08580 		beq	.L44
  63:quantum/keymap_common.c ****             break;
 358              		.loc 1 63 0 discriminator 11
 359 014a BC28     		cmp	r0, #188
 360 014c 00F08580 		beq	.L45
  63:quantum/keymap_common.c ****             break;
 361              		.loc 1 63 0 discriminator 13
 362 0150 AD28     		cmp	r0, #173
 363 0152 00F08580 		beq	.L46
  63:quantum/keymap_common.c ****             break;
 364              		.loc 1 63 0 discriminator 15
 365 0156 B028     		cmp	r0, #176
 366 0158 00F08580 		beq	.L47
  63:quantum/keymap_common.c ****             break;
 367              		.loc 1 63 0 discriminator 17
 368 015c AE28     		cmp	r0, #174
 369 015e 00F08580 		beq	.L48
  63:quantum/keymap_common.c ****             break;
 370              		.loc 1 63 0 discriminator 19
 371 0162 AF28     		cmp	r0, #175
 372 0164 00F08580 		beq	.L49
  63:quantum/keymap_common.c ****             break;
 373              		.loc 1 63 0 discriminator 21
 374 0168 B128     		cmp	r0, #177
 375 016a 00F08580 		beq	.L50
  63:quantum/keymap_common.c ****             break;
 376              		.loc 1 63 0 discriminator 23
 377 016e B228     		cmp	r0, #178
 378 0170 00F08580 		beq	.L51
  63:quantum/keymap_common.c ****             break;
 379              		.loc 1 63 0 discriminator 25
 380 0174 B328     		cmp	r0, #179
 381 0176 00F08580 		beq	.L52
  63:quantum/keymap_common.c ****             break;
 382              		.loc 1 63 0 discriminator 27
 383 017a B428     		cmp	r0, #180
 384 017c 00F08580 		beq	.L53
  63:quantum/keymap_common.c ****             break;
 385              		.loc 1 63 0 discriminator 29
 386 0180 B528     		cmp	r0, #181
 387 0182 00F08580 		beq	.L54
  63:quantum/keymap_common.c ****             break;
 388              		.loc 1 63 0 discriminator 31
 389 0186 B628     		cmp	r0, #182
 390 0188 00F08580 		beq	.L55
  63:quantum/keymap_common.c ****             break;
 391              		.loc 1 63 0 discriminator 33
 392 018c B728     		cmp	r0, #183
 393 018e 00F08580 		beq	.L56
  63:quantum/keymap_common.c ****             break;
 394              		.loc 1 63 0 discriminator 35
 395 0192 B828     		cmp	r0, #184
 396 0194 00F08580 		beq	.L57
  63:quantum/keymap_common.c ****             break;
 397              		.loc 1 63 0 discriminator 37
 398 0198 B928     		cmp	r0, #185
 399 019a 00F08580 		beq	.L58
  63:quantum/keymap_common.c ****             break;
 400              		.loc 1 63 0 discriminator 39
 401 019e BD28     		cmp	r0, #189
 402 01a0 00F08580 		beq	.L59
  63:quantum/keymap_common.c ****             break;
 403              		.loc 1 63 0 discriminator 41
 404 01a4 BE28     		cmp	r0, #190
 405 01a6 00F08580 		beq	.L60
  63:quantum/keymap_common.c ****             break;
 406              		.loc 1 63 0 discriminator 43
 407 01aa BA28     		cmp	r0, #186
 408 01ac 44F22A64 		movw	r4, #17962
 409 01b0 18BF     		it	ne
 410 01b2 4FF48844 		movne	r4, #17408
 411 01b6 B3E7     		b	.L14
 412              	.L67:
 413 01b8 C3B2     		uxtb	r3, r0
 414              	.LVL45:
  82:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 415              		.loc 1 82 0 is_stmt 1
 416 01ba 0205     		lsls	r2, r0, #20
  83:quantum/keymap_common.c ****             else
 417              		.loc 1 83 0
 418 01bc 4CBF     		ite	mi
 419 01be 43F44844 		orrmi	r4, r3, #51200
 420              	.LVL46:
  85:quantum/keymap_common.c ****             break;
 421              		.loc 1 85 0
 422 01c2 43F44044 		orrpl	r4, r3, #49152
 423 01c6 ABE7     		b	.L14
 424              	.LVL47:
 425              	.L12:
  88:quantum/keymap_common.c ****             break;
 426              		.loc 1 88 0
 427 01c8 C0F30B04 		ubfx	r4, r0, #0, #12
 428              	.LVL48:
 429 01cc 44F42044 		orr	r4, r4, #40960
 430              	.LVL49:
  89:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 431              		.loc 1 89 0
 432 01d0 A6E7     		b	.L14
 433              	.LVL50:
 434              	.L68:
  94:quantum/keymap_common.c ****             break;
 435              		.loc 1 94 0
 436 01d2 03F00302 		and	r2, r3, #3
 437 01d6 0124     		movs	r4, #1
 438 01d8 9440     		lsls	r4, r4, r2
 439 01da C0F30110 		ubfx	r0, r0, #4, #2
 440              	.LVL51:
 441 01de 44F40C44 		orr	r4, r4, #35840
 442 01e2 44EA0024 		orr	r4, r4, r0, lsl #8
 443 01e6 C3F38103 		ubfx	r3, r3, #2, #2
 444              	.LVL52:
 445 01ea 44EA4313 		orr	r3, r4, r3, lsl #5
 446              	.LVL53:
 447 01ee 9CB2     		uxth	r4, r3
 448              	.LVL54:
  95:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 449              		.loc 1 95 0
 450 01f0 96E7     		b	.L14
 451              	.LVL55:
 452              	.L69:
 109:quantum/keymap_common.c ****             break;
 453              		.loc 1 109 0
 454 01f2 9808     		lsrs	r0, r3, #2
 455              	.LVL56:
 456 01f4 0124     		movs	r4, #1
 457              	.LVL57:
 458 01f6 03F00303 		and	r3, r3, #3
 459              	.LVL58:
 460 01fa 9C40     		lsls	r4, r4, r3
 461 01fc 44EA4014 		orr	r4, r4, r0, lsl #5
 462 0200 44F40A44 		orr	r4, r4, #35328
 463              	.LVL59:
 464 0204 2FE7     		b	.L72
 465              	.LVL60:
 466              	.L25:
 114:quantum/keymap_common.c ****             break;
 467              		.loc 1 114 0
 468 0206 4AF2F404 		movw	r4, #41204
 469 020a 44EA0324 		orr	r4, r4, r3, lsl #8
 470              	.LVL61:
 115:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 471              		.loc 1 115 0
 472 020e 87E7     		b	.L14
 473              	.LVL62:
 474              	.L32:
 122:quantum/keymap_common.c ****             break;
 475              		.loc 1 122 0
 476 0210 4AF2F000 		movw	r0, #41200
 477              	.LVL63:
 478 0214 40EA0424 		orr	r4, r0, r4, lsl #8
 479              	.LVL64:
 480 0218 25E7     		b	.L72
 481              	.LVL65:
 482              	.L34:
 125:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 483              		.loc 1 125 0
 484 021a 00F00F00 		and	r0, r0, #15
 485              	.LVL66:
 486 021e FFF7FEFF 		bl	mod_config
 487              	.LVL67:
 127:quantum/keymap_common.c ****             break;
 488              		.loc 1 127 0
 489 0222 C4F30314 		ubfx	r4, r4, #4, #4
 490              	.LVL68:
 491 0226 40EA0424 		orr	r4, r0, r4, lsl #8
 492 022a 44F41044 		orr	r4, r4, #36864
 493              	.LVL69:
 494 022e 1AE7     		b	.L72
 495              	.LVL70:
 496              	.L37:
  60:quantum/keymap_common.c ****             break;
 497              		.loc 1 60 0
 498 0230 44F28104 		movw	r4, #16513
 499 0234 74E7     		b	.L14
 500              	.LVL71:
 501              	.L39:
  63:quantum/keymap_common.c ****             break;
 502              		.loc 1 63 0
 503 0236 44F2E244 		movw	r4, #17634
 504 023a 71E7     		b	.L14
 505              	.LVL72:
 506              	.L40:
 507 023c 44F2E944 		movw	r4, #17641
 508 0240 6EE7     		b	.L14
 509              	.LVL73:
 510              	.L41:
 511 0242 44F2EA44 		movw	r4, #17642
 512 0246 6BE7     		b	.L14
 513              	.LVL74:
 514              	.L42:
 515 0248 44F2B544 		movw	r4, #17589
 516 024c 68E7     		b	.L14
 517              	.LVL75:
 518              	.L43:
 519 024e 44F2B644 		movw	r4, #17590
 520 0252 65E7     		b	.L14
 521              	.LVL76:
 522              	.L44:
 523 0254 44F2B344 		movw	r4, #17587
 524 0258 62E7     		b	.L14
 525              	.LVL77:
 526              	.L45:
 527 025a 44F2B444 		movw	r4, #17588
 528 025e 5FE7     		b	.L14
 529              	.LVL78:
 530              	.L46:
 531 0260 44F2B744 		movw	r4, #17591
 532 0264 5CE7     		b	.L14
 533              	.LVL79:
 534              	.L47:
 535 0266 44F2CC44 		movw	r4, #17612
 536 026a 59E7     		b	.L14
 537              	.LVL80:
 538              	.L48:
 539 026c 44F2CD44 		movw	r4, #17613
 540 0270 56E7     		b	.L14
 541              	.LVL81:
 542              	.L49:
 543 0272 44F28354 		movw	r4, #17795
 544 0276 53E7     		b	.L14
 545              	.LVL82:
 546              	.L50:
 547 0278 44F28A54 		movw	r4, #17802
 548 027c 50E7     		b	.L14
 549              	.LVL83:
 550              	.L51:
 551 027e 44F29254 		movw	r4, #17810
 552 0282 4DE7     		b	.L14
 553              	.LVL84:
 554              	.L52:
 555 0284 44F29454 		movw	r4, #17812
 556 0288 4AE7     		b	.L14
 557              	.LVL85:
 558              	.L53:
 559 028a 44F22164 		movw	r4, #17953
 560 028e 47E7     		b	.L14
 561              	.LVL86:
 562              	.L54:
 563 0290 44F22364 		movw	r4, #17955
 564 0294 44E7     		b	.L14
 565              	.LVL87:
 566              	.L55:
 567 0296 44F22464 		movw	r4, #17956
 568 029a 41E7     		b	.L14
 569              	.LVL88:
 570              	.L56:
 571 029c 44F22564 		movw	r4, #17957
 572 02a0 3EE7     		b	.L14
 573              	.LVL89:
 574              	.L57:
 575 02a2 44F22664 		movw	r4, #17958
 576 02a6 3BE7     		b	.L14
 577              	.LVL90:
 578              	.L58:
 579 02a8 44F22764 		movw	r4, #17959
 580 02ac 38E7     		b	.L14
 581              	.LVL91:
 582              	.L59:
 583 02ae 44F26F44 		movw	r4, #17519
 584 02b2 35E7     		b	.L14
 585              	.LVL92:
 586              	.L60:
 587 02b4 44F27044 		movw	r4, #17520
 588 02b8 32E7     		b	.L14
 589              		.cfi_endproc
 590              	.LFE8:
 592              		.weak	fn_actions
 593              		.section	.rodata
 594              		.align	1
 597              	fn_actions:
 598              		.text
 599              	.Letext0:
 600              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 601              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 602              		.file 4 "tmk_core/common/keyboard.h"
 603              		.file 5 "tmk_core/common/keycode.h"
 604              		.file 6 "tmk_core/common/action_code.h"
 605              		.file 7 "tmk_core/common/action_macro.h"
 606              		.file 8 "tmk_core/common/action.h"
 607              		.file 9 "tmk_core/common/report.h"
 608              		.file 10 "tmk_core/common/host.h"
 609              		.file 11 "tmk_core/common/debug.h"
 610              		.file 12 "quantum/keycode_config.h"
 611              		.file 13 "quantum/quantum_keycodes.h"
 612              		.file 14 "quantum/keymap.h"
 613              		.file 15 "tmk_core/common/action_layer.h"
 614              		.file 16 "tmk_core/protocol/arm_atsam/clks.h"
 615              		.file 17 "quantum/color.h"
 616              		.file 18 "quantum/rgb_matrix_types.h"
 617              		.file 19 "quantum/rgb_matrix.h"
 618              		.file 20 "tmk_core/common/timer.h"
 619              		.file 21 "tmk_core/common/action_util.h"
 620              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 621              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 622              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 623              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 624              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 625              		.file 27 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
/var/tmp//ccoBQ0pN.s:18     .text.action_get_macro:0000000000000000 $t
/var/tmp//ccoBQ0pN.s:25     .text.action_get_macro:0000000000000000 action_get_macro
/var/tmp//ccoBQ0pN.s:42     .text.action_function:0000000000000000 $t
/var/tmp//ccoBQ0pN.s:49     .text.action_function:0000000000000000 action_function
/var/tmp//ccoBQ0pN.s:63     .text.keymap_key_to_keycode:0000000000000000 $t
/var/tmp//ccoBQ0pN.s:70     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
/var/tmp//ccoBQ0pN.s:99     .text.keymap_key_to_keycode:0000000000000020 $d
/var/tmp//ccoBQ0pN.s:104    .text.keymap_function_id_to_action:0000000000000000 $t
/var/tmp//ccoBQ0pN.s:111    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
/var/tmp//ccoBQ0pN.s:127    .text.keymap_function_id_to_action:0000000000000008 $d
/var/tmp//ccoBQ0pN.s:597    .rodata:0000000000000000 fn_actions
/var/tmp//ccoBQ0pN.s:132    .text.action_for_key:0000000000000000 $t
/var/tmp//ccoBQ0pN.s:139    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
