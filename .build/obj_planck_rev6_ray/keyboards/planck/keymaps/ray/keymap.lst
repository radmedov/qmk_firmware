   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"keymap.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.layer_state_set_user,"ax",%progbits
  16              		.align	1
  17              		.global	layer_state_set_user
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	layer_state_set_user:
  24              	.LFB287:
  25              		.file 1 "keyboards/planck/keymaps/ray/keymap.c"
   1:keyboards/planck/keymaps/ray/keymap.c **** /* Copyright 2015-2017 Jack Humbert
   2:keyboards/planck/keymaps/ray/keymap.c ****  *
   3:keyboards/planck/keymaps/ray/keymap.c ****  * This program is free software: you can redistribute it and/or modify
   4:keyboards/planck/keymaps/ray/keymap.c ****  * it under the terms of the GNU General Public License as published by
   5:keyboards/planck/keymaps/ray/keymap.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:keyboards/planck/keymaps/ray/keymap.c ****  * (at your option) any later version.
   7:keyboards/planck/keymaps/ray/keymap.c ****  *
   8:keyboards/planck/keymaps/ray/keymap.c ****  * This program is distributed in the hope that it will be useful,
   9:keyboards/planck/keymaps/ray/keymap.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:keyboards/planck/keymaps/ray/keymap.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:keyboards/planck/keymaps/ray/keymap.c ****  * GNU General Public License for more details.
  12:keyboards/planck/keymaps/ray/keymap.c ****  *
  13:keyboards/planck/keymaps/ray/keymap.c ****  * You should have received a copy of the GNU General Public License
  14:keyboards/planck/keymaps/ray/keymap.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:keyboards/planck/keymaps/ray/keymap.c ****  */
  16:keyboards/planck/keymaps/ray/keymap.c **** 
  17:keyboards/planck/keymaps/ray/keymap.c **** #include QMK_KEYBOARD_H
  18:keyboards/planck/keymaps/ray/keymap.c **** #include "muse.h"
  19:keyboards/planck/keymaps/ray/keymap.c **** 
  20:keyboards/planck/keymaps/ray/keymap.c **** extern keymap_config_t keymap_config;
  21:keyboards/planck/keymaps/ray/keymap.c **** 
  22:keyboards/planck/keymaps/ray/keymap.c **** enum planck_layers {
  23:keyboards/planck/keymaps/ray/keymap.c ****   _QWERTY,
  24:keyboards/planck/keymaps/ray/keymap.c ****   _LOWER,
  25:keyboards/planck/keymaps/ray/keymap.c ****   _RAISE,
  26:keyboards/planck/keymaps/ray/keymap.c ****   _ADJUST
  27:keyboards/planck/keymaps/ray/keymap.c **** };
  28:keyboards/planck/keymaps/ray/keymap.c **** 
  29:keyboards/planck/keymaps/ray/keymap.c **** enum planck_keycodes {
  30:keyboards/planck/keymaps/ray/keymap.c ****   QWERTY = SAFE_RANGE,
  31:keyboards/planck/keymaps/ray/keymap.c ****   BACKLIT,
  32:keyboards/planck/keymaps/ray/keymap.c ****   LIQUID,
  33:keyboards/planck/keymaps/ray/keymap.c ****   ARROWFN,
  34:keyboards/planck/keymaps/ray/keymap.c ****   ARROWSYM,
  35:keyboards/planck/keymaps/ray/keymap.c ****   HTMLBRC,
  36:keyboards/planck/keymaps/ray/keymap.c ****   SSHOT,
  37:keyboards/planck/keymaps/ray/keymap.c ****   VSSHOT,
  38:keyboards/planck/keymaps/ray/keymap.c ****   ONEPASS,
  39:keyboards/planck/keymaps/ray/keymap.c ****   VIMEXIT
  40:keyboards/planck/keymaps/ray/keymap.c **** };
  41:keyboards/planck/keymaps/ray/keymap.c **** 
  42:keyboards/planck/keymaps/ray/keymap.c **** #define LOWER MO(_LOWER)
  43:keyboards/planck/keymaps/ray/keymap.c **** #define RAISE MO(_RAISE)
  44:keyboards/planck/keymaps/ray/keymap.c **** 
  45:keyboards/planck/keymaps/ray/keymap.c **** const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  46:keyboards/planck/keymaps/ray/keymap.c **** 
  47:keyboards/planck/keymaps/ray/keymap.c **** /* Qwerty
  48:keyboards/planck/keymaps/ray/keymap.c ****  * ,-----------------------------------------------------------------------------------.
  49:keyboards/planck/keymaps/ray/keymap.c ****  * | Tab  |   Q  |   W  |   E  |   R  |   T  |   Y  |   U  |   I  |   O  |   P  | Bksp |
  50:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  51:keyboards/planck/keymaps/ray/keymap.c ****  * | Esc  |   A  |   S  |   D  |   F  |   G  |   H  |   J  |   K  |   L  |   ;  |  "   |
  52:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  53:keyboards/planck/keymaps/ray/keymap.c ****  * | Shift|   Z  |   X  |   C  |   V  |   B  |   N  |   M  |   ,  |   .  |  Up  |Enter |
  54:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  55:keyboards/planck/keymaps/ray/keymap.c ****  * | Brite| Ctrl| Alt   | CMD  |Lower |Sp/Sh |Sp/Ctrl|Raise|   /  | Left | Down |Right |
  56:keyboards/planck/keymaps/ray/keymap.c ****  * `-----------------------------------------------------------------------------------'
  57:keyboards/planck/keymaps/ray/keymap.c ****  */
  58:keyboards/planck/keymaps/ray/keymap.c **** [_QWERTY] = LAYOUT_planck_grid(
  59:keyboards/planck/keymaps/ray/keymap.c ****     KC_TAB,  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    KC_P,
  60:keyboards/planck/keymaps/ray/keymap.c ****     KC_ESC,  KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    KC_SC
  61:keyboards/planck/keymaps/ray/keymap.c ****     KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_N,    KC_M,    KC_COMM, KC_DOT,  KC_UP
  62:keyboards/planck/keymaps/ray/keymap.c ****     BACKLIT, KC_LCTL,KC_LALT,KC_LGUI,LOWER,MT(MOD_LSFT, KC_SPC),MT(MOD_LCTL, KC_SPC),RAISE,KC_SLSH,
  63:keyboards/planck/keymaps/ray/keymap.c **** ),
  64:keyboards/planck/keymaps/ray/keymap.c **** 
  65:keyboards/planck/keymaps/ray/keymap.c **** /* Lower
  66:keyboards/planck/keymaps/ray/keymap.c ****  * ,-----------------------------------------------------------------------------------.
  67:keyboards/planck/keymaps/ray/keymap.c ****  * |   ~  |   !  |   @  |   #  |   $  |   %  |   ^  |   &  |   *  |   (  |   )  | Bksp |
  68:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  69:keyboards/planck/keymaps/ray/keymap.c ****  * |VIMEXIT| F1  |  F2  |  F3  |  F4  |  F5  |  F6  |  _  |  +  |ARROWSYM|ARROWFN|  |  |
  70:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  71:keyboards/planck/keymaps/ray/keymap.c ****  * |      |  F7 |  F8  |  F9  |  F10 |  F11 |  F12 |HTMLBRC|      |LIQUID|      |  \   |
  72:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  73:keyboards/planck/keymaps/ray/keymap.c ****  * |ONEPASS|     |      |      | LWR  |             |      |VSSHOT|      |      |      |
  74:keyboards/planck/keymaps/ray/keymap.c ****  * `-----------------------------------------------------------------------------------'
  75:keyboards/planck/keymaps/ray/keymap.c ****  */
  76:keyboards/planck/keymaps/ray/keymap.c **** [_LOWER] = LAYOUT_planck_grid(
  77:keyboards/planck/keymaps/ray/keymap.c ****     KC_TILD, KC_EXLM, KC_AT,   KC_HASH, KC_DLR,  KC_PERC, KC_CIRC, KC_AMPR,   KC_ASTR,  KC_LPRN,  K
  78:keyboards/planck/keymaps/ray/keymap.c ****     VIMEXIT,  KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_UNDS,  KC_PLUS,  ARROWSYM, A
  79:keyboards/planck/keymaps/ray/keymap.c ****     _______, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  HTMLBRC,    _______,  LIQUID,  _
  80:keyboards/planck/keymaps/ray/keymap.c ****     ONEPASS, _______, _______, _______, _______, _______, _______, _______,     VSSHOT,  _______, _
  81:keyboards/planck/keymaps/ray/keymap.c **** ),
  82:keyboards/planck/keymaps/ray/keymap.c **** 
  83:keyboards/planck/keymaps/ray/keymap.c **** /* Raise
  84:keyboards/planck/keymaps/ray/keymap.c ****  * ,-----------------------------------------------------------------------------------.
  85:keyboards/planck/keymaps/ray/keymap.c ****  * |   `  |   1  |   2  |   3  |   4  |   5  |   6  |   7  |   8  |   9  |   0  | Bksp |
  86:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  87:keyboards/planck/keymaps/ray/keymap.c ****  * | Del  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |   -  |   =  |   {  |   }  |   \  |
  88:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  89:keyboards/planck/keymaps/ray/keymap.c ****  * |      |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |   <  |   >  |   [  |   ]  | Vol+ |
  90:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
  91:keyboards/planck/keymaps/ray/keymap.c ****  * |      |      |      |      |      |             |  RSE |SSHOT | Next | Play | Vol- |
  92:keyboards/planck/keymaps/ray/keymap.c ****  * `-----------------------------------------------------------------------------------'
  93:keyboards/planck/keymaps/ray/keymap.c ****  */
  94:keyboards/planck/keymaps/ray/keymap.c **** [_RAISE] = LAYOUT_planck_grid(
  95:keyboards/planck/keymaps/ray/keymap.c ****     KC_GRV,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    KC_0,
  96:keyboards/planck/keymaps/ray/keymap.c ****     KC_DEL,  KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_MINS, KC_EQL,  KC_LCBR, KC_RC
  97:keyboards/planck/keymaps/ray/keymap.c ****     _______, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  KC_LABK, KC_RABK, KC_LBRC, KC_RB
  98:keyboards/planck/keymaps/ray/keymap.c ****     _______, _______, _______, _______, _______, _______, _______, _______,   SSHOT, KC_MNXT, KC_MP
  99:keyboards/planck/keymaps/ray/keymap.c **** ),
 100:keyboards/planck/keymaps/ray/keymap.c **** 
 101:keyboards/planck/keymaps/ray/keymap.c **** /* Adjust (Lower + Raise)
 102:keyboards/planck/keymaps/ray/keymap.c ****  *                      v------------------------RGB CONTROL--------------------v
 103:keyboards/planck/keymaps/ray/keymap.c ****  * ,-----------------------------------------------------------------------------------.
 104:keyboards/planck/keymaps/ray/keymap.c ****  * |      | Reset|Debug | RGB  |RGBMOD| HUE+ | HUE- | SAT+ | SAT- |BRGTH+|BRGTH-|  Del |
 105:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
 106:keyboards/planck/keymaps/ray/keymap.c ****  * |      |      |MUSmod|Aud on|Audoff|AGnorm|AGswap|   -  |   =  |   [  |   ]  |      |
 107:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
 108:keyboards/planck/keymaps/ray/keymap.c ****  * |      |Voice-|Voice+|Mus on|Musoff|MIDIon|MIDIof|TermOn|TermOf|      |      |      |
 109:keyboards/planck/keymaps/ray/keymap.c ****  * |------+------+------+------+------+------+------+------+------+------+------+------|
 110:keyboards/planck/keymaps/ray/keymap.c ****  * |Qwerty|      |      |      | LWR  |             | RSE  |      |      |      |      |
 111:keyboards/planck/keymaps/ray/keymap.c ****  * `-----------------------------------------------------------------------------------'
 112:keyboards/planck/keymaps/ray/keymap.c ****  */
 113:keyboards/planck/keymaps/ray/keymap.c **** [_ADJUST] = LAYOUT_planck_grid(
 114:keyboards/planck/keymaps/ray/keymap.c ****     _______, RESET,   DEBUG,   RGB_TOG, RGB_MOD, RGB_HUI, RGB_HUD, RGB_SAI, RGB_SAD,  RGB_VAI, RGB_
 115:keyboards/planck/keymaps/ray/keymap.c ****     _______, _______, MU_MOD,  AU_ON,   AU_OFF,  AG_NORM, AG_SWAP, KC_MINS, KC_EQL, KC_LBRC, KC_RBR
 116:keyboards/planck/keymaps/ray/keymap.c ****     _______, MUV_DE,  MUV_IN,  MU_ON,   MU_OFF,  MI_ON,   MI_OFF,  TERM_ON, TERM_OFF, _______, ____
 117:keyboards/planck/keymaps/ray/keymap.c ****     QWERTY, _______, _______, _______, _______, _______, _______, _______, _______,  _______, _____
 118:keyboards/planck/keymaps/ray/keymap.c **** )
 119:keyboards/planck/keymaps/ray/keymap.c **** 
 120:keyboards/planck/keymaps/ray/keymap.c **** };
 121:keyboards/planck/keymaps/ray/keymap.c **** 
 122:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 123:keyboards/planck/keymaps/ray/keymap.c ****   float plover_song[][2]     = SONG(PLOVER_SOUND);
 124:keyboards/planck/keymaps/ray/keymap.c ****   float plover_gb_song[][2]  = SONG(PLOVER_GOODBYE_SOUND);
 125:keyboards/planck/keymaps/ray/keymap.c **** #endif
 126:keyboards/planck/keymaps/ray/keymap.c **** 
 127:keyboards/planck/keymaps/ray/keymap.c **** layer_state_t layer_state_set_user(layer_state_t state) {
  26              		.loc 1 127 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 128:keyboards/planck/keymaps/ray/keymap.c ****   return update_tri_layer_state(state, _LOWER, _RAISE, _ADJUST);
  32              		.loc 1 128 0
  33 0000 0323     		movs	r3, #3
  34 0002 0222     		movs	r2, #2
  35 0004 0121     		movs	r1, #1
  36 0006 FFF7FEBF 		b	update_tri_layer_state
  37              	.LVL1:
  38              		.cfi_endproc
  39              	.LFE287:
  41              		.section	.text.process_record_user,"ax",%progbits
  42              		.align	1
  43              		.global	process_record_user
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	process_record_user:
  50              	.LFB288:
 129:keyboards/planck/keymaps/ray/keymap.c **** }
 130:keyboards/planck/keymaps/ray/keymap.c **** 
 131:keyboards/planck/keymaps/ray/keymap.c **** bool process_record_user(uint16_t keycode, keyrecord_t *record) {
  51              		.loc 1 131 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL2:
 132:keyboards/planck/keymaps/ray/keymap.c ****   switch (keycode) {
  56              		.loc 1 132 0
  57 0000 A0F5BA40 		sub	r0, r0, #23808
  58              	.LVL3:
  59 0004 0138     		subs	r0, r0, #1
 131:keyboards/planck/keymaps/ray/keymap.c ****   switch (keycode) {
  60              		.loc 1 131 0
  61 0006 10B5     		push	{r4, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65              		.loc 1 132 0
  66 0008 0928     		cmp	r0, #9
  67 000a 38D8     		bhi	.L23
  68 000c DFE800F0 		tbb	[pc, r0]
  69              	.L5:
  70 0010 05       		.byte	(.L4-.L5)/2
  71 0011 10       		.byte	(.L6-.L5)/2
  72 0012 19       		.byte	(.L7-.L5)/2
  73 0013 1F       		.byte	(.L8-.L5)/2
  74 0014 23       		.byte	(.L9-.L5)/2
  75 0015 27       		.byte	(.L10-.L5)/2
  76 0016 39       		.byte	(.L11-.L5)/2
  77 0017 48       		.byte	(.L12-.L5)/2
  78 0018 53       		.byte	(.L13-.L5)/2
  79 0019 5C       		.byte	(.L14-.L5)/2
  80              		.p2align 1
  81              	.L4:
 133:keyboards/planck/keymaps/ray/keymap.c ****     case QWERTY:
 134:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
  82              		.loc 1 134 0
  83 001a 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
  84 001c 34B1     		cbz	r4, .L3
 135:keyboards/planck/keymaps/ray/keymap.c ****         print("mode just switched to qwerty and this is a huge string\n");
  85              		.loc 1 135 0
  86 001e 3648     		ldr	r0, .L38
  87 0020 FFF7FEFF 		bl	tfp_printf
  88              	.LVL4:
 136:keyboards/planck/keymaps/ray/keymap.c ****         set_single_persistent_default_layer(_QWERTY);
  89              		.loc 1 136 0
  90 0024 0020     		movs	r0, #0
  91 0026 FFF7FEFF 		bl	set_single_persistent_default_layer
  92              	.LVL5:
  93              	.L34:
 137:keyboards/planck/keymaps/ray/keymap.c ****       }
 138:keyboards/planck/keymaps/ray/keymap.c ****       return false;
 139:keyboards/planck/keymaps/ray/keymap.c ****       break;
 140:keyboards/planck/keymaps/ray/keymap.c ****     case BACKLIT:
 141:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 142:keyboards/planck/keymaps/ray/keymap.c ****         register_code(KC_RSFT);
 143:keyboards/planck/keymaps/ray/keymap.c ****         #ifdef BACKLIGHT_ENABLE
 144:keyboards/planck/keymaps/ray/keymap.c ****           backlight_step();
 145:keyboards/planck/keymaps/ray/keymap.c ****         #endif
 146:keyboards/planck/keymaps/ray/keymap.c ****         #ifdef KEYBOARD_planck_rev5
 147:keyboards/planck/keymaps/ray/keymap.c ****           PORTE &= ~(1<<6);
 148:keyboards/planck/keymaps/ray/keymap.c ****         #endif
 149:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 150:keyboards/planck/keymaps/ray/keymap.c ****         unregister_code(KC_RSFT);
 151:keyboards/planck/keymaps/ray/keymap.c ****         #ifdef KEYBOARD_planck_rev5
 152:keyboards/planck/keymaps/ray/keymap.c ****           PORTE |= (1<<6);
 153:keyboards/planck/keymaps/ray/keymap.c ****         #endif
 154:keyboards/planck/keymaps/ray/keymap.c ****       }
 155:keyboards/planck/keymaps/ray/keymap.c ****       return false;
  94              		.loc 1 155 0
  95 002a 0024     		movs	r4, #0
  96              	.L3:
 156:keyboards/planck/keymaps/ray/keymap.c ****       break;
 157:keyboards/planck/keymaps/ray/keymap.c ****     case LIQUID:
 158:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 159:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("{%  %}");
 160:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 161:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 162:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 163:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 164:keyboards/planck/keymaps/ray/keymap.c ****       }
 165:keyboards/planck/keymaps/ray/keymap.c ****       break;
 166:keyboards/planck/keymaps/ray/keymap.c ****     case ARROWFN:
 167:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 168:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("() => {}");
 169:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 170:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 171:keyboards/planck/keymaps/ray/keymap.c ****       }
 172:keyboards/planck/keymaps/ray/keymap.c ****       break;
 173:keyboards/planck/keymaps/ray/keymap.c ****     case ARROWSYM:
 174:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 175:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("=>");
 176:keyboards/planck/keymaps/ray/keymap.c ****       }
 177:keyboards/planck/keymaps/ray/keymap.c ****       break;
 178:keyboards/planck/keymaps/ray/keymap.c ****     case HTMLBRC:
 179:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 180:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("<></>");
 181:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 182:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 183:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 184:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 185:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 186:keyboards/planck/keymaps/ray/keymap.c ****       }
 187:keyboards/planck/keymaps/ray/keymap.c ****       break;
 188:keyboards/planck/keymaps/ray/keymap.c ****     case SSHOT:
 189:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 190:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LGUI));
 191:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LALT));
 192:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_4));
 193:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 194:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LGUI));
 195:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LALT));
 196:keyboards/planck/keymaps/ray/keymap.c ****       }
 197:keyboards/planck/keymaps/ray/keymap.c ****       break;
 198:keyboards/planck/keymaps/ray/keymap.c ****     case VSSHOT:
 199:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 200:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LGUI));
 201:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LALT));
 202:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_5));
 203:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 204:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LGUI));
 205:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LALT));
 206:keyboards/planck/keymaps/ray/keymap.c ****       }
 207:keyboards/planck/keymaps/ray/keymap.c ****       break;
 208:keyboards/planck/keymaps/ray/keymap.c ****     case ONEPASS:
 209:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 210:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LGUI));
 211:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_BSLASH));
 212:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 213:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LGUI));
 214:keyboards/planck/keymaps/ray/keymap.c ****       }
 215:keyboards/planck/keymaps/ray/keymap.c ****       break;
 216:keyboards/planck/keymaps/ray/keymap.c ****     case VIMEXIT:
 217:keyboards/planck/keymaps/ray/keymap.c ****       if (record->event.pressed) {
 218:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_ESCAPE));
 219:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LSHIFT));
 220:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_SCOLON));
 221:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LSHIFT));
 222:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_W));
 223:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_Q));
 224:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_ENTER));
 225:keyboards/planck/keymaps/ray/keymap.c ****       }
 226:keyboards/planck/keymaps/ray/keymap.c ****       break;
 227:keyboards/planck/keymaps/ray/keymap.c ****   }
 228:keyboards/planck/keymaps/ray/keymap.c ****   return true;
 229:keyboards/planck/keymaps/ray/keymap.c **** }
  97              		.loc 1 229 0
  98 002c 2046     		mov	r0, r4
  99 002e 10BD     		pop	{r4, pc}
 100              	.LVL6:
 101              	.L6:
 141:keyboards/planck/keymaps/ray/keymap.c ****         register_code(KC_RSFT);
 102              		.loc 1 141 0
 103 0030 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 142:keyboards/planck/keymaps/ray/keymap.c ****         #ifdef BACKLIGHT_ENABLE
 104              		.loc 1 142 0
 105 0032 E520     		movs	r0, #229
 141:keyboards/planck/keymaps/ray/keymap.c ****         register_code(KC_RSFT);
 106              		.loc 1 141 0
 107 0034 14B1     		cbz	r4, .L15
 142:keyboards/planck/keymaps/ray/keymap.c ****         #ifdef BACKLIGHT_ENABLE
 108              		.loc 1 142 0
 109 0036 FFF7FEFF 		bl	register_code
 110              	.LVL7:
 111 003a F6E7     		b	.L34
 112              	.LVL8:
 113              	.L15:
 150:keyboards/planck/keymaps/ray/keymap.c ****         #ifdef KEYBOARD_planck_rev5
 114              		.loc 1 150 0
 115 003c FFF7FEFF 		bl	unregister_code
 116              	.LVL9:
 117 0040 F4E7     		b	.L3
 118              	.LVL10:
 119              	.L7:
 158:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("{%  %}");
 120              		.loc 1 158 0
 121 0042 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 122 0044 94B1     		cbz	r4, .L37
 159:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 123              		.loc 1 159 0
 124 0046 2D48     		ldr	r0, .L38+4
 125              	.LVL11:
 126              	.L33:
 202:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 127              		.loc 1 202 0
 128 0048 FFF7FEFF 		bl	send_string_P
 129              	.LVL12:
 130 004c EEE7     		b	.L3
 131              	.LVL13:
 132              	.L8:
 167:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("() => {}");
 133              		.loc 1 167 0
 134 004e 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 135 0050 94B1     		cbz	r4, .L36
 168:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 136              		.loc 1 168 0
 137 0052 2B48     		ldr	r0, .L38+8
 138 0054 F8E7     		b	.L33
 139              	.L9:
 174:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("=>");
 140              		.loc 1 174 0
 141 0056 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 142 0058 8CB1     		cbz	r4, .L23
 175:keyboards/planck/keymaps/ray/keymap.c ****       }
 143              		.loc 1 175 0
 144 005a 2A48     		ldr	r0, .L38+12
 145 005c F4E7     		b	.L33
 146              	.L10:
 179:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING("<></>");
 147              		.loc 1 179 0
 148 005e 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 149 0060 0CB1     		cbz	r4, .L18
 180:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 150              		.loc 1 180 0
 151 0062 2948     		ldr	r0, .L38+16
 152 0064 F0E7     		b	.L33
 153              	.L18:
 182:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 154              		.loc 1 182 0
 155 0066 2948     		ldr	r0, .L38+20
 156 0068 FFF7FEFF 		bl	send_string_P
 157              	.LVL14:
 158              	.L37:
 183:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 159              		.loc 1 183 0
 160 006c 2748     		ldr	r0, .L38+20
 161 006e FFF7FEFF 		bl	send_string_P
 162              	.LVL15:
 184:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_LEFT));
 163              		.loc 1 184 0
 164 0072 2648     		ldr	r0, .L38+20
 165 0074 FFF7FEFF 		bl	send_string_P
 166              	.LVL16:
 167              	.L36:
 185:keyboards/planck/keymaps/ray/keymap.c ****       }
 168              		.loc 1 185 0
 169 0078 2448     		ldr	r0, .L38+20
 170              	.L35:
 213:keyboards/planck/keymaps/ray/keymap.c ****       }
 171              		.loc 1 213 0
 172 007a FFF7FEFF 		bl	send_string_P
 173              	.LVL17:
 174              	.L23:
 228:keyboards/planck/keymaps/ray/keymap.c **** }
 175              		.loc 1 228 0
 176 007e 0124     		movs	r4, #1
 177 0080 D4E7     		b	.L3
 178              	.LVL18:
 179              	.L11:
 189:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LGUI));
 180              		.loc 1 189 0
 181 0082 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 182 0084 3CB1     		cbz	r4, .L19
 190:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LALT));
 183              		.loc 1 190 0
 184 0086 2248     		ldr	r0, .L38+24
 185 0088 FFF7FEFF 		bl	send_string_P
 186              	.LVL19:
 191:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_4));
 187              		.loc 1 191 0
 188 008c 2148     		ldr	r0, .L38+28
 189 008e FFF7FEFF 		bl	send_string_P
 190              	.LVL20:
 192:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 191              		.loc 1 192 0
 192 0092 2148     		ldr	r0, .L38+32
 193 0094 D8E7     		b	.L33
 194              	.LVL21:
 195              	.L19:
 194:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LALT));
 196              		.loc 1 194 0
 197 0096 2148     		ldr	r0, .L38+36
 198 0098 FFF7FEFF 		bl	send_string_P
 199              	.LVL22:
 195:keyboards/planck/keymaps/ray/keymap.c ****       }
 200              		.loc 1 195 0
 201 009c 2048     		ldr	r0, .L38+40
 202 009e ECE7     		b	.L35
 203              	.LVL23:
 204              	.L12:
 199:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LGUI));
 205              		.loc 1 199 0
 206 00a0 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 207 00a2 002C     		cmp	r4, #0
 208 00a4 F7D0     		beq	.L19
 200:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LALT));
 209              		.loc 1 200 0
 210 00a6 1A48     		ldr	r0, .L38+24
 211 00a8 FFF7FEFF 		bl	send_string_P
 212              	.LVL24:
 201:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_5));
 213              		.loc 1 201 0
 214 00ac 1948     		ldr	r0, .L38+28
 215 00ae FFF7FEFF 		bl	send_string_P
 216              	.LVL25:
 202:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 217              		.loc 1 202 0
 218 00b2 1C48     		ldr	r0, .L38+44
 219 00b4 C8E7     		b	.L33
 220              	.LVL26:
 221              	.L13:
 209:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LGUI));
 222              		.loc 1 209 0
 223 00b6 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 224 00b8 24B1     		cbz	r4, .L20
 210:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_BSLASH));
 225              		.loc 1 210 0
 226 00ba 1548     		ldr	r0, .L38+24
 227 00bc FFF7FEFF 		bl	send_string_P
 228              	.LVL27:
 211:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 229              		.loc 1 211 0
 230 00c0 1948     		ldr	r0, .L38+48
 231 00c2 C1E7     		b	.L33
 232              	.LVL28:
 233              	.L20:
 213:keyboards/planck/keymaps/ray/keymap.c ****       }
 234              		.loc 1 213 0
 235 00c4 1548     		ldr	r0, .L38+36
 236 00c6 D8E7     		b	.L35
 237              	.L14:
 217:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_ESCAPE));
 238              		.loc 1 217 0
 239 00c8 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 240 00ca 002C     		cmp	r4, #0
 241 00cc D7D0     		beq	.L23
 218:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_DOWN(X_LSHIFT));
 242              		.loc 1 218 0
 243 00ce 1748     		ldr	r0, .L38+52
 244 00d0 FFF7FEFF 		bl	send_string_P
 245              	.LVL29:
 219:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_SCOLON));
 246              		.loc 1 219 0
 247 00d4 1648     		ldr	r0, .L38+56
 248 00d6 FFF7FEFF 		bl	send_string_P
 249              	.LVL30:
 220:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_UP(X_LSHIFT));
 250              		.loc 1 220 0
 251 00da 1648     		ldr	r0, .L38+60
 252 00dc FFF7FEFF 		bl	send_string_P
 253              	.LVL31:
 221:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_W));
 254              		.loc 1 221 0
 255 00e0 1548     		ldr	r0, .L38+64
 256 00e2 FFF7FEFF 		bl	send_string_P
 257              	.LVL32:
 222:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_Q));
 258              		.loc 1 222 0
 259 00e6 1548     		ldr	r0, .L38+68
 260 00e8 FFF7FEFF 		bl	send_string_P
 261              	.LVL33:
 223:keyboards/planck/keymaps/ray/keymap.c ****           SEND_STRING(SS_TAP(X_ENTER));
 262              		.loc 1 223 0
 263 00ec 1448     		ldr	r0, .L38+72
 264 00ee FFF7FEFF 		bl	send_string_P
 265              	.LVL34:
 224:keyboards/planck/keymaps/ray/keymap.c ****       }
 266              		.loc 1 224 0
 267 00f2 1448     		ldr	r0, .L38+76
 268 00f4 A8E7     		b	.L33
 269              	.L39:
 270 00f6 00BF     		.align	2
 271              	.L38:
 272 00f8 00000000 		.word	.LC1
 273 00fc 38000000 		.word	.LC2
 274 0100 42000000 		.word	.LC4
 275 0104 4B000000 		.word	.LC5
 276 0108 4E000000 		.word	.LC6
 277 010c 3F000000 		.word	.LC3
 278 0110 54000000 		.word	.LC7
 279 0114 57000000 		.word	.LC8
 280 0118 5A000000 		.word	.LC9
 281 011c 5D000000 		.word	.LC10
 282 0120 60000000 		.word	.LC11
 283 0124 63000000 		.word	.LC12
 284 0128 66000000 		.word	.LC13
 285 012c 69000000 		.word	.LC14
 286 0130 6C000000 		.word	.LC15
 287 0134 6F000000 		.word	.LC16
 288 0138 72000000 		.word	.LC17
 289 013c 75000000 		.word	.LC18
 290 0140 78000000 		.word	.LC19
 291 0144 7B000000 		.word	.LC20
 292              		.cfi_endproc
 293              	.LFE288:
 295              		.section	.text.encoder_update_user,"ax",%progbits
 296              		.align	1
 297              		.global	encoder_update_user
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu softvfp
 303              	encoder_update_user:
 304              	.LFB289:
 230:keyboards/planck/keymaps/ray/keymap.c **** 
 231:keyboards/planck/keymaps/ray/keymap.c **** bool muse_mode = false;
 232:keyboards/planck/keymaps/ray/keymap.c **** uint8_t last_muse_note = 0;
 233:keyboards/planck/keymaps/ray/keymap.c **** uint16_t muse_counter = 0;
 234:keyboards/planck/keymaps/ray/keymap.c **** uint8_t muse_offset = 70;
 235:keyboards/planck/keymaps/ray/keymap.c **** uint16_t muse_tempo = 50;
 236:keyboards/planck/keymaps/ray/keymap.c **** 
 237:keyboards/planck/keymaps/ray/keymap.c **** void encoder_update(bool clockwise) {
 305              		.loc 1 237 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL35:
 238:keyboards/planck/keymaps/ray/keymap.c ****   if (muse_mode) {
 311              		.loc 1 238 0
 312 0000 0E4B     		ldr	r3, .L50
 313 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 314 0004 9BB1     		cbz	r3, .L41
 239:keyboards/planck/keymaps/ray/keymap.c ****     if (IS_LAYER_ON(_RAISE)) {
 315              		.loc 1 239 0
 316 0006 0E4B     		ldr	r3, .L50+4
 317 0008 1B68     		ldr	r3, [r3]
 318 000a 5B07     		lsls	r3, r3, #29
 319 000c 07D5     		bpl	.L42
 320 000e 0D4A     		ldr	r2, .L50+8
 321 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 240:keyboards/planck/keymaps/ray/keymap.c ****       if (clockwise) {
 322              		.loc 1 240 0
 323 0012 11B1     		cbz	r1, .L43
 241:keyboards/planck/keymaps/ray/keymap.c ****         muse_offset++;
 324              		.loc 1 241 0
 325 0014 0133     		adds	r3, r3, #1
 326              	.L49:
 242:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 243:keyboards/planck/keymaps/ray/keymap.c ****         muse_offset--;
 327              		.loc 1 243 0
 328 0016 1370     		strb	r3, [r2]
 329 0018 7047     		bx	lr
 330              	.L43:
 331 001a 013B     		subs	r3, r3, #1
 332 001c FBE7     		b	.L49
 333              	.L42:
 334 001e 0A4A     		ldr	r2, .L50+12
 335 0020 1388     		ldrh	r3, [r2]
 244:keyboards/planck/keymaps/ray/keymap.c ****       }
 245:keyboards/planck/keymaps/ray/keymap.c ****     } else {
 246:keyboards/planck/keymaps/ray/keymap.c ****       if (clockwise) {
 336              		.loc 1 246 0
 337 0022 11B1     		cbz	r1, .L45
 247:keyboards/planck/keymaps/ray/keymap.c ****         muse_tempo+=1;
 338              		.loc 1 247 0
 339 0024 0133     		adds	r3, r3, #1
 340              	.L48:
 248:keyboards/planck/keymaps/ray/keymap.c ****       } else {
 249:keyboards/planck/keymaps/ray/keymap.c ****         muse_tempo-=1;
 341              		.loc 1 249 0
 342 0026 1380     		strh	r3, [r2]	@ movhi
 250:keyboards/planck/keymaps/ray/keymap.c ****       }
 251:keyboards/planck/keymaps/ray/keymap.c ****     }
 252:keyboards/planck/keymaps/ray/keymap.c ****   } else {
 253:keyboards/planck/keymaps/ray/keymap.c ****     if (clockwise) {
 254:keyboards/planck/keymaps/ray/keymap.c ****       #ifdef MOUSEKEY_ENABLE
 255:keyboards/planck/keymaps/ray/keymap.c ****         tap_code(KC_MS_WH_DOWN);
 256:keyboards/planck/keymaps/ray/keymap.c ****       #else
 257:keyboards/planck/keymaps/ray/keymap.c ****         tap_code(KC_PGDN);
 258:keyboards/planck/keymaps/ray/keymap.c ****       #endif
 259:keyboards/planck/keymaps/ray/keymap.c ****     } else {
 260:keyboards/planck/keymaps/ray/keymap.c ****       #ifdef MOUSEKEY_ENABLE
 261:keyboards/planck/keymaps/ray/keymap.c ****         tap_code(KC_MS_WH_UP);
 262:keyboards/planck/keymaps/ray/keymap.c ****       #else
 263:keyboards/planck/keymaps/ray/keymap.c ****         tap_code(KC_PGUP);
 264:keyboards/planck/keymaps/ray/keymap.c ****       #endif
 265:keyboards/planck/keymaps/ray/keymap.c ****     }
 266:keyboards/planck/keymaps/ray/keymap.c ****   }
 267:keyboards/planck/keymaps/ray/keymap.c **** }
 343              		.loc 1 267 0
 344 0028 7047     		bx	lr
 345              	.L45:
 249:keyboards/planck/keymaps/ray/keymap.c ****       }
 346              		.loc 1 249 0
 347 002a 013B     		subs	r3, r3, #1
 348 002c FBE7     		b	.L48
 349              	.L41:
 253:keyboards/planck/keymaps/ray/keymap.c ****       #ifdef MOUSEKEY_ENABLE
 350              		.loc 1 253 0
 351 002e 11B1     		cbz	r1, .L46
 255:keyboards/planck/keymaps/ray/keymap.c ****       #else
 352              		.loc 1 255 0
 353 0030 FA20     		movs	r0, #250
 354              	.LVL36:
 355              	.L47:
 261:keyboards/planck/keymaps/ray/keymap.c ****       #else
 356              		.loc 1 261 0
 357 0032 FFF7FEBF 		b	tap_code
 358              	.LVL37:
 359              	.L46:
 360 0036 F920     		movs	r0, #249
 361              	.LVL38:
 362 0038 FBE7     		b	.L47
 363              	.L51:
 364 003a 00BF     		.align	2
 365              	.L50:
 366 003c 00000000 		.word	.LANCHOR0
 367 0040 00000000 		.word	layer_state
 368 0044 00000000 		.word	.LANCHOR1
 369 0048 00000000 		.word	.LANCHOR2
 370              		.cfi_endproc
 371              	.LFE289:
 373              		.section	.text.dip_switch_update_user,"ax",%progbits
 374              		.align	1
 375              		.global	dip_switch_update_user
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu softvfp
 381              	dip_switch_update_user:
 382              	.LFB290:
 268:keyboards/planck/keymaps/ray/keymap.c **** 
 269:keyboards/planck/keymaps/ray/keymap.c **** void dip_switch_update_user(uint8_t index, bool active) {
 383              		.loc 1 269 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              	.LVL39:
 388 0000 10B5     		push	{r4, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
 270:keyboards/planck/keymaps/ray/keymap.c ****     switch (index) {
 392              		.loc 1 270 0
 393 0002 0246     		mov	r2, r0
 394 0004 10B1     		cbz	r0, .L54
 395 0006 0128     		cmp	r0, #1
 396 0008 18D0     		beq	.L55
 397              	.LVL40:
 398              	.L52:
 271:keyboards/planck/keymaps/ray/keymap.c ****         case 0: {
 272:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 273:keyboards/planck/keymaps/ray/keymap.c ****             static bool play_sound = false;
 274:keyboards/planck/keymaps/ray/keymap.c **** #endif
 275:keyboards/planck/keymaps/ray/keymap.c ****             if (active) {
 276:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 277:keyboards/planck/keymaps/ray/keymap.c ****                 if (play_sound) { PLAY_SONG(plover_song); }
 278:keyboards/planck/keymaps/ray/keymap.c **** #endif
 279:keyboards/planck/keymaps/ray/keymap.c ****                 layer_on(_ADJUST);
 280:keyboards/planck/keymaps/ray/keymap.c ****             } else {
 281:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 282:keyboards/planck/keymaps/ray/keymap.c ****                 if (play_sound) { PLAY_SONG(plover_gb_song); }
 283:keyboards/planck/keymaps/ray/keymap.c **** #endif
 284:keyboards/planck/keymaps/ray/keymap.c ****                 layer_off(_ADJUST);
 285:keyboards/planck/keymaps/ray/keymap.c ****             }
 286:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 287:keyboards/planck/keymaps/ray/keymap.c ****             play_sound = true;
 288:keyboards/planck/keymaps/ray/keymap.c **** #endif
 289:keyboards/planck/keymaps/ray/keymap.c ****             break;
 290:keyboards/planck/keymaps/ray/keymap.c ****         }
 291:keyboards/planck/keymaps/ray/keymap.c ****         case 1:
 292:keyboards/planck/keymaps/ray/keymap.c ****             if (active) {
 293:keyboards/planck/keymaps/ray/keymap.c ****                 muse_mode = true;
 294:keyboards/planck/keymaps/ray/keymap.c ****             } else {
 295:keyboards/planck/keymaps/ray/keymap.c ****                 muse_mode = false;
 296:keyboards/planck/keymaps/ray/keymap.c ****             }
 297:keyboards/planck/keymaps/ray/keymap.c ****     }
 298:keyboards/planck/keymaps/ray/keymap.c **** }
 399              		.loc 1 298 0
 400 000a 10BD     		pop	{r4, pc}
 401              	.LVL41:
 402              	.L54:
 403 000c 0E4C     		ldr	r4, .L67
 404 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 405              	.LVL42:
 406              	.LBB2:
 275:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 407              		.loc 1 275 0
 408 0010 51B1     		cbz	r1, .L56
 277:keyboards/planck/keymaps/ray/keymap.c **** #endif
 409              		.loc 1 277 0
 410 0012 18B1     		cbz	r0, .L57
 277:keyboards/planck/keymaps/ray/keymap.c **** #endif
 411              		.loc 1 277 0 is_stmt 0 discriminator 1
 412 0014 0621     		movs	r1, #6
 413              	.LVL43:
 414 0016 0D48     		ldr	r0, .L67+4
 415 0018 FFF7FEFF 		bl	play_notes
 416              	.LVL44:
 417              	.L57:
 279:keyboards/planck/keymaps/ray/keymap.c ****             } else {
 418              		.loc 1 279 0 is_stmt 1
 419 001c 0320     		movs	r0, #3
 420 001e FFF7FEFF 		bl	layer_on
 421              	.LVL45:
 422              	.L58:
 287:keyboards/planck/keymaps/ray/keymap.c **** #endif
 423              		.loc 1 287 0
 424 0022 0123     		movs	r3, #1
 425 0024 2370     		strb	r3, [r4]
 289:keyboards/planck/keymaps/ray/keymap.c ****         }
 426              		.loc 1 289 0
 427 0026 F0E7     		b	.L52
 428              	.LVL46:
 429              	.L56:
 282:keyboards/planck/keymaps/ray/keymap.c **** #endif
 430              		.loc 1 282 0
 431 0028 20B1     		cbz	r0, .L59
 282:keyboards/planck/keymaps/ray/keymap.c **** #endif
 432              		.loc 1 282 0 is_stmt 0 discriminator 1
 433 002a 0A46     		mov	r2, r1
 434 002c 0848     		ldr	r0, .L67+8
 435 002e 0621     		movs	r1, #6
 436              	.LVL47:
 437 0030 FFF7FEFF 		bl	play_notes
 438              	.LVL48:
 439              	.L59:
 284:keyboards/planck/keymaps/ray/keymap.c ****             }
 440              		.loc 1 284 0 is_stmt 1
 441 0034 0320     		movs	r0, #3
 442 0036 FFF7FEFF 		bl	layer_off
 443              	.LVL49:
 444 003a F2E7     		b	.L58
 445              	.LVL50:
 446              	.L55:
 447              	.LBE2:
 293:keyboards/planck/keymaps/ray/keymap.c ****             } else {
 448              		.loc 1 293 0
 449 003c 0029     		cmp	r1, #0
 450 003e 054B     		ldr	r3, .L67+12
 451 0040 18BF     		it	ne
 452 0042 0146     		movne	r1, r0
 453              	.LVL51:
 454 0044 1970     		strb	r1, [r3]
 455 0046 E0E7     		b	.L52
 456              	.L68:
 457              		.align	2
 458              	.L67:
 459 0048 00000000 		.word	.LANCHOR3
 460 004c 00000000 		.word	.LANCHOR4
 461 0050 00000000 		.word	.LANCHOR5
 462 0054 00000000 		.word	.LANCHOR0
 463              		.cfi_endproc
 464              	.LFE290:
 466              		.section	.text.matrix_scan_user,"ax",%progbits
 467              		.align	1
 468              		.global	matrix_scan_user
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu softvfp
 474              	matrix_scan_user:
 475              	.LFB291:
 299:keyboards/planck/keymaps/ray/keymap.c **** 
 300:keyboards/planck/keymaps/ray/keymap.c **** void matrix_scan_user(void) {
 476              		.loc 1 300 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 40
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480 0000 70B5     		push	{r4, r5, r6, lr}
 481              		.cfi_def_cfa_offset 16
 482              		.cfi_offset 4, -16
 483              		.cfi_offset 5, -12
 484              		.cfi_offset 6, -8
 485              		.cfi_offset 14, -4
 301:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 302:keyboards/planck/keymaps/ray/keymap.c ****     if (muse_mode) {
 486              		.loc 1 302 0
 487 0002 214A     		ldr	r2, .L80
 488 0004 214C     		ldr	r4, .L80+4
 489 0006 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 490 0008 2388     		ldrh	r3, [r4]
 300:keyboards/planck/keymaps/ray/keymap.c **** #ifdef AUDIO_ENABLE
 491              		.loc 1 300 0
 492 000a 8AB0     		sub	sp, sp, #40
 493              		.cfi_def_cfa_offset 56
 494 000c 2546     		mov	r5, r4
 495              		.loc 1 302 0
 496 000e 002E     		cmp	r6, #0
 497 0010 34D0     		beq	.L70
 303:keyboards/planck/keymaps/ray/keymap.c ****         if (muse_counter == 0) {
 498              		.loc 1 303 0
 499 0012 43BB     		cbnz	r3, .L72
 500              	.LBB3:
 304:keyboards/planck/keymaps/ray/keymap.c ****             uint8_t muse_note = muse_offset + SCALE[muse_clock_pulse()];
 501              		.loc 1 304 0
 502 0014 1E4B     		ldr	r3, .L80+8
 503 0016 01AA     		add	r2, sp, #4
 504 0018 03F12006 		add	r6, r3, #32
 505              	.L73:
 506 001c 1868     		ldr	r0, [r3]	@ unaligned
 507 001e 5968     		ldr	r1, [r3, #4]	@ unaligned
 508 0020 1446     		mov	r4, r2
 509 0022 03C4     		stmia	r4!, {r0, r1}
 510 0024 0833     		adds	r3, r3, #8
 511 0026 B342     		cmp	r3, r6
 512 0028 2246     		mov	r2, r4
 513 002a F7D1     		bne	.L73
 514 002c 1988     		ldrh	r1, [r3]	@ unaligned
 515 002e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 516 0030 A370     		strb	r3, [r4, #2]
 517 0032 2180     		strh	r1, [r4]	@ unaligned
 518 0034 FFF7FEFF 		bl	muse_clock_pulse
 519              	.LVL52:
 520 0038 0AAB     		add	r3, sp, #40
 521 003a 1844     		add	r0, r0, r3
 522 003c 154B     		ldr	r3, .L80+12
 523 003e 10F8244C 		ldrb	r4, [r0, #-36]	@ zero_extendqisi2
 524 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 305:keyboards/planck/keymaps/ray/keymap.c ****             if (muse_note != last_muse_note) {
 525              		.loc 1 305 0
 526 0044 144E     		ldr	r6, .L80+16
 304:keyboards/planck/keymaps/ray/keymap.c ****             uint8_t muse_note = muse_offset + SCALE[muse_clock_pulse()];
 527              		.loc 1 304 0
 528 0046 1C44     		add	r4, r4, r3
 529              		.loc 1 305 0
 530 0048 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 304:keyboards/planck/keymaps/ray/keymap.c ****             uint8_t muse_note = muse_offset + SCALE[muse_clock_pulse()];
 531              		.loc 1 304 0
 532 004a E4B2     		uxtb	r4, r4
 533              	.LVL53:
 534              		.loc 1 305 0
 535 004c A042     		cmp	r0, r4
 536 004e 0AD0     		beq	.L72
 306:keyboards/planck/keymaps/ray/keymap.c ****                 stop_note(compute_freq_for_midi_note(last_muse_note));
 537              		.loc 1 306 0
 538 0050 FFF7FEFF 		bl	compute_freq_for_midi_note
 539              	.LVL54:
 540 0054 FFF7FEFF 		bl	stop_note
 541              	.LVL55:
 307:keyboards/planck/keymaps/ray/keymap.c ****                 play_note(compute_freq_for_midi_note(muse_note), 0xF);
 542              		.loc 1 307 0
 543 0058 2046     		mov	r0, r4
 544 005a FFF7FEFF 		bl	compute_freq_for_midi_note
 545              	.LVL56:
 546 005e 0F21     		movs	r1, #15
 547 0060 FFF7FEFF 		bl	play_note
 548              	.LVL57:
 308:keyboards/planck/keymaps/ray/keymap.c ****                 last_muse_note = muse_note;
 549              		.loc 1 308 0
 550 0064 3470     		strb	r4, [r6]
 551              	.LVL58:
 552              	.L72:
 553              	.LBE3:
 309:keyboards/planck/keymaps/ray/keymap.c ****             }
 310:keyboards/planck/keymaps/ray/keymap.c ****         }
 311:keyboards/planck/keymaps/ray/keymap.c ****         muse_counter = (muse_counter + 1) % muse_tempo;
 554              		.loc 1 311 0
 555 0066 0D4A     		ldr	r2, .L80+20
 556 0068 2B88     		ldrh	r3, [r5]
 557 006a 1188     		ldrh	r1, [r2]
 558 006c 0133     		adds	r3, r3, #1
 559 006e 93FBF1F2 		sdiv	r2, r3, r1
 560 0072 01FB1233 		mls	r3, r1, r2, r3
 561 0076 2B80     		strh	r3, [r5]	@ movhi
 562              	.L69:
 312:keyboards/planck/keymaps/ray/keymap.c ****     } else {
 313:keyboards/planck/keymaps/ray/keymap.c ****         if (muse_counter) {
 314:keyboards/planck/keymaps/ray/keymap.c ****             stop_all_notes();
 315:keyboards/planck/keymaps/ray/keymap.c ****             muse_counter = 0;
 316:keyboards/planck/keymaps/ray/keymap.c ****         }
 317:keyboards/planck/keymaps/ray/keymap.c ****     }
 318:keyboards/planck/keymaps/ray/keymap.c **** #endif
 319:keyboards/planck/keymaps/ray/keymap.c **** }
 563              		.loc 1 319 0
 564 0078 0AB0     		add	sp, sp, #40
 565              		.cfi_remember_state
 566              		.cfi_def_cfa_offset 16
 567              		@ sp needed
 568 007a 70BD     		pop	{r4, r5, r6, pc}
 569              	.L70:
 570              		.cfi_restore_state
 313:keyboards/planck/keymaps/ray/keymap.c ****             stop_all_notes();
 571              		.loc 1 313 0
 572 007c 002B     		cmp	r3, #0
 573 007e FBD0     		beq	.L69
 314:keyboards/planck/keymaps/ray/keymap.c ****             muse_counter = 0;
 574              		.loc 1 314 0
 575 0080 FFF7FEFF 		bl	stop_all_notes
 576              	.LVL59:
 315:keyboards/planck/keymaps/ray/keymap.c ****         }
 577              		.loc 1 315 0
 578 0084 2680     		strh	r6, [r4]	@ movhi
 579              		.loc 1 319 0
 580 0086 F7E7     		b	.L69
 581              	.L81:
 582              		.align	2
 583              	.L80:
 584 0088 00000000 		.word	.LANCHOR0
 585 008c 00000000 		.word	.LANCHOR6
 586 0090 00000000 		.word	.LANCHOR7
 587 0094 00000000 		.word	.LANCHOR1
 588 0098 00000000 		.word	.LANCHOR8
 589 009c 00000000 		.word	.LANCHOR2
 590              		.cfi_endproc
 591              	.LFE291:
 593              		.section	.text.music_mask_user,"ax",%progbits
 594              		.align	1
 595              		.global	music_mask_user
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu softvfp
 601              	music_mask_user:
 602              	.LFB292:
 320:keyboards/planck/keymaps/ray/keymap.c **** 
 321:keyboards/planck/keymaps/ray/keymap.c **** bool music_mask_user(uint16_t keycode) {
 603              		.loc 1 321 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL60:
 322:keyboards/planck/keymaps/ray/keymap.c ****   switch (keycode) {
 609              		.loc 1 322 0
 610 0000 A0F5A240 		sub	r0, r0, #20736
 611              	.LVL61:
 612 0004 0138     		subs	r0, r0, #1
 323:keyboards/planck/keymaps/ray/keymap.c ****     case RAISE:
 324:keyboards/planck/keymaps/ray/keymap.c ****     case LOWER:
 325:keyboards/planck/keymaps/ray/keymap.c ****       return false;
 326:keyboards/planck/keymaps/ray/keymap.c ****     default:
 327:keyboards/planck/keymaps/ray/keymap.c ****       return true;
 328:keyboards/planck/keymaps/ray/keymap.c ****   }
 329:keyboards/planck/keymaps/ray/keymap.c **** }
 613              		.loc 1 329 0
 614 0006 0128     		cmp	r0, #1
 615 0008 94BF     		ite	ls
 616 000a 0020     		movls	r0, #0
 617 000c 0120     		movhi	r0, #1
 618 000e 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE292:
 622              		.global	muse_tempo
 623              		.global	muse_offset
 624              		.global	muse_counter
 625              		.global	last_muse_note
 626              		.global	muse_mode
 627              		.global	plover_gb_song
 628              		.global	plover_song
 629              		.global	keymaps
 630              		.section	.rodata
 631              		.set	.LANCHOR7,. + 0
 632              	.LC0:
 633 0000 00       		.byte	0
 634 0001 02       		.byte	2
 635 0002 04       		.byte	4
 636 0003 05       		.byte	5
 637 0004 07       		.byte	7
 638 0005 09       		.byte	9
 639 0006 0B       		.byte	11
 640 0007 0C       		.byte	12
 641 0008 0E       		.byte	14
 642 0009 10       		.byte	16
 643 000a 11       		.byte	17
 644 000b 13       		.byte	19
 645 000c 15       		.byte	21
 646 000d 17       		.byte	23
 647 000e 18       		.byte	24
 648 000f 1A       		.byte	26
 649 0010 1C       		.byte	28
 650 0011 1D       		.byte	29
 651 0012 1F       		.byte	31
 652 0013 21       		.byte	33
 653 0014 23       		.byte	35
 654 0015 24       		.byte	36
 655 0016 26       		.byte	38
 656 0017 28       		.byte	40
 657 0018 29       		.byte	41
 658 0019 2B       		.byte	43
 659 001a 2D       		.byte	45
 660 001b 2F       		.byte	47
 661 001c 30       		.byte	48
 662 001d 32       		.byte	50
 663 001e 34       		.byte	52
 664 001f 35       		.byte	53
 665 0020 37       		.byte	55
 666 0021 39       		.byte	57
 667 0022 3B       		.byte	59
 668              		.section	.bss.last_muse_note,"aw",%nobits
 669              		.set	.LANCHOR8,. + 0
 672              	last_muse_note:
 673 0000 00       		.space	1
 674              		.section	.bss.muse_counter,"aw",%nobits
 675              		.align	1
 676              		.set	.LANCHOR6,. + 0
 679              	muse_counter:
 680 0000 0000     		.space	2
 681              		.section	.bss.muse_mode,"aw",%nobits
 682              		.set	.LANCHOR0,. + 0
 685              	muse_mode:
 686 0000 00       		.space	1
 687              		.section	.bss.play_sound.10971,"aw",%nobits
 688              		.set	.LANCHOR3,. + 0
 691              	play_sound.10971:
 692 0000 00       		.space	1
 693              		.section	.data.muse_offset,"aw",%progbits
 694              		.set	.LANCHOR1,. + 0
 697              	muse_offset:
 698 0000 46       		.byte	70
 699              		.section	.data.muse_tempo,"aw",%progbits
 700              		.align	1
 701              		.set	.LANCHOR2,. + 0
 704              	muse_tempo:
 705 0000 3200     		.short	50
 706              		.section	.data.plover_gb_song,"aw",%progbits
 707              		.align	2
 708              		.set	.LANCHOR5,. + 0
 711              	plover_gb_song:
 712 0000 0AA7CF44 		.word	1154459402
 713 0004 00000041 		.word	1090519040
 714 0008 0000DC44 		.word	1155268608
 715 000c 00000041 		.word	1090519040
 716 0010 0000803F 		.word	1065353216
 717 0014 00008040 		.word	1082130432
 718 0018 00005C45 		.word	1163657216
 719 001c 00004041 		.word	1094713344
 720 0020 0000803F 		.word	1065353216
 721 0024 00008040 		.word	1082130432
 722 0028 52D02445 		.word	1160040530
 723 002c 00004041 		.word	1094713344
 724              		.section	.data.plover_song,"aw",%progbits
 725              		.align	2
 726              		.set	.LANCHOR4,. + 0
 729              	plover_song:
 730 0000 0AA7CF44 		.word	1154459402
 731 0004 00000041 		.word	1090519040
 732 0008 0000DC44 		.word	1155268608
 733 000c 00000041 		.word	1090519040
 734 0010 0000803F 		.word	1065353216
 735 0014 00008040 		.word	1082130432
 736 0018 52D02445 		.word	1160040530
 737 001c 00004041 		.word	1094713344
 738 0020 0000803F 		.word	1065353216
 739 0024 00008040 		.word	1082130432
 740 0028 00005C45 		.word	1163657216
 741 002c 00004041 		.word	1094713344
 742              		.section	.rodata.keymaps,"a",%progbits
 743              		.align	1
 746              	keymaps:
 747 0000 2B00     		.short	43
 748 0002 1400     		.short	20
 749 0004 1A00     		.short	26
 750 0006 0800     		.short	8
 751 0008 1500     		.short	21
 752 000a 1700     		.short	23
 753 000c 2900     		.short	41
 754 000e 0400     		.short	4
 755 0010 1600     		.short	22
 756 0012 0700     		.short	7
 757 0014 0900     		.short	9
 758 0016 0A00     		.short	10
 759 0018 E100     		.short	225
 760 001a 1D00     		.short	29
 761 001c 1B00     		.short	27
 762 001e 0600     		.short	6
 763 0020 1900     		.short	25
 764 0022 0500     		.short	5
 765 0024 025D     		.short	23810
 766 0026 E000     		.short	224
 767 0028 E200     		.short	226
 768 002a 5000     		.short	80
 769 002c 5100     		.short	81
 770 002e 4F00     		.short	79
 771 0030 1C00     		.short	28
 772 0032 1800     		.short	24
 773 0034 0C00     		.short	12
 774 0036 1200     		.short	18
 775 0038 1300     		.short	19
 776 003a 2A00     		.short	42
 777 003c 0B00     		.short	11
 778 003e 0D00     		.short	13
 779 0040 0E00     		.short	14
 780 0042 0F00     		.short	15
 781 0044 3300     		.short	51
 782 0046 3400     		.short	52
 783 0048 1100     		.short	17
 784 004a 1000     		.short	16
 785 004c 3600     		.short	54
 786 004e 3700     		.short	55
 787 0050 5200     		.short	82
 788 0052 2800     		.short	40
 789 0054 2C61     		.short	24876
 790 0056 0251     		.short	20738
 791 0058 3800     		.short	56
 792 005a E300     		.short	227
 793 005c 0151     		.short	20737
 794 005e 2C62     		.short	25132
 795 0060 3502     		.short	565
 796 0062 1E02     		.short	542
 797 0064 1F02     		.short	543
 798 0066 2002     		.short	544
 799 0068 2102     		.short	545
 800 006a 2202     		.short	546
 801 006c 0A5D     		.short	23818
 802 006e 3A00     		.short	58
 803 0070 3B00     		.short	59
 804 0072 3C00     		.short	60
 805 0074 3D00     		.short	61
 806 0076 3E00     		.short	62
 807 0078 0100     		.short	1
 808 007a 4000     		.short	64
 809 007c 4100     		.short	65
 810 007e 4200     		.short	66
 811 0080 4300     		.short	67
 812 0082 4400     		.short	68
 813 0084 095D     		.short	23817
 814 0086 0100     		.short	1
 815 0088 0100     		.short	1
 816 008a 0100     		.short	1
 817 008c 0100     		.short	1
 818 008e 0100     		.short	1
 819 0090 2302     		.short	547
 820 0092 2402     		.short	548
 821 0094 2502     		.short	549
 822 0096 2602     		.short	550
 823 0098 2702     		.short	551
 824 009a 2A00     		.short	42
 825 009c 3F00     		.short	63
 826 009e 2D02     		.short	557
 827 00a0 2E02     		.short	558
 828 00a2 055D     		.short	23813
 829 00a4 045D     		.short	23812
 830 00a6 3102     		.short	561
 831 00a8 4500     		.short	69
 832 00aa 065D     		.short	23814
 833 00ac 0100     		.short	1
 834 00ae 035D     		.short	23811
 835 00b0 0100     		.short	1
 836 00b2 3100     		.short	49
 837 00b4 0100     		.short	1
 838 00b6 0100     		.short	1
 839 00b8 085D     		.short	23816
 840 00ba 0100     		.short	1
 841 00bc 0100     		.short	1
 842 00be 0100     		.short	1
 843 00c0 3500     		.short	53
 844 00c2 1E00     		.short	30
 845 00c4 1F00     		.short	31
 846 00c6 2000     		.short	32
 847 00c8 2100     		.short	33
 848 00ca 2200     		.short	34
 849 00cc 4C00     		.short	76
 850 00ce 3A00     		.short	58
 851 00d0 3B00     		.short	59
 852 00d2 3C00     		.short	60
 853 00d4 3D00     		.short	61
 854 00d6 3E00     		.short	62
 855 00d8 0100     		.short	1
 856 00da 4000     		.short	64
 857 00dc 4100     		.short	65
 858 00de 4200     		.short	66
 859 00e0 4300     		.short	67
 860 00e2 4400     		.short	68
 861 00e4 0100     		.short	1
 862 00e6 0100     		.short	1
 863 00e8 0100     		.short	1
 864 00ea AB00     		.short	171
 865 00ec AE00     		.short	174
 866 00ee AA00     		.short	170
 867 00f0 2300     		.short	35
 868 00f2 2400     		.short	36
 869 00f4 2500     		.short	37
 870 00f6 2600     		.short	38
 871 00f8 2700     		.short	39
 872 00fa 2A00     		.short	42
 873 00fc 3F00     		.short	63
 874 00fe 2D00     		.short	45
 875 0100 2E00     		.short	46
 876 0102 2F02     		.short	559
 877 0104 3002     		.short	560
 878 0106 3100     		.short	49
 879 0108 4500     		.short	69
 880 010a 3602     		.short	566
 881 010c 3702     		.short	567
 882 010e 2F00     		.short	47
 883 0110 3000     		.short	48
 884 0112 A900     		.short	169
 885 0114 0100     		.short	1
 886 0116 0100     		.short	1
 887 0118 075D     		.short	23815
 888 011a 0100     		.short	1
 889 011c 0100     		.short	1
 890 011e 0100     		.short	1
 891 0120 0100     		.short	1
 892 0122 005C     		.short	23552
 893 0124 015C     		.short	23553
 894 0126 C25C     		.short	23746
 895 0128 C35C     		.short	23747
 896 012a C55C     		.short	23749
 897 012c 0100     		.short	1
 898 012e 0100     		.short	1
 899 0130 295C     		.short	23593
 900 0132 1D5C     		.short	23581
 901 0134 1E5C     		.short	23582
 902 0136 135C     		.short	23571
 903 0138 0100     		.short	1
 904 013a 2B5C     		.short	23595
 905 013c 2A5C     		.short	23594
 906 013e 265C     		.short	23590
 907 0140 275C     		.short	23591
 908 0142 2C5C     		.short	23596
 909 0144 015D     		.short	23809
 910 0146 0100     		.short	1
 911 0148 0100     		.short	1
 912 014a 0100     		.short	1
 913 014c 0100     		.short	1
 914 014e 0100     		.short	1
 915 0150 C65C     		.short	23750
 916 0152 C75C     		.short	23751
 917 0154 C85C     		.short	23752
 918 0156 C95C     		.short	23753
 919 0158 CA5C     		.short	23754
 920 015a 4C00     		.short	76
 921 015c 0A5C     		.short	23562
 922 015e 2D00     		.short	45
 923 0160 2E00     		.short	46
 924 0162 2F00     		.short	47
 925 0164 3000     		.short	48
 926 0166 0100     		.short	1
 927 0168 2D5C     		.short	23597
 928 016a 0000     		.short	0
 929 016c 0000     		.short	0
 930 016e 0100     		.short	1
 931 0170 0100     		.short	1
 932 0172 0100     		.short	1
 933 0174 0100     		.short	1
 934 0176 0100     		.short	1
 935 0178 0100     		.short	1
 936 017a 0100     		.short	1
 937 017c 0100     		.short	1
 938 017e 0100     		.short	1
 939              		.section	.rodata.process_record_user.str1.1,"aMS",%progbits,1
 940              	.LC1:
 941 0000 6D6F6465 		.ascii	"mode just switched to qwerty and this is a huge str"
 941      206A7573 
 941      74207377 
 941      69746368 
 941      65642074 
 942 0033 696E670A 		.ascii	"ing\012\000"
 942      00
 943              	.LC2:
 944 0038 7B252020 		.ascii	"{%  %}\000"
 944      257D00
 945              	.LC3:
 946 003f 015000   		.ascii	"\001P\000"
 947              	.LC4:
 948 0042 2829203D 		.ascii	"() => {}\000"
 948      3E207B7D 
 948      00
 949              	.LC5:
 950 004b 3D3E00   		.ascii	"=>\000"
 951              	.LC6:
 952 004e 3C3E3C2F 		.ascii	"<></>\000"
 952      3E00
 953              	.LC7:
 954 0054 02E300   		.ascii	"\002\343\000"
 955              	.LC8:
 956 0057 02E200   		.ascii	"\002\342\000"
 957              	.LC9:
 958 005a 012100   		.ascii	"\001!\000"
 959              	.LC10:
 960 005d 03E300   		.ascii	"\003\343\000"
 961              	.LC11:
 962 0060 03E200   		.ascii	"\003\342\000"
 963              	.LC12:
 964 0063 012200   		.ascii	"\001\"\000"
 965              	.LC13:
 966 0066 013100   		.ascii	"\0011\000"
 967              	.LC14:
 968 0069 012900   		.ascii	"\001)\000"
 969              	.LC15:
 970 006c 02E100   		.ascii	"\002\341\000"
 971              	.LC16:
 972 006f 013300   		.ascii	"\0013\000"
 973              	.LC17:
 974 0072 03E100   		.ascii	"\003\341\000"
 975              	.LC18:
 976 0075 011A00   		.ascii	"\001\032\000"
 977              	.LC19:
 978 0078 011400   		.ascii	"\001\024\000"
 979              	.LC20:
 980 007b 012800   		.ascii	"\001(\000"
 981              		.text
 982              	.Letext0:
 983              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 984              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 985              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 986              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 987              		.file 6 "./lib/chibios/os/rt/include/chsystypes.h"
 988              		.file 7 "./lib/chibios/os/rt/include/chschd.h"
 989              		.file 8 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 990              		.file 9 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 991              		.file 10 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 992              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 993              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 994              		.file 13 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 995              		.file 14 "./lib/chibios/os/rt/include/chtm.h"
 996              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 997              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 998              		.file 17 "./lib/chibios/os/rt/include/chsys.h"
 999              		.file 18 "./lib/chibios/os/rt/include/chregistry.h"
 1000              		.file 19 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 1001              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1002              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1003              		.file 22 "./lib/chibios/os/hal/include/hal_dac.h"
 1004              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 1005              		.file 24 "./lib/chibios/os/hal/include/hal_gpt.h"
 1006              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 1007              		.file 26 "./lib/chibios/os/hal/include/hal_i2c.h"
 1008              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1009              		.file 28 "./lib/chibios/os/hal/include/hal_pwm.h"
 1010              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 1011              		.file 30 "./lib/chibios/os/hal/include/hal_usb.h"
 1012              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1013              		.file 32 "tmk_core/common/keyboard.h"
 1014              		.file 33 "tmk_core/common/keycode.h"
 1015              		.file 34 "tmk_core/common/action_code.h"
 1016              		.file 35 "tmk_core/common/action.h"
 1017              		.file 36 "tmk_core/common/report.h"
 1018              		.file 37 "tmk_core/common/host.h"
 1019              		.file 38 "tmk_core/common/debug.h"
 1020              		.file 39 "quantum/keycode_config.h"
 1021              		.file 40 "quantum/quantum_keycodes.h"
 1022              		.file 41 "quantum/keymap.h"
 1023              		.file 42 "tmk_core/common/action_layer.h"
 1024              		.file 43 "tmk_core/common/timer.h"
 1025              		.file 44 "tmk_core/common/action_util.h"
 1026              		.file 45 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1027              		.file 46 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1028              		.file 47 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1029              		.file 48 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 1030              		.file 49 "quantum/audio/luts.h"
 1031              		.file 50 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 1032              		.file 51 "quantum/process_keycode/process_music.h"
 1033              		.file 52 "quantum/quantum.h"
 1034              		.file 53 "quantum/audio/muse.h"
 1035              		.file 54 "quantum/process_keycode/process_audio.h"
 1036              		.file 55 "quantum/audio/audio.h"
 1037              		.file 56 "tmk_core/common/chibios/printf.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:16     .text.layer_state_set_user:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:23     .text.layer_state_set_user:0000000000000000 layer_state_set_user
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:42     .text.process_record_user:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:49     .text.process_record_user:0000000000000000 process_record_user
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:70     .text.process_record_user:0000000000000010 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:80     .text.process_record_user:000000000000001a $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:272    .text.process_record_user:00000000000000f8 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:296    .text.encoder_update_user:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:303    .text.encoder_update_user:0000000000000000 encoder_update_user
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:366    .text.encoder_update_user:000000000000003c $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:374    .text.dip_switch_update_user:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:381    .text.dip_switch_update_user:0000000000000000 dip_switch_update_user
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:459    .text.dip_switch_update_user:0000000000000048 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:467    .text.matrix_scan_user:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:474    .text.matrix_scan_user:0000000000000000 matrix_scan_user
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:584    .text.matrix_scan_user:0000000000000088 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:594    .text.music_mask_user:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:601    .text.music_mask_user:0000000000000000 music_mask_user
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:704    .data.muse_tempo:0000000000000000 muse_tempo
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:697    .data.muse_offset:0000000000000000 muse_offset
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:679    .bss.muse_counter:0000000000000000 muse_counter
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:672    .bss.last_muse_note:0000000000000000 last_muse_note
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:685    .bss.muse_mode:0000000000000000 muse_mode
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:711    .data.plover_gb_song:0000000000000000 plover_gb_song
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:729    .data.plover_song:0000000000000000 plover_song
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:746    .rodata.keymaps:0000000000000000 keymaps
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:673    .bss.last_muse_note:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:675    .bss.muse_counter:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:686    .bss.muse_mode:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:691    .bss.play_sound.10971:0000000000000000 play_sound.10971
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:692    .bss.play_sound.10971:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:700    .data.muse_tempo:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:707    .data.plover_gb_song:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:725    .data.plover_song:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc2ef3FC.s:743    .rodata.keymaps:0000000000000000 $d

UNDEFINED SYMBOLS
update_tri_layer_state
tfp_printf
set_single_persistent_default_layer
register_code
unregister_code
send_string_P
tap_code
layer_state
play_notes
layer_on
layer_off
muse_clock_pulse
compute_freq_for_midi_note
stop_note
play_note
stop_all_notes
