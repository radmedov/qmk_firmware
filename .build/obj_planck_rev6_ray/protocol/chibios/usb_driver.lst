   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"usb_driver.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.obnotify,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	obnotify:
  23              	.LFB289:
  24              		.file 1 "tmk_core/protocol/chibios/usb_driver.c"
   1:tmk_core/protocol/chibios/usb_driver.c **** /*
   2:tmk_core/protocol/chibios/usb_driver.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:tmk_core/protocol/chibios/usb_driver.c **** 
   4:tmk_core/protocol/chibios/usb_driver.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:tmk_core/protocol/chibios/usb_driver.c ****     you may not use this file except in compliance with the License.
   6:tmk_core/protocol/chibios/usb_driver.c ****     You may obtain a copy of the License at
   7:tmk_core/protocol/chibios/usb_driver.c **** 
   8:tmk_core/protocol/chibios/usb_driver.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:tmk_core/protocol/chibios/usb_driver.c **** 
  10:tmk_core/protocol/chibios/usb_driver.c ****     Unless required by applicable law or agreed to in writing, software
  11:tmk_core/protocol/chibios/usb_driver.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:tmk_core/protocol/chibios/usb_driver.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:tmk_core/protocol/chibios/usb_driver.c ****     See the License for the specific language governing permissions and
  14:tmk_core/protocol/chibios/usb_driver.c ****     limitations under the License.
  15:tmk_core/protocol/chibios/usb_driver.c **** */
  16:tmk_core/protocol/chibios/usb_driver.c **** 
  17:tmk_core/protocol/chibios/usb_driver.c **** /**
  18:tmk_core/protocol/chibios/usb_driver.c ****  * @file    hal_serial_usb.c
  19:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Serial over USB Driver code.
  20:tmk_core/protocol/chibios/usb_driver.c ****  *
  21:tmk_core/protocol/chibios/usb_driver.c ****  * @addtogroup SERIAL_USB
  22:tmk_core/protocol/chibios/usb_driver.c ****  * @{
  23:tmk_core/protocol/chibios/usb_driver.c ****  */
  24:tmk_core/protocol/chibios/usb_driver.c **** 
  25:tmk_core/protocol/chibios/usb_driver.c **** #include "hal.h"
  26:tmk_core/protocol/chibios/usb_driver.c **** #include "usb_driver.h"
  27:tmk_core/protocol/chibios/usb_driver.c **** #include <string.h>
  28:tmk_core/protocol/chibios/usb_driver.c **** 
  29:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  30:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local definitions.                                                 */
  31:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  32:tmk_core/protocol/chibios/usb_driver.c **** 
  33:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  34:tmk_core/protocol/chibios/usb_driver.c **** /* Driver exported variables.                                                */
  35:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  36:tmk_core/protocol/chibios/usb_driver.c **** 
  37:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  38:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local variables and types.                                         */
  39:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  40:tmk_core/protocol/chibios/usb_driver.c **** 
  41:tmk_core/protocol/chibios/usb_driver.c **** /*
  42:tmk_core/protocol/chibios/usb_driver.c ****  * Current Line Coding.
  43:tmk_core/protocol/chibios/usb_driver.c ****  */
  44:tmk_core/protocol/chibios/usb_driver.c **** static cdc_linecoding_t linecoding = {{0x00, 0x96, 0x00, 0x00}, /* 38400.                          
  45:tmk_core/protocol/chibios/usb_driver.c ****                                       LC_STOP_1,
  46:tmk_core/protocol/chibios/usb_driver.c ****                                       LC_PARITY_NONE,
  47:tmk_core/protocol/chibios/usb_driver.c ****                                       8};
  48:tmk_core/protocol/chibios/usb_driver.c **** 
  49:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  50:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local functions.                                                   */
  51:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  52:tmk_core/protocol/chibios/usb_driver.c **** 
  53:tmk_core/protocol/chibios/usb_driver.c **** static bool qmkusb_start_receive(QMKUSBDriver *qmkusbp) {
  54:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
  55:tmk_core/protocol/chibios/usb_driver.c **** 
  56:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
  57:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
  58:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
  59:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  60:tmk_core/protocol/chibios/usb_driver.c ****     }
  61:tmk_core/protocol/chibios/usb_driver.c **** 
  62:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is already a transaction ongoing on the endpoint.*/
  63:tmk_core/protocol/chibios/usb_driver.c ****     if (usbGetReceiveStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
  64:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  65:tmk_core/protocol/chibios/usb_driver.c ****     }
  66:tmk_core/protocol/chibios/usb_driver.c **** 
  67:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is a buffer ready for incoming data.*/
  68:tmk_core/protocol/chibios/usb_driver.c ****     buf = ibqGetEmptyBufferI(&qmkusbp->ibqueue);
  69:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
  70:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  71:tmk_core/protocol/chibios/usb_driver.c ****     }
  72:tmk_core/protocol/chibios/usb_driver.c **** 
  73:tmk_core/protocol/chibios/usb_driver.c ****     /* Buffer found, starting a new transaction.*/
  74:tmk_core/protocol/chibios/usb_driver.c ****     usbStartReceiveI(qmkusbp->config->usbp, qmkusbp->config->bulk_out, buf, qmkusbp->ibqueue.bsize 
  75:tmk_core/protocol/chibios/usb_driver.c **** 
  76:tmk_core/protocol/chibios/usb_driver.c ****     return false;
  77:tmk_core/protocol/chibios/usb_driver.c **** }
  78:tmk_core/protocol/chibios/usb_driver.c **** 
  79:tmk_core/protocol/chibios/usb_driver.c **** /*
  80:tmk_core/protocol/chibios/usb_driver.c ****  * Interface implementation.
  81:tmk_core/protocol/chibios/usb_driver.c ****  */
  82:tmk_core/protocol/chibios/usb_driver.c **** 
  83:tmk_core/protocol/chibios/usb_driver.c **** static size_t _write(void *ip, const uint8_t *bp, size_t n) { return obqWriteTimeout(&((QMKUSBDrive
  84:tmk_core/protocol/chibios/usb_driver.c **** 
  85:tmk_core/protocol/chibios/usb_driver.c **** static size_t _read(void *ip, uint8_t *bp, size_t n) { return ibqReadTimeout(&((QMKUSBDriver *)ip)-
  86:tmk_core/protocol/chibios/usb_driver.c **** 
  87:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _put(void *ip, uint8_t b) { return obqPutTimeout(&((QMKUSBDriver *)ip)->obqueue, b, TI
  88:tmk_core/protocol/chibios/usb_driver.c **** 
  89:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _get(void *ip) { return ibqGetTimeout(&((QMKUSBDriver *)ip)->ibqueue, TIME_INFINITE); 
  90:tmk_core/protocol/chibios/usb_driver.c **** 
  91:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _putt(void *ip, uint8_t b, systime_t timeout) { return obqPutTimeout(&((QMKUSBDriver *
  92:tmk_core/protocol/chibios/usb_driver.c **** 
  93:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _gett(void *ip, systime_t timeout) { return ibqGetTimeout(&((QMKUSBDriver *)ip)->ibque
  94:tmk_core/protocol/chibios/usb_driver.c **** 
  95:tmk_core/protocol/chibios/usb_driver.c **** static size_t _writet(void *ip, const uint8_t *bp, size_t n, systime_t timeout) { return obqWriteTi
  96:tmk_core/protocol/chibios/usb_driver.c **** 
  97:tmk_core/protocol/chibios/usb_driver.c **** static size_t _readt(void *ip, uint8_t *bp, size_t n, systime_t timeout) { return ibqReadTimeout(&(
  98:tmk_core/protocol/chibios/usb_driver.c **** 
  99:tmk_core/protocol/chibios/usb_driver.c **** static const struct QMKUSBDriverVMT vmt = {_write, _read, _put, _get, _putt, _gett, _writet, _readt
 100:tmk_core/protocol/chibios/usb_driver.c **** 
 101:tmk_core/protocol/chibios/usb_driver.c **** /**
 102:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Notification of empty buffer released into the input buffers queue.
 103:tmk_core/protocol/chibios/usb_driver.c ****  *
 104:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] bqp       the buffers queue pointer.
 105:tmk_core/protocol/chibios/usb_driver.c ****  */
 106:tmk_core/protocol/chibios/usb_driver.c **** static void ibnotify(io_buffers_queue_t *bqp) {
 107:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
 108:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 109:tmk_core/protocol/chibios/usb_driver.c **** }
 110:tmk_core/protocol/chibios/usb_driver.c **** 
 111:tmk_core/protocol/chibios/usb_driver.c **** /**
 112:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Notification of filled buffer inserted into the output buffers queue.
 113:tmk_core/protocol/chibios/usb_driver.c ****  *
 114:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] bqp       the buffers queue pointer.
 115:tmk_core/protocol/chibios/usb_driver.c ****  */
 116:tmk_core/protocol/chibios/usb_driver.c **** static void obnotify(io_buffers_queue_t *bqp) {
  25              		.loc 1 116 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 13B5     		push	{r0, r1, r4, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
 117:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
 118:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
  34              		.loc 1 118 0
  35 0002 446B     		ldr	r4, [r0, #52]
  36              	.LVL1:
 119:tmk_core/protocol/chibios/usb_driver.c **** 
 120:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 121:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
 122:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
  37              		.loc 1 122 0
  38 0004 E36F     		ldr	r3, [r4, #124]
  39 0006 1A68     		ldr	r2, [r3]
  40 0008 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
  41 000a 0429     		cmp	r1, #4
  42 000c 15D1     		bne	.L1
  43              		.loc 1 122 0 is_stmt 0 discriminator 1
  44 000e 217A     		ldrb	r1, [r4, #8]	@ zero_extendqisi2
  45 0010 0229     		cmp	r1, #2
  46 0012 12D1     		bne	.L1
 123:tmk_core/protocol/chibios/usb_driver.c ****         return;
 124:tmk_core/protocol/chibios/usb_driver.c ****     }
 125:tmk_core/protocol/chibios/usb_driver.c **** 
 126:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is already a transaction ongoing on the endpoint.*/
 127:tmk_core/protocol/chibios/usb_driver.c ****     if (!usbGetTransmitStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
  47              		.loc 1 127 0 is_stmt 1
  48 0014 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
  49 0016 1289     		ldrh	r2, [r2, #8]
  50 0018 0123     		movs	r3, #1
  51 001a 8B40     		lsls	r3, r3, r1
  52 001c 1342     		tst	r3, r2
  53 001e 0CD1     		bne	.L1
  54              	.LBB132:
 128:tmk_core/protocol/chibios/usb_driver.c ****         /* Trying to get a full buffer.*/
 129:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
  55              		.loc 1 129 0
  56 0020 01A9     		add	r1, sp, #4
  57 0022 04F14400 		add	r0, r4, #68
  58              	.LVL2:
  59 0026 FFF7FEFF 		bl	obqGetFullBufferI
  60              	.LVL3:
 130:tmk_core/protocol/chibios/usb_driver.c ****         if (buf != NULL) {
  61              		.loc 1 130 0
  62 002a 0246     		mov	r2, r0
  63 002c 28B1     		cbz	r0, .L1
 131:tmk_core/protocol/chibios/usb_driver.c ****             /* Buffer found, starting a new transaction.*/
 132:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(qmkusbp->config->usbp, qmkusbp->config->bulk_in, buf, n);
  64              		.loc 1 132 0
  65 002e E46F     		ldr	r4, [r4, #124]
  66              	.LVL4:
  67 0030 019B     		ldr	r3, [sp, #4]
  68 0032 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
  69 0034 2068     		ldr	r0, [r4]
  70              	.LVL5:
  71 0036 FFF7FEFF 		bl	usbStartTransmitI
  72              	.LVL6:
  73              	.L1:
  74              	.LBE132:
 133:tmk_core/protocol/chibios/usb_driver.c ****         }
 134:tmk_core/protocol/chibios/usb_driver.c ****     }
 135:tmk_core/protocol/chibios/usb_driver.c **** }
  75              		.loc 1 135 0
  76 003a 02B0     		add	sp, sp, #8
  77              		.cfi_def_cfa_offset 8
  78              		@ sp needed
  79 003c 10BD     		pop	{r4, pc}
  80              		.cfi_endproc
  81              	.LFE289:
  83              		.section	.text._readt,"ax",%progbits
  84              		.align	1
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	_readt:
  91              	.LFB287:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
  92              		.loc 1 97 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.LVL7:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
  98              		.loc 1 97 0
  99 0000 0C30     		adds	r0, r0, #12
 100              	.LVL8:
 101 0002 FFF7FEBF 		b	ibqReadTimeout
 102              	.LVL9:
 103              		.cfi_endproc
 104              	.LFE287:
 106              		.section	.text._read,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu softvfp
 113              	_read:
 114              	.LFB281:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 115              		.loc 1 85 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL10:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 121              		.loc 1 85 0
 122 0000 4FF0FF33 		mov	r3, #-1
 123 0004 0C30     		adds	r0, r0, #12
 124              	.LVL11:
 125 0006 FFF7FEBF 		b	ibqReadTimeout
 126              	.LVL12:
 127              		.cfi_endproc
 128              	.LFE281:
 130              		.section	.text._writet,"ax",%progbits
 131              		.align	1
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu softvfp
 137              	_writet:
 138              	.LFB286:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 139              		.loc 1 95 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL13:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 145              		.loc 1 95 0
 146 0000 4430     		adds	r0, r0, #68
 147              	.LVL14:
 148 0002 FFF7FEBF 		b	obqWriteTimeout
 149              	.LVL15:
 150              		.cfi_endproc
 151              	.LFE286:
 153              		.section	.text._write,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
 160              	_write:
 161              	.LFB280:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 162              		.loc 1 83 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL16:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 168              		.loc 1 83 0
 169 0000 4FF0FF33 		mov	r3, #-1
 170 0004 4430     		adds	r0, r0, #68
 171              	.LVL17:
 172 0006 FFF7FEBF 		b	obqWriteTimeout
 173              	.LVL18:
 174              		.cfi_endproc
 175              	.LFE280:
 177              		.section	.text._gett,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	_gett:
 185              	.LFB285:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 186              		.loc 1 93 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL19:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 192              		.loc 1 93 0
 193 0000 0C30     		adds	r0, r0, #12
 194              	.LVL20:
 195 0002 FFF7FEBF 		b	ibqGetTimeout
 196              	.LVL21:
 197              		.cfi_endproc
 198              	.LFE285:
 200              		.section	.text._get,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu softvfp
 207              	_get:
 208              	.LFB283:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 209              		.loc 1 89 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL22:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 215              		.loc 1 89 0
 216 0000 4FF0FF31 		mov	r1, #-1
 217 0004 0C30     		adds	r0, r0, #12
 218              	.LVL23:
 219 0006 FFF7FEBF 		b	ibqGetTimeout
 220              	.LVL24:
 221              		.cfi_endproc
 222              	.LFE283:
 224              		.section	.text._putt,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	_putt:
 232              	.LFB284:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 233              		.loc 1 91 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238              	.LVL25:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 239              		.loc 1 91 0
 240 0000 4430     		adds	r0, r0, #68
 241              	.LVL26:
 242 0002 FFF7FEBF 		b	obqPutTimeout
 243              	.LVL27:
 244              		.cfi_endproc
 245              	.LFE284:
 247              		.section	.text._put,"ax",%progbits
 248              		.align	1
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu softvfp
 254              	_put:
 255              	.LFB282:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 256              		.loc 1 87 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL28:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 262              		.loc 1 87 0
 263 0000 4FF0FF32 		mov	r2, #-1
 264 0004 4430     		adds	r0, r0, #68
 265              	.LVL29:
 266 0006 FFF7FEBF 		b	obqPutTimeout
 267              	.LVL30:
 268              		.cfi_endproc
 269              	.LFE282:
 271              		.section	.text.qmkusb_start_receive,"ax",%progbits
 272              		.align	1
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu softvfp
 278              	qmkusb_start_receive:
 279              	.LFB279:
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 280              		.loc 1 53 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              	.LVL31:
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 285              		.loc 1 58 0
 286 0000 C26F     		ldr	r2, [r0, #124]
 287 0002 1368     		ldr	r3, [r2]
 288 0004 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 289 0006 0429     		cmp	r1, #4
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 290              		.loc 1 53 0
 291 0008 70B5     		push	{r4, r5, r6, lr}
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 4, -16
 294              		.cfi_offset 5, -12
 295              		.cfi_offset 6, -8
 296              		.cfi_offset 14, -4
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 297              		.loc 1 53 0
 298 000a 0546     		mov	r5, r0
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 299              		.loc 1 58 0
 300 000c 01D0     		beq	.L16
 301              	.LVL32:
 302              	.L18:
  59:tmk_core/protocol/chibios/usb_driver.c ****     }
 303              		.loc 1 59 0
 304 000e 0120     		movs	r0, #1
 305              	.L17:
  77:tmk_core/protocol/chibios/usb_driver.c **** 
 306              		.loc 1 77 0
 307 0010 70BD     		pop	{r4, r5, r6, pc}
 308              	.LVL33:
 309              	.L16:
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 310              		.loc 1 58 0 discriminator 1
 311 0012 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 312 0014 0229     		cmp	r1, #2
 313 0016 FAD1     		bne	.L18
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 314              		.loc 1 63 0
 315 0018 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 316 001a 5C89     		ldrh	r4, [r3, #10]
 317 001c 0120     		movs	r0, #1
 318              	.LVL34:
 319 001e 9040     		lsls	r0, r0, r2
 320 0020 0440     		ands	r4, r0, r4
 321 0022 F4D1     		bne	.L18
 322              	.LVL35:
 323              	.LBB135:
 324              	.LBB136:
  68:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
 325              		.loc 1 68 0
 326 0024 05F10C00 		add	r0, r5, #12
 327 0028 FFF7FEFF 		bl	ibqGetEmptyBufferI
 328              	.LVL36:
  69:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 329              		.loc 1 69 0
 330 002c 0246     		mov	r2, r0
 331 002e 0028     		cmp	r0, #0
 332 0030 EDD0     		beq	.L18
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 333              		.loc 1 74 0
 334 0032 EE6F     		ldr	r6, [r5, #124]
 335 0034 AB6A     		ldr	r3, [r5, #40]
 336 0036 3068     		ldr	r0, [r6]
 337              	.LVL37:
 338 0038 7179     		ldrb	r1, [r6, #5]	@ zero_extendqisi2
 339 003a 043B     		subs	r3, r3, #4
 340 003c FFF7FEFF 		bl	usbStartReceiveI
 341              	.LVL38:
  76:tmk_core/protocol/chibios/usb_driver.c **** }
 342              		.loc 1 76 0
 343 0040 2046     		mov	r0, r4
 344 0042 E5E7     		b	.L17
 345              	.LBE136:
 346              	.LBE135:
 347              		.cfi_endproc
 348              	.LFE279:
 350              		.section	.text.ibnotify,"ax",%progbits
 351              		.align	1
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu softvfp
 357              	ibnotify:
 358              	.LFB288:
 106:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
 359              		.loc 1 106 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364              	.LVL39:
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 365              		.loc 1 108 0
 366 0000 406B     		ldr	r0, [r0, #52]
 367              	.LVL40:
 368 0002 FFF7FEBF 		b	qmkusb_start_receive
 369              	.LVL41:
 370              		.cfi_endproc
 371              	.LFE288:
 373              		.section	.text.qmkusbInit,"ax",%progbits
 374              		.align	1
 375              		.global	qmkusbInit
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu softvfp
 381              	qmkusbInit:
 382              	.LFB290:
 136:tmk_core/protocol/chibios/usb_driver.c **** 
 137:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
 138:tmk_core/protocol/chibios/usb_driver.c **** /* Driver exported functions.                                                */
 139:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
 140:tmk_core/protocol/chibios/usb_driver.c **** 
 141:tmk_core/protocol/chibios/usb_driver.c **** /**
 142:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Serial Driver initialization.
 143:tmk_core/protocol/chibios/usb_driver.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
 144:tmk_core/protocol/chibios/usb_driver.c ****  *          no need to explicitly initialize the driver.
 145:tmk_core/protocol/chibios/usb_driver.c ****  *
 146:tmk_core/protocol/chibios/usb_driver.c ****  * @init
 147:tmk_core/protocol/chibios/usb_driver.c ****  */
 148:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbInit(void) {}
 383              		.loc 1 148 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388              		.loc 1 148 0
 389 0000 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE290:
 393              		.section	.text.qmkusbObjectInit,"ax",%progbits
 394              		.align	1
 395              		.global	qmkusbObjectInit
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu softvfp
 401              	qmkusbObjectInit:
 402              	.LFB291:
 149:tmk_core/protocol/chibios/usb_driver.c **** 
 150:tmk_core/protocol/chibios/usb_driver.c **** /**
 151:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Initializes a generic full duplex driver object.
 152:tmk_core/protocol/chibios/usb_driver.c ****  * @details The HW dependent part of the initialization has to be performed
 153:tmk_core/protocol/chibios/usb_driver.c ****  *          outside, usually in the hardware initialization code.
 154:tmk_core/protocol/chibios/usb_driver.c ****  *
 155:tmk_core/protocol/chibios/usb_driver.c ****  * @param[out] qmkusbp     pointer to a @p QMKUSBDriver structure
 156:tmk_core/protocol/chibios/usb_driver.c ****  *
 157:tmk_core/protocol/chibios/usb_driver.c ****  * @init
 158:tmk_core/protocol/chibios/usb_driver.c ****  */
 159:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbObjectInit(QMKUSBDriver *qmkusbp, const QMKUSBConfig *config) {
 403              		.loc 1 159 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL42:
 408 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 409              		.cfi_def_cfa_offset 32
 410              		.cfi_offset 4, -16
 411              		.cfi_offset 5, -12
 412              		.cfi_offset 6, -8
 413              		.cfi_offset 14, -4
 160:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 414              		.loc 1 160 0
 415 0002 0346     		mov	r3, r0
 416 0004 104A     		ldr	r2, .L25
 417 0006 43F8042B 		str	r2, [r3], #4
 418              	.LVL43:
 161:tmk_core/protocol/chibios/usb_driver.c ****     osalEventObjectInit(&qmkusbp->event);
 162:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state = QMKUSB_STOP;
 419              		.loc 1 162 0
 420 000a 0126     		movs	r6, #1
 421              	.LBB137:
 422              	.LBB138:
 423              	.LBB139:
 424              		.file 2 "./lib/chibios/os/rt/include/chevents.h"
   1:./lib/chibios/os/rt/include/chevents.h **** /*
   2:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chevents.h **** 
   4:./lib/chibios/os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chevents.h **** 
   6:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chevents.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chevents.h **** 
  11:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chevents.h **** 
  16:./lib/chibios/os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chevents.h **** */
  19:./lib/chibios/os/rt/include/chevents.h **** /*
  20:./lib/chibios/os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:./lib/chibios/os/rt/include/chevents.h ****  */
  22:./lib/chibios/os/rt/include/chevents.h **** 
  23:./lib/chibios/os/rt/include/chevents.h **** /**
  24:./lib/chibios/os/rt/include/chevents.h ****  * @file    chevents.h
  25:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:./lib/chibios/os/rt/include/chevents.h ****  *
  27:./lib/chibios/os/rt/include/chevents.h ****  * @addtogroup events
  28:./lib/chibios/os/rt/include/chevents.h ****  * @{
  29:./lib/chibios/os/rt/include/chevents.h ****  */
  30:./lib/chibios/os/rt/include/chevents.h **** 
  31:./lib/chibios/os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:./lib/chibios/os/rt/include/chevents.h **** #define CHEVENTS_H
  33:./lib/chibios/os/rt/include/chevents.h **** 
  34:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:./lib/chibios/os/rt/include/chevents.h **** 
  36:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  37:./lib/chibios/os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  39:./lib/chibios/os/rt/include/chevents.h **** 
  40:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  41:./lib/chibios/os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  43:./lib/chibios/os/rt/include/chevents.h **** 
  44:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  45:./lib/chibios/os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  47:./lib/chibios/os/rt/include/chevents.h **** 
  48:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  49:./lib/chibios/os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  51:./lib/chibios/os/rt/include/chevents.h **** 
  52:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:./lib/chibios/os/rt/include/chevents.h **** 
  54:./lib/chibios/os/rt/include/chevents.h **** /**
  55:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:./lib/chibios/os/rt/include/chevents.h ****  */
  57:./lib/chibios/os/rt/include/chevents.h **** struct event_listener {
  58:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the event
  60:./lib/chibios/os/rt/include/chevents.h ****                                                     source.                 */
  61:./lib/chibios/os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:./lib/chibios/os/rt/include/chevents.h ****                                                     event source.           */
  63:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:./lib/chibios/os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:./lib/chibios/os/rt/include/chevents.h ****                                                     by the event source.    */
  67:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:./lib/chibios/os/rt/include/chevents.h ****                                                     interested in.          */
  69:./lib/chibios/os/rt/include/chevents.h **** };
  70:./lib/chibios/os/rt/include/chevents.h **** 
  71:./lib/chibios/os/rt/include/chevents.h **** /**
  72:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:./lib/chibios/os/rt/include/chevents.h ****  */
  74:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_source {
  75:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the Event
  77:./lib/chibios/os/rt/include/chevents.h ****                                                     Source.                 */
  78:./lib/chibios/os/rt/include/chevents.h **** } event_source_t;
  79:./lib/chibios/os/rt/include/chevents.h **** 
  80:./lib/chibios/os/rt/include/chevents.h **** /**
  81:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:./lib/chibios/os/rt/include/chevents.h ****  */
  83:./lib/chibios/os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:./lib/chibios/os/rt/include/chevents.h **** 
  85:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  88:./lib/chibios/os/rt/include/chevents.h **** 
  89:./lib/chibios/os/rt/include/chevents.h **** /**
  90:./lib/chibios/os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:./lib/chibios/os/rt/include/chevents.h ****  */
  92:./lib/chibios/os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:./lib/chibios/os/rt/include/chevents.h **** 
  94:./lib/chibios/os/rt/include/chevents.h **** /**
  95:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:./lib/chibios/os/rt/include/chevents.h ****  */
  97:./lib/chibios/os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:./lib/chibios/os/rt/include/chevents.h **** 
  99:./lib/chibios/os/rt/include/chevents.h **** /**
 100:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:./lib/chibios/os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:./lib/chibios/os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:./lib/chibios/os/rt/include/chevents.h ****  */
 105:./lib/chibios/os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:./lib/chibios/os/rt/include/chevents.h **** 
 107:./lib/chibios/os/rt/include/chevents.h **** /**
 108:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:./lib/chibios/os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:./lib/chibios/os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:./lib/chibios/os/rt/include/chevents.h ****  *
 112:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:./lib/chibios/os/rt/include/chevents.h ****  */
 114:./lib/chibios/os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:./lib/chibios/os/rt/include/chevents.h **** 
 116:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 119:./lib/chibios/os/rt/include/chevents.h **** 
 120:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 121:./lib/chibios/os/rt/include/chevents.h **** extern "C" {
 122:./lib/chibios/os/rt/include/chevents.h **** #endif
 123:./lib/chibios/os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:./lib/chibios/os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:./lib/chibios/os/rt/include/chevents.h ****                                   eventmask_t events,
 126:./lib/chibios/os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:./lib/chibios/os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 129:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 130:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 131:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 132:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 133:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 134:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 135:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 136:./lib/chibios/os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 137:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 138:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 139:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 140:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 141:./lib/chibios/os/rt/include/chevents.h **** #endif
 142:./lib/chibios/os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 143:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, systime_t time);
 144:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, systime_t time);
 145:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, systime_t time);
 146:./lib/chibios/os/rt/include/chevents.h **** #endif
 147:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 148:./lib/chibios/os/rt/include/chevents.h **** }
 149:./lib/chibios/os/rt/include/chevents.h **** #endif
 150:./lib/chibios/os/rt/include/chevents.h **** 
 151:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 152:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 153:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 154:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 155:./lib/chibios/os/rt/include/chevents.h **** #endif
 156:./lib/chibios/os/rt/include/chevents.h **** 
 157:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 158:./lib/chibios/os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 159:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 160:./lib/chibios/os/rt/include/chevents.h **** 
 161:./lib/chibios/os/rt/include/chevents.h **** /**
 162:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 163:./lib/chibios/os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 164:./lib/chibios/os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 165:./lib/chibios/os/rt/include/chevents.h ****  *
 166:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 167:./lib/chibios/os/rt/include/chevents.h ****  *
 168:./lib/chibios/os/rt/include/chevents.h ****  * @init
 169:./lib/chibios/os/rt/include/chevents.h ****  */
 170:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 171:./lib/chibios/os/rt/include/chevents.h **** 
 172:./lib/chibios/os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 425              		.loc 2 172 0
 426 000c 4360     		str	r3, [r0, #4]
 427              	.LVL44:
 428              	.LBE139:
 429              	.LBE138:
 430              	.LBE137:
 163:tmk_core/protocol/chibios/usb_driver.c ****     // Note that the config uses the USB direction naming
 164:tmk_core/protocol/chibios/usb_driver.c ****     ibqObjectInit(&qmkusbp->ibqueue, true, config->ob, config->out_size, config->out_buffers, ibnot
 431              		.loc 1 164 0
 432 000e 0F4B     		ldr	r3, .L25+4
 162:tmk_core/protocol/chibios/usb_driver.c ****     // Note that the config uses the USB direction naming
 433              		.loc 1 162 0
 434 0010 0672     		strb	r6, [r0, #8]
 435              		.loc 1 164 0
 436 0012 0290     		str	r0, [sp, #8]
 437 0014 0193     		str	r3, [sp, #4]
 438 0016 CB68     		ldr	r3, [r1, #12]
 439 0018 0093     		str	r3, [sp]
 159:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 440              		.loc 1 159 0
 441 001a 0D46     		mov	r5, r1
 442 001c 0446     		mov	r4, r0
 443              		.loc 1 164 0
 444 001e 4B69     		ldr	r3, [r1, #20]
 445 0020 0A6A     		ldr	r2, [r1, #32]
 446 0022 0C30     		adds	r0, r0, #12
 447              	.LVL45:
 448 0024 3146     		mov	r1, r6
 449              	.LVL46:
 450 0026 FFF7FEFF 		bl	ibqObjectInit
 451              	.LVL47:
 165:tmk_core/protocol/chibios/usb_driver.c ****     obqObjectInit(&qmkusbp->obqueue, true, config->ib, config->in_size, config->in_buffers, obnotif
 452              		.loc 1 165 0
 453 002a 094B     		ldr	r3, .L25+8
 454 002c 0193     		str	r3, [sp, #4]
 455 002e AB68     		ldr	r3, [r5, #8]
 456 0030 0093     		str	r3, [sp]
 457 0032 0294     		str	r4, [sp, #8]
 458 0034 2B69     		ldr	r3, [r5, #16]
 459 0036 EA69     		ldr	r2, [r5, #28]
 460 0038 3146     		mov	r1, r6
 461 003a 04F14400 		add	r0, r4, #68
 462 003e FFF7FEFF 		bl	obqObjectInit
 463              	.LVL48:
 166:tmk_core/protocol/chibios/usb_driver.c **** }
 464              		.loc 1 166 0
 465 0042 04B0     		add	sp, sp, #16
 466              		.cfi_def_cfa_offset 16
 467              		@ sp needed
 468 0044 70BD     		pop	{r4, r5, r6, pc}
 469              	.LVL49:
 470              	.L26:
 471 0046 00BF     		.align	2
 472              	.L25:
 473 0048 00000000 		.word	.LANCHOR0
 474 004c 00000000 		.word	ibnotify
 475 0050 00000000 		.word	obnotify
 476              		.cfi_endproc
 477              	.LFE291:
 479              		.section	.text.qmkusbStart,"ax",%progbits
 480              		.align	1
 481              		.global	qmkusbStart
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu softvfp
 487              	qmkusbStart:
 488              	.LFB292:
 167:tmk_core/protocol/chibios/usb_driver.c **** 
 168:tmk_core/protocol/chibios/usb_driver.c **** /**
 169:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Configures and starts the driver.
 170:tmk_core/protocol/chibios/usb_driver.c ****  *
 171:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 172:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] config    the serial over USB driver configuration
 173:tmk_core/protocol/chibios/usb_driver.c ****  *
 174:tmk_core/protocol/chibios/usb_driver.c ****  * @api
 175:tmk_core/protocol/chibios/usb_driver.c ****  */
 176:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbStart(QMKUSBDriver *qmkusbp, const QMKUSBConfig *config) {
 489              		.loc 1 176 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL50:
 177:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = config->usbp;
 495              		.loc 1 177 0
 496 0000 0B68     		ldr	r3, [r1]
 497              	.LVL51:
 498              	.LBB140:
 499              	.LBB141:
 500              	.LBB142:
 501              	.LBB143:
 502              	.LBB144:
 503              		.file 3 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @version  V4.30
   5:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
   9:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    All rights reserved.
  10:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      specific prior written permission.
  20:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    *
  21:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  35:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  38:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #endif
  45:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  46:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  47:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   @{
  51:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  52:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  53:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  54:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  58:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  60:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  62:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  63:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  64:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  65:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  69:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  71:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  73:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  74:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  75:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  76:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Control Register value
  79:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  80:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  82:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
  83:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  84:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
  86:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  87:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  88:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  89:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  90:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  94:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  96:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  98:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  99:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 100:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 101:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 105:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 107:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 108:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 109:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 111:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 112:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 113:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 114:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 115:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               APSR Register value
 118:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 119:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 121:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 122:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 123:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 125:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 126:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 127:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 128:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 129:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 132:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 134:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 136:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 137:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 138:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 140:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 141:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 142:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 143:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 144:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               PSP Register value
 147:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 148:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 150:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 151:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 152:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 154:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 155:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 156:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 157:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 158:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 162:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 164:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 166:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 167:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 168:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 169:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               MSP Register value
 172:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 173:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 175:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 176:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 177:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 179:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 180:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 181:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 182:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 183:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 188:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 190:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 192:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 193:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 194:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 195:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 199:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 201:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 202:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 203:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 205:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 206:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 207:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 208:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 209:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 213:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 215:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 217:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 218:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 219:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 221:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 222:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 226:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 228:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 230:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 231:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 232:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 233:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 237:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 239:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 241:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 243:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 244:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 248:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 250:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 251:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 252:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 254:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 255:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 257:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 504              		.loc 3 264 0
 505 0002 2022     		movs	r2, #32
 506              		.syntax unified
 507              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 508 0004 82F31188 		MSR basepri, r2
 509              	@ 0 "" 2
 510              	.LVL52:
 511              		.thumb
 512              		.syntax unified
 513              	.LBE144:
 514              	.LBE143:
 515              	.LBE142:
 516              	.LBE141:
 517              	.LBE140:
 178:tmk_core/protocol/chibios/usb_driver.c **** 
 179:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgCheck(qmkusbp != NULL);
 180:tmk_core/protocol/chibios/usb_driver.c **** 
 181:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLock();
 182:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgAssert((qmkusbp->state == QMKUSB_STOP) || (qmkusbp->state == QMKUSB_READY), "invalid sta
 183:tmk_core/protocol/chibios/usb_driver.c ****     usbp->in_params[config->bulk_in - 1U]   = qmkusbp;
 518              		.loc 1 183 0
 519 0008 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 520 000a 03EB8202 		add	r2, r3, r2, lsl #2
 521 000e 9062     		str	r0, [r2, #40]
 184:tmk_core/protocol/chibios/usb_driver.c ****     usbp->out_params[config->bulk_out - 1U] = qmkusbp;
 522              		.loc 1 184 0
 523 0010 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 524 0012 1132     		adds	r2, r2, #17
 525 0014 43F82200 		str	r0, [r3, r2, lsl #2]
 185:tmk_core/protocol/chibios/usb_driver.c ****     if (config->int_in > 0U) {
 526              		.loc 1 185 0
 527 0018 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 528 001a 12B1     		cbz	r2, .L28
 186:tmk_core/protocol/chibios/usb_driver.c ****         usbp->in_params[config->int_in - 1U] = qmkusbp;
 529              		.loc 1 186 0
 530 001c 03EB8203 		add	r3, r3, r2, lsl #2
 531              	.LVL53:
 532 0020 9862     		str	r0, [r3, #40]
 533              	.L28:
 187:tmk_core/protocol/chibios/usb_driver.c ****     }
 188:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->config = config;
 189:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_READY;
 534              		.loc 1 189 0
 535 0022 0223     		movs	r3, #2
 536 0024 0372     		strb	r3, [r0, #8]
 537              	.LVL54:
 188:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_READY;
 538              		.loc 1 188 0
 539 0026 C167     		str	r1, [r0, #124]
 540              	.LBB145:
 541              	.LBB146:
 542              	.LBB147:
 543              	.LBB148:
 544              	.LBB149:
 545              	.LBB150:
 546              		.loc 3 264 0
 547 0028 0023     		movs	r3, #0
 548              		.syntax unified
 549              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 550 002a 83F31188 		MSR basepri, r3
 551              	@ 0 "" 2
 552              	.LVL55:
 553              		.thumb
 554              		.syntax unified
 555              	.LBE150:
 556              	.LBE149:
 557              	.LBE148:
 558              	.LBE147:
 559              	.LBE146:
 560              	.LBE145:
 190:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlock();
 191:tmk_core/protocol/chibios/usb_driver.c **** }
 561              		.loc 1 191 0
 562 002e 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE292:
 566              		.section	.text.qmkusbStop,"ax",%progbits
 567              		.align	1
 568              		.global	qmkusbStop
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu softvfp
 574              	qmkusbStop:
 575              	.LFB293:
 192:tmk_core/protocol/chibios/usb_driver.c **** 
 193:tmk_core/protocol/chibios/usb_driver.c **** /**
 194:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Stops the driver.
 195:tmk_core/protocol/chibios/usb_driver.c ****  * @details Any thread waiting on the driver's queues will be awakened with
 196:tmk_core/protocol/chibios/usb_driver.c ****  *          the message @p MSG_RESET.
 197:tmk_core/protocol/chibios/usb_driver.c ****  *
 198:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 199:tmk_core/protocol/chibios/usb_driver.c ****  *
 200:tmk_core/protocol/chibios/usb_driver.c ****  * @api
 201:tmk_core/protocol/chibios/usb_driver.c ****  */
 202:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbStop(QMKUSBDriver *qmkusbp) {
 576              		.loc 1 202 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              	.LVL56:
 581 0000 38B5     		push	{r3, r4, r5, lr}
 582              		.cfi_def_cfa_offset 16
 583              		.cfi_offset 3, -16
 584              		.cfi_offset 4, -12
 585              		.cfi_offset 5, -8
 586              		.cfi_offset 14, -4
 203:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 587              		.loc 1 203 0
 588 0002 C36F     		ldr	r3, [r0, #124]
 202:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 589              		.loc 1 202 0
 590 0004 0446     		mov	r4, r0
 591              		.loc 1 203 0
 592 0006 1B68     		ldr	r3, [r3]
 593              	.LVL57:
 594              	.LBB151:
 595              	.LBB152:
 596              	.LBB153:
 597              	.LBB154:
 598              	.LBB155:
 599              		.loc 3 264 0
 600 0008 2022     		movs	r2, #32
 601              		.syntax unified
 602              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 603 000a 82F31188 		MSR basepri, r2
 604              	@ 0 "" 2
 605              	.LVL58:
 606              		.thumb
 607              		.syntax unified
 608              	.LBE155:
 609              	.LBE154:
 610              	.LBE153:
 611              	.LBE152:
 612              	.LBE151:
 204:tmk_core/protocol/chibios/usb_driver.c **** 
 205:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgCheck(qmkusbp != NULL);
 206:tmk_core/protocol/chibios/usb_driver.c **** 
 207:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLock();
 208:tmk_core/protocol/chibios/usb_driver.c **** 
 209:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgAssert((qmkusbp->state == QMKUSB_STOP) || (qmkusbp->state == QMKUSB_READY), "invalid sta
 210:tmk_core/protocol/chibios/usb_driver.c **** 
 211:tmk_core/protocol/chibios/usb_driver.c ****     /* Driver in stopped state.*/
 212:tmk_core/protocol/chibios/usb_driver.c ****     usbp->in_params[qmkusbp->config->bulk_in - 1U]   = NULL;
 613              		.loc 1 212 0
 614 000e C06F     		ldr	r0, [r0, #124]
 615              	.LVL59:
 616 0010 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 617 0012 0932     		adds	r2, r2, #9
 618 0014 03EB8202 		add	r2, r3, r2, lsl #2
 619 0018 0021     		movs	r1, #0
 620 001a 5160     		str	r1, [r2, #4]
 213:tmk_core/protocol/chibios/usb_driver.c ****     usbp->out_params[qmkusbp->config->bulk_out - 1U] = NULL;
 621              		.loc 1 213 0
 622 001c 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 623 001e 1132     		adds	r2, r2, #17
 624 0020 43F82210 		str	r1, [r3, r2, lsl #2]
 214:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp->config->int_in > 0U) {
 625              		.loc 1 214 0
 626 0024 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 627 0026 1AB1     		cbz	r2, .L33
 215:tmk_core/protocol/chibios/usb_driver.c ****         usbp->in_params[qmkusbp->config->int_in - 1U] = NULL;
 628              		.loc 1 215 0
 629 0028 0932     		adds	r2, r2, #9
 630 002a 03EB8203 		add	r3, r3, r2, lsl #2
 631              	.LVL60:
 632 002e 5960     		str	r1, [r3, #4]
 633              	.L33:
 216:tmk_core/protocol/chibios/usb_driver.c ****     }
 217:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->config = NULL;
 218:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_STOP;
 634              		.loc 1 218 0
 635 0030 0123     		movs	r3, #1
 217:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_STOP;
 636              		.loc 1 217 0
 637 0032 0025     		movs	r5, #0
 638              		.loc 1 218 0
 639 0034 2372     		strb	r3, [r4, #8]
 640              	.LVL61:
 641              	.LBB156:
 642              	.LBB157:
 643              		.file 4 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef _OSAL_H_
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define _OSAL_H_
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                (!FALSE)
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        FALSE
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         TRUE
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              RDY_OK
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           RDY_RESET
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         RDY_TIMEOUT
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((systime_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((systime_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if !CH_CFG_USE_EVENTS
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 176:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 177:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 178:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 179:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 180:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 181:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 182:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Flags stored into the
 183:./lib/chibios/os/hal/osal/rt/osal.h ****                                                 object.                     */
 184:./lib/chibios/os/hal/osal/rt/osal.h **** } event_source_t;
 185:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 186:./lib/chibios/os/hal/osal/rt/osal.h **** 
 187:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 188:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 189:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then them
 190:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 192:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 193:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 194:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 195:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 196:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 197:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 198:./lib/chibios/os/hal/osal/rt/osal.h **** 
 199:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 200:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 205:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 206:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 207:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 209:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 213:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 214:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 215:./lib/chibios/os/hal/osal/rt/osal.h **** 
 216:./lib/chibios/os/hal/osal/rt/osal.h **** /* Temporary names provided for ChibiOS 2.x compatibility.*/
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueInit osalThreadQueueObjectInit
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupAllI osalThreadDequeueAllI
 219:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupOneI osalThreadDequeueNextI
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueGoSleepTimeoutS osalThreadEnqueueTimeoutS
 221:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalEventInit osalEventObjectInit
 222:./lib/chibios/os/hal/osal/rt/osal.h **** 
 223:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 224:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 225:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 232:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 233:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 234:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 235:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 236:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 237:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 238:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 239:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 240:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 241:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 242:./lib/chibios/os/hal/osal/rt/osal.h **** 
 243:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 245:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 253:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 254:./lib/chibios/os/hal/osal/rt/osal.h **** 
 255:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 265:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 266:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 267:./lib/chibios/os/hal/osal/rt/osal.h **** 
 268:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 271:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 272:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 273:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 275:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 276:./lib/chibios/os/hal/osal/rt/osal.h **** 
 277:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 278:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 279:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 282:./lib/chibios/os/hal/osal/rt/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 285:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 286:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 288:./lib/chibios/os/hal/osal/rt/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 293:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 294:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 295:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 296:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 297:./lib/chibios/os/hal/osal/rt/osal.h **** 
 298:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 299:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 300:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 301:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 302:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 305:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 306:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 307:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 312:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2ST(sec) S2ST(sec)
 313:./lib/chibios/os/hal/osal/rt/osal.h **** 
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 315:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 316:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 320:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 324:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2ST(msec) MS2ST(msec)
 325:./lib/chibios/os/hal/osal/rt/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 330:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 331:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 332:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 336:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2ST(usec) US2ST(usec)
 337:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 338:./lib/chibios/os/hal/osal/rt/osal.h **** 
 339:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 342:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 344:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** 
 356:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 357:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 361:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 368:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 369:./lib/chibios/os/hal/osal/rt/osal.h **** 
 370:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 372:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 373:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 374:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 382:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 383:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 384:./lib/chibios/os/hal/osal/rt/osal.h **** 
 385:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 386:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 387:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 388:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 389:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       time in seconds, must be different from zero
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 399:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(sec) osalThreadSleep(OSAL_S2ST(sec))
 400:./lib/chibios/os/hal/osal/rt/osal.h **** 
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 402:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 403:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 407:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 412:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msec) osalThreadSleep(OSAL_MS2ST(msec))
 413:./lib/chibios/os/hal/osal/rt/osal.h **** 
 414:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 417:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 418:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 419:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      time in microseconds, must be different from zero
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usec) osalThreadSleep(OSAL_US2ST(usec))
 426:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 427:./lib/chibios/os/hal/osal/rt/osal.h **** 
 428:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 429:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 433:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 434:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 435:./lib/chibios/os/hal/osal/rt/osal.h **** 
 436:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 437:./lib/chibios/os/hal/osal/rt/osal.h **** }
 438:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 439:./lib/chibios/os/hal/osal/rt/osal.h **** 
 440:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 441:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 442:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 443:./lib/chibios/os/hal/osal/rt/osal.h **** 
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 445:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 446:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 447:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 448:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 449:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 450:./lib/chibios/os/hal/osal/rt/osal.h **** 
 451:./lib/chibios/os/hal/osal/rt/osal.h **** }
 452:./lib/chibios/os/hal/osal/rt/osal.h **** 
 453:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 454:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 455:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 456:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 457:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 459:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 463:./lib/chibios/os/hal/osal/rt/osal.h **** }
 464:./lib/chibios/os/hal/osal/rt/osal.h **** 
 465:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 467:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 468:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 469:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 470:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 471:./lib/chibios/os/hal/osal/rt/osal.h **** 
 472:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 473:./lib/chibios/os/hal/osal/rt/osal.h **** }
 474:./lib/chibios/os/hal/osal/rt/osal.h **** 
 475:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 478:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 479:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 480:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 481:./lib/chibios/os/hal/osal/rt/osal.h **** 
 482:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 483:./lib/chibios/os/hal/osal/rt/osal.h **** }
 484:./lib/chibios/os/hal/osal/rt/osal.h **** 
 485:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 488:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 489:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 490:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 491:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 494:./lib/chibios/os/hal/osal/rt/osal.h **** }
 495:./lib/chibios/os/hal/osal/rt/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 498:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 499:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 500:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 501:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 502:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 503:./lib/chibios/os/hal/osal/rt/osal.h **** 
 504:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 505:./lib/chibios/os/hal/osal/rt/osal.h **** }
 506:./lib/chibios/os/hal/osal/rt/osal.h **** 
 507:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 509:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 510:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 511:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 512:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 513:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 514:./lib/chibios/os/hal/osal/rt/osal.h **** 
 515:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 516:./lib/chibios/os/hal/osal/rt/osal.h **** }
 517:./lib/chibios/os/hal/osal/rt/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 520:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 521:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 522:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 523:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 524:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 525:./lib/chibios/os/hal/osal/rt/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 527:./lib/chibios/os/hal/osal/rt/osal.h **** }
 528:./lib/chibios/os/hal/osal/rt/osal.h **** 
 529:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 531:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 532:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 533:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 534:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 535:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 536:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 556:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 557:./lib/chibios/os/hal/osal/rt/osal.h **** 
 558:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 559:./lib/chibios/os/hal/osal/rt/osal.h **** }
 560:./lib/chibios/os/hal/osal/rt/osal.h **** 
 561:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 562:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 563:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 564:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 565:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 570:./lib/chibios/os/hal/osal/rt/osal.h **** #if PORT_SUPPORTS_RT || defined(__DOXYGEN__)
 571:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 572:./lib/chibios/os/hal/osal/rt/osal.h **** 
 573:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 574:./lib/chibios/os/hal/osal/rt/osal.h **** }
 575:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 576:./lib/chibios/os/hal/osal/rt/osal.h **** 
 577:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 578:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 579:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 582:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 583:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 584:./lib/chibios/os/hal/osal/rt/osal.h **** 
 585:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 586:./lib/chibios/os/hal/osal/rt/osal.h **** }
 587:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 588:./lib/chibios/os/hal/osal/rt/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 591:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 592:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 593:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 594:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 595:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 598:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 599:./lib/chibios/os/hal/osal/rt/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 601:./lib/chibios/os/hal/osal/rt/osal.h **** }
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 604:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 605:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 606:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 607:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 634:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 635:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalOsIsTimeWithinX(systime_t time,
 636:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t start,
 637:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t end) {
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTIsTimeWithinX(time, start, end);
 640:./lib/chibios/os/hal/osal/rt/osal.h **** }
 641:./lib/chibios/os/hal/osal/rt/osal.h **** 
 642:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 648:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 649:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 650:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 651:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 652:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 653:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 654:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(systime_t time) {
 655:./lib/chibios/os/hal/osal/rt/osal.h **** 
 656:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(time);
 657:./lib/chibios/os/hal/osal/rt/osal.h **** }
 658:./lib/chibios/os/hal/osal/rt/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 663:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 664:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 665:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 666:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 667:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 668:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 671:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(systime_t time) {
 672:./lib/chibios/os/hal/osal/rt/osal.h **** 
 673:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(time);
 674:./lib/chibios/os/hal/osal/rt/osal.h **** }
 675:./lib/chibios/os/hal/osal/rt/osal.h **** 
 676:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 682:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 683:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 684:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 685:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 686:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 687:./lib/chibios/os/hal/osal/rt/osal.h **** 
 688:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendS(trp);
 689:./lib/chibios/os/hal/osal/rt/osal.h **** }
 690:./lib/chibios/os/hal/osal/rt/osal.h **** 
 691:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 701:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 702:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 703:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 704:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 705:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 706:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 710:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 711:./lib/chibios/os/hal/osal/rt/osal.h ****                                               systime_t timeout) {
 712:./lib/chibios/os/hal/osal/rt/osal.h **** 
 713:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 714:./lib/chibios/os/hal/osal/rt/osal.h **** }
 715:./lib/chibios/os/hal/osal/rt/osal.h **** 
 716:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 718:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 719:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 720:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 722:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 723:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 726:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 727:./lib/chibios/os/hal/osal/rt/osal.h **** 
 728:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 729:./lib/chibios/os/hal/osal/rt/osal.h **** }
 730:./lib/chibios/os/hal/osal/rt/osal.h **** 
 731:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 732:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 733:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 734:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 735:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 736:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 737:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 738:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 739:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 740:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 741:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 742:./lib/chibios/os/hal/osal/rt/osal.h **** 
 743:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeS(trp, msg);
 744:./lib/chibios/os/hal/osal/rt/osal.h **** }
 745:./lib/chibios/os/hal/osal/rt/osal.h **** 
 746:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 747:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes a threads queue object.
 748:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 749:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 750:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 751:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 752:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 753:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 754:./lib/chibios/os/hal/osal/rt/osal.h **** 
 755:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdQueueObjectInit(tqp);
 756:./lib/chibios/os/hal/osal/rt/osal.h **** }
 757:./lib/chibios/os/hal/osal/rt/osal.h **** 
 758:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 759:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enqueues the caller thread.
 760:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 761:./lib/chibios/os/hal/osal/rt/osal.h ****  *          dequeued or the specified timeouts expires.
 762:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 763:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 764:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the timeout in system ticks, the special values are
 765:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 766:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 767:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 768:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 769:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 770:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 771:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 772:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 773:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 774:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 775:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specified timeout or if the function has been
 776:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 777:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      specification.
 778:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 779:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 780:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 781:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 782:./lib/chibios/os/hal/osal/rt/osal.h ****                                               systime_t time) {
 783:./lib/chibios/os/hal/osal/rt/osal.h **** 
 784:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdEnqueueTimeoutS(tqp, time);
 785:./lib/chibios/os/hal/osal/rt/osal.h **** }
 786:./lib/chibios/os/hal/osal/rt/osal.h **** 
 787:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 788:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 789:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 790:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 791:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 792:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 793:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 794:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 795:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 796:./lib/chibios/os/hal/osal/rt/osal.h **** 
 797:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueNextI(tqp, msg);
 798:./lib/chibios/os/hal/osal/rt/osal.h **** }
 799:./lib/chibios/os/hal/osal/rt/osal.h **** 
 800:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 801:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 802:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 803:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 804:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 805:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 806:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 807:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 808:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 809:./lib/chibios/os/hal/osal/rt/osal.h **** 
 810:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdDequeueAllI(tqp, msg);
 811:./lib/chibios/os/hal/osal/rt/osal.h **** }
 812:./lib/chibios/os/hal/osal/rt/osal.h **** 
 813:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_EVENTS || defined(__DOXYGEN__)
 814:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 815:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Initializes an event flags object.
 816:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 817:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[out] esp      pointer to the event flags object
 818:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 819:./lib/chibios/os/hal/osal/rt/osal.h ****  * @init
 820:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 821:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 822:./lib/chibios/os/hal/osal/rt/osal.h **** 
 823:./lib/chibios/os/hal/osal/rt/osal.h ****   chEvtObjectInit(esp);
 824:./lib/chibios/os/hal/osal/rt/osal.h **** }
 825:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 826:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 827:./lib/chibios/os/hal/osal/rt/osal.h **** 
 828:./lib/chibios/os/hal/osal/rt/osal.h ****   esp->flags = 0;
 829:./lib/chibios/os/hal/osal/rt/osal.h **** }
 830:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 831:./lib/chibios/os/hal/osal/rt/osal.h **** 
 832:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_EVENTS || defined(__DOXYGEN__)
 833:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 834:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Add flags to an event source object.
 835:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 836:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] esp       pointer to the event flags object
 837:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] flags     flags to be ORed to the flags mask
 838:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 839:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 840:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 841:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalEventBroadcastFlagsI(event_source_t *esp,
 842:./lib/chibios/os/hal/osal/rt/osal.h ****                                             eventflags_t flags) {
 843:./lib/chibios/os/hal/osal/rt/osal.h **** 
 844:./lib/chibios/os/hal/osal/rt/osal.h ****   chEvtBroadcastFlagsI(esp, flags);
 644              		.loc 4 844 0
 645 0036 0221     		movs	r1, #2
 646 0038 201D     		adds	r0, r4, #4
 647              	.LVL62:
 648              	.LBE157:
 649              	.LBE156:
 217:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_STOP;
 650              		.loc 1 217 0
 651 003a E567     		str	r5, [r4, #124]
 652              	.LVL63:
 653              	.LBB159:
 654              	.LBB158:
 655              		.loc 4 844 0
 656 003c FFF7FEFF 		bl	chEvtBroadcastFlagsI
 657              	.LVL64:
 658              	.LBE158:
 659              	.LBE159:
 219:tmk_core/protocol/chibios/usb_driver.c **** 
 220:tmk_core/protocol/chibios/usb_driver.c ****     /* Enforces a disconnection.*/
 221:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 222:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 660              		.loc 1 222 0
 661 0040 04F10C00 		add	r0, r4, #12
 662 0044 FFF7FEFF 		bl	ibqResetI
 663              	.LVL65:
 223:tmk_core/protocol/chibios/usb_driver.c ****     obqResetI(&qmkusbp->obqueue);
 664              		.loc 1 223 0
 665 0048 04F14400 		add	r0, r4, #68
 666 004c FFF7FEFF 		bl	obqResetI
 667              	.LVL66:
 668              	.LBB160:
 669              	.LBB161:
 600:./lib/chibios/os/hal/osal/rt/osal.h **** }
 670              		.loc 4 600 0
 671 0050 FFF7FEFF 		bl	chSchRescheduleS
 672              	.LVL67:
 673              	.LBE161:
 674              	.LBE160:
 675              	.LBB162:
 676              	.LBB163:
 677              	.LBB164:
 678              	.LBB165:
 679              	.LBB166:
 680              	.LBB167:
 681              		.loc 3 264 0
 682              		.syntax unified
 683              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 684 0054 85F31188 		MSR basepri, r5
 685              	@ 0 "" 2
 686              	.LVL68:
 687              		.thumb
 688              		.syntax unified
 689              	.LBE167:
 690              	.LBE166:
 691              	.LBE165:
 692              	.LBE164:
 693              	.LBE163:
 694              	.LBE162:
 224:tmk_core/protocol/chibios/usb_driver.c ****     osalOsRescheduleS();
 225:tmk_core/protocol/chibios/usb_driver.c **** 
 226:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlock();
 227:tmk_core/protocol/chibios/usb_driver.c **** }
 695              		.loc 1 227 0
 696 0058 38BD     		pop	{r3, r4, r5, pc}
 697              		.cfi_endproc
 698              	.LFE293:
 700              		.section	.text.qmkusbSuspendHookI,"ax",%progbits
 701              		.align	1
 702              		.global	qmkusbSuspendHookI
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu softvfp
 708              	qmkusbSuspendHookI:
 709              	.LFB294:
 228:tmk_core/protocol/chibios/usb_driver.c **** 
 229:tmk_core/protocol/chibios/usb_driver.c **** /**
 230:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device suspend handler.
 231:tmk_core/protocol/chibios/usb_driver.c ****  * @details Generates a @p CHN_DISCONNECT event and puts queues in
 232:tmk_core/protocol/chibios/usb_driver.c ****  *          non-blocking mode, this way the application cannot get stuck
 233:tmk_core/protocol/chibios/usb_driver.c ****  *          in the middle of an I/O operations.
 234:tmk_core/protocol/chibios/usb_driver.c ****  * @note    If this function is not called from an ISR then an explicit call
 235:tmk_core/protocol/chibios/usb_driver.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 236:tmk_core/protocol/chibios/usb_driver.c ****  *
 237:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 238:tmk_core/protocol/chibios/usb_driver.c ****  *
 239:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 240:tmk_core/protocol/chibios/usb_driver.c ****  */
 241:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbSuspendHookI(QMKUSBDriver *qmkusbp) {
 710              		.loc 1 241 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              	.LVL69:
 715 0000 38B5     		push	{r3, r4, r5, lr}
 716              		.cfi_def_cfa_offset 16
 717              		.cfi_offset 3, -16
 718              		.cfi_offset 4, -12
 719              		.cfi_offset 5, -8
 720              		.cfi_offset 14, -4
 721              		.loc 1 241 0
 722 0002 0446     		mov	r4, r0
 242:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 243:tmk_core/protocol/chibios/usb_driver.c ****     bqSuspendI(&qmkusbp->ibqueue);
 723              		.loc 1 243 0
 724 0004 0125     		movs	r5, #1
 725              	.LBB168:
 726              	.LBB169:
 727              		.loc 4 844 0
 728 0006 0221     		movs	r1, #2
 729 0008 0430     		adds	r0, r0, #4
 730              	.LVL70:
 731 000a FFF7FEFF 		bl	chEvtBroadcastFlagsI
 732              	.LVL71:
 733              	.LBE169:
 734              	.LBE168:
 735              	.LBB170:
 736              	.LBB171:
 810:./lib/chibios/os/hal/osal/rt/osal.h **** }
 737              		.loc 4 810 0
 738 000e 04F10C00 		add	r0, r4, #12
 739              	.LBE171:
 740              	.LBE170:
 741              		.loc 1 243 0
 742 0012 2575     		strb	r5, [r4, #20]
 743              	.LVL72:
 744              	.LBB173:
 745              	.LBB172:
 810:./lib/chibios/os/hal/osal/rt/osal.h **** }
 746              		.loc 4 810 0
 747 0014 6FF00101 		mvn	r1, #1
 748 0018 FFF7FEFF 		bl	chThdDequeueAllI
 749              	.LVL73:
 750              	.LBE172:
 751              	.LBE173:
 244:tmk_core/protocol/chibios/usb_driver.c ****     bqSuspendI(&qmkusbp->obqueue);
 752              		.loc 1 244 0
 753 001c 84F84C50 		strb	r5, [r4, #76]
 754              	.LVL74:
 755              	.LBB174:
 756              	.LBB175:
 810:./lib/chibios/os/hal/osal/rt/osal.h **** }
 757              		.loc 4 810 0
 758 0020 04F14400 		add	r0, r4, #68
 759              	.LVL75:
 760 0024 6FF00101 		mvn	r1, #1
 761              	.LBE175:
 762              	.LBE174:
 245:tmk_core/protocol/chibios/usb_driver.c **** }
 763              		.loc 1 245 0
 764 0028 BDE83840 		pop	{r3, r4, r5, lr}
 765              		.cfi_restore 14
 766              		.cfi_restore 5
 767              		.cfi_restore 4
 768              		.cfi_restore 3
 769              		.cfi_def_cfa_offset 0
 770              	.LVL76:
 771              	.LBB177:
 772              	.LBB176:
 810:./lib/chibios/os/hal/osal/rt/osal.h **** }
 773              		.loc 4 810 0
 774 002c FFF7FEBF 		b	chThdDequeueAllI
 775              	.LVL77:
 776              	.LBE176:
 777              	.LBE177:
 778              		.cfi_endproc
 779              	.LFE294:
 781              		.section	.text.qmkusbWakeupHookI,"ax",%progbits
 782              		.align	1
 783              		.global	qmkusbWakeupHookI
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu softvfp
 789              	qmkusbWakeupHookI:
 790              	.LFB295:
 246:tmk_core/protocol/chibios/usb_driver.c **** 
 247:tmk_core/protocol/chibios/usb_driver.c **** /**
 248:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device wakeup handler.
 249:tmk_core/protocol/chibios/usb_driver.c ****  * @details Generates a @p CHN_CONNECT event and resumes normal queues
 250:tmk_core/protocol/chibios/usb_driver.c ****  *          operations.
 251:tmk_core/protocol/chibios/usb_driver.c ****  *
 252:tmk_core/protocol/chibios/usb_driver.c ****  * @note    If this function is not called from an ISR then an explicit call
 253:tmk_core/protocol/chibios/usb_driver.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 254:tmk_core/protocol/chibios/usb_driver.c ****  *
 255:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 256:tmk_core/protocol/chibios/usb_driver.c ****  *
 257:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 258:tmk_core/protocol/chibios/usb_driver.c ****  */
 259:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbWakeupHookI(QMKUSBDriver *qmkusbp) {
 791              		.loc 1 259 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              	.LVL78:
 796 0000 10B5     		push	{r4, lr}
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 4, -8
 799              		.cfi_offset 14, -4
 800              	.LBB178:
 801              	.LBB179:
 802              		.loc 4 844 0
 803 0002 0121     		movs	r1, #1
 804              	.LBE179:
 805              	.LBE178:
 806              		.loc 1 259 0
 807 0004 0446     		mov	r4, r0
 808              	.LBB181:
 809              	.LBB180:
 810              		.loc 4 844 0
 811 0006 0430     		adds	r0, r0, #4
 812              	.LVL79:
 813 0008 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 814              	.LVL80:
 815              	.LBE180:
 816              	.LBE181:
 260:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 261:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 817              		.loc 1 261 0
 818 000c 0023     		movs	r3, #0
 819 000e 2375     		strb	r3, [r4, #20]
 262:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->obqueue);
 820              		.loc 1 262 0
 821 0010 84F84C30 		strb	r3, [r4, #76]
 263:tmk_core/protocol/chibios/usb_driver.c **** }
 822              		.loc 1 263 0
 823 0014 10BD     		pop	{r4, pc}
 824              		.cfi_endproc
 825              	.LFE295:
 827              		.section	.text.qmkusbConfigureHookI,"ax",%progbits
 828              		.align	1
 829              		.global	qmkusbConfigureHookI
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu softvfp
 835              	qmkusbConfigureHookI:
 836              	.LFB296:
 264:tmk_core/protocol/chibios/usb_driver.c **** 
 265:tmk_core/protocol/chibios/usb_driver.c **** /**
 266:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device configured handler.
 267:tmk_core/protocol/chibios/usb_driver.c ****  *
 268:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 269:tmk_core/protocol/chibios/usb_driver.c ****  *
 270:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 271:tmk_core/protocol/chibios/usb_driver.c ****  */
 272:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbConfigureHookI(QMKUSBDriver *qmkusbp) {
 837              		.loc 1 272 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              	.LVL81:
 842 0000 38B5     		push	{r3, r4, r5, lr}
 843              		.cfi_def_cfa_offset 16
 844              		.cfi_offset 3, -16
 845              		.cfi_offset 4, -12
 846              		.cfi_offset 5, -8
 847              		.cfi_offset 14, -4
 848              		.loc 1 272 0
 849 0002 0446     		mov	r4, r0
 273:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 274:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 850              		.loc 1 274 0
 851 0004 0025     		movs	r5, #0
 273:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 852              		.loc 1 273 0
 853 0006 0C30     		adds	r0, r0, #12
 854              	.LVL82:
 855 0008 FFF7FEFF 		bl	ibqResetI
 856              	.LVL83:
 275:tmk_core/protocol/chibios/usb_driver.c ****     obqResetI(&qmkusbp->obqueue);
 857              		.loc 1 275 0
 858 000c 04F14400 		add	r0, r4, #68
 274:tmk_core/protocol/chibios/usb_driver.c ****     obqResetI(&qmkusbp->obqueue);
 859              		.loc 1 274 0
 860 0010 2575     		strb	r5, [r4, #20]
 861              		.loc 1 275 0
 862 0012 FFF7FEFF 		bl	obqResetI
 863              	.LVL84:
 864              	.LBB182:
 865              	.LBB183:
 866              		.loc 4 844 0
 867 0016 201D     		adds	r0, r4, #4
 868              	.LBE183:
 869              	.LBE182:
 276:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->obqueue);
 870              		.loc 1 276 0
 871 0018 84F84C50 		strb	r5, [r4, #76]
 872              	.LVL85:
 873              	.LBB185:
 874              	.LBB184:
 875              		.loc 4 844 0
 876 001c 0121     		movs	r1, #1
 877 001e FFF7FEFF 		bl	chEvtBroadcastFlagsI
 878              	.LVL86:
 879              	.LBE184:
 880              	.LBE185:
 277:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 278:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 881              		.loc 1 278 0
 882 0022 2046     		mov	r0, r4
 279:tmk_core/protocol/chibios/usb_driver.c **** }
 883              		.loc 1 279 0
 884 0024 BDE83840 		pop	{r3, r4, r5, lr}
 885              		.cfi_restore 14
 886              		.cfi_restore 5
 887              		.cfi_restore 4
 888              		.cfi_restore 3
 889              		.cfi_def_cfa_offset 0
 890              	.LVL87:
 278:tmk_core/protocol/chibios/usb_driver.c **** }
 891              		.loc 1 278 0
 892 0028 FFF7FEBF 		b	qmkusb_start_receive
 893              	.LVL88:
 894              		.cfi_endproc
 895              	.LFE296:
 897              		.section	.text.qmkusbRequestsHook,"ax",%progbits
 898              		.align	1
 899              		.global	qmkusbRequestsHook
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu softvfp
 905              	qmkusbRequestsHook:
 906              	.LFB297:
 280:tmk_core/protocol/chibios/usb_driver.c **** 
 281:tmk_core/protocol/chibios/usb_driver.c **** /**
 282:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default requests hook.
 283:tmk_core/protocol/chibios/usb_driver.c ****  * @details Applications wanting to use the Serial over USB driver can use
 284:tmk_core/protocol/chibios/usb_driver.c ****  *          this function as requests hook in the USB configuration.
 285:tmk_core/protocol/chibios/usb_driver.c ****  *          The following requests are emulated:
 286:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_GET_LINE_CODING.
 287:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_SET_LINE_CODING.
 288:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_SET_CONTROL_LINE_STATE.
 289:tmk_core/protocol/chibios/usb_driver.c ****  *          .
 290:tmk_core/protocol/chibios/usb_driver.c ****  *
 291:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 292:tmk_core/protocol/chibios/usb_driver.c ****  * @return              The hook status.
 293:tmk_core/protocol/chibios/usb_driver.c ****  * @retval true         Message handled internally.
 294:tmk_core/protocol/chibios/usb_driver.c ****  * @retval false        Message not handled.
 295:tmk_core/protocol/chibios/usb_driver.c ****  */
 296:tmk_core/protocol/chibios/usb_driver.c **** bool qmkusbRequestsHook(USBDriver *usbp) {
 907              		.loc 1 296 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              		@ link register save eliminated.
 912              	.LVL89:
 297:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) {
 913              		.loc 1 297 0
 914 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 915 0004 03F06003 		and	r3, r3, #96
 916 0008 202B     		cmp	r3, #32
 917 000a 07D1     		bne	.L45
 298:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 918              		.loc 1 298 0
 919 000c 90F87530 		ldrb	r3, [r0, #117]	@ zero_extendqisi2
 920 0010 202B     		cmp	r3, #32
 921 0012 03D3     		bcc	.L45
 922 0014 212B     		cmp	r3, #33
 923 0016 03D9     		bls	.L42
 924 0018 222B     		cmp	r3, #34
 925 001a 09D0     		beq	.L43
 926              	.L45:
 299:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_GET_LINE_CODING:
 300:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 301:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 302:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_SET_LINE_CODING:
 303:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 304:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 305:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_SET_CONTROL_LINE_STATE:
 306:tmk_core/protocol/chibios/usb_driver.c ****                 /* Nothing to do, there are no control lines.*/
 307:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, NULL, 0, NULL);
 308:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 309:tmk_core/protocol/chibios/usb_driver.c ****             default:
 310:tmk_core/protocol/chibios/usb_driver.c ****                 return false;
 927              		.loc 1 310 0
 928 001c 0020     		movs	r0, #0
 929              	.LVL90:
 311:tmk_core/protocol/chibios/usb_driver.c ****         }
 312:tmk_core/protocol/chibios/usb_driver.c ****     }
 313:tmk_core/protocol/chibios/usb_driver.c ****     return false;
 314:tmk_core/protocol/chibios/usb_driver.c **** }
 930              		.loc 1 314 0
 931 001e 7047     		bx	lr
 932              	.LVL91:
 933              	.L42:
 300:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 934              		.loc 1 300 0
 935 0020 054B     		ldr	r3, .L47
 936 0022 8366     		str	r3, [r0, #104]
 937 0024 0723     		movs	r3, #7
 938 0026 C366     		str	r3, [r0, #108]
 939 0028 0023     		movs	r3, #0
 940              	.L46:
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 941              		.loc 1 307 0
 942 002a 0367     		str	r3, [r0, #112]
 308:tmk_core/protocol/chibios/usb_driver.c ****             default:
 943              		.loc 1 308 0
 944 002c 0120     		movs	r0, #1
 945              	.LVL92:
 946 002e 7047     		bx	lr
 947              	.LVL93:
 948              	.L43:
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 949              		.loc 1 307 0
 950 0030 0023     		movs	r3, #0
 951 0032 C0E91A33 		strd	r3, r3, [r0, #104]
 952 0036 F8E7     		b	.L46
 953              	.L48:
 954              		.align	2
 955              	.L47:
 956 0038 00000000 		.word	.LANCHOR1
 957              		.cfi_endproc
 958              	.LFE297:
 960              		.section	.text.qmkusbSOFHookI,"ax",%progbits
 961              		.align	1
 962              		.global	qmkusbSOFHookI
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 966              		.fpu softvfp
 968              	qmkusbSOFHookI:
 969              	.LFB298:
 315:tmk_core/protocol/chibios/usb_driver.c **** 
 316:tmk_core/protocol/chibios/usb_driver.c **** /**
 317:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   SOF handler.
 318:tmk_core/protocol/chibios/usb_driver.c ****  * @details The SOF interrupt is used for automatic flushing of incomplete
 319:tmk_core/protocol/chibios/usb_driver.c ****  *          buffers pending in the output queue.
 320:tmk_core/protocol/chibios/usb_driver.c ****  *
 321:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 322:tmk_core/protocol/chibios/usb_driver.c ****  *
 323:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 324:tmk_core/protocol/chibios/usb_driver.c ****  */
 325:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbSOFHookI(QMKUSBDriver *qmkusbp) {
 970              		.loc 1 325 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 8
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              	.LVL94:
 326:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 327:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
 328:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
 975              		.loc 1 328 0
 976 0000 C36F     		ldr	r3, [r0, #124]
 977 0002 1A68     		ldr	r2, [r3]
 325:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 978              		.loc 1 325 0
 979 0004 73B5     		push	{r0, r1, r4, r5, r6, lr}
 980              		.cfi_def_cfa_offset 24
 981              		.cfi_offset 4, -16
 982              		.cfi_offset 5, -12
 983              		.cfi_offset 6, -8
 984              		.cfi_offset 14, -4
 985              		.loc 1 328 0
 986 0006 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 987 0008 0429     		cmp	r1, #4
 325:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 988              		.loc 1 325 0
 989 000a 0446     		mov	r4, r0
 990              		.loc 1 328 0
 991 000c 27D1     		bne	.L49
 992              		.loc 1 328 0 is_stmt 0 discriminator 1
 993 000e 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 994 0010 0229     		cmp	r1, #2
 995 0012 24D1     		bne	.L49
 329:tmk_core/protocol/chibios/usb_driver.c ****         return;
 330:tmk_core/protocol/chibios/usb_driver.c ****     }
 331:tmk_core/protocol/chibios/usb_driver.c **** 
 332:tmk_core/protocol/chibios/usb_driver.c ****     /* If there is already a transaction ongoing then another one cannot be
 333:tmk_core/protocol/chibios/usb_driver.c ****        started.*/
 334:tmk_core/protocol/chibios/usb_driver.c ****     if (usbGetTransmitStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
 996              		.loc 1 334 0 is_stmt 1
 997 0014 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 998 0016 1589     		ldrh	r5, [r2, #8]
 999 0018 0123     		movs	r3, #1
 1000 001a 8B40     		lsls	r3, r3, r1
 1001 001c 1D40     		ands	r5, r3, r5
 1002 001e 1ED1     		bne	.L49
 335:tmk_core/protocol/chibios/usb_driver.c ****         return;
 336:tmk_core/protocol/chibios/usb_driver.c ****     }
 337:tmk_core/protocol/chibios/usb_driver.c **** 
 338:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there only a buffer partially filled, if so then it is
 339:tmk_core/protocol/chibios/usb_driver.c ****        enforced in the queue and transmitted.*/
 340:tmk_core/protocol/chibios/usb_driver.c ****     if (obqTryFlushI(&qmkusbp->obqueue)) {
 1003              		.loc 1 340 0
 1004 0020 00F14406 		add	r6, r0, #68
 1005 0024 3046     		mov	r0, r6
 1006              	.LVL95:
 1007 0026 FFF7FEFF 		bl	obqTryFlushI
 1008              	.LVL96:
 1009 002a C0B1     		cbz	r0, .L49
 1010              	.LBB186:
 341:tmk_core/protocol/chibios/usb_driver.c ****         size_t   n;
 342:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1011              		.loc 1 342 0
 1012 002c 3046     		mov	r0, r6
 1013 002e 01A9     		add	r1, sp, #4
 1014 0030 FFF7FEFF 		bl	obqGetFullBufferI
 1015              	.LVL97:
 343:tmk_core/protocol/chibios/usb_driver.c **** 
 344:tmk_core/protocol/chibios/usb_driver.c ****         /* For fixed size drivers, fill the end with zeros */
 345:tmk_core/protocol/chibios/usb_driver.c ****         if (qmkusbp->config->fixed_size) {
 1016              		.loc 1 345 0
 1017 0034 E36F     		ldr	r3, [r4, #124]
 1018 0036 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 342:tmk_core/protocol/chibios/usb_driver.c **** 
 1019              		.loc 1 342 0
 1020 0038 0646     		mov	r6, r0
 1021              	.LVL98:
 1022              		.loc 1 345 0
 1023 003a 4AB1     		cbz	r2, .L53
 346:tmk_core/protocol/chibios/usb_driver.c ****             memset(buf + n, 0, qmkusbp->config->in_size - n);
 1024              		.loc 1 346 0
 1025 003c 0198     		ldr	r0, [sp, #4]
 1026              	.LVL99:
 1027 003e 1A69     		ldr	r2, [r3, #16]
 1028 0040 2946     		mov	r1, r5
 1029 0042 121A     		subs	r2, r2, r0
 1030 0044 3044     		add	r0, r0, r6
 1031 0046 FFF7FEFF 		bl	memset
 1032              	.LVL100:
 347:tmk_core/protocol/chibios/usb_driver.c ****             n = qmkusbp->config->in_size;
 1033              		.loc 1 347 0
 1034 004a E36F     		ldr	r3, [r4, #124]
 1035 004c 1B69     		ldr	r3, [r3, #16]
 1036 004e 0193     		str	r3, [sp, #4]
 1037              	.L53:
 348:tmk_core/protocol/chibios/usb_driver.c ****         }
 349:tmk_core/protocol/chibios/usb_driver.c **** 
 350:tmk_core/protocol/chibios/usb_driver.c ****         osalDbgAssert(buf != NULL, "queue is empty");
 351:tmk_core/protocol/chibios/usb_driver.c **** 
 352:tmk_core/protocol/chibios/usb_driver.c ****         usbStartTransmitI(qmkusbp->config->usbp, qmkusbp->config->bulk_in, buf, n);
 1038              		.loc 1 352 0 discriminator 3
 1039 0050 E06F     		ldr	r0, [r4, #124]
 1040 0052 019B     		ldr	r3, [sp, #4]
 1041 0054 0179     		ldrb	r1, [r0, #4]	@ zero_extendqisi2
 1042 0056 0068     		ldr	r0, [r0]
 1043 0058 3246     		mov	r2, r6
 1044 005a FFF7FEFF 		bl	usbStartTransmitI
 1045              	.LVL101:
 1046              	.L49:
 1047              	.LBE186:
 353:tmk_core/protocol/chibios/usb_driver.c ****     }
 354:tmk_core/protocol/chibios/usb_driver.c **** }
 1048              		.loc 1 354 0
 1049 005e 02B0     		add	sp, sp, #8
 1050              		.cfi_def_cfa_offset 16
 1051              		@ sp needed
 1052 0060 70BD     		pop	{r4, r5, r6, pc}
 1053              		.cfi_endproc
 1054              	.LFE298:
 1056              		.section	.text.qmkusbDataTransmitted,"ax",%progbits
 1057              		.align	1
 1058              		.global	qmkusbDataTransmitted
 1059              		.syntax unified
 1060              		.thumb
 1061              		.thumb_func
 1062              		.fpu softvfp
 1064              	qmkusbDataTransmitted:
 1065              	.LFB299:
 355:tmk_core/protocol/chibios/usb_driver.c **** 
 356:tmk_core/protocol/chibios/usb_driver.c **** /**
 357:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data transmitted callback.
 358:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the IN
 359:tmk_core/protocol/chibios/usb_driver.c ****  *          data endpoint.
 360:tmk_core/protocol/chibios/usb_driver.c ****  *
 361:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 362:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        IN endpoint number
 363:tmk_core/protocol/chibios/usb_driver.c ****  */
 364:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbDataTransmitted(USBDriver *usbp, usbep_t ep) {
 1066              		.loc 1 364 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 8
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              	.LVL102:
 365:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 366:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
 367:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->in_params[ep - 1U];
 1071              		.loc 1 367 0
 1072 0000 00EB8103 		add	r3, r0, r1, lsl #2
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1073              		.loc 1 364 0
 1074 0004 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 1075              		.cfi_def_cfa_offset 32
 1076              		.cfi_offset 4, -24
 1077              		.cfi_offset 5, -20
 1078              		.cfi_offset 6, -16
 1079              		.cfi_offset 7, -12
 1080              		.cfi_offset 8, -8
 1081              		.cfi_offset 14, -4
 1082              		.loc 1 367 0
 1083 0008 9E6A     		ldr	r6, [r3, #40]
 1084              	.LVL103:
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1085              		.loc 1 364 0
 1086 000a 0446     		mov	r4, r0
 1087 000c 0D46     		mov	r5, r1
 368:tmk_core/protocol/chibios/usb_driver.c **** 
 369:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp == NULL) {
 1088              		.loc 1 369 0
 1089 000e FEB1     		cbz	r6, .L60
 1090              	.LVL104:
 1091              	.LBB187:
 1092              	.LBB188:
 1093              	.LBB189:
 1094              	.LBB190:
 1095              	.LBB191:
 1096              	.LBB192:
 1097              		.loc 3 264 0
 1098 0010 2023     		movs	r3, #32
 1099              		.syntax unified
 1100              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1101 0012 83F31188 		MSR basepri, r3
 1102              	@ 0 "" 2
 1103              	.LVL105:
 1104              		.thumb
 1105              		.syntax unified
 1106 0016 04EB8507 		add	r7, r4, r5, lsl #2
 1107              	.LBE192:
 1108              	.LBE191:
 1109              	.LBE190:
 1110              	.LBE189:
 1111              	.LBE188:
 1112              	.LBE187:
 1113              	.LBB193:
 1114              	.LBB194:
 1115              		.loc 4 844 0
 1116 001a 0821     		movs	r1, #8
 1117              	.LVL106:
 1118 001c 301D     		adds	r0, r6, #4
 1119              	.LVL107:
 1120 001e FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1121              	.LVL108:
 1122              	.LBE194:
 1123              	.LBE193:
 370:tmk_core/protocol/chibios/usb_driver.c ****         return;
 371:tmk_core/protocol/chibios/usb_driver.c ****     }
 372:tmk_core/protocol/chibios/usb_driver.c **** 
 373:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLockFromISR();
 374:tmk_core/protocol/chibios/usb_driver.c **** 
 375:tmk_core/protocol/chibios/usb_driver.c ****     /* Signaling that space is available in the output queue.*/
 376:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_OUTPUT_EMPTY);
 377:tmk_core/protocol/chibios/usb_driver.c **** 
 378:tmk_core/protocol/chibios/usb_driver.c ****     /* Freeing the buffer just transmitted, if it was not a zero size packet.*/
 379:tmk_core/protocol/chibios/usb_driver.c ****     if (usbp->epc[ep]->in_state->txsize > 0U) {
 1124              		.loc 1 379 0
 1125 0022 FB68     		ldr	r3, [r7, #12]
 1126 0024 5B69     		ldr	r3, [r3, #20]
 1127 0026 1B68     		ldr	r3, [r3]
 1128 0028 06F14408 		add	r8, r6, #68
 1129 002c 13B1     		cbz	r3, .L62
 380:tmk_core/protocol/chibios/usb_driver.c ****         obqReleaseEmptyBufferI(&qmkusbp->obqueue);
 1130              		.loc 1 380 0
 1131 002e 4046     		mov	r0, r8
 1132 0030 FFF7FEFF 		bl	obqReleaseEmptyBufferI
 1133              	.LVL109:
 1134              	.L62:
 381:tmk_core/protocol/chibios/usb_driver.c ****     }
 382:tmk_core/protocol/chibios/usb_driver.c **** 
 383:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is a buffer ready for transmission.*/
 384:tmk_core/protocol/chibios/usb_driver.c ****     buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1135              		.loc 1 384 0
 1136 0034 01A9     		add	r1, sp, #4
 1137 0036 4046     		mov	r0, r8
 1138 0038 FFF7FEFF 		bl	obqGetFullBufferI
 1139              	.LVL110:
 385:tmk_core/protocol/chibios/usb_driver.c **** 
 386:tmk_core/protocol/chibios/usb_driver.c ****     if (buf != NULL) {
 1140              		.loc 1 386 0
 1141 003c 0246     		mov	r2, r0
 1142 003e 50B1     		cbz	r0, .L63
 387:tmk_core/protocol/chibios/usb_driver.c ****         /* The endpoint cannot be busy, we are in the context of the callback,
 388:tmk_core/protocol/chibios/usb_driver.c ****            so it is safe to transmit without a check.*/
 389:tmk_core/protocol/chibios/usb_driver.c ****         usbStartTransmitI(usbp, ep, buf, n);
 1143              		.loc 1 389 0
 1144 0040 019B     		ldr	r3, [sp, #4]
 1145              	.L75:
 390:tmk_core/protocol/chibios/usb_driver.c ****     } else if ((usbp->epc[ep]->in_state->txsize > 0U) && ((usbp->epc[ep]->in_state->txsize & ((size
 391:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 392:tmk_core/protocol/chibios/usb_driver.c ****            size. Otherwise the recipient may expect more data coming soon and
 393:tmk_core/protocol/chibios/usb_driver.c ****            not return buffered data to app. See section 5.8.3 Bulk Transfer
 394:tmk_core/protocol/chibios/usb_driver.c ****            Packet Size Constraints of the USB Specification document.*/
 395:tmk_core/protocol/chibios/usb_driver.c ****         if (!qmkusbp->config->fixed_size) {
 396:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1146              		.loc 1 396 0
 1147 0042 2946     		mov	r1, r5
 1148 0044 2046     		mov	r0, r4
 1149              	.LVL111:
 1150 0046 FFF7FEFF 		bl	usbStartTransmitI
 1151              	.LVL112:
 1152              	.L64:
 1153              	.LBB195:
 1154              	.LBB196:
 1155              	.LBB197:
 1156              	.LBB198:
 1157              	.LBB199:
 1158              	.LBB200:
 1159              		.loc 3 264 0 discriminator 1
 1160 004a 0023     		movs	r3, #0
 1161              		.syntax unified
 1162              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1163 004c 83F31188 		MSR basepri, r3
 1164              	@ 0 "" 2
 1165              	.LVL113:
 1166              		.thumb
 1167              		.syntax unified
 1168              	.L60:
 1169              	.LBE200:
 1170              	.LBE199:
 1171              	.LBE198:
 1172              	.LBE197:
 1173              	.LBE196:
 1174              	.LBE195:
 397:tmk_core/protocol/chibios/usb_driver.c ****         }
 398:tmk_core/protocol/chibios/usb_driver.c **** 
 399:tmk_core/protocol/chibios/usb_driver.c ****     } else {
 400:tmk_core/protocol/chibios/usb_driver.c ****         /* Nothing to transmit.*/
 401:tmk_core/protocol/chibios/usb_driver.c ****     }
 402:tmk_core/protocol/chibios/usb_driver.c **** 
 403:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlockFromISR();
 404:tmk_core/protocol/chibios/usb_driver.c **** }
 1175              		.loc 1 404 0
 1176 0050 02B0     		add	sp, sp, #8
 1177              		.cfi_remember_state
 1178              		.cfi_def_cfa_offset 24
 1179              		@ sp needed
 1180 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1181              	.LVL114:
 1182              	.L63:
 1183              		.cfi_restore_state
 390:tmk_core/protocol/chibios/usb_driver.c ****     } else if ((usbp->epc[ep]->in_state->txsize > 0U) && ((usbp->epc[ep]->in_state->txsize & ((size
 1184              		.loc 1 390 0
 1185 0056 FB68     		ldr	r3, [r7, #12]
 1186 0058 5A69     		ldr	r2, [r3, #20]
 1187 005a 1268     		ldr	r2, [r2]
 1188 005c 002A     		cmp	r2, #0
 1189 005e F4D0     		beq	.L64
 390:tmk_core/protocol/chibios/usb_driver.c ****     } else if ((usbp->epc[ep]->in_state->txsize > 0U) && ((usbp->epc[ep]->in_state->txsize & ((size
 1190              		.loc 1 390 0 is_stmt 0 discriminator 1
 1191 0060 1B8A     		ldrh	r3, [r3, #16]
 1192 0062 013B     		subs	r3, r3, #1
 1193 0064 1342     		tst	r3, r2
 1194 0066 F0D1     		bne	.L64
 395:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1195              		.loc 1 395 0 is_stmt 1
 1196 0068 F36F     		ldr	r3, [r6, #124]
 1197 006a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1198 006c 002B     		cmp	r3, #0
 1199 006e ECD1     		bne	.L64
 396:tmk_core/protocol/chibios/usb_driver.c ****         }
 1200              		.loc 1 396 0
 1201 0070 04F17402 		add	r2, r4, #116
 1202 0074 E5E7     		b	.L75
 1203              		.cfi_endproc
 1204              	.LFE299:
 1206              		.section	.text.qmkusbDataReceived,"ax",%progbits
 1207              		.align	1
 1208              		.global	qmkusbDataReceived
 1209              		.syntax unified
 1210              		.thumb
 1211              		.thumb_func
 1212              		.fpu softvfp
 1214              	qmkusbDataReceived:
 1215              	.LFB300:
 405:tmk_core/protocol/chibios/usb_driver.c **** 
 406:tmk_core/protocol/chibios/usb_driver.c **** /**
 407:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data received callback.
 408:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the OUT
 409:tmk_core/protocol/chibios/usb_driver.c ****  *          data endpoint.
 410:tmk_core/protocol/chibios/usb_driver.c ****  *
 411:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 412:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        OUT endpoint number
 413:tmk_core/protocol/chibios/usb_driver.c ****  */
 414:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbDataReceived(USBDriver *usbp, usbep_t ep) {
 1216              		.loc 1 414 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              	.LVL115:
 415:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->out_params[ep - 1U];
 1221              		.loc 1 415 0
 1222 0000 1131     		adds	r1, r1, #17
 1223              	.LVL116:
 414:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->out_params[ep - 1U];
 1224              		.loc 1 414 0
 1225 0002 10B5     		push	{r4, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 4, -8
 1228              		.cfi_offset 14, -4
 1229              		.loc 1 415 0
 1230 0004 50F82140 		ldr	r4, [r0, r1, lsl #2]
 1231              	.LVL117:
 416:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp == NULL) {
 1232              		.loc 1 416 0
 1233 0008 C4B1     		cbz	r4, .L76
 1234              	.LVL118:
 1235              	.LBB201:
 1236              	.LBB202:
 1237              	.LBB203:
 1238              	.LBB204:
 1239              	.LBB205:
 1240              	.LBB206:
 1241              		.loc 3 264 0
 1242 000a 2023     		movs	r3, #32
 1243              		.syntax unified
 1244              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1245 000c 83F31188 		MSR basepri, r3
 1246              	@ 0 "" 2
 1247              	.LVL119:
 1248              		.thumb
 1249              		.syntax unified
 1250              	.LBE206:
 1251              	.LBE205:
 1252              	.LBE204:
 1253              	.LBE203:
 1254              	.LBE202:
 1255              	.LBE201:
 1256              	.LBB207:
 1257              	.LBB208:
 1258              		.loc 4 844 0
 1259 0010 0421     		movs	r1, #4
 1260 0012 6018     		adds	r0, r4, r1
 1261              	.LVL120:
 1262 0014 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1263              	.LVL121:
 1264              	.LBE208:
 1265              	.LBE207:
 417:tmk_core/protocol/chibios/usb_driver.c ****         return;
 418:tmk_core/protocol/chibios/usb_driver.c ****     }
 419:tmk_core/protocol/chibios/usb_driver.c **** 
 420:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLockFromISR();
 421:tmk_core/protocol/chibios/usb_driver.c **** 
 422:tmk_core/protocol/chibios/usb_driver.c ****     /* Signaling that data is available in the input queue.*/
 423:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_INPUT_AVAILABLE);
 424:tmk_core/protocol/chibios/usb_driver.c **** 
 425:tmk_core/protocol/chibios/usb_driver.c ****     /* Posting the filled buffer in the queue.*/
 426:tmk_core/protocol/chibios/usb_driver.c ****     ibqPostFullBufferI(&qmkusbp->ibqueue, usbGetReceiveTransactionSizeX(qmkusbp->config->usbp, qmku
 1266              		.loc 1 426 0
 1267 0018 E26F     		ldr	r2, [r4, #124]
 1268 001a 1368     		ldr	r3, [r2]
 1269 001c 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 1270 001e 03EB8203 		add	r3, r3, r2, lsl #2
 1271 0022 04F10C00 		add	r0, r4, #12
 1272 0026 DB68     		ldr	r3, [r3, #12]
 1273 0028 9B69     		ldr	r3, [r3, #24]
 1274 002a 5968     		ldr	r1, [r3, #4]
 1275 002c FFF7FEFF 		bl	ibqPostFullBufferI
 1276              	.LVL122:
 427:tmk_core/protocol/chibios/usb_driver.c **** 
 428:tmk_core/protocol/chibios/usb_driver.c ****     /* The endpoint cannot be busy, we are in the context of the callback,
 429:tmk_core/protocol/chibios/usb_driver.c ****        so a packet is in the buffer for sure. Trying to get a free buffer
 430:tmk_core/protocol/chibios/usb_driver.c ****        for the next transaction.*/
 431:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 1277              		.loc 1 431 0
 1278 0030 2046     		mov	r0, r4
 1279 0032 FFF7FEFF 		bl	qmkusb_start_receive
 1280              	.LVL123:
 1281              	.LBB209:
 1282              	.LBB210:
 1283              	.LBB211:
 1284              	.LBB212:
 1285              	.LBB213:
 1286              	.LBB214:
 1287              		.loc 3 264 0
 1288 0036 0023     		movs	r3, #0
 1289              		.syntax unified
 1290              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 1291 0038 83F31188 		MSR basepri, r3
 1292              	@ 0 "" 2
 1293              	.LVL124:
 1294              		.thumb
 1295              		.syntax unified
 1296              	.L76:
 1297              	.LBE214:
 1298              	.LBE213:
 1299              	.LBE212:
 1300              	.LBE211:
 1301              	.LBE210:
 1302              	.LBE209:
 432:tmk_core/protocol/chibios/usb_driver.c **** 
 433:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlockFromISR();
 434:tmk_core/protocol/chibios/usb_driver.c **** }
 1303              		.loc 1 434 0
 1304 003c 10BD     		pop	{r4, pc}
 1305              		.cfi_endproc
 1306              	.LFE300:
 1308              		.section	.text.qmkusbInterruptTransmitted,"ax",%progbits
 1309              		.align	1
 1310              		.global	qmkusbInterruptTransmitted
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu softvfp
 1316              	qmkusbInterruptTransmitted:
 1317              	.LFB301:
 435:tmk_core/protocol/chibios/usb_driver.c **** 
 436:tmk_core/protocol/chibios/usb_driver.c **** /**
 437:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data received callback.
 438:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the IN
 439:tmk_core/protocol/chibios/usb_driver.c ****  *          interrupt endpoint.
 440:tmk_core/protocol/chibios/usb_driver.c ****  *
 441:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 442:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        endpoint number
 443:tmk_core/protocol/chibios/usb_driver.c ****  */
 444:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbInterruptTransmitted(USBDriver *usbp, usbep_t ep) {
 1318              		.loc 1 444 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323              	.LVL125:
 445:tmk_core/protocol/chibios/usb_driver.c ****     (void)usbp;
 446:tmk_core/protocol/chibios/usb_driver.c ****     (void)ep;
 447:tmk_core/protocol/chibios/usb_driver.c **** }
 1324              		.loc 1 447 0
 1325 0000 7047     		bx	lr
 1326              		.cfi_endproc
 1327              	.LFE301:
 1329              		.section	.data.linecoding,"aw",%progbits
 1330              		.set	.LANCHOR1,. + 0
 1333              	linecoding:
 1334 0000 00       		.byte	0
 1335 0001 96       		.byte	-106
 1336 0002 00       		.byte	0
 1337 0003 00       		.byte	0
 1338 0004 00       		.byte	0
 1339 0005 00       		.byte	0
 1340 0006 08       		.byte	8
 1341              		.section	.rodata.vmt,"a",%progbits
 1342              		.align	2
 1343              		.set	.LANCHOR0,. + 0
 1346              	vmt:
 1347 0000 00000000 		.word	_write
 1348 0004 00000000 		.word	_read
 1349 0008 00000000 		.word	_put
 1350 000c 00000000 		.word	_get
 1351 0010 00000000 		.word	_putt
 1352 0014 00000000 		.word	_gett
 1353 0018 00000000 		.word	_writet
 1354 001c 00000000 		.word	_readt
 1355              		.text
 1356              	.Letext0:
 1357              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1358              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1359              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1360              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1361              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 1362              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 1363              		.file 11 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 1364              		.file 12 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 1365              		.file 13 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 1366              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1367              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 1368              		.file 16 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 1369              		.file 17 "./lib/chibios/os/rt/include/chtm.h"
 1370              		.file 18 "./lib/chibios/os/rt/include/chsem.h"
 1371              		.file 19 "./lib/chibios/os/rt/include/chmtx.h"
 1372              		.file 20 "./lib/chibios/os/rt/include/chsys.h"
 1373              		.file 21 "./lib/chibios/os/rt/include/chregistry.h"
 1374              		.file 22 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 1375              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1376              		.file 24 "./lib/chibios/os/hal/include/hal_buffers.h"
 1377              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1378              		.file 26 "./lib/chibios/os/hal/include/hal_dac.h"
 1379              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 1380              		.file 28 "./lib/chibios/os/hal/include/hal_gpt.h"
 1381              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 1382              		.file 30 "./lib/chibios/os/hal/include/hal_i2c.h"
 1383              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1384              		.file 32 "./lib/chibios/os/hal/include/hal_pwm.h"
 1385              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 1386              		.file 34 "./lib/chibios/os/hal/include/hal_usb.h"
 1387              		.file 35 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1388              		.file 36 "./lib/chibios/os/hal/include/hal_usb_cdc.h"
 1389              		.file 37 "tmk_core/protocol/chibios/usb_driver.h"
 1390              		.file 38 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1391              		.file 39 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1392              		.file 40 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1393              		.file 41 "./lib/chibios/os/rt/include/chthreads.h"
 1394              		.file 42 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_driver.c
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:16     .text.obnotify:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:22     .text.obnotify:0000000000000000 obnotify
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:84     .text._readt:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:90     .text._readt:0000000000000000 _readt
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:107    .text._read:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:113    .text._read:0000000000000000 _read
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:131    .text._writet:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:137    .text._writet:0000000000000000 _writet
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:154    .text._write:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:160    .text._write:0000000000000000 _write
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:178    .text._gett:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:184    .text._gett:0000000000000000 _gett
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:201    .text._get:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:207    .text._get:0000000000000000 _get
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:225    .text._putt:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:231    .text._putt:0000000000000000 _putt
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:248    .text._put:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:254    .text._put:0000000000000000 _put
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:272    .text.qmkusb_start_receive:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:278    .text.qmkusb_start_receive:0000000000000000 qmkusb_start_receive
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:351    .text.ibnotify:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:357    .text.ibnotify:0000000000000000 ibnotify
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:374    .text.qmkusbInit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:381    .text.qmkusbInit:0000000000000000 qmkusbInit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:394    .text.qmkusbObjectInit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:401    .text.qmkusbObjectInit:0000000000000000 qmkusbObjectInit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:473    .text.qmkusbObjectInit:0000000000000048 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:480    .text.qmkusbStart:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:487    .text.qmkusbStart:0000000000000000 qmkusbStart
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:567    .text.qmkusbStop:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:574    .text.qmkusbStop:0000000000000000 qmkusbStop
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:701    .text.qmkusbSuspendHookI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:708    .text.qmkusbSuspendHookI:0000000000000000 qmkusbSuspendHookI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:782    .text.qmkusbWakeupHookI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:789    .text.qmkusbWakeupHookI:0000000000000000 qmkusbWakeupHookI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:828    .text.qmkusbConfigureHookI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:835    .text.qmkusbConfigureHookI:0000000000000000 qmkusbConfigureHookI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:898    .text.qmkusbRequestsHook:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:905    .text.qmkusbRequestsHook:0000000000000000 qmkusbRequestsHook
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:956    .text.qmkusbRequestsHook:0000000000000038 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:961    .text.qmkusbSOFHookI:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:968    .text.qmkusbSOFHookI:0000000000000000 qmkusbSOFHookI
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1057   .text.qmkusbDataTransmitted:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1064   .text.qmkusbDataTransmitted:0000000000000000 qmkusbDataTransmitted
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1207   .text.qmkusbDataReceived:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1214   .text.qmkusbDataReceived:0000000000000000 qmkusbDataReceived
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1309   .text.qmkusbInterruptTransmitted:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1316   .text.qmkusbInterruptTransmitted:0000000000000000 qmkusbInterruptTransmitted
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1333   .data.linecoding:0000000000000000 linecoding
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1342   .rodata.vmt:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc1SlT59.s:1346   .rodata.vmt:0000000000000000 vmt

UNDEFINED SYMBOLS
obqGetFullBufferI
usbStartTransmitI
ibqReadTimeout
obqWriteTimeout
ibqGetTimeout
obqPutTimeout
ibqGetEmptyBufferI
usbStartReceiveI
ibqObjectInit
obqObjectInit
chEvtBroadcastFlagsI
ibqResetI
obqResetI
chSchRescheduleS
chThdDequeueAllI
obqTryFlushI
memset
obqReleaseEmptyBufferI
ibqPostFullBufferI
