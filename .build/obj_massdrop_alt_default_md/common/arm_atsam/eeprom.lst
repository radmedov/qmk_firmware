   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"eeprom.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.eeprom_read_byte,"ax",%progbits
  18              		.align	1
  19              		.global	eeprom_read_byte
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	eeprom_read_byte:
  26              	.LFB0:
  27              		.file 1 "tmk_core/common/arm_atsam/eeprom.c"
   1:tmk_core/common/arm_atsam/eeprom.c **** /* Copyright 2017 Fred Sundvik
   2:tmk_core/common/arm_atsam/eeprom.c ****  *
   3:tmk_core/common/arm_atsam/eeprom.c ****  * This program is free software: you can redistribute it and/or modify
   4:tmk_core/common/arm_atsam/eeprom.c ****  * it under the terms of the GNU General Public License as published by
   5:tmk_core/common/arm_atsam/eeprom.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:tmk_core/common/arm_atsam/eeprom.c ****  * (at your option) any later version.
   7:tmk_core/common/arm_atsam/eeprom.c ****  *
   8:tmk_core/common/arm_atsam/eeprom.c ****  * This program is distributed in the hope that it will be useful,
   9:tmk_core/common/arm_atsam/eeprom.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:tmk_core/common/arm_atsam/eeprom.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:tmk_core/common/arm_atsam/eeprom.c ****  * GNU General Public License for more details.
  12:tmk_core/common/arm_atsam/eeprom.c ****  *
  13:tmk_core/common/arm_atsam/eeprom.c ****  * You should have received a copy of the GNU General Public License
  14:tmk_core/common/arm_atsam/eeprom.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:tmk_core/common/arm_atsam/eeprom.c ****  */
  16:tmk_core/common/arm_atsam/eeprom.c **** 
  17:tmk_core/common/arm_atsam/eeprom.c **** #include "eeprom.h"
  18:tmk_core/common/arm_atsam/eeprom.c **** 
  19:tmk_core/common/arm_atsam/eeprom.c **** #define EEPROM_SIZE 32
  20:tmk_core/common/arm_atsam/eeprom.c **** 
  21:tmk_core/common/arm_atsam/eeprom.c **** static uint8_t buffer[EEPROM_SIZE];
  22:tmk_core/common/arm_atsam/eeprom.c **** 
  23:tmk_core/common/arm_atsam/eeprom.c **** uint8_t eeprom_read_byte(const uint8_t *addr) {
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  24:tmk_core/common/arm_atsam/eeprom.c ****     uintptr_t offset = (uintptr_t)addr;
  25:tmk_core/common/arm_atsam/eeprom.c ****     return buffer[offset];
  26:tmk_core/common/arm_atsam/eeprom.c **** }
  34              		.loc 1 26 0
  35 0000 014B     		ldr	r3, .L2
  36 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
  37              	.LVL1:
  38 0004 7047     		bx	lr
  39              	.L3:
  40 0006 00BF     		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text.eeprom_write_byte,"ax",%progbits
  47              		.align	1
  48              		.global	eeprom_write_byte
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	eeprom_write_byte:
  55              	.LFB1:
  27:tmk_core/common/arm_atsam/eeprom.c **** 
  28:tmk_core/common/arm_atsam/eeprom.c **** void eeprom_write_byte(uint8_t *addr, uint8_t value) {
  56              		.loc 1 28 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL2:
  29:tmk_core/common/arm_atsam/eeprom.c ****     uintptr_t offset = (uintptr_t)addr;
  30:tmk_core/common/arm_atsam/eeprom.c ****     buffer[offset]   = value;
  62              		.loc 1 30 0
  63 0000 014B     		ldr	r3, .L5
  64 0002 1954     		strb	r1, [r3, r0]
  31:tmk_core/common/arm_atsam/eeprom.c **** }
  65              		.loc 1 31 0
  66 0004 7047     		bx	lr
  67              	.L6:
  68 0006 00BF     		.align	2
  69              	.L5:
  70 0008 00000000 		.word	.LANCHOR0
  71              		.cfi_endproc
  72              	.LFE1:
  74              		.section	.text.eeprom_read_word,"ax",%progbits
  75              		.align	1
  76              		.global	eeprom_read_word
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	eeprom_read_word:
  83              	.LFB2:
  32:tmk_core/common/arm_atsam/eeprom.c **** 
  33:tmk_core/common/arm_atsam/eeprom.c **** uint16_t eeprom_read_word(const uint16_t *addr) {
  84              		.loc 1 33 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.LVL3:
  90              	.LBB6:
  91              	.LBB7:
  25:tmk_core/common/arm_atsam/eeprom.c **** }
  92              		.loc 1 25 0
  93 0000 034B     		ldr	r3, .L8
  94 0002 C218     		adds	r2, r0, r3
  95              	.LBE7:
  96              	.LBE6:
  34:tmk_core/common/arm_atsam/eeprom.c ****     const uint8_t *p = (const uint8_t *)addr;
  35:tmk_core/common/arm_atsam/eeprom.c ****     return eeprom_read_byte(p) | (eeprom_read_byte(p + 1) << 8);
  97              		.loc 1 35 0
  98 0004 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
  99              	.LVL4:
 100 0006 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 101              	.LVL5:
  36:tmk_core/common/arm_atsam/eeprom.c **** }
 102              		.loc 1 36 0
 103 0008 40EA0220 		orr	r0, r0, r2, lsl #8
 104 000c 7047     		bx	lr
 105              	.L9:
 106 000e 00BF     		.align	2
 107              	.L8:
 108 0010 00000000 		.word	.LANCHOR0
 109              		.cfi_endproc
 110              	.LFE2:
 112              		.section	.text.eeprom_read_dword,"ax",%progbits
 113              		.align	1
 114              		.global	eeprom_read_dword
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	eeprom_read_dword:
 121              	.LFB3:
  37:tmk_core/common/arm_atsam/eeprom.c **** 
  38:tmk_core/common/arm_atsam/eeprom.c **** uint32_t eeprom_read_dword(const uint32_t *addr) {
 122              		.loc 1 38 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL6:
 127 0000 10B5     		push	{r4, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131              	.LBB16:
 132              	.LBB17:
  25:tmk_core/common/arm_atsam/eeprom.c **** }
 133              		.loc 1 25 0
 134 0002 0649     		ldr	r1, .L11
 135 0004 4218     		adds	r2, r0, r1
 136              	.LBE17:
 137              	.LBE16:
  39:tmk_core/common/arm_atsam/eeprom.c ****     const uint8_t *p = (const uint8_t *)addr;
  40:tmk_core/common/arm_atsam/eeprom.c ****     return eeprom_read_byte(p) | (eeprom_read_byte(p + 1) << 8) | (eeprom_read_byte(p + 2) << 16) |
 138              		.loc 1 40 0
 139 0006 085C     		ldrb	r0, [r1, r0]	@ zero_extendqisi2
 140              	.LVL7:
 141 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 142 000a 5478     		ldrb	r4, [r2, #1]	@ zero_extendqisi2
 143 000c 1B04     		lsls	r3, r3, #16
 144 000e 43EA0423 		orr	r3, r3, r4, lsl #8
 145 0012 0343     		orrs	r3, r3, r0
 146 0014 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
  41:tmk_core/common/arm_atsam/eeprom.c **** }
 147              		.loc 1 41 0
 148 0016 43EA0060 		orr	r0, r3, r0, lsl #24
 149 001a 10BD     		pop	{r4, pc}
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 001c 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE3:
 157              		.section	.text.eeprom_read_block,"ax",%progbits
 158              		.align	1
 159              		.global	eeprom_read_block
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	eeprom_read_block:
 166              	.LFB4:
  42:tmk_core/common/arm_atsam/eeprom.c **** 
  43:tmk_core/common/arm_atsam/eeprom.c **** void eeprom_read_block(void *buf, const void *addr, uint32_t len) {
 167              		.loc 1 43 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              	.LVL8:
 172 0000 10B5     		push	{r4, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
 176              	.LBB20:
 177              	.LBB21:
  25:tmk_core/common/arm_atsam/eeprom.c **** }
 178              		.loc 1 25 0
 179 0002 054C     		ldr	r4, .L16
 180              	.LBE21:
 181              	.LBE20:
  44:tmk_core/common/arm_atsam/eeprom.c ****     const uint8_t *p    = (const uint8_t *)addr;
  45:tmk_core/common/arm_atsam/eeprom.c ****     uint8_t *      dest = (uint8_t *)buf;
  46:tmk_core/common/arm_atsam/eeprom.c ****     while (len--) {
 182              		.loc 1 46 0
 183 0004 0023     		movs	r3, #0
 184              	.LBB24:
 185              	.LBB22:
  25:tmk_core/common/arm_atsam/eeprom.c **** }
 186              		.loc 1 25 0
 187 0006 2144     		add	r1, r1, r4
 188              	.LVL9:
 189              	.L14:
 190              	.LBE22:
 191              	.LBE24:
 192              		.loc 1 46 0
 193 0008 9A42     		cmp	r2, r3
 194 000a 00D1     		bne	.L15
  47:tmk_core/common/arm_atsam/eeprom.c ****         *dest++ = eeprom_read_byte(p++);
  48:tmk_core/common/arm_atsam/eeprom.c ****     }
  49:tmk_core/common/arm_atsam/eeprom.c **** }
 195              		.loc 1 49 0
 196 000c 10BD     		pop	{r4, pc}
 197              	.L15:
 198              	.LVL10:
 199              	.LBB25:
 200              	.LBB23:
  25:tmk_core/common/arm_atsam/eeprom.c **** }
 201              		.loc 1 25 0
 202 000e CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 203              	.LBE23:
 204              	.LBE25:
  47:tmk_core/common/arm_atsam/eeprom.c ****         *dest++ = eeprom_read_byte(p++);
 205              		.loc 1 47 0
 206 0010 C454     		strb	r4, [r0, r3]
 207 0012 0133     		adds	r3, r3, #1
 208              	.LVL11:
 209 0014 F8E7     		b	.L14
 210              	.L17:
 211 0016 00BF     		.align	2
 212              	.L16:
 213 0018 00000000 		.word	.LANCHOR0
 214              		.cfi_endproc
 215              	.LFE4:
 217              		.section	.text.eeprom_write_word,"ax",%progbits
 218              		.align	1
 219              		.global	eeprom_write_word
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv4-sp-d16
 225              	eeprom_write_word:
 226              	.LFB5:
  50:tmk_core/common/arm_atsam/eeprom.c **** 
  51:tmk_core/common/arm_atsam/eeprom.c **** void eeprom_write_word(uint16_t *addr, uint16_t value) {
 227              		.loc 1 51 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL12:
 233              	.LBB30:
 234              	.LBB31:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 235              		.loc 1 30 0
 236 0000 024B     		ldr	r3, .L19
 237              	.LBE31:
 238              	.LBE30:
  52:tmk_core/common/arm_atsam/eeprom.c ****     uint8_t *p = (uint8_t *)addr;
  53:tmk_core/common/arm_atsam/eeprom.c ****     eeprom_write_byte(p++, value);
 239              		.loc 1 53 0
 240 0002 1954     		strb	r1, [r3, r0]
 241              	.LVL13:
 242              	.LBB32:
 243              	.LBB33:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 244              		.loc 1 30 0
 245 0004 1844     		add	r0, r0, r3
 246              	.LVL14:
 247              	.LBE33:
 248              	.LBE32:
  54:tmk_core/common/arm_atsam/eeprom.c ****     eeprom_write_byte(p, value >> 8);
 249              		.loc 1 54 0
 250 0006 090A     		lsrs	r1, r1, #8
 251              	.LVL15:
 252 0008 4170     		strb	r1, [r0, #1]
 253              	.LVL16:
  55:tmk_core/common/arm_atsam/eeprom.c **** }
 254              		.loc 1 55 0
 255 000a 7047     		bx	lr
 256              	.L20:
 257              		.align	2
 258              	.L19:
 259 000c 00000000 		.word	.LANCHOR0
 260              		.cfi_endproc
 261              	.LFE5:
 263              		.section	.text.eeprom_write_dword,"ax",%progbits
 264              		.align	1
 265              		.global	eeprom_write_dword
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	eeprom_write_dword:
 272              	.LFB6:
  56:tmk_core/common/arm_atsam/eeprom.c **** 
  57:tmk_core/common/arm_atsam/eeprom.c **** void eeprom_write_dword(uint32_t *addr, uint32_t value) {
 273              		.loc 1 57 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278              	.LVL17:
 279              	.LBB42:
 280              	.LBB43:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 281              		.loc 1 30 0
 282 0000 044B     		ldr	r3, .L22
 283              	.LBE43:
 284              	.LBE42:
  58:tmk_core/common/arm_atsam/eeprom.c ****     uint8_t *p = (uint8_t *)addr;
  59:tmk_core/common/arm_atsam/eeprom.c ****     eeprom_write_byte(p++, value);
 285              		.loc 1 59 0
 286 0002 1954     		strb	r1, [r3, r0]
 287              	.LVL18:
 288              	.LBB44:
 289              	.LBB45:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 290              		.loc 1 30 0
 291 0004 1844     		add	r0, r0, r3
 292              	.LVL19:
 293              	.LBE45:
 294              	.LBE44:
  60:tmk_core/common/arm_atsam/eeprom.c ****     eeprom_write_byte(p++, value >> 8);
 295              		.loc 1 60 0
 296 0006 0B0A     		lsrs	r3, r1, #8
 297 0008 4370     		strb	r3, [r0, #1]
 298              	.LVL20:
  61:tmk_core/common/arm_atsam/eeprom.c ****     eeprom_write_byte(p++, value >> 16);
 299              		.loc 1 61 0
 300 000a 0B0C     		lsrs	r3, r1, #16
  62:tmk_core/common/arm_atsam/eeprom.c ****     eeprom_write_byte(p, value >> 24);
 301              		.loc 1 62 0
 302 000c 090E     		lsrs	r1, r1, #24
 303              	.LVL21:
  61:tmk_core/common/arm_atsam/eeprom.c ****     eeprom_write_byte(p++, value >> 16);
 304              		.loc 1 61 0
 305 000e 8370     		strb	r3, [r0, #2]
 306              	.LVL22:
 307              		.loc 1 62 0
 308 0010 C170     		strb	r1, [r0, #3]
 309              	.LVL23:
  63:tmk_core/common/arm_atsam/eeprom.c **** }
 310              		.loc 1 63 0
 311 0012 7047     		bx	lr
 312              	.L23:
 313              		.align	2
 314              	.L22:
 315 0014 00000000 		.word	.LANCHOR0
 316              		.cfi_endproc
 317              	.LFE6:
 319              		.section	.text.eeprom_write_block,"ax",%progbits
 320              		.align	1
 321              		.global	eeprom_write_block
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	eeprom_write_block:
 328              	.LFB7:
  64:tmk_core/common/arm_atsam/eeprom.c **** 
  65:tmk_core/common/arm_atsam/eeprom.c **** void eeprom_write_block(const void *buf, void *addr, uint32_t len) {
 329              		.loc 1 65 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LVL24:
 334 0000 10B5     		push	{r4, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 4, -8
 337              		.cfi_offset 14, -4
 338              	.LBB48:
 339              	.LBB49:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 340              		.loc 1 30 0
 341 0002 054C     		ldr	r4, .L27
 342              	.LBE49:
 343              	.LBE48:
  66:tmk_core/common/arm_atsam/eeprom.c ****     uint8_t *      p   = (uint8_t *)addr;
  67:tmk_core/common/arm_atsam/eeprom.c ****     const uint8_t *src = (const uint8_t *)buf;
  68:tmk_core/common/arm_atsam/eeprom.c ****     while (len--) {
 344              		.loc 1 68 0
 345 0004 0023     		movs	r3, #0
 346              	.LBB52:
 347              	.LBB50:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 348              		.loc 1 30 0
 349 0006 2144     		add	r1, r1, r4
 350              	.LVL25:
 351              	.L25:
 352              	.LBE50:
 353              	.LBE52:
 354              		.loc 1 68 0
 355 0008 9A42     		cmp	r2, r3
 356 000a 00D1     		bne	.L26
  69:tmk_core/common/arm_atsam/eeprom.c ****         eeprom_write_byte(p++, *src++);
  70:tmk_core/common/arm_atsam/eeprom.c ****     }
  71:tmk_core/common/arm_atsam/eeprom.c **** }
 357              		.loc 1 71 0
 358 000c 10BD     		pop	{r4, pc}
 359              	.L26:
 360              	.LVL26:
  69:tmk_core/common/arm_atsam/eeprom.c ****         eeprom_write_byte(p++, *src++);
 361              		.loc 1 69 0
 362 000e C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 363              	.LVL27:
 364              	.LBB53:
 365              	.LBB51:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 366              		.loc 1 30 0
 367 0010 CC54     		strb	r4, [r1, r3]
 368 0012 0133     		adds	r3, r3, #1
 369              	.LVL28:
 370 0014 F8E7     		b	.L25
 371              	.L28:
 372 0016 00BF     		.align	2
 373              	.L27:
 374 0018 00000000 		.word	.LANCHOR0
 375              	.LBE51:
 376              	.LBE53:
 377              		.cfi_endproc
 378              	.LFE7:
 380              		.section	.text.eeprom_update_byte,"ax",%progbits
 381              		.align	1
 382              		.global	eeprom_update_byte
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu fpv4-sp-d16
 388              	eeprom_update_byte:
 389              	.LFB8:
  72:tmk_core/common/arm_atsam/eeprom.c **** 
  73:tmk_core/common/arm_atsam/eeprom.c **** void eeprom_update_byte(uint8_t *addr, uint8_t value) { eeprom_write_byte(addr, value); }
 390              		.loc 1 73 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395              	.LVL29:
 396              	.LBB56:
 397              	.LBB57:
  30:tmk_core/common/arm_atsam/eeprom.c **** }
 398              		.loc 1 30 0
 399 0000 014B     		ldr	r3, .L30
 400 0002 1954     		strb	r1, [r3, r0]
 401              	.LVL30:
 402              	.LBE57:
 403              	.LBE56:
 404              		.loc 1 73 0
 405 0004 7047     		bx	lr
 406              	.L31:
 407 0006 00BF     		.align	2
 408              	.L30:
 409 0008 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE8:
 413              		.section	.text.eeprom_update_word,"ax",%progbits
 414              		.align	1
 415              		.global	eeprom_update_word
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	eeprom_update_word:
 422              	.LFB13:
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427 0000 FFF7FEBF 		b	eeprom_write_word
 428              		.cfi_endproc
 429              	.LFE13:
 431              		.section	.text.eeprom_update_dword,"ax",%progbits
 432              		.align	1
 433              		.global	eeprom_update_dword
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	eeprom_update_dword:
 440              	.LFB15:
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 FFF7FEBF 		b	eeprom_write_dword
 446              		.cfi_endproc
 447              	.LFE15:
 449              		.section	.text.eeprom_update_block,"ax",%progbits
 450              		.align	1
 451              		.global	eeprom_update_block
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu fpv4-sp-d16
 457              	eeprom_update_block:
 458              	.LFB17:
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463 0000 FFF7FEBF 		b	eeprom_write_block
 464              		.cfi_endproc
 465              	.LFE17:
 467              		.bss
 468              		.set	.LANCHOR0,. + 0
 471              	buffer:
 472 0000 00000000 		.space	32
 472      00000000 
 472      00000000 
 472      00000000 
 472      00000000 
 473              		.text
 474              	.Letext0:
 475              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 476              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 eeprom.c
/var/tmp//ccx1jXlS.s:18     .text.eeprom_read_byte:0000000000000000 $t
/var/tmp//ccx1jXlS.s:25     .text.eeprom_read_byte:0000000000000000 eeprom_read_byte
/var/tmp//ccx1jXlS.s:42     .text.eeprom_read_byte:0000000000000008 $d
/var/tmp//ccx1jXlS.s:47     .text.eeprom_write_byte:0000000000000000 $t
/var/tmp//ccx1jXlS.s:54     .text.eeprom_write_byte:0000000000000000 eeprom_write_byte
/var/tmp//ccx1jXlS.s:70     .text.eeprom_write_byte:0000000000000008 $d
/var/tmp//ccx1jXlS.s:75     .text.eeprom_read_word:0000000000000000 $t
/var/tmp//ccx1jXlS.s:82     .text.eeprom_read_word:0000000000000000 eeprom_read_word
/var/tmp//ccx1jXlS.s:108    .text.eeprom_read_word:0000000000000010 $d
/var/tmp//ccx1jXlS.s:113    .text.eeprom_read_dword:0000000000000000 $t
/var/tmp//ccx1jXlS.s:120    .text.eeprom_read_dword:0000000000000000 eeprom_read_dword
/var/tmp//ccx1jXlS.s:153    .text.eeprom_read_dword:000000000000001c $d
/var/tmp//ccx1jXlS.s:158    .text.eeprom_read_block:0000000000000000 $t
/var/tmp//ccx1jXlS.s:165    .text.eeprom_read_block:0000000000000000 eeprom_read_block
/var/tmp//ccx1jXlS.s:213    .text.eeprom_read_block:0000000000000018 $d
/var/tmp//ccx1jXlS.s:218    .text.eeprom_write_word:0000000000000000 $t
/var/tmp//ccx1jXlS.s:225    .text.eeprom_write_word:0000000000000000 eeprom_write_word
/var/tmp//ccx1jXlS.s:259    .text.eeprom_write_word:000000000000000c $d
/var/tmp//ccx1jXlS.s:264    .text.eeprom_write_dword:0000000000000000 $t
/var/tmp//ccx1jXlS.s:271    .text.eeprom_write_dword:0000000000000000 eeprom_write_dword
/var/tmp//ccx1jXlS.s:315    .text.eeprom_write_dword:0000000000000014 $d
/var/tmp//ccx1jXlS.s:320    .text.eeprom_write_block:0000000000000000 $t
/var/tmp//ccx1jXlS.s:327    .text.eeprom_write_block:0000000000000000 eeprom_write_block
/var/tmp//ccx1jXlS.s:374    .text.eeprom_write_block:0000000000000018 $d
/var/tmp//ccx1jXlS.s:381    .text.eeprom_update_byte:0000000000000000 $t
/var/tmp//ccx1jXlS.s:388    .text.eeprom_update_byte:0000000000000000 eeprom_update_byte
/var/tmp//ccx1jXlS.s:409    .text.eeprom_update_byte:0000000000000008 $d
/var/tmp//ccx1jXlS.s:414    .text.eeprom_update_word:0000000000000000 $t
/var/tmp//ccx1jXlS.s:421    .text.eeprom_update_word:0000000000000000 eeprom_update_word
/var/tmp//ccx1jXlS.s:432    .text.eeprom_update_dword:0000000000000000 $t
/var/tmp//ccx1jXlS.s:439    .text.eeprom_update_dword:0000000000000000 eeprom_update_dword
/var/tmp//ccx1jXlS.s:450    .text.eeprom_update_block:0000000000000000 $t
/var/tmp//ccx1jXlS.s:457    .text.eeprom_update_block:0000000000000000 eeprom_update_block
/var/tmp//ccx1jXlS.s:471    .bss:0000000000000000 buffer
/var/tmp//ccx1jXlS.s:472    .bss:0000000000000000 $d

NO UNDEFINED SYMBOLS
