   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"report.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.has_anykey,"ax",%progbits
  18              		.align	1
  19              		.global	has_anykey
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	has_anykey:
  26              	.LFB0:
  27              		.file 1 "tmk_core/common/report.c"
   1:tmk_core/common/report.c **** /* Copyright 2017 Fred Sundvik
   2:tmk_core/common/report.c ****  *
   3:tmk_core/common/report.c ****  * This program is free software: you can redistribute it and/or modify
   4:tmk_core/common/report.c ****  * it under the terms of the GNU General Public License as published by
   5:tmk_core/common/report.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:tmk_core/common/report.c ****  * (at your option) any later version.
   7:tmk_core/common/report.c ****  *
   8:tmk_core/common/report.c ****  * This program is distributed in the hope that it will be useful,
   9:tmk_core/common/report.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:tmk_core/common/report.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:tmk_core/common/report.c ****  * GNU General Public License for more details.
  12:tmk_core/common/report.c ****  *
  13:tmk_core/common/report.c ****  * You should have received a copy of the GNU General Public License
  14:tmk_core/common/report.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:tmk_core/common/report.c ****  */
  16:tmk_core/common/report.c **** 
  17:tmk_core/common/report.c **** #include "report.h"
  18:tmk_core/common/report.c **** #include "host.h"
  19:tmk_core/common/report.c **** #include "keycode_config.h"
  20:tmk_core/common/report.c **** #include "debug.h"
  21:tmk_core/common/report.c **** #include "util.h"
  22:tmk_core/common/report.c **** #include <string.h>
  23:tmk_core/common/report.c **** 
  24:tmk_core/common/report.c **** /** \brief has_anykey
  25:tmk_core/common/report.c ****  *
  26:tmk_core/common/report.c ****  * FIXME: Needs doc
  27:tmk_core/common/report.c ****  */
  28:tmk_core/common/report.c **** uint8_t has_anykey(report_keyboard_t* keyboard_report) {
  28              		.loc 1 28 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  29:tmk_core/common/report.c ****     uint8_t  cnt = 0;
  30:tmk_core/common/report.c ****     uint8_t* p   = keyboard_report->keys;
  31:tmk_core/common/report.c ****     uint8_t  lp  = sizeof(keyboard_report->keys);
  32:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
  33:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
  34              		.loc 1 33 0
  35 0000 0C4B     		ldr	r3, .L11
  36 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  30:tmk_core/common/report.c ****     uint8_t  lp  = sizeof(keyboard_report->keys);
  37              		.loc 1 30 0
  38 0004 821C     		adds	r2, r0, #2
  39              	.LVL1:
  40              		.loc 1 33 0
  41 0006 5BB1     		cbz	r3, .L7
  42              		.loc 1 33 0 is_stmt 0 discriminator 1
  43 0008 0B4B     		ldr	r3, .L11+4
  44 000a 93F90030 		ldrsb	r3, [r3]
  45 000e 002B     		cmp	r3, #0
  46 0010 06DA     		bge	.L7
  34:tmk_core/common/report.c ****         p  = keyboard_report->nkro.bits;
  47              		.loc 1 34 0 is_stmt 1
  48 0012 421C     		adds	r2, r0, #1
  49              	.LVL2:
  35:tmk_core/common/report.c ****         lp = sizeof(keyboard_report->nkro.bits);
  50              		.loc 1 35 0
  51 0014 1F23     		movs	r3, #31
  52              	.LVL3:
  53              	.L2:
  54 0016 1344     		add	r3, r3, r2
  31:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
  55              		.loc 1 31 0
  56 0018 0020     		movs	r0, #0
  57              	.LVL4:
  58              	.L3:
  36:tmk_core/common/report.c ****     }
  37:tmk_core/common/report.c **** #endif
  38:tmk_core/common/report.c ****     while (lp--) {
  59              		.loc 1 38 0
  60 001a 9A42     		cmp	r2, r3
  61 001c 02D1     		bne	.L5
  39:tmk_core/common/report.c ****         if (*p++) cnt++;
  40:tmk_core/common/report.c ****     }
  41:tmk_core/common/report.c ****     return cnt;
  42:tmk_core/common/report.c **** }
  62              		.loc 1 42 0
  63 001e 7047     		bx	lr
  64              	.LVL5:
  65              	.L7:
  31:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
  66              		.loc 1 31 0
  67 0020 0623     		movs	r3, #6
  68 0022 F8E7     		b	.L2
  69              	.LVL6:
  70              	.L5:
  39:tmk_core/common/report.c ****         if (*p++) cnt++;
  71              		.loc 1 39 0
  72 0024 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
  73              	.LVL7:
  74 0028 0029     		cmp	r1, #0
  75 002a F6D0     		beq	.L3
  39:tmk_core/common/report.c ****         if (*p++) cnt++;
  76              		.loc 1 39 0 is_stmt 0 discriminator 1
  77 002c 0130     		adds	r0, r0, #1
  78              	.LVL8:
  79 002e C0B2     		uxtb	r0, r0
  80              	.LVL9:
  81 0030 F3E7     		b	.L3
  82              	.L12:
  83 0032 00BF     		.align	2
  84              	.L11:
  85 0034 00000000 		.word	keyboard_protocol
  86 0038 00000000 		.word	keymap_config
  87              		.cfi_endproc
  88              	.LFE0:
  90              		.section	.text.get_first_key,"ax",%progbits
  91              		.align	1
  92              		.global	get_first_key
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	get_first_key:
  99              	.LFB1:
  43:tmk_core/common/report.c **** 
  44:tmk_core/common/report.c **** /** \brief get_first_key
  45:tmk_core/common/report.c ****  *
  46:tmk_core/common/report.c ****  * FIXME: Needs doc
  47:tmk_core/common/report.c ****  */
  48:tmk_core/common/report.c **** uint8_t get_first_key(report_keyboard_t* keyboard_report) {
 100              		.loc 1 48 0 is_stmt 1
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              	.LVL10:
 105 0000 10B5     		push	{r4, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 14, -4
  49:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
  50:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 109              		.loc 1 50 0
 110 0002 0E4B     		ldr	r3, .L24
 111 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 0006 BBB1     		cbz	r3, .L14
 113              		.loc 1 50 0 is_stmt 0 discriminator 1
 114 0008 0D4B     		ldr	r3, .L24+4
 115 000a 93F90030 		ldrsb	r3, [r3]
 116 000e 002B     		cmp	r3, #0
 117 0010 12DA     		bge	.L14
 118 0012 421C     		adds	r2, r0, #1
 119              		.loc 1 50 0
 120 0014 0023     		movs	r3, #0
 121              	.L15:
 122              	.LBB2:
  51:tmk_core/common/report.c ****         uint8_t i = 0;
  52:tmk_core/common/report.c ****         for (; i < KEYBOARD_REPORT_BITS && !keyboard_report->nkro.bits[i]; i++)
 123              		.loc 1 52 0 is_stmt 1 discriminator 2
 124 0016 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 125 001a DCB2     		uxtb	r4, r3
 126              	.LVL11:
 127 001c 39B1     		cbz	r1, .L17
 128              	.LVL12:
 129              	.L16:
  53:tmk_core/common/report.c ****             ;
  54:tmk_core/common/report.c ****         return i << 3 | biton(keyboard_report->nkro.bits[i]);
 130              		.loc 1 54 0
 131 001e 2044     		add	r0, r0, r4
 132              	.LVL13:
 133 0020 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 134 0022 FFF7FEFF 		bl	biton
 135              	.LVL14:
 136 0026 40EAC400 		orr	r0, r0, r4, lsl #3
 137 002a C0B2     		uxtb	r0, r0
 138              	.L18:
 139              	.LBE2:
  55:tmk_core/common/report.c ****     }
  56:tmk_core/common/report.c **** #endif
  57:tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
  58:tmk_core/common/report.c ****     uint8_t i = cb_head;
  59:tmk_core/common/report.c ****     do {
  60:tmk_core/common/report.c ****         if (keyboard_report->keys[i] != 0) {
  61:tmk_core/common/report.c ****             break;
  62:tmk_core/common/report.c ****         }
  63:tmk_core/common/report.c ****         i = RO_INC(i);
  64:tmk_core/common/report.c ****     } while (i != cb_tail);
  65:tmk_core/common/report.c ****     return keyboard_report->keys[i];
  66:tmk_core/common/report.c **** #else
  67:tmk_core/common/report.c ****     return keyboard_report->keys[0];
  68:tmk_core/common/report.c **** #endif
  69:tmk_core/common/report.c **** }
 140              		.loc 1 69 0
 141 002c 10BD     		pop	{r4, pc}
 142              	.LVL15:
 143              	.L17:
 144 002e 0133     		adds	r3, r3, #1
 145              	.LVL16:
 146              	.LBB3:
  52:tmk_core/common/report.c ****             ;
 147              		.loc 1 52 0 discriminator 3
 148 0030 1F2B     		cmp	r3, #31
 149 0032 F0D1     		bne	.L15
 150 0034 1C46     		mov	r4, r3
 151              	.LVL17:
 152 0036 F2E7     		b	.L16
 153              	.L14:
 154              	.LBE3:
  67:tmk_core/common/report.c **** #endif
 155              		.loc 1 67 0
 156 0038 8078     		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 157              	.LVL18:
 158 003a F7E7     		b	.L18
 159              	.L25:
 160              		.align	2
 161              	.L24:
 162 003c 00000000 		.word	keyboard_protocol
 163 0040 00000000 		.word	keymap_config
 164              		.cfi_endproc
 165              	.LFE1:
 167              		.section	.text.add_key_byte,"ax",%progbits
 168              		.align	1
 169              		.global	add_key_byte
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	add_key_byte:
 176              	.LFB2:
  70:tmk_core/common/report.c **** 
  71:tmk_core/common/report.c **** /** \brief add key byte
  72:tmk_core/common/report.c ****  *
  73:tmk_core/common/report.c ****  * FIXME: Needs doc
  74:tmk_core/common/report.c ****  */
  75:tmk_core/common/report.c **** void add_key_byte(report_keyboard_t* keyboard_report, uint8_t code) {
 177              		.loc 1 75 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              	.LVL19:
 182 0000 30B5     		push	{r4, r5, lr}
 183              		.cfi_def_cfa_offset 12
 184              		.cfi_offset 4, -12
 185              		.cfi_offset 5, -8
 186              		.cfi_offset 14, -4
  76:tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
  77:tmk_core/common/report.c ****     int8_t i     = cb_head;
  78:tmk_core/common/report.c ****     int8_t empty = -1;
  79:tmk_core/common/report.c ****     if (cb_count) {
  80:tmk_core/common/report.c ****         do {
  81:tmk_core/common/report.c ****             if (keyboard_report->keys[i] == code) {
  82:tmk_core/common/report.c ****                 return;
  83:tmk_core/common/report.c ****             }
  84:tmk_core/common/report.c ****             if (empty == -1 && keyboard_report->keys[i] == 0) {
  85:tmk_core/common/report.c ****                 empty = i;
  86:tmk_core/common/report.c ****             }
  87:tmk_core/common/report.c ****             i = RO_INC(i);
  88:tmk_core/common/report.c ****         } while (i != cb_tail);
  89:tmk_core/common/report.c ****         if (i == cb_tail) {
  90:tmk_core/common/report.c ****             if (cb_tail == cb_head) {
  91:tmk_core/common/report.c ****                 // buffer is full
  92:tmk_core/common/report.c ****                 if (empty == -1) {
  93:tmk_core/common/report.c ****                     // pop head when has no empty space
  94:tmk_core/common/report.c ****                     cb_head = RO_INC(cb_head);
  95:tmk_core/common/report.c ****                     cb_count--;
  96:tmk_core/common/report.c ****                 } else {
  97:tmk_core/common/report.c ****                     // left shift when has empty space
  98:tmk_core/common/report.c ****                     uint8_t offset = 1;
  99:tmk_core/common/report.c ****                     i              = RO_INC(empty);
 100:tmk_core/common/report.c ****                     do {
 101:tmk_core/common/report.c ****                         if (keyboard_report->keys[i] != 0) {
 102:tmk_core/common/report.c ****                             keyboard_report->keys[empty] = keyboard_report->keys[i];
 103:tmk_core/common/report.c ****                             keyboard_report->keys[i]     = 0;
 104:tmk_core/common/report.c ****                             empty                        = RO_INC(empty);
 105:tmk_core/common/report.c ****                         } else {
 106:tmk_core/common/report.c ****                             offset++;
 107:tmk_core/common/report.c ****                         }
 108:tmk_core/common/report.c ****                         i = RO_INC(i);
 109:tmk_core/common/report.c ****                     } while (i != cb_tail);
 110:tmk_core/common/report.c ****                     cb_tail = RO_SUB(cb_tail, offset);
 111:tmk_core/common/report.c ****                 }
 112:tmk_core/common/report.c ****             }
 113:tmk_core/common/report.c ****         }
 114:tmk_core/common/report.c ****     }
 115:tmk_core/common/report.c ****     // add to tail
 116:tmk_core/common/report.c ****     keyboard_report->keys[cb_tail] = code;
 117:tmk_core/common/report.c ****     cb_tail                        = RO_INC(cb_tail);
 118:tmk_core/common/report.c ****     cb_count++;
 119:tmk_core/common/report.c **** #else
 120:tmk_core/common/report.c ****     int8_t i     = 0;
 121:tmk_core/common/report.c ****     int8_t empty = -1;
 187              		.loc 1 121 0
 188 0002 4FF0FF33 		mov	r3, #-1
 189 0006 851C     		adds	r5, r0, #2
 120:tmk_core/common/report.c ****     int8_t empty = -1;
 190              		.loc 1 120 0
 191 0008 0022     		movs	r2, #0
 192              	.LVL20:
 193              	.L29:
 122:tmk_core/common/report.c ****     for (; i < KEYBOARD_REPORT_KEYS; i++) {
 123:tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 194              		.loc 1 123 0
 195 000a 15F8014B 		ldrb	r4, [r5], #1	@ zero_extendqisi2
 196 000e 8C42     		cmp	r4, r1
 197 0010 0ED0     		beq	.L26
 124:tmk_core/common/report.c ****             break;
 125:tmk_core/common/report.c ****         }
 126:tmk_core/common/report.c ****         if (empty == -1 && keyboard_report->keys[i] == 0) {
 198              		.loc 1 126 0
 199 0012 B3F1FF3F 		cmp	r3, #-1
 200 0016 02D1     		bne	.L28
 201              		.loc 1 126 0 is_stmt 0 discriminator 1
 202 0018 002C     		cmp	r4, #0
 203 001a 08BF     		it	eq
 204 001c 1346     		moveq	r3, r2
 205              	.LVL21:
 206              	.L28:
 207 001e 0132     		adds	r2, r2, #1
 208              	.LVL22:
 209 0020 D4B2     		uxtb	r4, r2
 210              	.LVL23:
 122:tmk_core/common/report.c ****     for (; i < KEYBOARD_REPORT_KEYS; i++) {
 211              		.loc 1 122 0 is_stmt 1
 212 0022 062C     		cmp	r4, #6
 213 0024 62B2     		sxtb	r2, r4
 214 0026 F0D1     		bne	.L29
 127:tmk_core/common/report.c ****             empty = i;
 128:tmk_core/common/report.c ****         }
 129:tmk_core/common/report.c ****     }
 130:tmk_core/common/report.c ****     if (i == KEYBOARD_REPORT_KEYS) {
 131:tmk_core/common/report.c ****         if (empty != -1) {
 215              		.loc 1 131 0
 216 0028 5A1C     		adds	r2, r3, #1
 217 002a 01D0     		beq	.L26
 132:tmk_core/common/report.c ****             keyboard_report->keys[empty] = code;
 218              		.loc 1 132 0
 219 002c 1844     		add	r0, r0, r3
 220              	.LVL24:
 221 002e 8170     		strb	r1, [r0, #2]
 222              	.LVL25:
 223              	.L26:
 133:tmk_core/common/report.c ****         }
 134:tmk_core/common/report.c ****     }
 135:tmk_core/common/report.c **** #endif
 136:tmk_core/common/report.c **** }
 224              		.loc 1 136 0
 225 0030 30BD     		pop	{r4, r5, pc}
 226              		.cfi_endproc
 227              	.LFE2:
 229              		.section	.text.del_key_byte,"ax",%progbits
 230              		.align	1
 231              		.global	del_key_byte
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	del_key_byte:
 238              	.LFB3:
 137:tmk_core/common/report.c **** 
 138:tmk_core/common/report.c **** /** \brief del key byte
 139:tmk_core/common/report.c ****  *
 140:tmk_core/common/report.c ****  * FIXME: Needs doc
 141:tmk_core/common/report.c ****  */
 142:tmk_core/common/report.c **** void del_key_byte(report_keyboard_t* keyboard_report, uint8_t code) {
 239              		.loc 1 142 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL26:
 244 0000 10B5     		push	{r4, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 248 0002 831C     		adds	r3, r0, #2
 249              	.LBB4:
 143:tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
 144:tmk_core/common/report.c ****     uint8_t i = cb_head;
 145:tmk_core/common/report.c ****     if (cb_count) {
 146:tmk_core/common/report.c ****         do {
 147:tmk_core/common/report.c ****             if (keyboard_report->keys[i] == code) {
 148:tmk_core/common/report.c ****                 keyboard_report->keys[i] = 0;
 149:tmk_core/common/report.c ****                 cb_count--;
 150:tmk_core/common/report.c ****                 if (cb_count == 0) {
 151:tmk_core/common/report.c ****                     // reset head and tail
 152:tmk_core/common/report.c ****                     cb_tail = cb_head = 0;
 153:tmk_core/common/report.c ****                 }
 154:tmk_core/common/report.c ****                 if (i == RO_DEC(cb_tail)) {
 155:tmk_core/common/report.c ****                     // left shift when next to tail
 156:tmk_core/common/report.c ****                     do {
 157:tmk_core/common/report.c ****                         cb_tail = RO_DEC(cb_tail);
 158:tmk_core/common/report.c ****                         if (keyboard_report->keys[RO_DEC(cb_tail)] != 0) {
 159:tmk_core/common/report.c ****                             break;
 160:tmk_core/common/report.c ****                         }
 161:tmk_core/common/report.c ****                     } while (cb_tail != cb_head);
 162:tmk_core/common/report.c ****                 }
 163:tmk_core/common/report.c ****                 break;
 164:tmk_core/common/report.c ****             }
 165:tmk_core/common/report.c ****             i = RO_INC(i);
 166:tmk_core/common/report.c ****         } while (i != cb_tail);
 167:tmk_core/common/report.c ****     }
 168:tmk_core/common/report.c **** #else
 169:tmk_core/common/report.c ****     for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 170:tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 171:tmk_core/common/report.c ****             keyboard_report->keys[i] = 0;
 250              		.loc 1 171 0
 251 0004 0022     		movs	r2, #0
 252 0006 0830     		adds	r0, r0, #8
 253              	.LVL27:
 254              	.L36:
 170:tmk_core/common/report.c ****             keyboard_report->keys[i] = 0;
 255              		.loc 1 170 0
 256 0008 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 257              	.LVL28:
 258 000c 8C42     		cmp	r4, r1
 259              		.loc 1 171 0
 260 000e 08BF     		it	eq
 261 0010 03F8012C 		strbeq	r2, [r3, #-1]
 262              	.LVL29:
 169:tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 263              		.loc 1 169 0
 264 0014 8342     		cmp	r3, r0
 265 0016 F7D1     		bne	.L36
 266              	.LBE4:
 172:tmk_core/common/report.c ****         }
 173:tmk_core/common/report.c ****     }
 174:tmk_core/common/report.c **** #endif
 175:tmk_core/common/report.c **** }
 267              		.loc 1 175 0
 268 0018 10BD     		pop	{r4, pc}
 269              		.cfi_endproc
 270              	.LFE3:
 272              		.section	.text.add_key_bit,"ax",%progbits
 273              		.align	1
 274              		.global	add_key_bit
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	add_key_bit:
 281              	.LFB4:
 176:tmk_core/common/report.c **** 
 177:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 178:tmk_core/common/report.c **** /** \brief add key bit
 179:tmk_core/common/report.c ****  *
 180:tmk_core/common/report.c ****  * FIXME: Needs doc
 181:tmk_core/common/report.c ****  */
 182:tmk_core/common/report.c **** void add_key_bit(report_keyboard_t* keyboard_report, uint8_t code) {
 282              		.loc 1 182 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL30:
 183:tmk_core/common/report.c ****     if ((code >> 3) < KEYBOARD_REPORT_BITS) {
 288              		.loc 1 183 0
 289 0000 CB08     		lsrs	r3, r1, #3
 290 0002 1F2B     		cmp	r3, #31
 291 0004 07D0     		beq	.L38
 184:tmk_core/common/report.c ****         keyboard_report->nkro.bits[code >> 3] |= 1 << (code & 7);
 292              		.loc 1 184 0
 293 0006 1844     		add	r0, r0, r3
 294              	.LVL31:
 295 0008 01F00703 		and	r3, r1, #7
 296 000c 0121     		movs	r1, #1
 297              	.LVL32:
 298 000e 9940     		lsls	r1, r1, r3
 299 0010 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 300 0012 1943     		orrs	r1, r1, r3
 301 0014 4170     		strb	r1, [r0, #1]
 302              	.L38:
 185:tmk_core/common/report.c ****     } else {
 186:tmk_core/common/report.c ****         dprintf("add_key_bit: can't add: %02X\n", code);
 187:tmk_core/common/report.c ****     }
 188:tmk_core/common/report.c **** }
 303              		.loc 1 188 0
 304 0016 7047     		bx	lr
 305              		.cfi_endproc
 306              	.LFE4:
 308              		.section	.text.del_key_bit,"ax",%progbits
 309              		.align	1
 310              		.global	del_key_bit
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv4-sp-d16
 316              	del_key_bit:
 317              	.LFB5:
 189:tmk_core/common/report.c **** 
 190:tmk_core/common/report.c **** /** \brief del key bit
 191:tmk_core/common/report.c ****  *
 192:tmk_core/common/report.c ****  * FIXME: Needs doc
 193:tmk_core/common/report.c ****  */
 194:tmk_core/common/report.c **** void del_key_bit(report_keyboard_t* keyboard_report, uint8_t code) {
 318              		.loc 1 194 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323              	.LVL33:
 195:tmk_core/common/report.c ****     if ((code >> 3) < KEYBOARD_REPORT_BITS) {
 324              		.loc 1 195 0
 325 0000 CB08     		lsrs	r3, r1, #3
 326 0002 1F2B     		cmp	r3, #31
 327 0004 08D0     		beq	.L43
 196:tmk_core/common/report.c ****         keyboard_report->nkro.bits[code >> 3] &= ~(1 << (code & 7));
 328              		.loc 1 196 0
 329 0006 1844     		add	r0, r0, r3
 330              	.LVL34:
 331 0008 01F00701 		and	r1, r1, #7
 332              	.LVL35:
 333 000c 0123     		movs	r3, #1
 334 000e 8B40     		lsls	r3, r3, r1
 335 0010 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 336 0012 21EA0301 		bic	r1, r1, r3
 337 0016 4170     		strb	r1, [r0, #1]
 338              	.L43:
 197:tmk_core/common/report.c ****     } else {
 198:tmk_core/common/report.c ****         dprintf("del_key_bit: can't del: %02X\n", code);
 199:tmk_core/common/report.c ****     }
 200:tmk_core/common/report.c **** }
 339              		.loc 1 200 0
 340 0018 7047     		bx	lr
 341              		.cfi_endproc
 342              	.LFE5:
 344              		.section	.text.add_key_to_report,"ax",%progbits
 345              		.align	1
 346              		.global	add_key_to_report
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu fpv4-sp-d16
 352              	add_key_to_report:
 353              	.LFB6:
 201:tmk_core/common/report.c **** #endif
 202:tmk_core/common/report.c **** 
 203:tmk_core/common/report.c **** /** \brief add key to report
 204:tmk_core/common/report.c ****  *
 205:tmk_core/common/report.c ****  * FIXME: Needs doc
 206:tmk_core/common/report.c ****  */
 207:tmk_core/common/report.c **** void add_key_to_report(report_keyboard_t* keyboard_report, uint8_t key) {
 354              		.loc 1 207 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              	.LVL36:
 360 0000 10B4     		push	{r4}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 4, -4
 208:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 209:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 363              		.loc 1 209 0
 364 0002 0A4C     		ldr	r4, .L53
 365 0004 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 207:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 366              		.loc 1 207 0
 367 0006 0346     		mov	r3, r0
 368 0008 0A46     		mov	r2, r1
 369              		.loc 1 209 0
 370 000a 44B1     		cbz	r4, .L49
 371              		.loc 1 209 0 is_stmt 0 discriminator 1
 372 000c 084C     		ldr	r4, .L53+4
 373 000e 94F90040 		ldrsb	r4, [r4]
 374 0012 002C     		cmp	r4, #0
 375 0014 03DA     		bge	.L49
 210:tmk_core/common/report.c ****         add_key_bit(keyboard_report, key);
 211:tmk_core/common/report.c ****         return;
 212:tmk_core/common/report.c ****     }
 213:tmk_core/common/report.c **** #endif
 214:tmk_core/common/report.c ****     add_key_byte(keyboard_report, key);
 215:tmk_core/common/report.c **** }
 376              		.loc 1 215 0 is_stmt 1
 377 0016 5DF8044B 		ldr	r4, [sp], #4
 378              		.cfi_remember_state
 379              		.cfi_restore 4
 380              		.cfi_def_cfa_offset 0
 210:tmk_core/common/report.c ****         add_key_bit(keyboard_report, key);
 381              		.loc 1 210 0
 382 001a FFF7FEBF 		b	add_key_bit
 383              	.LVL37:
 384              	.L49:
 385              		.cfi_restore_state
 214:tmk_core/common/report.c **** }
 386              		.loc 1 214 0
 387 001e 1146     		mov	r1, r2
 388              	.LVL38:
 389 0020 1846     		mov	r0, r3
 390              	.LVL39:
 391              		.loc 1 215 0
 392 0022 5DF8044B 		ldr	r4, [sp], #4
 393              		.cfi_restore 4
 394              		.cfi_def_cfa_offset 0
 214:tmk_core/common/report.c **** }
 395              		.loc 1 214 0
 396 0026 FFF7FEBF 		b	add_key_byte
 397              	.LVL40:
 398              	.L54:
 399 002a 00BF     		.align	2
 400              	.L53:
 401 002c 00000000 		.word	keyboard_protocol
 402 0030 00000000 		.word	keymap_config
 403              		.cfi_endproc
 404              	.LFE6:
 406              		.section	.text.del_key_from_report,"ax",%progbits
 407              		.align	1
 408              		.global	del_key_from_report
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	del_key_from_report:
 415              	.LFB7:
 216:tmk_core/common/report.c **** 
 217:tmk_core/common/report.c **** /** \brief del key from report
 218:tmk_core/common/report.c ****  *
 219:tmk_core/common/report.c ****  * FIXME: Needs doc
 220:tmk_core/common/report.c ****  */
 221:tmk_core/common/report.c **** void del_key_from_report(report_keyboard_t* keyboard_report, uint8_t key) {
 416              		.loc 1 221 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421              	.LVL41:
 422 0000 10B4     		push	{r4}
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 4, -4
 222:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 223:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 425              		.loc 1 223 0
 426 0002 0A4C     		ldr	r4, .L60
 427 0004 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 221:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 428              		.loc 1 221 0
 429 0006 0346     		mov	r3, r0
 430 0008 0A46     		mov	r2, r1
 431              		.loc 1 223 0
 432 000a 44B1     		cbz	r4, .L56
 433              		.loc 1 223 0 is_stmt 0 discriminator 1
 434 000c 084C     		ldr	r4, .L60+4
 435 000e 94F90040 		ldrsb	r4, [r4]
 436 0012 002C     		cmp	r4, #0
 437 0014 03DA     		bge	.L56
 224:tmk_core/common/report.c ****         del_key_bit(keyboard_report, key);
 225:tmk_core/common/report.c ****         return;
 226:tmk_core/common/report.c ****     }
 227:tmk_core/common/report.c **** #endif
 228:tmk_core/common/report.c ****     del_key_byte(keyboard_report, key);
 229:tmk_core/common/report.c **** }
 438              		.loc 1 229 0 is_stmt 1
 439 0016 5DF8044B 		ldr	r4, [sp], #4
 440              		.cfi_remember_state
 441              		.cfi_restore 4
 442              		.cfi_def_cfa_offset 0
 224:tmk_core/common/report.c ****         del_key_bit(keyboard_report, key);
 443              		.loc 1 224 0
 444 001a FFF7FEBF 		b	del_key_bit
 445              	.LVL42:
 446              	.L56:
 447              		.cfi_restore_state
 228:tmk_core/common/report.c **** }
 448              		.loc 1 228 0
 449 001e 1146     		mov	r1, r2
 450              	.LVL43:
 451 0020 1846     		mov	r0, r3
 452              	.LVL44:
 453              		.loc 1 229 0
 454 0022 5DF8044B 		ldr	r4, [sp], #4
 455              		.cfi_restore 4
 456              		.cfi_def_cfa_offset 0
 228:tmk_core/common/report.c **** }
 457              		.loc 1 228 0
 458 0026 FFF7FEBF 		b	del_key_byte
 459              	.LVL45:
 460              	.L61:
 461 002a 00BF     		.align	2
 462              	.L60:
 463 002c 00000000 		.word	keyboard_protocol
 464 0030 00000000 		.word	keymap_config
 465              		.cfi_endproc
 466              	.LFE7:
 468              		.section	.text.clear_keys_from_report,"ax",%progbits
 469              		.align	1
 470              		.global	clear_keys_from_report
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv4-sp-d16
 476              	clear_keys_from_report:
 477              	.LFB8:
 230:tmk_core/common/report.c **** 
 231:tmk_core/common/report.c **** /** \brief clear key from report
 232:tmk_core/common/report.c ****  *
 233:tmk_core/common/report.c ****  * FIXME: Needs doc
 234:tmk_core/common/report.c ****  */
 235:tmk_core/common/report.c **** void clear_keys_from_report(report_keyboard_t* keyboard_report) {
 478              		.loc 1 235 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483              	.LVL46:
 236:tmk_core/common/report.c ****     // not clear mods
 237:tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 238:tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 484              		.loc 1 238 0
 485 0000 084B     		ldr	r3, .L67
 486 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 487 0004 4BB1     		cbz	r3, .L63
 488              		.loc 1 238 0 is_stmt 0 discriminator 1
 489 0006 084B     		ldr	r3, .L67+4
 490 0008 93F90030 		ldrsb	r3, [r3]
 491 000c 002B     		cmp	r3, #0
 492 000e 04DA     		bge	.L63
 239:tmk_core/common/report.c ****         memset(keyboard_report->nkro.bits, 0, sizeof(keyboard_report->nkro.bits));
 493              		.loc 1 239 0 is_stmt 1
 494 0010 1F22     		movs	r2, #31
 495 0012 0021     		movs	r1, #0
 496 0014 0130     		adds	r0, r0, #1
 497              	.LVL47:
 498 0016 FFF7FEBF 		b	memset
 499              	.LVL48:
 500              	.L63:
 240:tmk_core/common/report.c ****         return;
 241:tmk_core/common/report.c ****     }
 242:tmk_core/common/report.c **** #endif
 243:tmk_core/common/report.c ****     memset(keyboard_report->keys, 0, sizeof(keyboard_report->keys));
 501              		.loc 1 243 0
 502 001a 0023     		movs	r3, #0
 503 001c C0F80230 		str	r3, [r0, #2]	@ unaligned
 504 0020 C380     		strh	r3, [r0, #6]	@ unaligned
 244:tmk_core/common/report.c **** }
 505              		.loc 1 244 0
 506 0022 7047     		bx	lr
 507              	.L68:
 508              		.align	2
 509              	.L67:
 510 0024 00000000 		.word	keyboard_protocol
 511 0028 00000000 		.word	keymap_config
 512              		.cfi_endproc
 513              	.LFE8:
 515              		.text
 516              	.Letext0:
 517              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 518              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 519              		.file 4 "tmk_core/common/report.h"
 520              		.file 5 "tmk_core/common/host.h"
 521              		.file 6 "quantum/keycode_config.h"
 522              		.file 7 "tmk_core/common/debug.h"
 523              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 524              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 525              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 526              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 527              		.file 12 "<built-in>"
 528              		.file 13 "tmk_core/common/util.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 report.c
/var/tmp//ccbAxhSS.s:18     .text.has_anykey:0000000000000000 $t
/var/tmp//ccbAxhSS.s:25     .text.has_anykey:0000000000000000 has_anykey
/var/tmp//ccbAxhSS.s:85     .text.has_anykey:0000000000000034 $d
/var/tmp//ccbAxhSS.s:91     .text.get_first_key:0000000000000000 $t
/var/tmp//ccbAxhSS.s:98     .text.get_first_key:0000000000000000 get_first_key
/var/tmp//ccbAxhSS.s:162    .text.get_first_key:000000000000003c $d
/var/tmp//ccbAxhSS.s:168    .text.add_key_byte:0000000000000000 $t
/var/tmp//ccbAxhSS.s:175    .text.add_key_byte:0000000000000000 add_key_byte
/var/tmp//ccbAxhSS.s:230    .text.del_key_byte:0000000000000000 $t
/var/tmp//ccbAxhSS.s:237    .text.del_key_byte:0000000000000000 del_key_byte
/var/tmp//ccbAxhSS.s:273    .text.add_key_bit:0000000000000000 $t
/var/tmp//ccbAxhSS.s:280    .text.add_key_bit:0000000000000000 add_key_bit
/var/tmp//ccbAxhSS.s:309    .text.del_key_bit:0000000000000000 $t
/var/tmp//ccbAxhSS.s:316    .text.del_key_bit:0000000000000000 del_key_bit
/var/tmp//ccbAxhSS.s:345    .text.add_key_to_report:0000000000000000 $t
/var/tmp//ccbAxhSS.s:352    .text.add_key_to_report:0000000000000000 add_key_to_report
/var/tmp//ccbAxhSS.s:401    .text.add_key_to_report:000000000000002c $d
/var/tmp//ccbAxhSS.s:407    .text.del_key_from_report:0000000000000000 $t
/var/tmp//ccbAxhSS.s:414    .text.del_key_from_report:0000000000000000 del_key_from_report
/var/tmp//ccbAxhSS.s:463    .text.del_key_from_report:000000000000002c $d
/var/tmp//ccbAxhSS.s:469    .text.clear_keys_from_report:0000000000000000 $t
/var/tmp//ccbAxhSS.s:476    .text.clear_keys_from_report:0000000000000000 clear_keys_from_report
/var/tmp//ccbAxhSS.s:510    .text.clear_keys_from_report:0000000000000024 $d

UNDEFINED SYMBOLS
keyboard_protocol
keymap_config
biton
memset
