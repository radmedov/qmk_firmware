   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main_arm_atsam.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.keyboard_leds,"ax",%progbits
  18              		.align	1
  19              		.global	keyboard_leds
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	keyboard_leds:
  26              	.LFB145:
  27              		.file 1 "tmk_core/protocol/arm_atsam/main_arm_atsam.c"
   1:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** /*
   2:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** Copyright 2018 Massdrop Inc.
   3:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
   4:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** (at your option) any later version.
   8:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
   9:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** GNU General Public License for more details.
  13:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  14:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** */
  17:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  18:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "samd51j18a.h"
  19:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "tmk_core/common/keyboard.h"
  20:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  21:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "report.h"
  22:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "host.h"
  23:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "host_driver.h"
  24:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "keycode_config.h"
  25:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include <string.h>
  26:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "quantum.h"
  27:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  28:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** // From protocol directory
  29:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "arm_atsam_protocol.h"
  30:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  31:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** // From keyboard's directory
  32:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #include "config_led.h"
  33:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  34:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** uint8_t g_usb_state = USB_FSMSTATUS_FSMSTATE_OFF_Val;  // Saved USB state from hardware value to de
  35:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  36:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void    main_subtasks(void);
  37:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** uint8_t keyboard_leds(void);
  38:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void    send_keyboard(report_keyboard_t *report);
  39:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void    send_mouse(report_mouse_t *report);
  40:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void    send_system(uint16_t data);
  41:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void    send_consumer(uint16_t data);
  42:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  43:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** host_driver_t arm_atsam_driver = {keyboard_leds, send_keyboard, send_mouse, send_system, send_consu
  44:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  45:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** uint8_t led_states;
  46:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  47:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** uint8_t keyboard_leds(void) {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  48:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef NKRO_ENABLE
  49:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     if (keymap_config.nkro)
  33              		.loc 1 49 0
  34 0000 044B     		ldr	r3, .L5
  35 0002 93F90030 		ldrsb	r3, [r3]
  36 0006 002B     		cmp	r3, #0
  50:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         return udi_hid_nkro_report_set;
  37              		.loc 1 50 0
  38 0008 B4BF     		ite	lt
  39 000a 034B     		ldrlt	r3, .L5+4
  51:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     else
  52:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // NKRO_ENABLE
  53:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         return udi_hid_kbd_report_set;
  40              		.loc 1 53 0
  41 000c 034B     		ldrge	r3, .L5+8
  42 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  54:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
  43              		.loc 1 54 0
  44 0010 7047     		bx	lr
  45              	.L6:
  46 0012 00BF     		.align	2
  47              	.L5:
  48 0014 00000000 		.word	keymap_config
  49 0018 00000000 		.word	udi_hid_nkro_report_set
  50 001c 00000000 		.word	udi_hid_kbd_report_set
  51              		.cfi_endproc
  52              	.LFE145:
  54              		.section	.text.send_mouse,"ax",%progbits
  55              		.align	1
  56              		.global	send_mouse
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv4-sp-d16
  62              	send_mouse:
  63              	.LFB147:
  55:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  56:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void send_keyboard(report_keyboard_t *report) {
  57:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint32_t irqflags;
  58:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  59:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef NKRO_ENABLE
  60:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     if (!keymap_config.nkro) {
  61:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // NKRO_ENABLE
  62:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         while (udi_hid_kbd_b_report_trans_ongoing) {
  63:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             main_subtasks();
  64:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }  // Run other tasks while waiting for USB to be free
  65:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  66:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         irqflags = __get_PRIMASK();
  67:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __disable_irq();
  68:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __DMB();
  69:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  70:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         memcpy(udi_hid_kbd_report, report->raw, UDI_HID_KBD_REPORT_SIZE);
  71:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_kbd_b_report_valid = 1;
  72:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_kbd_send_report();
  73:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  74:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __DMB();
  75:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __set_PRIMASK(irqflags);
  76:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef NKRO_ENABLE
  77:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     } else {
  78:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         while (udi_hid_nkro_b_report_trans_ongoing) {
  79:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             main_subtasks();
  80:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }  // Run other tasks while waiting for USB to be free
  81:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  82:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         irqflags = __get_PRIMASK();
  83:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __disable_irq();
  84:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __DMB();
  85:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  86:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         memcpy(udi_hid_nkro_report, report->raw, UDI_HID_NKRO_REPORT_SIZE);
  87:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_nkro_b_report_valid = 1;
  88:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_nkro_send_report();
  89:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  90:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __DMB();
  91:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         __set_PRIMASK(irqflags);
  92:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
  93:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // NKRO_ENABLE
  94:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
  95:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
  96:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void send_mouse(report_mouse_t *report) {
  64              		.loc 1 96 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL0:
  97:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef MOUSEKEY_ENABLE
  98:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint32_t irqflags;
  99:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 100:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     irqflags = __get_PRIMASK();
 101:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __disable_irq();
 102:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __DMB();
 103:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 104:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     memcpy(udi_hid_mou_report, report, UDI_HID_MOU_REPORT_SIZE);
 105:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_mou_b_report_valid = 1;
 106:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_mou_send_report();
 107:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 108:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __DMB();
 109:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __set_PRIMASK(irqflags);
 110:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // MOUSEKEY_ENABLE
 111:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
  70              		.loc 1 111 0
  71 0000 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE147:
  75              		.section	.text.send_system,"ax",%progbits
  76              		.align	1
  77              		.global	send_system
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	send_system:
  84              	.LFB148:
 112:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 113:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void send_system(uint16_t data) {
  85              		.loc 1 113 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL1:
  90 0000 10B5     		push	{r4, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
  94              	.LBB45:
  95              	.LBB46:
  96              		.file 2 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h"
   1:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /*
   8:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  10:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  12:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  16:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  18:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  24:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  25:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  28:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  34:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  38:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  41:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  44:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  47:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  50:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  53:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  61:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  64:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  67:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  70:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  71:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  72:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   @{
  76:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  77:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  78:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
  79:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  83:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
  85:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
  87:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  88:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  89:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
  90:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  94:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
  96:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
  98:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  99:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 100:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 101:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 105:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 107:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 109:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 112:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 113:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 114:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 116:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 120:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 122:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 124:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 127:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 128:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 129:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 130:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 131:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 135:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 137:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 139:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 140:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 141:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 143:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 147:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 149:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 151:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 152:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 153:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 154:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 155:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 159:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 161:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 163:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 166:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 167:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 168:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 169:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 173:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 175:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 177:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 180:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 181:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 182:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 183:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 187:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 189:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 191:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 194:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 195:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 196:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 197:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 201:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 203:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 205:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 208:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 209:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 210:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 212:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 216:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 218:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 220:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 223:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 224:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 225:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 226:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 227:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 231:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 233:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 235:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 236:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 237:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 239:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 243:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 245:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 247:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 248:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 249:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 250:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 251:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 255:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 257:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 259:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 262:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 263:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 264:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 266:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 270:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 272:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 274:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 277:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 278:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 279:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 280:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 281:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 285:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 287:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 289:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 290:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 291:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 293:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 297:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 299:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 301:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 302:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 303:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 304:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 305:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 309:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 311:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 313:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
  97              		.loc 2 313 0
  98              		.syntax unified
  99              	@ 313 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 100 0002 EFF31084 		MRS r4, primask
 101              	@ 0 "" 2
 102              		.thumb
 103              		.syntax unified
 104              	.LBE46:
 105              	.LBE45:
 106              	.LBB47:
 107              	.LBB48:
  96:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 108              		.loc 2 96 0
 109              		.syntax unified
 110              	@ 96 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 111 0006 72B6     		cpsid i
 112              	@ 0 "" 2
 113              		.thumb
 114              		.syntax unified
 115              	.LBE48:
 116              	.LBE47:
 117              	.LBB49:
 118              	.LBB50:
 314:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 316:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 317:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 318:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 320:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 324:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 326:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 328:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 331:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 332:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 333:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 334:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 335:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 339:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 341:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 343:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 344:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 345:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 347:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 351:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 353:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 355:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 356:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 357:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 358:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 362:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 366:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 368:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 370:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 371:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 372:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 373:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 377:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 379:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 381:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 382:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 383:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 384:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 388:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 390:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 392:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 395:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 396:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 397:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 399:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 403:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 405:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 407:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 410:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 411:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 412:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 413:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 414:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 418:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 420:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 422:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 423:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 424:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 426:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 430:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 432:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 434:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 435:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 436:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 437:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 438:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 443:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 445:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 447:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 448:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 449:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 450:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 454:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 456:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 458:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 461:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 462:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 463:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 465:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 469:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 471:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 473:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 476:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 477:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 478:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 479:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 480:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 484:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 486:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 488:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 489:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 490:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 492:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 496:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 498:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 500:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 501:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 502:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 506:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 507:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 510:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 511:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 515:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 517:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 519:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 522:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 523:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 524:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 527:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 531:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 533:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 535:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 538:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 539:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 540:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 541:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 542:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 546:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 548:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 550:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 551:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 552:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 555:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 559:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 561:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 563:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 564:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 565:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 566:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 567:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 571:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 573:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 575:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 577:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 579:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 580:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 581:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 584:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 588:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 590:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 592:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 595:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 596:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 597:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 598:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 599:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 603:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 605:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 607:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 608:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 609:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 612:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 616:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 618:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 620:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 621:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 622:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 625:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 626:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 629:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 630:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 634:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 636:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 640:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #else
 643:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 645:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 646:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 647:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 648:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 649:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 653:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 655:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #else
 659:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 661:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 662:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 663:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 666:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 667:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 668:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 670:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 671:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   @{
 675:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** */
 676:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 677:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #else
 685:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 689:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 690:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 691:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 694:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 696:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 698:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 700:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 701:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 704:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 706:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 708:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 710:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 711:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 712:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 716:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 718:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 720:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 722:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 723:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 724:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 727:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 729:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 731:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 733:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 734:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 735:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 740:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 742:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 744:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 745:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 746:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 747:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 751:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 753:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 754:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 755:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 756:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 757:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 758:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 762:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 764:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 119              		.loc 2 764 0
 120              		.syntax unified
 121              	@ 764 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 122 0008 BFF35F8F 		dmb 0xF
 123              	@ 0 "" 2
 124              		.thumb
 125              		.syntax unified
 126              	.LBE50:
 127              	.LBE49:
 114:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef EXTRAKEY_ENABLE
 115:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint32_t irqflags;
 116:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 117:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     irqflags = __get_PRIMASK();
 118:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __disable_irq();
 119:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __DMB();
 120:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 121:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_report.desc.report_id = REPORT_ID_SYSTEM;
 128              		.loc 1 121 0
 129 000c 084B     		ldr	r3, .L13
 130 000e 0322     		movs	r2, #3
 131 0010 1A70     		strb	r2, [r3]
 122:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     if (data != 0) data = data - SYSTEM_POWER_DOWN + 1;
 132              		.loc 1 122 0
 133 0012 08B1     		cbz	r0, .L9
 134              		.loc 1 122 0 is_stmt 0 discriminator 1
 135 0014 8038     		subs	r0, r0, #128
 136              	.LVL2:
 137 0016 80B2     		uxth	r0, r0
 138              	.LVL3:
 139              	.L9:
 123:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_report.desc.report_data = data;
 140              		.loc 1 123 0 is_stmt 1
 141 0018 A3F80100 		strh	r0, [r3, #1]	@ unaligned
 124:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_b_report_valid          = 1;
 142              		.loc 1 124 0
 143 001c 054B     		ldr	r3, .L13+4
 144 001e 0122     		movs	r2, #1
 145 0020 1A70     		strb	r2, [r3]
 125:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_send_report();
 146              		.loc 1 125 0
 147 0022 FFF7FEFF 		bl	udi_hid_exk_send_report
 148              	.LVL4:
 149              	.LBB51:
 150              	.LBB52:
 151              		.loc 2 764 0
 152              		.syntax unified
 153              	@ 764 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 154 0026 BFF35F8F 		dmb 0xF
 155              	@ 0 "" 2
 156              	.LVL5:
 157              		.thumb
 158              		.syntax unified
 159              	.LBE52:
 160              	.LBE51:
 161              	.LBB53:
 162              	.LBB54:
 341:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 163              		.loc 2 341 0
 164              		.syntax unified
 165              	@ 341 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 166 002a 84F31088 		MSR primask, r4
 167              	@ 0 "" 2
 168              	.LVL6:
 169              		.thumb
 170              		.syntax unified
 171              	.LBE54:
 172              	.LBE53:
 126:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 127:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __DMB();
 128:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __set_PRIMASK(irqflags);
 129:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // EXTRAKEY_ENABLE
 130:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
 173              		.loc 1 130 0
 174 002e 10BD     		pop	{r4, pc}
 175              	.L14:
 176              		.align	2
 177              	.L13:
 178 0030 00000000 		.word	udi_hid_exk_report
 179 0034 00000000 		.word	udi_hid_exk_b_report_valid
 180              		.cfi_endproc
 181              	.LFE148:
 183              		.section	.text.send_consumer,"ax",%progbits
 184              		.align	1
 185              		.global	send_consumer
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	send_consumer:
 192              	.LFB149:
 131:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 132:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void send_consumer(uint16_t data) {
 193              		.loc 1 132 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL7:
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202              	.LBB55:
 203              	.LBB56:
 313:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 204              		.loc 2 313 0
 205              		.syntax unified
 206              	@ 313 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 207 0002 EFF31084 		MRS r4, primask
 208              	@ 0 "" 2
 209              		.thumb
 210              		.syntax unified
 211              	.LBE56:
 212              	.LBE55:
 213              	.LBB57:
 214              	.LBB58:
  96:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 215              		.loc 2 96 0
 216              		.syntax unified
 217              	@ 96 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 218 0006 72B6     		cpsid i
 219              	@ 0 "" 2
 220              		.thumb
 221              		.syntax unified
 222              	.LBE58:
 223              	.LBE57:
 224              	.LBB59:
 225              	.LBB60:
 226              		.loc 2 764 0
 227              		.syntax unified
 228              	@ 764 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 229 0008 BFF35F8F 		dmb 0xF
 230              	@ 0 "" 2
 231              		.thumb
 232              		.syntax unified
 233              	.LBE60:
 234              	.LBE59:
 133:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef EXTRAKEY_ENABLE
 134:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint32_t irqflags;
 135:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 136:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     irqflags = __get_PRIMASK();
 137:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __disable_irq();
 138:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __DMB();
 139:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 140:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_report.desc.report_id   = REPORT_ID_CONSUMER;
 235              		.loc 1 140 0
 236 000c 074B     		ldr	r3, .L16
 237 000e 0422     		movs	r2, #4
 238 0010 1A70     		strb	r2, [r3]
 141:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_report.desc.report_data = data;
 239              		.loc 1 141 0
 240 0012 A3F80100 		strh	r0, [r3, #1]	@ unaligned
 142:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_b_report_valid          = 1;
 241              		.loc 1 142 0
 242 0016 064B     		ldr	r3, .L16+4
 243 0018 0122     		movs	r2, #1
 244 001a 1A70     		strb	r2, [r3]
 143:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udi_hid_exk_send_report();
 245              		.loc 1 143 0
 246 001c FFF7FEFF 		bl	udi_hid_exk_send_report
 247              	.LVL8:
 248              	.LBB61:
 249              	.LBB62:
 250              		.loc 2 764 0
 251              		.syntax unified
 252              	@ 764 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 253 0020 BFF35F8F 		dmb 0xF
 254              	@ 0 "" 2
 255              		.thumb
 256              		.syntax unified
 257              	.LBE62:
 258              	.LBE61:
 259              	.LBB63:
 260              	.LBB64:
 341:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 261              		.loc 2 341 0
 262              		.syntax unified
 263              	@ 341 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 264 0024 84F31088 		MSR primask, r4
 265              	@ 0 "" 2
 266              		.thumb
 267              		.syntax unified
 268              	.LBE64:
 269              	.LBE63:
 144:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 145:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __DMB();
 146:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     __set_PRIMASK(irqflags);
 147:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // EXTRAKEY_ENABLE
 148:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
 270              		.loc 1 148 0
 271 0028 10BD     		pop	{r4, pc}
 272              	.L17:
 273 002a 00BF     		.align	2
 274              	.L16:
 275 002c 00000000 		.word	udi_hid_exk_report
 276 0030 00000000 		.word	udi_hid_exk_b_report_valid
 277              		.cfi_endproc
 278              	.LFE149:
 280              		.section	.text.main_subtask_usb_state,"ax",%progbits
 281              		.align	1
 282              		.global	main_subtask_usb_state
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	main_subtask_usb_state:
 289              	.LFB150:
 149:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 150:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void main_subtask_usb_state(void) {
 290              		.loc 1 150 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 70B5     		push	{r4, r5, r6, lr}
 295              		.cfi_def_cfa_offset 16
 296              		.cfi_offset 4, -16
 297              		.cfi_offset 5, -12
 298              		.cfi_offset 6, -8
 299              		.cfi_offset 14, -4
 151:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     static uint64_t fsmstate_on_delay = 0;                          // Delay timer to be sure USB i
 152:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint8_t         fsmstate_now      = USB->DEVICE.FSMSTATUS.reg;  // Current state from hardware 
 300              		.loc 1 152 0
 301 0002 4FF08243 		mov	r3, #1090519040
 302 0006 5C7B     		ldrb	r4, [r3, #13]	@ zero_extendqisi2
 303 0008 E4B2     		uxtb	r4, r4
 304              	.LVL9:
 153:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 154:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     if (fsmstate_now == USB_FSMSTATUS_FSMSTATE_SUSPEND_Val)  // If USB SUSPENDED
 305              		.loc 1 154 0
 306 000a 042C     		cmp	r4, #4
 307 000c 0CD1     		bne	.L19
 155:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     {
 156:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         fsmstate_on_delay = 0;  // Clear ON delay timer
 308              		.loc 1 156 0
 309 000e 1F4B     		ldr	r3, .L35
 157:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 158:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         if (g_usb_state != USB_FSMSTATUS_FSMSTATE_SUSPEND_Val)  // If previously not SUSPENDED
 310              		.loc 1 158 0
 311 0010 1F4D     		ldr	r5, .L35+4
 156:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 312              		.loc 1 156 0
 313 0012 0020     		movs	r0, #0
 314 0014 0021     		movs	r1, #0
 315 0016 C3E90001 		strd	r0, [r3]
 316              		.loc 1 158 0
 317 001a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 318 001c 042B     		cmp	r3, #4
 319              	.L34:
 159:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         {
 160:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             suspend_power_down();        // Run suspend routine
 161:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             g_usb_state = fsmstate_now;  // Save current USB state
 162:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }
 163:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     } else if (fsmstate_now == USB_FSMSTATUS_FSMSTATE_SLEEP_Val)  // Else if USB SLEEPING
 164:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     {
 165:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         fsmstate_on_delay = 0;  // Clear ON delay timer
 166:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 167:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         if (g_usb_state != USB_FSMSTATUS_FSMSTATE_SLEEP_Val)  // If previously not SLEEPING
 320              		.loc 1 167 0
 321 001e 02D0     		beq	.L18
 168:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         {
 169:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             suspend_power_down();        // Run suspend routine
 322              		.loc 1 169 0
 323 0020 FFF7FEFF 		bl	suspend_power_down
 324              	.LVL10:
 170:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             g_usb_state = fsmstate_now;  // Save current USB state
 325              		.loc 1 170 0
 326 0024 2C70     		strb	r4, [r5]
 327              	.LVL11:
 328              	.L18:
 171:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }
 172:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     } else if (fsmstate_now == USB_FSMSTATUS_FSMSTATE_ON_Val)  // Else if USB ON
 173:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     {
 174:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         if (g_usb_state != USB_FSMSTATUS_FSMSTATE_ON_Val)  // If previously not ON
 175:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         {
 176:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             if (fsmstate_on_delay == 0)  // If ON delay timer is cleared
 177:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             {
 178:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****                 fsmstate_on_delay = timer_read64() + 250;   // Set ON delay timer
 179:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             } else if (timer_read64() > fsmstate_on_delay)  // Else if ON delay timer is active and
 180:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             {
 181:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****                 suspend_wakeup_init();       // Run wakeup routine
 182:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****                 g_usb_state = fsmstate_now;  // Save current USB state
 183:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             }
 184:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }
 185:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     } else  // Else if USB is in a state not being tracked
 186:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     {
 187:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         fsmstate_on_delay = 0;  // Clear ON delay timer
 188:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 189:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
 329              		.loc 1 189 0
 330 0026 70BD     		pop	{r4, r5, r6, pc}
 331              	.LVL12:
 332              	.L19:
 163:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     {
 333              		.loc 1 163 0
 334 0028 082C     		cmp	r4, #8
 335 002a 08D1     		bne	.L22
 165:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 336              		.loc 1 165 0
 337 002c 174B     		ldr	r3, .L35
 167:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         {
 338              		.loc 1 167 0
 339 002e 184D     		ldr	r5, .L35+4
 165:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 340              		.loc 1 165 0
 341 0030 0020     		movs	r0, #0
 342 0032 0021     		movs	r1, #0
 343 0034 C3E90001 		strd	r0, [r3]
 167:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         {
 344              		.loc 1 167 0
 345 0038 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 346 003a 082B     		cmp	r3, #8
 347 003c EFE7     		b	.L34
 348              	.L22:
 172:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     {
 349              		.loc 1 172 0
 350 003e 022C     		cmp	r4, #2
 351 0040 1DD1     		bne	.L24
 174:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         {
 352              		.loc 1 174 0
 353 0042 134E     		ldr	r6, .L35+4
 354 0044 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 355 0046 022B     		cmp	r3, #2
 356 0048 EDD0     		beq	.L18
 176:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             {
 357              		.loc 1 176 0
 358 004a 104D     		ldr	r5, .L35
 359 004c D5E90023 		ldrd	r2, [r5]
 360 0050 1343     		orrs	r3, r2, r3
 361 0052 08D1     		bne	.L25
 178:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             } else if (timer_read64() > fsmstate_on_delay)  // Else if ON delay timer is active and
 362              		.loc 1 178 0
 363 0054 FFF7FEFF 		bl	timer_read64
 364              	.LVL13:
 365 0058 10F1FA03 		adds	r3, r0, #250
 366 005c 41F10004 		adc	r4, r1, #0
 367              	.LVL14:
 368 0060 C5E90034 		strd	r3, [r5]
 369 0064 DFE7     		b	.L18
 370              	.LVL15:
 371              	.L25:
 179:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             {
 372              		.loc 1 179 0
 373 0066 FFF7FEFF 		bl	timer_read64
 374              	.LVL16:
 375 006a D5E90023 		ldrd	r2, [r5]
 376 006e 8B42     		cmp	r3, r1
 377 0070 08BF     		it	eq
 378 0072 8242     		cmpeq	r2, r0
 379 0074 D7D2     		bcs	.L18
 181:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****                 g_usb_state = fsmstate_now;  // Save current USB state
 380              		.loc 1 181 0
 381 0076 FFF7FEFF 		bl	suspend_wakeup_init
 382              	.LVL17:
 182:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             }
 383              		.loc 1 182 0
 384 007a 3470     		strb	r4, [r6]
 385 007c D3E7     		b	.L18
 386              	.L24:
 187:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 387              		.loc 1 187 0
 388 007e 034B     		ldr	r3, .L35
 389 0080 0020     		movs	r0, #0
 390 0082 0021     		movs	r1, #0
 391 0084 C3E90001 		strd	r0, [r3]
 392              		.loc 1 189 0
 393 0088 CDE7     		b	.L18
 394              	.L36:
 395 008a 00BF     		.align	2
 396              	.L35:
 397 008c 00000000 		.word	.LANCHOR0
 398 0090 00000000 		.word	.LANCHOR1
 399              		.cfi_endproc
 400              	.LFE150:
 402              		.global	__aeabi_i2d
 403              		.global	__aeabi_dmul
 404              		.global	__aeabi_dadd
 405              		.global	__aeabi_d2uiz
 406              		.section	.text.main_subtask_power_check,"ax",%progbits
 407              		.align	1
 408              		.global	main_subtask_power_check
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	main_subtask_power_check:
 415              	.LFB151:
 190:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 191:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void main_subtask_power_check(void) {
 416              		.loc 1 191 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 421              		.cfi_def_cfa_offset 24
 422              		.cfi_offset 3, -24
 423              		.cfi_offset 4, -20
 424              		.cfi_offset 5, -16
 425              		.cfi_offset 6, -12
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 192:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     static uint64_t next_5v_checkup = 0;
 193:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 194:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     if (timer_read64() > next_5v_checkup) {
 428              		.loc 1 194 0
 429 0002 1F4C     		ldr	r4, .L39+16
 430 0004 FFF7FEFF 		bl	timer_read64
 431              	.LVL18:
 432 0008 D4E90223 		ldrd	r2, [r4, #8]
 433 000c 8B42     		cmp	r3, r1
 434 000e 08BF     		it	eq
 435 0010 8242     		cmpeq	r2, r0
 436 0012 2CD2     		bcs	.L37
 195:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         next_5v_checkup = timer_read64() + 5;
 437              		.loc 1 195 0
 438 0014 FFF7FEFF 		bl	timer_read64
 439              	.LVL19:
 440 0018 421D     		adds	r2, r0, #5
 441 001a 41F10003 		adc	r3, r1, #0
 196:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 197:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         v_5v     = adc_get(ADC_5V);
 442              		.loc 1 197 0
 443 001e 0C20     		movs	r0, #12
 195:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         next_5v_checkup = timer_read64() + 5;
 444              		.loc 1 195 0
 445 0020 C4E90223 		strd	r2, [r4, #8]
 446              		.loc 1 197 0
 447 0024 FFF7FEFF 		bl	adc_get
 448              	.LVL20:
 198:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         v_5v_avg = 0.9 * v_5v_avg + 0.1 * v_5v;
 449              		.loc 1 198 0
 450 0028 164C     		ldr	r4, .L39+20
 197:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         v_5v_avg = 0.9 * v_5v_avg + 0.1 * v_5v;
 451              		.loc 1 197 0
 452 002a 174B     		ldr	r3, .L39+24
 453 002c 0546     		mov	r5, r0
 454 002e 1880     		strh	r0, [r3]	@ movhi
 455              		.loc 1 198 0
 456 0030 2088     		ldrh	r0, [r4]
 457 0032 FFF7FEFF 		bl	__aeabi_i2d
 458              	.LVL21:
 459 0036 0EA3     		adr	r3, .L39
 460 0038 D3E90023 		ldrd	r2, [r3]
 461 003c FFF7FEFF 		bl	__aeabi_dmul
 462              	.LVL22:
 463 0040 0646     		mov	r6, r0
 464 0042 2846     		mov	r0, r5
 465 0044 0F46     		mov	r7, r1
 466 0046 FFF7FEFF 		bl	__aeabi_i2d
 467              	.LVL23:
 468 004a 0BA3     		adr	r3, .L39+8
 469 004c D3E90023 		ldrd	r2, [r3]
 470 0050 FFF7FEFF 		bl	__aeabi_dmul
 471              	.LVL24:
 472 0054 0B46     		mov	r3, r1
 473 0056 0246     		mov	r2, r0
 474 0058 3946     		mov	r1, r7
 475 005a 3046     		mov	r0, r6
 476 005c FFF7FEFF 		bl	__aeabi_dadd
 477              	.LVL25:
 478 0060 FFF7FEFF 		bl	__aeabi_d2uiz
 479              	.LVL26:
 480 0064 2080     		strh	r0, [r4]	@ movhi
 199:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 200:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef RGB_MATRIX_ENABLE
 201:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         gcr_compute();
 202:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif
 203:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 204:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
 481              		.loc 1 204 0
 482 0066 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 483              		.cfi_remember_state
 484              		.cfi_restore 14
 485              		.cfi_restore 7
 486              		.cfi_restore 6
 487              		.cfi_restore 5
 488              		.cfi_restore 4
 489              		.cfi_restore 3
 490              		.cfi_def_cfa_offset 0
 201:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif
 491              		.loc 1 201 0
 492 006a FFF7FEBF 		b	gcr_compute
 493              	.LVL27:
 494              	.L37:
 495              		.cfi_restore_state
 496              		.loc 1 204 0
 497 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 498              	.L40:
 499              		.align	3
 500              	.L39:
 501 0070 CDCCCCCC 		.word	3435973837
 502 0074 CCCCEC3F 		.word	1072483532
 503 0078 9A999999 		.word	2576980378
 504 007c 9999B93F 		.word	1069128089
 505 0080 00000000 		.word	.LANCHOR0
 506 0084 00000000 		.word	v_5v_avg
 507 0088 00000000 		.word	v_5v
 508              		.cfi_endproc
 509              	.LFE151:
 511              		.section	.text.main_subtask_usb_extra_device,"ax",%progbits
 512              		.align	1
 513              		.global	main_subtask_usb_extra_device
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv4-sp-d16
 519              	main_subtask_usb_extra_device:
 520              	.LFB152:
 205:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 206:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void main_subtask_usb_extra_device(void) {
 521              		.loc 1 206 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525 0000 10B5     		push	{r4, lr}
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 207:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     static uint64_t next_usb_checkup = 0;
 208:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 209:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     if (timer_read64() > next_usb_checkup) {
 529              		.loc 1 209 0
 530 0002 0B4C     		ldr	r4, .L43
 531 0004 FFF7FEFF 		bl	timer_read64
 532              	.LVL28:
 533 0008 D4E90423 		ldrd	r2, [r4, #16]
 534 000c 8B42     		cmp	r3, r1
 535 000e 08BF     		it	eq
 536 0010 8242     		cmpeq	r2, r0
 537 0012 0BD2     		bcs	.L41
 210:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         next_usb_checkup = timer_read64() + 10;
 538              		.loc 1 210 0
 539 0014 FFF7FEFF 		bl	timer_read64
 540              	.LVL29:
 541 0018 10F10A02 		adds	r2, r0, #10
 542 001c 41F10003 		adc	r3, r1, #0
 543 0020 C4E90423 		strd	r2, [r4, #16]
 211:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 212:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         USB_HandleExtraDevice();
 213:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 214:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
 544              		.loc 1 214 0
 545 0024 BDE81040 		pop	{r4, lr}
 546              		.cfi_remember_state
 547              		.cfi_restore 14
 548              		.cfi_restore 4
 549              		.cfi_def_cfa_offset 0
 212:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 550              		.loc 1 212 0
 551 0028 FFF7FEBF 		b	USB_HandleExtraDevice
 552              	.LVL30:
 553              	.L41:
 554              		.cfi_restore_state
 555              		.loc 1 214 0
 556 002c 10BD     		pop	{r4, pc}
 557              	.L44:
 558 002e 00BF     		.align	2
 559              	.L43:
 560 0030 00000000 		.word	.LANCHOR0
 561              		.cfi_endproc
 562              	.LFE152:
 564              		.section	.text.main_subtasks,"ax",%progbits
 565              		.align	1
 566              		.global	main_subtasks
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	main_subtasks:
 573              	.LFB153:
 215:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 216:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** void main_subtasks(void) {
 574              		.loc 1 216 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 08B5     		push	{r3, lr}
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 3, -8
 581              		.cfi_offset 14, -4
 217:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     main_subtask_usb_state();
 582              		.loc 1 217 0
 583 0002 FFF7FEFF 		bl	main_subtask_usb_state
 584              	.LVL31:
 218:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     main_subtask_power_check();
 585              		.loc 1 218 0
 586 0006 FFF7FEFF 		bl	main_subtask_power_check
 587              	.LVL32:
 219:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     main_subtask_usb_extra_device();
 220:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** }
 588              		.loc 1 220 0
 589 000a BDE80840 		pop	{r3, lr}
 590              		.cfi_restore 14
 591              		.cfi_restore 3
 592              		.cfi_def_cfa_offset 0
 219:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     main_subtask_usb_extra_device();
 593              		.loc 1 219 0
 594 000e FFF7FEBF 		b	main_subtask_usb_extra_device
 595              	.LVL33:
 596              		.cfi_endproc
 597              	.LFE153:
 599              		.section	.text.send_keyboard,"ax",%progbits
 600              		.align	1
 601              		.global	send_keyboard
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu fpv4-sp-d16
 607              	send_keyboard:
 608              	.LFB146:
  56:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint32_t irqflags;
 609              		.loc 1 56 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL34:
 614 0000 38B5     		push	{r3, r4, r5, lr}
 615              		.cfi_def_cfa_offset 16
 616              		.cfi_offset 3, -16
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 5, -8
 619              		.cfi_offset 14, -4
  60:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // NKRO_ENABLE
 620              		.loc 1 60 0
 621 0002 1D4B     		ldr	r3, .L57
 622 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 0006 DB09     		lsrs	r3, r3, #7
  56:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint32_t irqflags;
 624              		.loc 1 56 0
 625 0008 0446     		mov	r4, r0
  60:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // NKRO_ENABLE
 626              		.loc 1 60 0
 627 000a 17D0     		beq	.L55
  78:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             main_subtasks();
 628              		.loc 1 78 0
 629 000c 1B4D     		ldr	r5, .L57+4
 630              	.LVL35:
 631              	.L47:
 632 000e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 633 0010 73BB     		cbnz	r3, .L51
 634              	.LBB65:
 635              	.LBB66:
 313:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 636              		.loc 2 313 0
 637              		.syntax unified
 638              	@ 313 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 639 0012 EFF31085 		MRS r5, primask
 640              	@ 0 "" 2
 641              		.thumb
 642              		.syntax unified
 643              	.LBE66:
 644              	.LBE65:
 645              	.LBB67:
 646              	.LBB68:
  96:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 647              		.loc 2 96 0
 648              		.syntax unified
 649              	@ 96 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 650 0016 72B6     		cpsid i
 651              	@ 0 "" 2
 652              		.thumb
 653              		.syntax unified
 654              	.LBE68:
 655              	.LBE67:
 656              	.LBB69:
 657              	.LBB70:
 658              		.loc 2 764 0
 659              		.syntax unified
 660              	@ 764 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 661 0018 BFF35F8F 		dmb 0xF
 662              	@ 0 "" 2
 663              		.thumb
 664              		.syntax unified
 665              	.LBE70:
 666              	.LBE69:
  86:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_nkro_b_report_valid = 1;
 667              		.loc 1 86 0
 668 001c 184B     		ldr	r3, .L57+8
 669 001e 2046     		mov	r0, r4
 670 0020 04F12002 		add	r2, r4, #32
 671              	.L52:
 672 0024 50F8041B 		ldr	r1, [r0], #4	@ unaligned
 673 0028 43F8041B 		str	r1, [r3], #4	@ unaligned
 674 002c 9042     		cmp	r0, r2
 675 002e F9D1     		bne	.L52
  87:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_nkro_send_report();
 676              		.loc 1 87 0
 677 0030 144B     		ldr	r3, .L57+12
 678 0032 0122     		movs	r2, #1
 679 0034 1A70     		strb	r2, [r3]
  88:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 680              		.loc 1 88 0
 681 0036 FFF7FEFF 		bl	udi_hid_nkro_send_report
 682              	.LVL36:
 683 003a 11E0     		b	.L56
 684              	.LVL37:
 685              	.L55:
  62:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             main_subtasks();
 686              		.loc 1 62 0
 687 003c 124D     		ldr	r5, .L57+16
 688              	.LVL38:
 689              	.L48:
 690 003e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 691 0040 9BB9     		cbnz	r3, .L49
 692              	.LBB71:
 693              	.LBB72:
 313:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 694              		.loc 2 313 0
 695              		.syntax unified
 696              	@ 313 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 697 0042 EFF31085 		MRS r5, primask
 698              	@ 0 "" 2
 699              		.thumb
 700              		.syntax unified
 701              	.LBE72:
 702              	.LBE71:
 703              	.LBB73:
 704              	.LBB74:
  96:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 705              		.loc 2 96 0
 706              		.syntax unified
 707              	@ 96 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 708 0046 72B6     		cpsid i
 709              	@ 0 "" 2
 710              		.thumb
 711              		.syntax unified
 712              	.LBE74:
 713              	.LBE73:
 714              	.LBB75:
 715              	.LBB76:
 716              		.loc 2 764 0
 717              		.syntax unified
 718              	@ 764 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 719 0048 BFF35F8F 		dmb 0xF
 720              	@ 0 "" 2
 721              		.thumb
 722              		.syntax unified
 723              	.LBE76:
 724              	.LBE75:
  70:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_kbd_b_report_valid = 1;
 725              		.loc 1 70 0
 726 004c 0F4A     		ldr	r2, .L57+20
 727 004e 2368     		ldr	r3, [r4]	@ unaligned
 728 0050 1360     		str	r3, [r2]	@ unaligned
 729 0052 6368     		ldr	r3, [r4, #4]	@ unaligned
 730 0054 5360     		str	r3, [r2, #4]	@ unaligned
  71:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         udi_hid_kbd_send_report();
 731              		.loc 1 71 0
 732 0056 0E4B     		ldr	r3, .L57+24
 733 0058 0122     		movs	r2, #1
 734 005a 1A70     		strb	r2, [r3]
  72:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 735              		.loc 1 72 0
 736 005c FFF7FEFF 		bl	udi_hid_kbd_send_report
 737              	.LVL39:
 738              	.L56:
 739              	.LBB77:
 740              	.LBB78:
 741              		.loc 2 764 0
 742              		.syntax unified
 743              	@ 764 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 744 0060 BFF35F8F 		dmb 0xF
 745              	@ 0 "" 2
 746              		.thumb
 747              		.syntax unified
 748              	.LBE78:
 749              	.LBE77:
 750              	.LBB79:
 751              	.LBB80:
 341:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 752              		.loc 2 341 0
 753              		.syntax unified
 754              	@ 341 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 755 0064 85F31088 		MSR primask, r5
 756              	@ 0 "" 2
 757              		.thumb
 758              		.syntax unified
 759              	.LBE80:
 760              	.LBE79:
  94:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 761              		.loc 1 94 0
 762 0068 38BD     		pop	{r3, r4, r5, pc}
 763              	.LVL40:
 764              	.L49:
  63:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }  // Run other tasks while waiting for USB to be free
 765              		.loc 1 63 0
 766 006a FFF7FEFF 		bl	main_subtasks
 767              	.LVL41:
 768 006e E6E7     		b	.L48
 769              	.L51:
  79:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }  // Run other tasks while waiting for USB to be free
 770              		.loc 1 79 0
 771 0070 FFF7FEFF 		bl	main_subtasks
 772              	.LVL42:
 773 0074 CBE7     		b	.L47
 774              	.L58:
 775 0076 00BF     		.align	2
 776              	.L57:
 777 0078 00000000 		.word	keymap_config
 778 007c 00000000 		.word	udi_hid_nkro_b_report_trans_ongoing
 779 0080 00000000 		.word	udi_hid_nkro_report
 780 0084 00000000 		.word	udi_hid_nkro_b_report_valid
 781 0088 00000000 		.word	udi_hid_kbd_b_report_trans_ongoing
 782 008c 00000000 		.word	udi_hid_kbd_report
 783 0090 00000000 		.word	udi_hid_kbd_b_report_valid
 784              		.cfi_endproc
 785              	.LFE146:
 787              		.section	.text.startup.main,"ax",%progbits
 788              		.align	1
 789              		.global	main
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 793              		.fpu fpv4-sp-d16
 795              	main:
 796              	.LFB154:
 221:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 222:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** int main(void) {
 797              		.loc 1 222 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801 0000 38B5     		push	{r3, r4, r5, lr}
 802              		.cfi_def_cfa_offset 16
 803              		.cfi_offset 3, -16
 804              		.cfi_offset 4, -12
 805              		.cfi_offset 5, -8
 806              		.cfi_offset 14, -4
 223:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_LED_ENA;
 807              		.loc 1 223 0
 808 0002 414C     		ldr	r4, .L83
 224:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_1_ENA;
 225:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_1_OFF;
 226:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_2_ENA;
 227:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_2_OFF;
 228:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_3_ENA;
 229:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_3_OFF;
 230:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 231:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     debug_code_init();
 232:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 233:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     CLK_init();
 234:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 235:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     ADC0_init();
 236:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 237:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     SR_EXP_Init();
 238:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 239:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef RGB_MATRIX_ENABLE
 240:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     i2c1_init();
 241:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // RGB_MATRIX_ENABLE
 242:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 243:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     matrix_init();
 244:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 245:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     USB2422_init();
 246:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 247:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBGC(DC_MAIN_UDC_START_BEGIN);
 809              		.loc 1 247 0
 810 0004 414D     		ldr	r5, .L83+4
 223:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_LED_ENA;
 811              		.loc 1 223 0
 812 0006 4FF00063 		mov	r3, #134217728
 813 000a A360     		str	r3, [r4, #8]
 224:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_1_ENA;
 814              		.loc 1 224 0
 815 000c 0823     		movs	r3, #8
 816 000e C4F88830 		str	r3, [r4, #136]
 225:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_2_ENA;
 817              		.loc 1 225 0
 818 0012 C4F89430 		str	r3, [r4, #148]
 226:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_2_OFF;
 819              		.loc 1 226 0
 820 0016 4FF40033 		mov	r3, #131072
 821 001a C4F88830 		str	r3, [r4, #136]
 227:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_3_ENA;
 822              		.loc 1 227 0
 823 001e C4F89430 		str	r3, [r4, #148]
 228:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_3_OFF;
 824              		.loc 1 228 0
 825 0022 4FF48013 		mov	r3, #1048576
 826 0026 A360     		str	r3, [r4, #8]
 229:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 827              		.loc 1 229 0
 828 0028 6361     		str	r3, [r4, #20]
 231:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 829              		.loc 1 231 0
 830 002a FFF7FEFF 		bl	debug_code_init
 831              	.LVL43:
 233:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 832              		.loc 1 233 0
 833 002e FFF7FEFF 		bl	CLK_init
 834              	.LVL44:
 235:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 835              		.loc 1 235 0
 836 0032 FFF7FEFF 		bl	ADC0_init
 837              	.LVL45:
 237:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 838              		.loc 1 237 0
 839 0036 FFF7FEFF 		bl	SR_EXP_Init
 840              	.LVL46:
 240:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // RGB_MATRIX_ENABLE
 841              		.loc 1 240 0
 842 003a FFF7FEFF 		bl	i2c1_init
 843              	.LVL47:
 243:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 844              		.loc 1 243 0
 845 003e FFF7FEFF 		bl	matrix_init
 846              	.LVL48:
 245:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 847              		.loc 1 245 0
 848 0042 FFF7FEFF 		bl	USB2422_init
 849              	.LVL49:
 850              		.loc 1 247 0
 851 0046 7A23     		movs	r3, #122
 852 0048 2B60     		str	r3, [r5]
 248:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     udc_start();
 853              		.loc 1 248 0
 854 004a FFF7FEFF 		bl	udc_start
 855              	.LVL50:
 249:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBGC(DC_MAIN_UDC_START_COMPLETE);
 856              		.loc 1 249 0
 857 004e 7B23     		movs	r3, #123
 858 0050 2B60     		str	r3, [r5]
 250:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 251:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBGC(DC_MAIN_CDC_INIT_BEGIN);
 859              		.loc 1 251 0
 860 0052 7C23     		movs	r3, #124
 861 0054 2B60     		str	r3, [r5]
 252:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     CDC_init();
 862              		.loc 1 252 0
 863 0056 FFF7FEFF 		bl	CDC_init
 864              	.LVL51:
 253:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBGC(DC_MAIN_CDC_INIT_COMPLETE);
 865              		.loc 1 253 0
 866 005a 7D23     		movs	r3, #125
 867 005c 2B60     		str	r3, [r5]
 868              	.L60:
 254:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 255:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     while (USB2422_Port_Detect_Init() == 0) {
 869              		.loc 1 255 0 discriminator 1
 870 005e FFF7FEFF 		bl	USB2422_Port_Detect_Init
 871              	.LVL52:
 872 0062 0028     		cmp	r0, #0
 873 0064 FBD0     		beq	.L60
 256:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 257:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 258:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     DBG_LED_OFF;
 874              		.loc 1 258 0
 875 0066 4FF00063 		mov	r3, #134217728
 876 006a 6361     		str	r3, [r4, #20]
 877              	.L61:
 259:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 260:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef RGB_MATRIX_ENABLE
 261:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     while (I2C3733_Init_Control() != 1) {
 878              		.loc 1 261 0 discriminator 1
 879 006c FFF7FEFF 		bl	I2C3733_Init_Control
 880              	.LVL53:
 881 0070 0128     		cmp	r0, #1
 882 0072 FBD1     		bne	.L61
 883              	.L62:
 262:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 263:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     while (I2C3733_Init_Drivers() != 1) {
 884              		.loc 1 263 0 discriminator 1
 885 0074 FFF7FEFF 		bl	I2C3733_Init_Drivers
 886              	.LVL54:
 887 0078 0128     		cmp	r0, #1
 888 007a FBD1     		bne	.L62
 264:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     }
 265:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 266:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     I2C_DMAC_LED_Init();
 889              		.loc 1 266 0
 890 007c FFF7FEFF 		bl	I2C_DMAC_LED_Init
 891              	.LVL55:
 267:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 268:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     i2c_led_q_init();
 892              		.loc 1 268 0
 893 0080 FFF7FEFF 		bl	i2c_led_q_init
 894              	.LVL56:
 895              	.LBB81:
 269:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 270:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     for (uint8_t drvid = 0; drvid < ISSI3733_DRIVER_COUNT; drvid++) I2C_LED_Q_ONOFF(drvid);  // Que
 896              		.loc 1 270 0
 897 0084 0024     		movs	r4, #0
 898              	.LVL57:
 899              	.L64:
 900              		.loc 1 270 0 is_stmt 0 discriminator 6
 901 0086 0720     		movs	r0, #7
 902 0088 FFF7FEFF 		bl	i2c_led_q_request_room
 903              	.LVL58:
 904 008c A0B1     		cbz	r0, .L63
 905              		.loc 1 270 0 discriminator 2
 906 008e 6520     		movs	r0, #101
 907 0090 FFF7FEFF 		bl	i2c_led_q_add
 908              	.LVL59:
 909 0094 2046     		mov	r0, r4
 910 0096 FFF7FEFF 		bl	i2c_led_q_add
 911              	.LVL60:
 912 009a 6620     		movs	r0, #102
 913 009c FFF7FEFF 		bl	i2c_led_q_add
 914              	.LVL61:
 915 00a0 2046     		mov	r0, r4
 916 00a2 FFF7FEFF 		bl	i2c_led_q_add
 917              	.LVL62:
 918 00a6 0020     		movs	r0, #0
 919 00a8 FFF7FEFF 		bl	i2c_led_q_add
 920              	.LVL63:
 921 00ac 6920     		movs	r0, #105
 922 00ae FFF7FEFF 		bl	i2c_led_q_add
 923              	.LVL64:
 924 00b2 2046     		mov	r0, r4
 925 00b4 FFF7FEFF 		bl	i2c_led_q_add
 926              	.LVL65:
 927              	.L63:
 928              		.loc 1 270 0 discriminator 4
 929 00b8 04B3     		cbz	r4, .L69
 930              	.LBE81:
 271:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif                                                                                       // RGB
 272:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 273:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     keyboard_setup();
 931              		.loc 1 273 0 is_stmt 1
 932 00ba FFF7FEFF 		bl	keyboard_setup
 933              	.LVL66:
 274:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 275:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     keyboard_init();
 934              		.loc 1 275 0
 935 00be FFF7FEFF 		bl	keyboard_init
 936              	.LVL67:
 276:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 277:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     host_set_driver(&arm_atsam_driver);
 937              		.loc 1 277 0
 938 00c2 1348     		ldr	r0, .L83+8
 278:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 279:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #ifdef CONSOLE_ENABLE
 280:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     uint64_t next_print = 0;
 281:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** #endif  // CONSOLE_ENABLE
 282:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 283:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     v_5v_avg = adc_get(ADC_5V);
 284:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 285:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     debug_code_disable();
 286:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 287:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****     while (1) {
 288:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         main_subtasks();  // Note these tasks will also be run while waiting for USB keyboard polli
 289:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 290:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         if (g_usb_state == USB_FSMSTATUS_FSMSTATE_SUSPEND_Val || g_usb_state == USB_FSMSTATUS_FSMST
 939              		.loc 1 290 0
 940 00c4 134C     		ldr	r4, .L83+12
 941              	.LVL68:
 277:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 942              		.loc 1 277 0
 943 00c6 FFF7FEFF 		bl	host_set_driver
 944              	.LVL69:
 283:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 945              		.loc 1 283 0
 946 00ca 0C20     		movs	r0, #12
 947 00cc FFF7FEFF 		bl	adc_get
 948              	.LVL70:
 949 00d0 114B     		ldr	r3, .L83+16
 950 00d2 1880     		strh	r0, [r3]	@ movhi
 285:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 951              		.loc 1 285 0
 952 00d4 FFF7FEFF 		bl	debug_code_disable
 953              	.LVL71:
 954              	.L65:
 288:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 955              		.loc 1 288 0
 956 00d8 FFF7FEFF 		bl	main_subtasks
 957              	.LVL72:
 958              		.loc 1 290 0
 959 00dc 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 960 00de 042B     		cmp	r3, #4
 961 00e0 01D0     		beq	.L66
 962              		.loc 1 290 0 is_stmt 0 discriminator 1
 963 00e2 082B     		cmp	r3, #8
 964 00e4 0CD1     		bne	.L67
 965              	.L66:
 291:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             if (suspend_wakeup_condition()) {
 966              		.loc 1 291 0 is_stmt 1
 967 00e6 FFF7FEFF 		bl	suspend_wakeup_condition
 968              	.LVL73:
 969 00ea 0028     		cmp	r0, #0
 970 00ec F4D0     		beq	.L65
 971              	.LBB82:
 972              	.LBB83:
 973              		.file 3 "tmk_core/protocol/arm_atsam/./usb/udc.h"
   1:tmk_core/protocol/arm_atsam/./usb/udc.h **** /**
   2:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \file
   3:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
   4:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \brief Interface of the USB Device Controller (UDC)
   5:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
   6:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Copyright (c) 2009-2015 Atmel Corporation. All rights reserved.
   7:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
   8:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \asf_license_start
   9:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  10:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \page License
  11:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  12:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Redistribution and use in source and binary forms, with or without
  13:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * modification, are permitted provided that the following conditions are met:
  14:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  15:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *    this list of conditions and the following disclaimer.
  17:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  18:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *    and/or other materials provided with the distribution.
  21:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  22:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *    from this software without specific prior written permission.
  24:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  25:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * 4. This software may only be redistributed and used in connection with an
  26:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *    Atmel microcontroller product.
  27:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  28:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  40:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \asf_license_stop
  41:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  42:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
  43:tmk_core/protocol/arm_atsam/./usb/udc.h **** /*
  44:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Support and FAQ: visit <a href="http://www.atmel.com/design-support/">Atmel Support</a>
  45:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
  46:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
  47:tmk_core/protocol/arm_atsam/./usb/udc.h **** #ifndef _UDC_H_
  48:tmk_core/protocol/arm_atsam/./usb/udc.h **** #define _UDC_H_
  49:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
  50:tmk_core/protocol/arm_atsam/./usb/udc.h **** #include "conf_usb.h"
  51:tmk_core/protocol/arm_atsam/./usb/udc.h **** #include "usb_protocol.h"
  52:tmk_core/protocol/arm_atsam/./usb/udc.h **** #include "udc_desc.h"
  53:tmk_core/protocol/arm_atsam/./usb/udc.h **** #include "udd.h"
  54:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
  55:tmk_core/protocol/arm_atsam/./usb/udc.h **** #if USB_DEVICE_VENDOR_ID == 0
  56:tmk_core/protocol/arm_atsam/./usb/udc.h **** #    error USB_DEVICE_VENDOR_ID cannot be equal to 0
  57:tmk_core/protocol/arm_atsam/./usb/udc.h **** #endif
  58:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
  59:tmk_core/protocol/arm_atsam/./usb/udc.h **** #if USB_DEVICE_PRODUCT_ID == 0
  60:tmk_core/protocol/arm_atsam/./usb/udc.h **** #    error USB_DEVICE_PRODUCT_ID cannot be equal to 0
  61:tmk_core/protocol/arm_atsam/./usb/udc.h **** #endif
  62:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
  63:tmk_core/protocol/arm_atsam/./usb/udc.h **** #ifdef __cplusplus
  64:tmk_core/protocol/arm_atsam/./usb/udc.h **** extern "C" {
  65:tmk_core/protocol/arm_atsam/./usb/udc.h **** #endif
  66:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
  67:tmk_core/protocol/arm_atsam/./usb/udc.h **** /**
  68:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \ingroup usb_device_group
  69:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \defgroup udc_group USB Device Controller (UDC)
  70:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  71:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * The UDC provides a high-level abstraction of the usb device.
  72:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * You can use these functions to control the main device state
  73:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * (start/attach/wakeup).
  74:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  75:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \section USB_DEVICE_CONF USB Device Custom configuration
  76:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * The following USB Device configuration must be included in the conf_usb.h
  77:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * file of the application.
  78:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  79:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_VENDOR_ID (Word)<br>
  80:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Vendor ID provided by USB org (ATMEL 0x03EB).
  81:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  82:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_PRODUCT_ID (Word)<br>
  83:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Product ID (Referenced in usb_atmel.h).
  84:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  85:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_MAJOR_VERSION (Byte)<br>
  86:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Major version of the device
  87:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  88:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_MINOR_VERSION (Byte)<br>
  89:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Minor version of the device
  90:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  91:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_MANUFACTURE_NAME (string)<br>
  92:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * ASCII name for the manufacture
  93:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  94:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_PRODUCT_NAME (string)<br>
  95:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * ASCII name for the product
  96:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
  97:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_SERIAL_NAME (string)<br>
  98:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * ASCII name to enable and set a serial number
  99:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 100:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_POWER (Numeric)<br>
 101:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * (unit mA) Maximum device power
 102:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 103:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_ATTR (Byte)<br>
 104:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB attributes available:
 105:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *  - USB_CONFIG_ATTR_SELF_POWERED
 106:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *  - USB_CONFIG_ATTR_REMOTE_WAKEUP
 107:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *  Note: if remote wake enabled then defines remotewakeup callbacks,
 108:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * see Table 5-2. External API from UDC - Callback
 109:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 110:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_LOW_SPEED (Only defined)<br>
 111:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Force the USB Device to run in low speed
 112:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 113:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_HS_SUPPORT (Only defined)<br>
 114:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Authorize the USB Device to run in high speed
 115:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 116:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_MAX_EP (Byte)<br>
 117:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Define the maximum endpoint number used by the USB Device.<br>
 118:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * This one is already defined in UDI default configuration.
 119:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * Ex:
 120:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * - When endpoint control 0x00, endpoint 0x01 and
 121:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *   endpoint 0x82 is used then USB_DEVICE_MAX_EP=2
 122:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * - When only endpoint control 0x00 is used then USB_DEVICE_MAX_EP=0
 123:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * - When endpoint 0x01 and endpoint 0x81 is used then USB_DEVICE_MAX_EP=1<br>
 124:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *   (configuration not possible on USBB interface)
 125:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * @{
 126:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
 127:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
 128:tmk_core/protocol/arm_atsam/./usb/udc.h **** /**
 129:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \brief Authorizes the VBUS event
 130:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 131:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \return true, if the VBUS monitoring is possible.
 132:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 133:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \section udc_vbus_monitoring VBus monitoring used cases
 134:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 135:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * The VBus monitoring is used only for USB SELF Power application.
 136:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 137:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * - By default the USB device is automatically attached when Vbus is high
 138:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * or when USB is start for devices without internal Vbus monitoring.
 139:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * conf_usb.h file does not contains define USB_DEVICE_ATTACH_AUTO_DISABLE.
 140:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \code //#define USB_DEVICE_ATTACH_AUTO_DISABLE \endcode
 141:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 142:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * - Add custom VBUS monitoring. conf_usb.h file contains define
 143:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_ATTACH_AUTO_DISABLE:
 144:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \code #define USB_DEVICE_ATTACH_AUTO_DISABLE \endcode
 145:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * User C file contains:
 146:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \code
 147:tmk_core/protocol/arm_atsam/./usb/udc.h ****     // Authorize VBUS monitoring
 148:tmk_core/protocol/arm_atsam/./usb/udc.h ****     if (!udc_include_vbus_monitoring()) {
 149:tmk_core/protocol/arm_atsam/./usb/udc.h ****       // Implement custom VBUS monitoring via GPIO or other
 150:tmk_core/protocol/arm_atsam/./usb/udc.h ****     }
 151:tmk_core/protocol/arm_atsam/./usb/udc.h ****     Event_VBUS_present() // VBUS interrupt or GPIO interrupt or other
 152:tmk_core/protocol/arm_atsam/./usb/udc.h ****     {
 153:tmk_core/protocol/arm_atsam/./usb/udc.h ****       // Attach USB Device
 154:tmk_core/protocol/arm_atsam/./usb/udc.h ****       udc_attach();
 155:tmk_core/protocol/arm_atsam/./usb/udc.h ****     }
 156:tmk_core/protocol/arm_atsam/./usb/udc.h **** \endcode
 157:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 158:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * - Case of battery charging. conf_usb.h file contains define
 159:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * USB_DEVICE_ATTACH_AUTO_DISABLE:
 160:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \code #define USB_DEVICE_ATTACH_AUTO_DISABLE \endcode
 161:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * User C file contains:
 162:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \code
 163:tmk_core/protocol/arm_atsam/./usb/udc.h ****     Event VBUS present() // VBUS interrupt or GPIO interrupt or ..
 164:tmk_core/protocol/arm_atsam/./usb/udc.h ****     {
 165:tmk_core/protocol/arm_atsam/./usb/udc.h ****       // Authorize battery charging, but wait key press to start USB.
 166:tmk_core/protocol/arm_atsam/./usb/udc.h ****     }
 167:tmk_core/protocol/arm_atsam/./usb/udc.h ****     Event Key press()
 168:tmk_core/protocol/arm_atsam/./usb/udc.h ****     {
 169:tmk_core/protocol/arm_atsam/./usb/udc.h ****       // Stop batteries charging
 170:tmk_core/protocol/arm_atsam/./usb/udc.h ****       // Start USB
 171:tmk_core/protocol/arm_atsam/./usb/udc.h ****       udc_attach();
 172:tmk_core/protocol/arm_atsam/./usb/udc.h ****     }
 173:tmk_core/protocol/arm_atsam/./usb/udc.h **** \endcode
 174:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
 175:tmk_core/protocol/arm_atsam/./usb/udc.h **** static inline bool udc_include_vbus_monitoring(void) { return udd_include_vbus_monitoring(); }
 176:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
 177:tmk_core/protocol/arm_atsam/./usb/udc.h **** /*! \brief Start the USB Device stack
 178:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
 179:tmk_core/protocol/arm_atsam/./usb/udc.h **** void udc_start(void);
 180:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
 181:tmk_core/protocol/arm_atsam/./usb/udc.h **** /*! \brief Stop the USB Device stack
 182:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
 183:tmk_core/protocol/arm_atsam/./usb/udc.h **** void udc_stop(void);
 184:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
 185:tmk_core/protocol/arm_atsam/./usb/udc.h **** /**
 186:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \brief Attach device to the bus when possible
 187:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 188:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \warning If a VBus control is included in driver,
 189:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * then it will attach device when an acceptable Vbus
 190:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * level from the host is detected.
 191:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
 192:tmk_core/protocol/arm_atsam/./usb/udc.h **** static inline void udc_attach(void) { udd_attach(); }
 193:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
 194:tmk_core/protocol/arm_atsam/./usb/udc.h **** /**
 195:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * \brief Detaches the device from the bus
 196:tmk_core/protocol/arm_atsam/./usb/udc.h ****  *
 197:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * The driver must remove pull-up on USB line D- or D+.
 198:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
 199:tmk_core/protocol/arm_atsam/./usb/udc.h **** static inline void udc_detach(void) { udd_detach(); }
 200:tmk_core/protocol/arm_atsam/./usb/udc.h **** 
 201:tmk_core/protocol/arm_atsam/./usb/udc.h **** /*! \brief The USB driver sends a resume signal called \e "Upstream Resume"
 202:tmk_core/protocol/arm_atsam/./usb/udc.h ****  * This is authorized only when the remote wakeup feature is enabled by host.
 203:tmk_core/protocol/arm_atsam/./usb/udc.h ****  */
 204:tmk_core/protocol/arm_atsam/./usb/udc.h **** inline void udc_remotewakeup(void) { udd_send_remotewakeup(); }
 974              		.loc 3 204 0
 975 00ee FFF7FEFF 		bl	udd_send_remotewakeup
 976              	.LVL74:
 977              	.LBE83:
 978              	.LBE82:
 292:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****                 udc_remotewakeup();  // Send remote wakeup signal
 293:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****                 wait_ms(50);
 979              		.loc 1 293 0
 980 00f2 3220     		movs	r0, #50
 981 00f4 0021     		movs	r1, #0
 982 00f6 FFF7FEFF 		bl	CLK_delay_ms
 983              	.LVL75:
 984 00fa EDE7     		b	.L65
 985              	.LVL76:
 986              	.L69:
 987              	.LBB84:
 988 00fc 0124     		movs	r4, #1
 989              	.LVL77:
 990 00fe C2E7     		b	.L64
 991              	.L67:
 992              	.LBE84:
 294:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             }
 295:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 296:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****             continue;
 297:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         }
 298:tmk_core/protocol/arm_atsam/main_arm_atsam.c **** 
 299:tmk_core/protocol/arm_atsam/main_arm_atsam.c ****         keyboard_task();
 993              		.loc 1 299 0
 994 0100 FFF7FEFF 		bl	keyboard_task
 995              	.LVL78:
 996 0104 E8E7     		b	.L65
 997              	.L84:
 998 0106 00BF     		.align	2
 999              	.L83:
 1000 0108 00800041 		.word	1090551808
 1001 010c 00000000 		.word	debug_code
 1002 0110 04000000 		.word	.LANCHOR1+4
 1003 0114 00000000 		.word	.LANCHOR1
 1004 0118 00000000 		.word	v_5v_avg
 1005              		.cfi_endproc
 1006              	.LFE154:
 1008              		.comm	led_states,1,1
 1009              		.global	arm_atsam_driver
 1010              		.global	g_usb_state
 1011              		.comm	dmac_desc_wb,16,16
 1012              		.comm	dmac_desc,16,16
 1013              		.data
 1014              		.align	2
 1015              		.set	.LANCHOR1,. + 0
 1018              	g_usb_state:
 1019 0000 01       		.byte	1
 1020 0001 000000   		.space	3
 1023              	arm_atsam_driver:
 1024 0004 00000000 		.word	keyboard_leds
 1025 0008 00000000 		.word	send_keyboard
 1026 000c 00000000 		.word	send_mouse
 1027 0010 00000000 		.word	send_system
 1028 0014 00000000 		.word	send_consumer
 1029              		.bss
 1030              		.align	3
 1031              		.set	.LANCHOR0,. + 0
 1034              	fsmstate_on_delay.20900:
 1035 0000 00000000 		.space	8
 1035      00000000 
 1038              	next_5v_checkup.20905:
 1039 0008 00000000 		.space	8
 1039      00000000 
 1042              	next_usb_checkup.20909:
 1043 0010 00000000 		.space	8
 1043      00000000 
 1044              		.text
 1045              	.Letext0:
 1046              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1047              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1048              		.file 6 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/samd51j18a.h"
 1049              		.file 7 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/core_cm4.h"
 1050              		.file 8 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/system_samd51.h"
 1051              		.file 9 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/component/dmac.h"
 1052              		.file 10 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/component/port.h"
 1053              		.file 11 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/component/usb.h"
 1054              		.file 12 "tmk_core/common/report.h"
 1055              		.file 13 "tmk_core/common/host_driver.h"
 1056              		.file 14 "tmk_core/common/host.h"
 1057              		.file 15 "quantum/keycode_config.h"
 1058              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1059              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1060              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1061              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1062              		.file 20 "tmk_core/protocol/arm_atsam/clks.h"
 1063              		.file 21 "tmk_core/common/action.h"
 1064              		.file 22 "tmk_core/common/debug.h"
 1065              		.file 23 "quantum/keymap.h"
 1066              		.file 24 "quantum/color.h"
 1067              		.file 25 "quantum/rgb_matrix_types.h"
 1068              		.file 26 "quantum/rgb_matrix.h"
 1069              		.file 27 "tmk_core/common/action_layer.h"
 1070              		.file 28 "tmk_core/common/timer.h"
 1071              		.file 29 "tmk_core/common/action_util.h"
 1072              		.file 30 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 1073              		.file 31 "quantum/quantum.h"
 1074              		.file 32 "tmk_core/protocol/arm_atsam/md_bootloader.h"
 1075              		.file 33 "tmk_core/protocol/arm_atsam/d51_util.h"
 1076              		.file 34 "tmk_core/protocol/arm_atsam/adc.h"
 1077              		.file 35 "tmk_core/protocol/arm_atsam/i2c_master.h"
 1078              		.file 36 "tmk_core/protocol/arm_atsam/spi.h"
 1079              		.file 37 "tmk_core/protocol/arm_atsam/./usb/usb2422.h"
 1080              		.file 38 "tmk_core/protocol/arm_atsam/led_matrix.h"
 1081              		.file 39 "tmk_core/protocol/arm_atsam/./usb/compiler.h"
 1082              		.file 40 "tmk_core/protocol/arm_atsam/./usb/usb_protocol.h"
 1083              		.file 41 "tmk_core/protocol/arm_atsam/./usb/udi_device_conf.h"
 1084              		.file 42 "tmk_core/protocol/arm_atsam/./usb/udi.h"
 1085              		.file 43 "tmk_core/protocol/arm_atsam/./usb/udc_desc.h"
 1086              		.file 44 "tmk_core/protocol/arm_atsam/./usb/udi_hid_kbd.h"
 1087              		.file 45 "tmk_core/protocol/arm_atsam/./usb/usb_main.h"
 1088              		.file 46 "tmk_core/protocol/arm_atsam/./usb/udd.h"
 1089              		.file 47 "tmk_core/protocol/arm_atsam/./usb/udi_cdc.h"
 1090              		.file 48 "keyboards/massdrop/alt/matrix.h"
 1091              		.file 49 "./tmk_core/common/keyboard.h"
 1092              		.file 50 "tmk_core/common/suspend.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main_arm_atsam.c
/var/tmp//ccHHQEjq.s:18     .text.keyboard_leds:0000000000000000 $t
/var/tmp//ccHHQEjq.s:25     .text.keyboard_leds:0000000000000000 keyboard_leds
/var/tmp//ccHHQEjq.s:48     .text.keyboard_leds:0000000000000014 $d
/var/tmp//ccHHQEjq.s:55     .text.send_mouse:0000000000000000 $t
/var/tmp//ccHHQEjq.s:62     .text.send_mouse:0000000000000000 send_mouse
/var/tmp//ccHHQEjq.s:76     .text.send_system:0000000000000000 $t
/var/tmp//ccHHQEjq.s:83     .text.send_system:0000000000000000 send_system
/var/tmp//ccHHQEjq.s:178    .text.send_system:0000000000000030 $d
/var/tmp//ccHHQEjq.s:184    .text.send_consumer:0000000000000000 $t
/var/tmp//ccHHQEjq.s:191    .text.send_consumer:0000000000000000 send_consumer
/var/tmp//ccHHQEjq.s:275    .text.send_consumer:000000000000002c $d
/var/tmp//ccHHQEjq.s:281    .text.main_subtask_usb_state:0000000000000000 $t
/var/tmp//ccHHQEjq.s:288    .text.main_subtask_usb_state:0000000000000000 main_subtask_usb_state
/var/tmp//ccHHQEjq.s:397    .text.main_subtask_usb_state:000000000000008c $d
/var/tmp//ccHHQEjq.s:407    .text.main_subtask_power_check:0000000000000000 $t
/var/tmp//ccHHQEjq.s:414    .text.main_subtask_power_check:0000000000000000 main_subtask_power_check
/var/tmp//ccHHQEjq.s:501    .text.main_subtask_power_check:0000000000000070 $d
/var/tmp//ccHHQEjq.s:512    .text.main_subtask_usb_extra_device:0000000000000000 $t
/var/tmp//ccHHQEjq.s:519    .text.main_subtask_usb_extra_device:0000000000000000 main_subtask_usb_extra_device
/var/tmp//ccHHQEjq.s:560    .text.main_subtask_usb_extra_device:0000000000000030 $d
/var/tmp//ccHHQEjq.s:565    .text.main_subtasks:0000000000000000 $t
/var/tmp//ccHHQEjq.s:572    .text.main_subtasks:0000000000000000 main_subtasks
/var/tmp//ccHHQEjq.s:600    .text.send_keyboard:0000000000000000 $t
/var/tmp//ccHHQEjq.s:607    .text.send_keyboard:0000000000000000 send_keyboard
/var/tmp//ccHHQEjq.s:777    .text.send_keyboard:0000000000000078 $d
/var/tmp//ccHHQEjq.s:788    .text.startup.main:0000000000000000 $t
/var/tmp//ccHHQEjq.s:795    .text.startup.main:0000000000000000 main
/var/tmp//ccHHQEjq.s:1000   .text.startup.main:0000000000000108 $d
                            *COM*:0000000000000001 led_states
/var/tmp//ccHHQEjq.s:1023   .data:0000000000000004 arm_atsam_driver
/var/tmp//ccHHQEjq.s:1018   .data:0000000000000000 g_usb_state
                            *COM*:0000000000000010 dmac_desc_wb
                            *COM*:0000000000000010 dmac_desc
/var/tmp//ccHHQEjq.s:1014   .data:0000000000000000 $d
/var/tmp//ccHHQEjq.s:1030   .bss:0000000000000000 $d
/var/tmp//ccHHQEjq.s:1034   .bss:0000000000000000 fsmstate_on_delay.20900
/var/tmp//ccHHQEjq.s:1038   .bss:0000000000000008 next_5v_checkup.20905
/var/tmp//ccHHQEjq.s:1042   .bss:0000000000000010 next_usb_checkup.20909

UNDEFINED SYMBOLS
keymap_config
udi_hid_nkro_report_set
udi_hid_kbd_report_set
udi_hid_exk_send_report
udi_hid_exk_report
udi_hid_exk_b_report_valid
suspend_power_down
timer_read64
suspend_wakeup_init
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
adc_get
gcr_compute
v_5v_avg
v_5v
USB_HandleExtraDevice
udi_hid_nkro_send_report
udi_hid_kbd_send_report
udi_hid_nkro_b_report_trans_ongoing
udi_hid_nkro_report
udi_hid_nkro_b_report_valid
udi_hid_kbd_b_report_trans_ongoing
udi_hid_kbd_report
udi_hid_kbd_b_report_valid
debug_code_init
CLK_init
ADC0_init
SR_EXP_Init
i2c1_init
matrix_init
USB2422_init
udc_start
CDC_init
USB2422_Port_Detect_Init
I2C3733_Init_Control
I2C3733_Init_Drivers
I2C_DMAC_LED_Init
i2c_led_q_init
i2c_led_q_request_room
i2c_led_q_add
keyboard_setup
keyboard_init
host_set_driver
debug_code_disable
suspend_wakeup_condition
udd_send_remotewakeup
CLK_delay_ms
keyboard_task
debug_code
