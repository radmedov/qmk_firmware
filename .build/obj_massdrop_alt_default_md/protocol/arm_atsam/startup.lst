   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"startup.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Dummy_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Dummy_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Dummy_Handler:
  26              	.LFB124:
  27              		.file 1 "tmk_core/protocol/arm_atsam/startup.c"
   1:tmk_core/protocol/arm_atsam/startup.c **** /**
   2:tmk_core/protocol/arm_atsam/startup.c ****  * \file
   3:tmk_core/protocol/arm_atsam/startup.c ****  *
   4:tmk_core/protocol/arm_atsam/startup.c ****  * \brief gcc starttup file for SAMD51
   5:tmk_core/protocol/arm_atsam/startup.c ****  *
   6:tmk_core/protocol/arm_atsam/startup.c ****  * Copyright (c) 2017 Microchip Technology Inc.
   7:tmk_core/protocol/arm_atsam/startup.c ****  *
   8:tmk_core/protocol/arm_atsam/startup.c ****  * \asf_license_start
   9:tmk_core/protocol/arm_atsam/startup.c ****  *
  10:tmk_core/protocol/arm_atsam/startup.c ****  * \page License
  11:tmk_core/protocol/arm_atsam/startup.c ****  *
  12:tmk_core/protocol/arm_atsam/startup.c ****  * SPDX-License-Identifier: Apache-2.0
  13:tmk_core/protocol/arm_atsam/startup.c ****  *
  14:tmk_core/protocol/arm_atsam/startup.c ****  * Licensed under the Apache License, Version 2.0 (the "License"); you may
  15:tmk_core/protocol/arm_atsam/startup.c ****  * not use this file except in compliance with the License.
  16:tmk_core/protocol/arm_atsam/startup.c ****  * You may obtain a copy of the Licence at
  17:tmk_core/protocol/arm_atsam/startup.c ****  *
  18:tmk_core/protocol/arm_atsam/startup.c ****  * http://www.apache.org/licenses/LICENSE-2.0
  19:tmk_core/protocol/arm_atsam/startup.c ****  *
  20:tmk_core/protocol/arm_atsam/startup.c ****  * Unless required by applicable law or agreed to in writing, software
  21:tmk_core/protocol/arm_atsam/startup.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  22:tmk_core/protocol/arm_atsam/startup.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:tmk_core/protocol/arm_atsam/startup.c ****  * See the License for the specific language governing permissions and
  24:tmk_core/protocol/arm_atsam/startup.c ****  * limitations under the License.
  25:tmk_core/protocol/arm_atsam/startup.c ****  *
  26:tmk_core/protocol/arm_atsam/startup.c ****  * \asf_license_stop
  27:tmk_core/protocol/arm_atsam/startup.c ****  *
  28:tmk_core/protocol/arm_atsam/startup.c ****  */
  29:tmk_core/protocol/arm_atsam/startup.c **** 
  30:tmk_core/protocol/arm_atsam/startup.c **** #include "samd51.h"
  31:tmk_core/protocol/arm_atsam/startup.c **** #include "md_bootloader.h"
  32:tmk_core/protocol/arm_atsam/startup.c **** 
  33:tmk_core/protocol/arm_atsam/startup.c **** /* Initialize segments */
  34:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _sfixed;
  35:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _efixed;
  36:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _etext;
  37:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _srelocate;
  38:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _erelocate;
  39:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _szero;
  40:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _ezero;
  41:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _sstack;
  42:tmk_core/protocol/arm_atsam/startup.c **** extern uint32_t _estack;
  43:tmk_core/protocol/arm_atsam/startup.c **** 
  44:tmk_core/protocol/arm_atsam/startup.c **** /** \cond DOXYGEN_SHOULD_SKIP_THIS */
  45:tmk_core/protocol/arm_atsam/startup.c **** int main(void);
  46:tmk_core/protocol/arm_atsam/startup.c **** /** \endcond */
  47:tmk_core/protocol/arm_atsam/startup.c **** 
  48:tmk_core/protocol/arm_atsam/startup.c **** void __libc_init_array(void);
  49:tmk_core/protocol/arm_atsam/startup.c **** 
  50:tmk_core/protocol/arm_atsam/startup.c **** /* Default empty handler */
  51:tmk_core/protocol/arm_atsam/startup.c **** void Dummy_Handler(void);
  52:tmk_core/protocol/arm_atsam/startup.c **** 
  53:tmk_core/protocol/arm_atsam/startup.c **** /* Cortex-M4 core handlers */
  54:tmk_core/protocol/arm_atsam/startup.c **** void NMI_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  55:tmk_core/protocol/arm_atsam/startup.c **** void HardFault_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  56:tmk_core/protocol/arm_atsam/startup.c **** void MemManage_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  57:tmk_core/protocol/arm_atsam/startup.c **** void BusFault_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  58:tmk_core/protocol/arm_atsam/startup.c **** void UsageFault_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  59:tmk_core/protocol/arm_atsam/startup.c **** void SVC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  60:tmk_core/protocol/arm_atsam/startup.c **** void DebugMon_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  61:tmk_core/protocol/arm_atsam/startup.c **** void PendSV_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  62:tmk_core/protocol/arm_atsam/startup.c **** void SysTick_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  63:tmk_core/protocol/arm_atsam/startup.c **** 
  64:tmk_core/protocol/arm_atsam/startup.c **** /* Peripherals handlers */
  65:tmk_core/protocol/arm_atsam/startup.c **** void PM_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  66:tmk_core/protocol/arm_atsam/startup.c **** void MCLK_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  67:tmk_core/protocol/arm_atsam/startup.c **** void OSCCTRL_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* OSCCTRL_XOSCFAIL_0, 
  68:tmk_core/protocol/arm_atsam/startup.c **** void OSCCTRL_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* OSCCTRL_XOSCFAIL_1, 
  69:tmk_core/protocol/arm_atsam/startup.c **** void OSCCTRL_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* OSCCTRL_DFLLLOCKC, O
  70:tmk_core/protocol/arm_atsam/startup.c **** void OSCCTRL_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* OSCCTRL_DPLLLCKF_0, 
  71:tmk_core/protocol/arm_atsam/startup.c **** void OSCCTRL_4_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* OSCCTRL_DPLLLCKF_1, 
  72:tmk_core/protocol/arm_atsam/startup.c **** void OSC32KCTRL_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  73:tmk_core/protocol/arm_atsam/startup.c **** void SUPC_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SUPC_B12SRDY, SUPC_B33S
  74:tmk_core/protocol/arm_atsam/startup.c **** void SUPC_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SUPC_BOD12DET, SUPC_BOD
  75:tmk_core/protocol/arm_atsam/startup.c **** void WDT_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  76:tmk_core/protocol/arm_atsam/startup.c **** void RTC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  77:tmk_core/protocol/arm_atsam/startup.c **** void EIC_0_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_0 */
  78:tmk_core/protocol/arm_atsam/startup.c **** void EIC_1_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_1 */
  79:tmk_core/protocol/arm_atsam/startup.c **** void EIC_2_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_2 */
  80:tmk_core/protocol/arm_atsam/startup.c **** void EIC_3_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_3 */
  81:tmk_core/protocol/arm_atsam/startup.c **** void EIC_4_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_4 */
  82:tmk_core/protocol/arm_atsam/startup.c **** void EIC_5_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_5 */
  83:tmk_core/protocol/arm_atsam/startup.c **** void EIC_6_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_6 */
  84:tmk_core/protocol/arm_atsam/startup.c **** void EIC_7_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_7 */
  85:tmk_core/protocol/arm_atsam/startup.c **** void EIC_8_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_8 */
  86:tmk_core/protocol/arm_atsam/startup.c **** void EIC_9_Handler(void) __attribute__((weak, alias("Dummy_Handler")));  /* EIC_EXTINT_9 */
  87:tmk_core/protocol/arm_atsam/startup.c **** void EIC_10_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* EIC_EXTINT_10 */
  88:tmk_core/protocol/arm_atsam/startup.c **** void EIC_11_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* EIC_EXTINT_11 */
  89:tmk_core/protocol/arm_atsam/startup.c **** void EIC_12_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* EIC_EXTINT_12 */
  90:tmk_core/protocol/arm_atsam/startup.c **** void EIC_13_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* EIC_EXTINT_13 */
  91:tmk_core/protocol/arm_atsam/startup.c **** void EIC_14_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* EIC_EXTINT_14 */
  92:tmk_core/protocol/arm_atsam/startup.c **** void EIC_15_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* EIC_EXTINT_15 */
  93:tmk_core/protocol/arm_atsam/startup.c **** void FREQM_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
  94:tmk_core/protocol/arm_atsam/startup.c **** void NVMCTRL_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* NVMCTRL_0, NVMCTRL_1
  95:tmk_core/protocol/arm_atsam/startup.c **** void NVMCTRL_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* NVMCTRL_10, NVMCTRL_
  96:tmk_core/protocol/arm_atsam/startup.c **** void DMAC_0_Handler(void) __attribute__((weak, alias("Dummy_Handler")));    /* DMAC_SUSP_0, DMAC_TC
  97:tmk_core/protocol/arm_atsam/startup.c **** void DMAC_1_Handler(void) __attribute__((weak, alias("Dummy_Handler")));    /* DMAC_SUSP_1, DMAC_TC
  98:tmk_core/protocol/arm_atsam/startup.c **** void DMAC_2_Handler(void) __attribute__((weak, alias("Dummy_Handler")));    /* DMAC_SUSP_2, DMAC_TC
  99:tmk_core/protocol/arm_atsam/startup.c **** void DMAC_3_Handler(void) __attribute__((weak, alias("Dummy_Handler")));    /* DMAC_SUSP_3, DMAC_TC
 100:tmk_core/protocol/arm_atsam/startup.c **** void DMAC_4_Handler(void) __attribute__((weak, alias("Dummy_Handler")));    /* DMAC_SUSP_10, DMAC_S
 101:tmk_core/protocol/arm_atsam/startup.c ****                                                                                DMAC_TERR_18, DMAC_T
 102:tmk_core/protocol/arm_atsam/startup.c **** void EVSYS_0_Handler(void) __attribute__((weak, alias("Dummy_Handler")));   /* EVSYS_EVD_0, EVSYS_O
 103:tmk_core/protocol/arm_atsam/startup.c **** void EVSYS_1_Handler(void) __attribute__((weak, alias("Dummy_Handler")));   /* EVSYS_EVD_1, EVSYS_O
 104:tmk_core/protocol/arm_atsam/startup.c **** void EVSYS_2_Handler(void) __attribute__((weak, alias("Dummy_Handler")));   /* EVSYS_EVD_2, EVSYS_O
 105:tmk_core/protocol/arm_atsam/startup.c **** void EVSYS_3_Handler(void) __attribute__((weak, alias("Dummy_Handler")));   /* EVSYS_EVD_3, EVSYS_O
 106:tmk_core/protocol/arm_atsam/startup.c **** void EVSYS_4_Handler(void) __attribute__((weak, alias("Dummy_Handler")));   /* EVSYS_EVD_10, EVSYS_
 107:tmk_core/protocol/arm_atsam/startup.c **** void PAC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 108:tmk_core/protocol/arm_atsam/startup.c **** void TAL_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TAL_BRK */
 109:tmk_core/protocol/arm_atsam/startup.c **** void TAL_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TAL_IPS_0, TAL_IPS_1 */
 110:tmk_core/protocol/arm_atsam/startup.c **** void RAMECC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 111:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM0_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM0_0 */
 112:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM0_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM0_1 */
 113:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM0_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM0_2 */
 114:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM0_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM0_3, SERCOM0_4
 115:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM1_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM1_0 */
 116:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM1_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM1_1 */
 117:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM1_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM1_2 */
 118:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM1_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM1_3, SERCOM1_4
 119:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM2_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM2_0 */
 120:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM2_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM2_1 */
 121:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM2_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM2_2 */
 122:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM2_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM2_3, SERCOM2_4
 123:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM3_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM3_0 */
 124:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM3_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM3_1 */
 125:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM3_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM3_2 */
 126:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM3_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM3_3, SERCOM3_4
 127:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM4
 128:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM4_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM4_0 */
 129:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM4_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM4_1 */
 130:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM4_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM4_2 */
 131:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM4_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM4_3, SERCOM4_4
 132:tmk_core/protocol/arm_atsam/startup.c **** #endif
 133:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM5
 134:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM5_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM5_0 */
 135:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM5_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM5_1 */
 136:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM5_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM5_2 */
 137:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM5_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM5_3, SERCOM5_4
 138:tmk_core/protocol/arm_atsam/startup.c **** #endif
 139:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM6
 140:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM6_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM6_0 */
 141:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM6_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM6_1 */
 142:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM6_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM6_2 */
 143:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM6_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM6_3, SERCOM6_4
 144:tmk_core/protocol/arm_atsam/startup.c **** #endif
 145:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM7
 146:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM7_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM7_0 */
 147:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM7_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM7_1 */
 148:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM7_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM7_2 */
 149:tmk_core/protocol/arm_atsam/startup.c **** void SERCOM7_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* SERCOM7_3, SERCOM7_4
 150:tmk_core/protocol/arm_atsam/startup.c **** #endif
 151:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_CAN0
 152:tmk_core/protocol/arm_atsam/startup.c **** void CAN0_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 153:tmk_core/protocol/arm_atsam/startup.c **** #endif
 154:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_CAN1
 155:tmk_core/protocol/arm_atsam/startup.c **** void CAN1_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 156:tmk_core/protocol/arm_atsam/startup.c **** #endif
 157:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_USB
 158:tmk_core/protocol/arm_atsam/startup.c **** void USB_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* USB_EORSM_DNRSM, USB_EOR
 159:tmk_core/protocol/arm_atsam/startup.c **** void USB_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* USB_SOF_HSOF */
 160:tmk_core/protocol/arm_atsam/startup.c **** void USB_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* USB_TRCPT0_0, USB_TRCPT0
 161:tmk_core/protocol/arm_atsam/startup.c **** void USB_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* USB_TRCPT1_0, USB_TRCPT1
 162:tmk_core/protocol/arm_atsam/startup.c **** #endif
 163:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_GMAC
 164:tmk_core/protocol/arm_atsam/startup.c **** void GMAC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 165:tmk_core/protocol/arm_atsam/startup.c **** #endif
 166:tmk_core/protocol/arm_atsam/startup.c **** void TCC0_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC0_CNT_A, TCC0_DFS_A,
 167:tmk_core/protocol/arm_atsam/startup.c **** void TCC0_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC0_MC_0 */
 168:tmk_core/protocol/arm_atsam/startup.c **** void TCC0_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC0_MC_1 */
 169:tmk_core/protocol/arm_atsam/startup.c **** void TCC0_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC0_MC_2 */
 170:tmk_core/protocol/arm_atsam/startup.c **** void TCC0_4_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC0_MC_3 */
 171:tmk_core/protocol/arm_atsam/startup.c **** void TCC0_5_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC0_MC_4 */
 172:tmk_core/protocol/arm_atsam/startup.c **** void TCC0_6_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC0_MC_5 */
 173:tmk_core/protocol/arm_atsam/startup.c **** void TCC1_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC1_CNT_A, TCC1_DFS_A,
 174:tmk_core/protocol/arm_atsam/startup.c **** void TCC1_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC1_MC_0 */
 175:tmk_core/protocol/arm_atsam/startup.c **** void TCC1_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC1_MC_1 */
 176:tmk_core/protocol/arm_atsam/startup.c **** void TCC1_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC1_MC_2 */
 177:tmk_core/protocol/arm_atsam/startup.c **** void TCC1_4_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC1_MC_3 */
 178:tmk_core/protocol/arm_atsam/startup.c **** void TCC2_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC2_CNT_A, TCC2_DFS_A,
 179:tmk_core/protocol/arm_atsam/startup.c **** void TCC2_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC2_MC_0 */
 180:tmk_core/protocol/arm_atsam/startup.c **** void TCC2_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC2_MC_1 */
 181:tmk_core/protocol/arm_atsam/startup.c **** void TCC2_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC2_MC_2 */
 182:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TCC3
 183:tmk_core/protocol/arm_atsam/startup.c **** void TCC3_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC3_CNT_A, TCC3_DFS_A,
 184:tmk_core/protocol/arm_atsam/startup.c **** void TCC3_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC3_MC_0 */
 185:tmk_core/protocol/arm_atsam/startup.c **** void TCC3_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC3_MC_1 */
 186:tmk_core/protocol/arm_atsam/startup.c **** #endif
 187:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TCC4
 188:tmk_core/protocol/arm_atsam/startup.c **** void TCC4_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC4_CNT_A, TCC4_DFS_A,
 189:tmk_core/protocol/arm_atsam/startup.c **** void TCC4_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC4_MC_0 */
 190:tmk_core/protocol/arm_atsam/startup.c **** void TCC4_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* TCC4_MC_1 */
 191:tmk_core/protocol/arm_atsam/startup.c **** #endif
 192:tmk_core/protocol/arm_atsam/startup.c **** void TC0_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 193:tmk_core/protocol/arm_atsam/startup.c **** void TC1_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 194:tmk_core/protocol/arm_atsam/startup.c **** void TC2_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 195:tmk_core/protocol/arm_atsam/startup.c **** void TC3_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 196:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC4
 197:tmk_core/protocol/arm_atsam/startup.c **** void TC4_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 198:tmk_core/protocol/arm_atsam/startup.c **** #endif
 199:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC5
 200:tmk_core/protocol/arm_atsam/startup.c **** void TC5_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 201:tmk_core/protocol/arm_atsam/startup.c **** #endif
 202:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC6
 203:tmk_core/protocol/arm_atsam/startup.c **** void TC6_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 204:tmk_core/protocol/arm_atsam/startup.c **** #endif
 205:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC7
 206:tmk_core/protocol/arm_atsam/startup.c **** void TC7_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 207:tmk_core/protocol/arm_atsam/startup.c **** #endif
 208:tmk_core/protocol/arm_atsam/startup.c **** void PDEC_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* PDEC_DIR_A, PDEC_ERR_A,
 209:tmk_core/protocol/arm_atsam/startup.c **** void PDEC_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* PDEC_MC_0 */
 210:tmk_core/protocol/arm_atsam/startup.c **** void PDEC_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* PDEC_MC_1 */
 211:tmk_core/protocol/arm_atsam/startup.c **** void ADC0_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* ADC0_OVERRUN, ADC0_WINM
 212:tmk_core/protocol/arm_atsam/startup.c **** void ADC0_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* ADC0_RESRDY */
 213:tmk_core/protocol/arm_atsam/startup.c **** void ADC1_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* ADC1_OVERRUN, ADC1_WINM
 214:tmk_core/protocol/arm_atsam/startup.c **** void ADC1_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* ADC1_RESRDY */
 215:tmk_core/protocol/arm_atsam/startup.c **** void AC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 216:tmk_core/protocol/arm_atsam/startup.c **** void DAC_0_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* DAC_OVERRUN_A_0, DAC_OVE
 217:tmk_core/protocol/arm_atsam/startup.c **** void DAC_1_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* DAC_EMPTY_0 */
 218:tmk_core/protocol/arm_atsam/startup.c **** void DAC_2_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* DAC_EMPTY_1 */
 219:tmk_core/protocol/arm_atsam/startup.c **** void DAC_3_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* DAC_RESRDY_0 */
 220:tmk_core/protocol/arm_atsam/startup.c **** void DAC_4_Handler(void) __attribute__((weak, alias("Dummy_Handler"))); /* DAC_RESRDY_1 */
 221:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_I2S
 222:tmk_core/protocol/arm_atsam/startup.c **** void I2S_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 223:tmk_core/protocol/arm_atsam/startup.c **** #endif
 224:tmk_core/protocol/arm_atsam/startup.c **** void PCC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 225:tmk_core/protocol/arm_atsam/startup.c **** void AES_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 226:tmk_core/protocol/arm_atsam/startup.c **** void TRNG_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 227:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_ICM
 228:tmk_core/protocol/arm_atsam/startup.c **** void ICM_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 229:tmk_core/protocol/arm_atsam/startup.c **** #endif
 230:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_PUKCC
 231:tmk_core/protocol/arm_atsam/startup.c **** void PUKCC_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 232:tmk_core/protocol/arm_atsam/startup.c **** #endif
 233:tmk_core/protocol/arm_atsam/startup.c **** void QSPI_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 234:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SDHC0
 235:tmk_core/protocol/arm_atsam/startup.c **** void SDHC0_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 236:tmk_core/protocol/arm_atsam/startup.c **** #endif
 237:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SDHC1
 238:tmk_core/protocol/arm_atsam/startup.c **** void SDHC1_Handler(void) __attribute__((weak, alias("Dummy_Handler")));
 239:tmk_core/protocol/arm_atsam/startup.c **** #endif
 240:tmk_core/protocol/arm_atsam/startup.c **** 
 241:tmk_core/protocol/arm_atsam/startup.c **** /* Exception Table */
 242:tmk_core/protocol/arm_atsam/startup.c **** __attribute__((section(".vectors"))) const DeviceVectors exception_table = {
 243:tmk_core/protocol/arm_atsam/startup.c **** 
 244:tmk_core/protocol/arm_atsam/startup.c ****     /* Configure Initial Stack Pointer, using linker-generated symbols */
 245:tmk_core/protocol/arm_atsam/startup.c ****     .pvStack = (void *)(&_estack),
 246:tmk_core/protocol/arm_atsam/startup.c **** 
 247:tmk_core/protocol/arm_atsam/startup.c ****     .pfnReset_Handler      = (void *)Reset_Handler,
 248:tmk_core/protocol/arm_atsam/startup.c ****     .pfnNMI_Handler        = (void *)NMI_Handler,
 249:tmk_core/protocol/arm_atsam/startup.c ****     .pfnHardFault_Handler  = (void *)HardFault_Handler,
 250:tmk_core/protocol/arm_atsam/startup.c ****     .pfnMemManage_Handler  = (void *)MemManage_Handler,
 251:tmk_core/protocol/arm_atsam/startup.c ****     .pfnBusFault_Handler   = (void *)BusFault_Handler,
 252:tmk_core/protocol/arm_atsam/startup.c ****     .pfnUsageFault_Handler = (void *)UsageFault_Handler,
 253:tmk_core/protocol/arm_atsam/startup.c ****     .pvReservedM9          = (void *)(0UL), /* Reserved */
 254:tmk_core/protocol/arm_atsam/startup.c ****     .pvReservedM8          = (void *)(0UL), /* Reserved */
 255:tmk_core/protocol/arm_atsam/startup.c ****     .pvReservedM7          = (void *)(0UL), /* Reserved */
 256:tmk_core/protocol/arm_atsam/startup.c ****     .pvReservedM6          = (void *)(0UL), /* Reserved */
 257:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSVC_Handler        = (void *)SVC_Handler,
 258:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDebugMon_Handler   = (void *)DebugMon_Handler,
 259:tmk_core/protocol/arm_atsam/startup.c ****     .pvReservedM3          = (void *)(0UL), /* Reserved */
 260:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPendSV_Handler     = (void *)PendSV_Handler,
 261:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSysTick_Handler    = (void *)SysTick_Handler,
 262:tmk_core/protocol/arm_atsam/startup.c **** 
 263:tmk_core/protocol/arm_atsam/startup.c ****     /* Configurable interrupts */
 264:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPM_Handler         = (void *)PM_Handler,         /*  0 Power Manager */
 265:tmk_core/protocol/arm_atsam/startup.c ****     .pfnMCLK_Handler       = (void *)MCLK_Handler,       /*  1 Main Clock */
 266:tmk_core/protocol/arm_atsam/startup.c ****     .pfnOSCCTRL_0_Handler  = (void *)OSCCTRL_0_Handler,  /*  2 OSCCTRL_XOSCFAIL_0, OSCCTRL_XOSCRDY_
 267:tmk_core/protocol/arm_atsam/startup.c ****     .pfnOSCCTRL_1_Handler  = (void *)OSCCTRL_1_Handler,  /*  3 OSCCTRL_XOSCFAIL_1, OSCCTRL_XOSCRDY_
 268:tmk_core/protocol/arm_atsam/startup.c ****     .pfnOSCCTRL_2_Handler  = (void *)OSCCTRL_2_Handler,  /*  4 OSCCTRL_DFLLLOCKC, OSCCTRL_DFLLLOCKF
 269:tmk_core/protocol/arm_atsam/startup.c ****     .pfnOSCCTRL_3_Handler  = (void *)OSCCTRL_3_Handler,  /*  5 OSCCTRL_DPLLLCKF_0, OSCCTRL_DPLLLCKR
 270:tmk_core/protocol/arm_atsam/startup.c ****     .pfnOSCCTRL_4_Handler  = (void *)OSCCTRL_4_Handler,  /*  6 OSCCTRL_DPLLLCKF_1, OSCCTRL_DPLLLCKR
 271:tmk_core/protocol/arm_atsam/startup.c ****     .pfnOSC32KCTRL_Handler = (void *)OSC32KCTRL_Handler, /*  7 32kHz Oscillators Control */
 272:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSUPC_0_Handler     = (void *)SUPC_0_Handler,     /*  8 SUPC_B12SRDY, SUPC_B33SRDY, SUPC_BOD
 273:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSUPC_1_Handler     = (void *)SUPC_1_Handler,     /*  9 SUPC_BOD12DET, SUPC_BOD33DET */
 274:tmk_core/protocol/arm_atsam/startup.c ****     .pfnWDT_Handler        = (void *)WDT_Handler,        /* 10 Watchdog Timer */
 275:tmk_core/protocol/arm_atsam/startup.c ****     .pfnRTC_Handler        = (void *)RTC_Handler,        /* 11 Real-Time Counter */
 276:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_0_Handler      = (void *)EIC_0_Handler,      /* 12 EIC_EXTINT_0 */
 277:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_1_Handler      = (void *)EIC_1_Handler,      /* 13 EIC_EXTINT_1 */
 278:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_2_Handler      = (void *)EIC_2_Handler,      /* 14 EIC_EXTINT_2 */
 279:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_3_Handler      = (void *)EIC_3_Handler,      /* 15 EIC_EXTINT_3 */
 280:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_4_Handler      = (void *)EIC_4_Handler,      /* 16 EIC_EXTINT_4 */
 281:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_5_Handler      = (void *)EIC_5_Handler,      /* 17 EIC_EXTINT_5 */
 282:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_6_Handler      = (void *)EIC_6_Handler,      /* 18 EIC_EXTINT_6 */
 283:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_7_Handler      = (void *)EIC_7_Handler,      /* 19 EIC_EXTINT_7 */
 284:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_8_Handler      = (void *)EIC_8_Handler,      /* 20 EIC_EXTINT_8 */
 285:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_9_Handler      = (void *)EIC_9_Handler,      /* 21 EIC_EXTINT_9 */
 286:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_10_Handler     = (void *)EIC_10_Handler,     /* 22 EIC_EXTINT_10 */
 287:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_11_Handler     = (void *)EIC_11_Handler,     /* 23 EIC_EXTINT_11 */
 288:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_12_Handler     = (void *)EIC_12_Handler,     /* 24 EIC_EXTINT_12 */
 289:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_13_Handler     = (void *)EIC_13_Handler,     /* 25 EIC_EXTINT_13 */
 290:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_14_Handler     = (void *)EIC_14_Handler,     /* 26 EIC_EXTINT_14 */
 291:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEIC_15_Handler     = (void *)EIC_15_Handler,     /* 27 EIC_EXTINT_15 */
 292:tmk_core/protocol/arm_atsam/startup.c ****     .pfnFREQM_Handler      = (void *)FREQM_Handler,      /* 28 Frequency Meter */
 293:tmk_core/protocol/arm_atsam/startup.c ****     .pfnNVMCTRL_0_Handler  = (void *)NVMCTRL_0_Handler,  /* 29 NVMCTRL_0, NVMCTRL_1, NVMCTRL_2, NVM
 294:tmk_core/protocol/arm_atsam/startup.c ****     .pfnNVMCTRL_1_Handler  = (void *)NVMCTRL_1_Handler,  /* 30 NVMCTRL_10, NVMCTRL_8, NVMCTRL_9 */
 295:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDMAC_0_Handler     = (void *)DMAC_0_Handler,     /* 31 DMAC_SUSP_0, DMAC_TCMPL_0, DMAC_TERR
 296:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDMAC_1_Handler     = (void *)DMAC_1_Handler,     /* 32 DMAC_SUSP_1, DMAC_TCMPL_1, DMAC_TERR
 297:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDMAC_2_Handler     = (void *)DMAC_2_Handler,     /* 33 DMAC_SUSP_2, DMAC_TCMPL_2, DMAC_TERR
 298:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDMAC_3_Handler     = (void *)DMAC_3_Handler,     /* 34 DMAC_SUSP_3, DMAC_TCMPL_3, DMAC_TERR
 299:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDMAC_4_Handler     = (void *)DMAC_4_Handler,   /* 35 DMAC_SUSP_10, DMAC_SUSP_11, DMAC_SUSP_
 300:tmk_core/protocol/arm_atsam/startup.c ****                                                           DMAC_TERR_20, DMAC_TERR_21, DMAC_TERR_22,
 301:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEVSYS_0_Handler   = (void *)EVSYS_0_Handler,   /* 36 EVSYS_EVD_0, EVSYS_OVR_0 */
 302:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEVSYS_1_Handler   = (void *)EVSYS_1_Handler,   /* 37 EVSYS_EVD_1, EVSYS_OVR_1 */
 303:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEVSYS_2_Handler   = (void *)EVSYS_2_Handler,   /* 38 EVSYS_EVD_2, EVSYS_OVR_2 */
 304:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEVSYS_3_Handler   = (void *)EVSYS_3_Handler,   /* 39 EVSYS_EVD_3, EVSYS_OVR_3 */
 305:tmk_core/protocol/arm_atsam/startup.c ****     .pfnEVSYS_4_Handler   = (void *)EVSYS_4_Handler,   /* 40 EVSYS_EVD_10, EVSYS_EVD_11, EVSYS_EVD_
 306:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPAC_Handler       = (void *)PAC_Handler,       /* 41 Peripheral Access Controller */
 307:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTAL_0_Handler     = (void *)TAL_0_Handler,     /* 42 TAL_BRK */
 308:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTAL_1_Handler     = (void *)TAL_1_Handler,     /* 43 TAL_IPS_0, TAL_IPS_1 */
 309:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved44         = (void *)(0UL),             /* 44 Reserved */
 310:tmk_core/protocol/arm_atsam/startup.c ****     .pfnRAMECC_Handler    = (void *)RAMECC_Handler,    /* 45 RAM ECC */
 311:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM0_0_Handler = (void *)SERCOM0_0_Handler, /* 46 SERCOM0_0 */
 312:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM0_1_Handler = (void *)SERCOM0_1_Handler, /* 47 SERCOM0_1 */
 313:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM0_2_Handler = (void *)SERCOM0_2_Handler, /* 48 SERCOM0_2 */
 314:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM0_3_Handler = (void *)SERCOM0_3_Handler, /* 49 SERCOM0_3, SERCOM0_4, SERCOM0_5, SERCO
 315:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM1_0_Handler = (void *)SERCOM1_0_Handler, /* 50 SERCOM1_0 */
 316:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM1_1_Handler = (void *)SERCOM1_1_Handler, /* 51 SERCOM1_1 */
 317:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM1_2_Handler = (void *)SERCOM1_2_Handler, /* 52 SERCOM1_2 */
 318:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM1_3_Handler = (void *)SERCOM1_3_Handler, /* 53 SERCOM1_3, SERCOM1_4, SERCOM1_5, SERCO
 319:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM2_0_Handler = (void *)SERCOM2_0_Handler, /* 54 SERCOM2_0 */
 320:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM2_1_Handler = (void *)SERCOM2_1_Handler, /* 55 SERCOM2_1 */
 321:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM2_2_Handler = (void *)SERCOM2_2_Handler, /* 56 SERCOM2_2 */
 322:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM2_3_Handler = (void *)SERCOM2_3_Handler, /* 57 SERCOM2_3, SERCOM2_4, SERCOM2_5, SERCO
 323:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM3_0_Handler = (void *)SERCOM3_0_Handler, /* 58 SERCOM3_0 */
 324:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM3_1_Handler = (void *)SERCOM3_1_Handler, /* 59 SERCOM3_1 */
 325:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM3_2_Handler = (void *)SERCOM3_2_Handler, /* 60 SERCOM3_2 */
 326:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM3_3_Handler = (void *)SERCOM3_3_Handler, /* 61 SERCOM3_3, SERCOM3_4, SERCOM3_5, SERCO
 327:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM4
 328:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM4_0_Handler = (void *)SERCOM4_0_Handler, /* 62 SERCOM4_0 */
 329:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM4_1_Handler = (void *)SERCOM4_1_Handler, /* 63 SERCOM4_1 */
 330:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM4_2_Handler = (void *)SERCOM4_2_Handler, /* 64 SERCOM4_2 */
 331:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM4_3_Handler = (void *)SERCOM4_3_Handler, /* 65 SERCOM4_3, SERCOM4_4, SERCOM4_5, SERCO
 332:tmk_core/protocol/arm_atsam/startup.c **** #else
 333:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved62  = (void *)(0UL), /* 62 Reserved */
 334:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved63  = (void *)(0UL), /* 63 Reserved */
 335:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved64  = (void *)(0UL), /* 64 Reserved */
 336:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved65  = (void *)(0UL), /* 65 Reserved */
 337:tmk_core/protocol/arm_atsam/startup.c **** #endif
 338:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM5
 339:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM5_0_Handler = (void *)SERCOM5_0_Handler, /* 66 SERCOM5_0 */
 340:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM5_1_Handler = (void *)SERCOM5_1_Handler, /* 67 SERCOM5_1 */
 341:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM5_2_Handler = (void *)SERCOM5_2_Handler, /* 68 SERCOM5_2 */
 342:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM5_3_Handler = (void *)SERCOM5_3_Handler, /* 69 SERCOM5_3, SERCOM5_4, SERCOM5_5, SERCO
 343:tmk_core/protocol/arm_atsam/startup.c **** #else
 344:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved66  = (void *)(0UL), /* 66 Reserved */
 345:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved67  = (void *)(0UL), /* 67 Reserved */
 346:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved68  = (void *)(0UL), /* 68 Reserved */
 347:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved69  = (void *)(0UL), /* 69 Reserved */
 348:tmk_core/protocol/arm_atsam/startup.c **** #endif
 349:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM6
 350:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM6_0_Handler = (void *)SERCOM6_0_Handler, /* 70 SERCOM6_0 */
 351:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM6_1_Handler = (void *)SERCOM6_1_Handler, /* 71 SERCOM6_1 */
 352:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM6_2_Handler = (void *)SERCOM6_2_Handler, /* 72 SERCOM6_2 */
 353:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM6_3_Handler = (void *)SERCOM6_3_Handler, /* 73 SERCOM6_3, SERCOM6_4, SERCOM6_5, SERCO
 354:tmk_core/protocol/arm_atsam/startup.c **** #else
 355:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved70  = (void *)(0UL), /* 70 Reserved */
 356:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved71  = (void *)(0UL), /* 71 Reserved */
 357:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved72  = (void *)(0UL), /* 72 Reserved */
 358:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved73  = (void *)(0UL), /* 73 Reserved */
 359:tmk_core/protocol/arm_atsam/startup.c **** #endif
 360:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SERCOM7
 361:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM7_0_Handler = (void *)SERCOM7_0_Handler, /* 74 SERCOM7_0 */
 362:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM7_1_Handler = (void *)SERCOM7_1_Handler, /* 75 SERCOM7_1 */
 363:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM7_2_Handler = (void *)SERCOM7_2_Handler, /* 76 SERCOM7_2 */
 364:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSERCOM7_3_Handler = (void *)SERCOM7_3_Handler, /* 77 SERCOM7_3, SERCOM7_4, SERCOM7_5, SERCO
 365:tmk_core/protocol/arm_atsam/startup.c **** #else
 366:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved74  = (void *)(0UL), /* 74 Reserved */
 367:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved75  = (void *)(0UL), /* 75 Reserved */
 368:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved76  = (void *)(0UL), /* 76 Reserved */
 369:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved77  = (void *)(0UL), /* 77 Reserved */
 370:tmk_core/protocol/arm_atsam/startup.c **** #endif
 371:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_CAN0
 372:tmk_core/protocol/arm_atsam/startup.c ****     .pfnCAN0_Handler = (void *)CAN0_Handler, /* 78 Control Area Network 0 */
 373:tmk_core/protocol/arm_atsam/startup.c **** #else
 374:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved78  = (void *)(0UL), /* 78 Reserved */
 375:tmk_core/protocol/arm_atsam/startup.c **** #endif
 376:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_CAN1
 377:tmk_core/protocol/arm_atsam/startup.c ****     .pfnCAN1_Handler = (void *)CAN1_Handler, /* 79 Control Area Network 1 */
 378:tmk_core/protocol/arm_atsam/startup.c **** #else
 379:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved79  = (void *)(0UL), /* 79 Reserved */
 380:tmk_core/protocol/arm_atsam/startup.c **** #endif
 381:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_USB
 382:tmk_core/protocol/arm_atsam/startup.c ****     .pfnUSB_0_Handler = (void *)USB_0_Handler, /* 80 USB_EORSM_DNRSM, USB_EORST_RST, USB_LPMSUSP_DD
 383:tmk_core/protocol/arm_atsam/startup.c ****     .pfnUSB_1_Handler = (void *)USB_1_Handler, /* 81 USB_SOF_HSOF */
 384:tmk_core/protocol/arm_atsam/startup.c ****     .pfnUSB_2_Handler = (void *)USB_2_Handler, /* 82 USB_TRCPT0_0, USB_TRCPT0_1, USB_TRCPT0_2, USB_
 385:tmk_core/protocol/arm_atsam/startup.c ****     .pfnUSB_3_Handler = (void *)USB_3_Handler, /* 83 USB_TRCPT1_0, USB_TRCPT1_1, USB_TRCPT1_2, USB_
 386:tmk_core/protocol/arm_atsam/startup.c **** #else
 387:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved80  = (void *)(0UL), /* 80 Reserved */
 388:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved81  = (void *)(0UL), /* 81 Reserved */
 389:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved82  = (void *)(0UL), /* 82 Reserved */
 390:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved83  = (void *)(0UL), /* 83 Reserved */
 391:tmk_core/protocol/arm_atsam/startup.c **** #endif
 392:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_GMAC
 393:tmk_core/protocol/arm_atsam/startup.c ****     .pfnGMAC_Handler = (void *)GMAC_Handler, /* 84 Ethernet MAC */
 394:tmk_core/protocol/arm_atsam/startup.c **** #else
 395:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved84  = (void *)(0UL), /* 84 Reserved */
 396:tmk_core/protocol/arm_atsam/startup.c **** #endif
 397:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC0_0_Handler = (void *)TCC0_0_Handler, /* 85 TCC0_CNT_A, TCC0_DFS_A, TCC0_ERR_A, TCC0_FAU
 398:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC0_1_Handler = (void *)TCC0_1_Handler, /* 86 TCC0_MC_0 */
 399:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC0_2_Handler = (void *)TCC0_2_Handler, /* 87 TCC0_MC_1 */
 400:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC0_3_Handler = (void *)TCC0_3_Handler, /* 88 TCC0_MC_2 */
 401:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC0_4_Handler = (void *)TCC0_4_Handler, /* 89 TCC0_MC_3 */
 402:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC0_5_Handler = (void *)TCC0_5_Handler, /* 90 TCC0_MC_4 */
 403:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC0_6_Handler = (void *)TCC0_6_Handler, /* 91 TCC0_MC_5 */
 404:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC1_0_Handler = (void *)TCC1_0_Handler, /* 92 TCC1_CNT_A, TCC1_DFS_A, TCC1_ERR_A, TCC1_FAU
 405:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC1_1_Handler = (void *)TCC1_1_Handler, /* 93 TCC1_MC_0 */
 406:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC1_2_Handler = (void *)TCC1_2_Handler, /* 94 TCC1_MC_1 */
 407:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC1_3_Handler = (void *)TCC1_3_Handler, /* 95 TCC1_MC_2 */
 408:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC1_4_Handler = (void *)TCC1_4_Handler, /* 96 TCC1_MC_3 */
 409:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC2_0_Handler = (void *)TCC2_0_Handler, /* 97 TCC2_CNT_A, TCC2_DFS_A, TCC2_ERR_A, TCC2_FAU
 410:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC2_1_Handler = (void *)TCC2_1_Handler, /* 98 TCC2_MC_0 */
 411:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC2_2_Handler = (void *)TCC2_2_Handler, /* 99 TCC2_MC_1 */
 412:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC2_3_Handler = (void *)TCC2_3_Handler, /* 100 TCC2_MC_2 */
 413:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TCC3
 414:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC3_0_Handler = (void *)TCC3_0_Handler, /* 101 TCC3_CNT_A, TCC3_DFS_A, TCC3_ERR_A, TCC3_FA
 415:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC3_1_Handler = (void *)TCC3_1_Handler, /* 102 TCC3_MC_0 */
 416:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC3_2_Handler = (void *)TCC3_2_Handler, /* 103 TCC3_MC_1 */
 417:tmk_core/protocol/arm_atsam/startup.c **** #else
 418:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved101 = (void *)(0UL), /* 101 Reserved */
 419:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved102 = (void *)(0UL), /* 102 Reserved */
 420:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved103 = (void *)(0UL), /* 103 Reserved */
 421:tmk_core/protocol/arm_atsam/startup.c **** #endif
 422:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TCC4
 423:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC4_0_Handler = (void *)TCC4_0_Handler, /* 104 TCC4_CNT_A, TCC4_DFS_A, TCC4_ERR_A, TCC4_FA
 424:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC4_1_Handler = (void *)TCC4_1_Handler, /* 105 TCC4_MC_0 */
 425:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTCC4_2_Handler = (void *)TCC4_2_Handler, /* 106 TCC4_MC_1 */
 426:tmk_core/protocol/arm_atsam/startup.c **** #else
 427:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved104 = (void *)(0UL), /* 104 Reserved */
 428:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved105 = (void *)(0UL), /* 105 Reserved */
 429:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved106 = (void *)(0UL), /* 106 Reserved */
 430:tmk_core/protocol/arm_atsam/startup.c **** #endif
 431:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC0_Handler = (void *)TC0_Handler, /* 107 Basic Timer Counter 0 */
 432:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC1_Handler = (void *)TC1_Handler, /* 108 Basic Timer Counter 1 */
 433:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC2_Handler = (void *)TC2_Handler, /* 109 Basic Timer Counter 2 */
 434:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC3_Handler = (void *)TC3_Handler, /* 110 Basic Timer Counter 3 */
 435:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC4
 436:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC4_Handler = (void *)TC4_Handler, /* 111 Basic Timer Counter 4 */
 437:tmk_core/protocol/arm_atsam/startup.c **** #else
 438:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved111 = (void *)(0UL), /* 111 Reserved */
 439:tmk_core/protocol/arm_atsam/startup.c **** #endif
 440:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC5
 441:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC5_Handler = (void *)TC5_Handler, /* 112 Basic Timer Counter 5 */
 442:tmk_core/protocol/arm_atsam/startup.c **** #else
 443:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved112 = (void *)(0UL), /* 112 Reserved */
 444:tmk_core/protocol/arm_atsam/startup.c **** #endif
 445:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC6
 446:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC6_Handler = (void *)TC6_Handler, /* 113 Basic Timer Counter 6 */
 447:tmk_core/protocol/arm_atsam/startup.c **** #else
 448:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved113 = (void *)(0UL), /* 113 Reserved */
 449:tmk_core/protocol/arm_atsam/startup.c **** #endif
 450:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_TC7
 451:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTC7_Handler = (void *)TC7_Handler, /* 114 Basic Timer Counter 7 */
 452:tmk_core/protocol/arm_atsam/startup.c **** #else
 453:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved114 = (void *)(0UL), /* 114 Reserved */
 454:tmk_core/protocol/arm_atsam/startup.c **** #endif
 455:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPDEC_0_Handler = (void *)PDEC_0_Handler, /* 115 PDEC_DIR_A, PDEC_ERR_A, PDEC_OVF, PDEC_VLC_
 456:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPDEC_1_Handler = (void *)PDEC_1_Handler, /* 116 PDEC_MC_0 */
 457:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPDEC_2_Handler = (void *)PDEC_2_Handler, /* 117 PDEC_MC_1 */
 458:tmk_core/protocol/arm_atsam/startup.c ****     .pfnADC0_0_Handler = (void *)ADC0_0_Handler, /* 118 ADC0_OVERRUN, ADC0_WINMON */
 459:tmk_core/protocol/arm_atsam/startup.c ****     .pfnADC0_1_Handler = (void *)ADC0_1_Handler, /* 119 ADC0_RESRDY */
 460:tmk_core/protocol/arm_atsam/startup.c ****     .pfnADC1_0_Handler = (void *)ADC1_0_Handler, /* 120 ADC1_OVERRUN, ADC1_WINMON */
 461:tmk_core/protocol/arm_atsam/startup.c ****     .pfnADC1_1_Handler = (void *)ADC1_1_Handler, /* 121 ADC1_RESRDY */
 462:tmk_core/protocol/arm_atsam/startup.c ****     .pfnAC_Handler     = (void *)AC_Handler,     /* 122 Analog Comparators */
 463:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDAC_0_Handler  = (void *)DAC_0_Handler,  /* 123 DAC_OVERRUN_A_0, DAC_OVERRUN_A_1, DAC_UNDER
 464:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDAC_1_Handler  = (void *)DAC_1_Handler,  /* 124 DAC_EMPTY_0 */
 465:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDAC_2_Handler  = (void *)DAC_2_Handler,  /* 125 DAC_EMPTY_1 */
 466:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDAC_3_Handler  = (void *)DAC_3_Handler,  /* 126 DAC_RESRDY_0 */
 467:tmk_core/protocol/arm_atsam/startup.c ****     .pfnDAC_4_Handler  = (void *)DAC_4_Handler,  /* 127 DAC_RESRDY_1 */
 468:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_I2S
 469:tmk_core/protocol/arm_atsam/startup.c ****     .pfnI2S_Handler = (void *)I2S_Handler, /* 128 Inter-IC Sound Interface */
 470:tmk_core/protocol/arm_atsam/startup.c **** #else
 471:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved128 = (void *)(0UL), /* 128 Reserved */
 472:tmk_core/protocol/arm_atsam/startup.c **** #endif
 473:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPCC_Handler  = (void *)PCC_Handler,  /* 129 Parallel Capture Controller */
 474:tmk_core/protocol/arm_atsam/startup.c ****     .pfnAES_Handler  = (void *)AES_Handler,  /* 130 Advanced Encryption Standard */
 475:tmk_core/protocol/arm_atsam/startup.c ****     .pfnTRNG_Handler = (void *)TRNG_Handler, /* 131 True Random Generator */
 476:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_ICM
 477:tmk_core/protocol/arm_atsam/startup.c ****     .pfnICM_Handler = (void *)ICM_Handler, /* 132 Integrity Check Monitor */
 478:tmk_core/protocol/arm_atsam/startup.c **** #else
 479:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved132 = (void *)(0UL), /* 132 Reserved */
 480:tmk_core/protocol/arm_atsam/startup.c **** #endif
 481:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_PUKCC
 482:tmk_core/protocol/arm_atsam/startup.c ****     .pfnPUKCC_Handler = (void *)PUKCC_Handler, /* 133 PUblic-Key Cryptography Controller */
 483:tmk_core/protocol/arm_atsam/startup.c **** #else
 484:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved133 = (void *)(0UL), /* 133 Reserved */
 485:tmk_core/protocol/arm_atsam/startup.c **** #endif
 486:tmk_core/protocol/arm_atsam/startup.c ****     .pfnQSPI_Handler = (void *)QSPI_Handler, /* 134 Quad SPI interface */
 487:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SDHC0
 488:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSDHC0_Handler = (void *)SDHC0_Handler, /* 135 SD/MMC Host Controller 0 */
 489:tmk_core/protocol/arm_atsam/startup.c **** #else
 490:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved135 = (void *)(0UL), /* 135 Reserved */
 491:tmk_core/protocol/arm_atsam/startup.c **** #endif
 492:tmk_core/protocol/arm_atsam/startup.c **** #ifdef ID_SDHC1
 493:tmk_core/protocol/arm_atsam/startup.c ****     .pfnSDHC1_Handler = (void *)SDHC1_Handler /* 136 SD/MMC Host Controller 1 */
 494:tmk_core/protocol/arm_atsam/startup.c **** #else
 495:tmk_core/protocol/arm_atsam/startup.c ****     .pvReserved136 = (void *)(0UL)  /* 136 Reserved */
 496:tmk_core/protocol/arm_atsam/startup.c **** #endif
 497:tmk_core/protocol/arm_atsam/startup.c **** };
 498:tmk_core/protocol/arm_atsam/startup.c **** 
 499:tmk_core/protocol/arm_atsam/startup.c **** /**
 500:tmk_core/protocol/arm_atsam/startup.c ****  * \brief This is the code that gets called on processor reset.
 501:tmk_core/protocol/arm_atsam/startup.c ****  * To initialize the device, and call the main() routine.
 502:tmk_core/protocol/arm_atsam/startup.c ****  */
 503:tmk_core/protocol/arm_atsam/startup.c **** void Reset_Handler(void) {
 504:tmk_core/protocol/arm_atsam/startup.c **** #ifdef KEYBOARD_massdrop_ctrl
 505:tmk_core/protocol/arm_atsam/startup.c ****     /* WARNING: This is only for CTRL bootloader release "v2.18Jun 22 2018 17:28:08" for bootloader
 506:tmk_core/protocol/arm_atsam/startup.c ****     if (*MAGIC_ADDR == BOOTLOADER_MAGIC) {
 507:tmk_core/protocol/arm_atsam/startup.c ****         /* At this point, the bootloader's memory is initialized properly, so undo the jump to here
 508:tmk_core/protocol/arm_atsam/startup.c ****         *MAGIC_ADDR = 0x00000000;       /* Change value to prevent potential bootloader entrance lo
 509:tmk_core/protocol/arm_atsam/startup.c ****         __set_MSP(0x20008818);          /* MSP according to bootloader */
 510:tmk_core/protocol/arm_atsam/startup.c ****         SCB->VTOR = 0x00000000;         /* Vector table back to bootloader's */
 511:tmk_core/protocol/arm_atsam/startup.c ****         asm("bx %0" ::"r"(0x00001267)); /* Jump past bootloader RCAUSE check using THUMB */
 512:tmk_core/protocol/arm_atsam/startup.c ****     }
 513:tmk_core/protocol/arm_atsam/startup.c **** #endif
 514:tmk_core/protocol/arm_atsam/startup.c ****     uint32_t *pSrc, *pDest;
 515:tmk_core/protocol/arm_atsam/startup.c **** 
 516:tmk_core/protocol/arm_atsam/startup.c ****     /* Initialize the relocate segment */
 517:tmk_core/protocol/arm_atsam/startup.c ****     pSrc  = &_etext;
 518:tmk_core/protocol/arm_atsam/startup.c ****     pDest = &_srelocate;
 519:tmk_core/protocol/arm_atsam/startup.c **** 
 520:tmk_core/protocol/arm_atsam/startup.c ****     if (pSrc != pDest) {
 521:tmk_core/protocol/arm_atsam/startup.c ****         for (; pDest < &_erelocate;) {
 522:tmk_core/protocol/arm_atsam/startup.c ****             *pDest++ = *pSrc++;
 523:tmk_core/protocol/arm_atsam/startup.c ****         }
 524:tmk_core/protocol/arm_atsam/startup.c ****     }
 525:tmk_core/protocol/arm_atsam/startup.c **** 
 526:tmk_core/protocol/arm_atsam/startup.c ****     /* Clear the zero segment */
 527:tmk_core/protocol/arm_atsam/startup.c ****     for (pDest = &_szero; pDest < &_ezero;) {
 528:tmk_core/protocol/arm_atsam/startup.c ****         *pDest++ = 0;
 529:tmk_core/protocol/arm_atsam/startup.c ****     }
 530:tmk_core/protocol/arm_atsam/startup.c **** 
 531:tmk_core/protocol/arm_atsam/startup.c ****     /* Set the vector table base address */
 532:tmk_core/protocol/arm_atsam/startup.c ****     pSrc      = (uint32_t *)&_sfixed;
 533:tmk_core/protocol/arm_atsam/startup.c ****     SCB->VTOR = ((uint32_t)pSrc & SCB_VTOR_TBLOFF_Msk);
 534:tmk_core/protocol/arm_atsam/startup.c **** 
 535:tmk_core/protocol/arm_atsam/startup.c **** #if __FPU_USED
 536:tmk_core/protocol/arm_atsam/startup.c ****     /* Enable FPU */
 537:tmk_core/protocol/arm_atsam/startup.c ****     SCB->CPACR |= (0xFu << 20);
 538:tmk_core/protocol/arm_atsam/startup.c ****     __DSB();
 539:tmk_core/protocol/arm_atsam/startup.c ****     __ISB();
 540:tmk_core/protocol/arm_atsam/startup.c **** #endif
 541:tmk_core/protocol/arm_atsam/startup.c **** 
 542:tmk_core/protocol/arm_atsam/startup.c ****     /* Initialize the C library */
 543:tmk_core/protocol/arm_atsam/startup.c ****     __libc_init_array();
 544:tmk_core/protocol/arm_atsam/startup.c **** 
 545:tmk_core/protocol/arm_atsam/startup.c ****     /* Branch to main function */
 546:tmk_core/protocol/arm_atsam/startup.c ****     main();
 547:tmk_core/protocol/arm_atsam/startup.c **** 
 548:tmk_core/protocol/arm_atsam/startup.c ****     /* Infinite loop */
 549:tmk_core/protocol/arm_atsam/startup.c ****     while (1)
 550:tmk_core/protocol/arm_atsam/startup.c ****         ;
 551:tmk_core/protocol/arm_atsam/startup.c **** }
 552:tmk_core/protocol/arm_atsam/startup.c **** 
 553:tmk_core/protocol/arm_atsam/startup.c **** /**
 554:tmk_core/protocol/arm_atsam/startup.c ****  * \brief Default interrupt handler for unused IRQs.
 555:tmk_core/protocol/arm_atsam/startup.c ****  */
 556:tmk_core/protocol/arm_atsam/startup.c **** void Dummy_Handler(void) {
  28              		.loc 1 556 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE124:
  39              		.weak	SDHC0_Handler
  40              		.thumb_set SDHC0_Handler,Dummy_Handler
  41              		.weak	QSPI_Handler
  42              		.thumb_set QSPI_Handler,Dummy_Handler
  43              		.weak	PUKCC_Handler
  44              		.thumb_set PUKCC_Handler,Dummy_Handler
  45              		.weak	ICM_Handler
  46              		.thumb_set ICM_Handler,Dummy_Handler
  47              		.weak	TRNG_Handler
  48              		.thumb_set TRNG_Handler,Dummy_Handler
  49              		.weak	AES_Handler
  50              		.thumb_set AES_Handler,Dummy_Handler
  51              		.weak	PCC_Handler
  52              		.thumb_set PCC_Handler,Dummy_Handler
  53              		.weak	I2S_Handler
  54              		.thumb_set I2S_Handler,Dummy_Handler
  55              		.weak	DAC_4_Handler
  56              		.thumb_set DAC_4_Handler,Dummy_Handler
  57              		.weak	DAC_3_Handler
  58              		.thumb_set DAC_3_Handler,Dummy_Handler
  59              		.weak	DAC_2_Handler
  60              		.thumb_set DAC_2_Handler,Dummy_Handler
  61              		.weak	DAC_1_Handler
  62              		.thumb_set DAC_1_Handler,Dummy_Handler
  63              		.weak	DAC_0_Handler
  64              		.thumb_set DAC_0_Handler,Dummy_Handler
  65              		.weak	AC_Handler
  66              		.thumb_set AC_Handler,Dummy_Handler
  67              		.weak	ADC1_1_Handler
  68              		.thumb_set ADC1_1_Handler,Dummy_Handler
  69              		.weak	ADC1_0_Handler
  70              		.thumb_set ADC1_0_Handler,Dummy_Handler
  71              		.weak	ADC0_1_Handler
  72              		.thumb_set ADC0_1_Handler,Dummy_Handler
  73              		.weak	ADC0_0_Handler
  74              		.thumb_set ADC0_0_Handler,Dummy_Handler
  75              		.weak	PDEC_2_Handler
  76              		.thumb_set PDEC_2_Handler,Dummy_Handler
  77              		.weak	PDEC_1_Handler
  78              		.thumb_set PDEC_1_Handler,Dummy_Handler
  79              		.weak	PDEC_0_Handler
  80              		.thumb_set PDEC_0_Handler,Dummy_Handler
  81              		.weak	TC5_Handler
  82              		.thumb_set TC5_Handler,Dummy_Handler
  83              		.weak	TC4_Handler
  84              		.thumb_set TC4_Handler,Dummy_Handler
  85              		.weak	TC3_Handler
  86              		.thumb_set TC3_Handler,Dummy_Handler
  87              		.weak	TC2_Handler
  88              		.thumb_set TC2_Handler,Dummy_Handler
  89              		.weak	TC1_Handler
  90              		.thumb_set TC1_Handler,Dummy_Handler
  91              		.weak	TC0_Handler
  92              		.thumb_set TC0_Handler,Dummy_Handler
  93              		.weak	TCC4_2_Handler
  94              		.thumb_set TCC4_2_Handler,Dummy_Handler
  95              		.weak	TCC4_1_Handler
  96              		.thumb_set TCC4_1_Handler,Dummy_Handler
  97              		.weak	TCC4_0_Handler
  98              		.thumb_set TCC4_0_Handler,Dummy_Handler
  99              		.weak	TCC3_2_Handler
 100              		.thumb_set TCC3_2_Handler,Dummy_Handler
 101              		.weak	TCC3_1_Handler
 102              		.thumb_set TCC3_1_Handler,Dummy_Handler
 103              		.weak	TCC3_0_Handler
 104              		.thumb_set TCC3_0_Handler,Dummy_Handler
 105              		.weak	TCC2_3_Handler
 106              		.thumb_set TCC2_3_Handler,Dummy_Handler
 107              		.weak	TCC2_2_Handler
 108              		.thumb_set TCC2_2_Handler,Dummy_Handler
 109              		.weak	TCC2_1_Handler
 110              		.thumb_set TCC2_1_Handler,Dummy_Handler
 111              		.weak	TCC2_0_Handler
 112              		.thumb_set TCC2_0_Handler,Dummy_Handler
 113              		.weak	TCC1_4_Handler
 114              		.thumb_set TCC1_4_Handler,Dummy_Handler
 115              		.weak	TCC1_3_Handler
 116              		.thumb_set TCC1_3_Handler,Dummy_Handler
 117              		.weak	TCC1_2_Handler
 118              		.thumb_set TCC1_2_Handler,Dummy_Handler
 119              		.weak	TCC1_1_Handler
 120              		.thumb_set TCC1_1_Handler,Dummy_Handler
 121              		.weak	TCC1_0_Handler
 122              		.thumb_set TCC1_0_Handler,Dummy_Handler
 123              		.weak	TCC0_6_Handler
 124              		.thumb_set TCC0_6_Handler,Dummy_Handler
 125              		.weak	TCC0_5_Handler
 126              		.thumb_set TCC0_5_Handler,Dummy_Handler
 127              		.weak	TCC0_4_Handler
 128              		.thumb_set TCC0_4_Handler,Dummy_Handler
 129              		.weak	TCC0_3_Handler
 130              		.thumb_set TCC0_3_Handler,Dummy_Handler
 131              		.weak	TCC0_2_Handler
 132              		.thumb_set TCC0_2_Handler,Dummy_Handler
 133              		.weak	TCC0_1_Handler
 134              		.thumb_set TCC0_1_Handler,Dummy_Handler
 135              		.weak	TCC0_0_Handler
 136              		.thumb_set TCC0_0_Handler,Dummy_Handler
 137              		.weak	USB_3_Handler
 138              		.thumb_set USB_3_Handler,Dummy_Handler
 139              		.weak	USB_2_Handler
 140              		.thumb_set USB_2_Handler,Dummy_Handler
 141              		.weak	USB_1_Handler
 142              		.thumb_set USB_1_Handler,Dummy_Handler
 143              		.weak	USB_0_Handler
 144              		.thumb_set USB_0_Handler,Dummy_Handler
 145              		.weak	SERCOM5_3_Handler
 146              		.thumb_set SERCOM5_3_Handler,Dummy_Handler
 147              		.weak	SERCOM5_2_Handler
 148              		.thumb_set SERCOM5_2_Handler,Dummy_Handler
 149              		.weak	SERCOM5_1_Handler
 150              		.thumb_set SERCOM5_1_Handler,Dummy_Handler
 151              		.weak	SERCOM5_0_Handler
 152              		.thumb_set SERCOM5_0_Handler,Dummy_Handler
 153              		.weak	SERCOM4_3_Handler
 154              		.thumb_set SERCOM4_3_Handler,Dummy_Handler
 155              		.weak	SERCOM4_2_Handler
 156              		.thumb_set SERCOM4_2_Handler,Dummy_Handler
 157              		.weak	SERCOM4_1_Handler
 158              		.thumb_set SERCOM4_1_Handler,Dummy_Handler
 159              		.weak	SERCOM4_0_Handler
 160              		.thumb_set SERCOM4_0_Handler,Dummy_Handler
 161              		.weak	SERCOM3_3_Handler
 162              		.thumb_set SERCOM3_3_Handler,Dummy_Handler
 163              		.weak	SERCOM3_2_Handler
 164              		.thumb_set SERCOM3_2_Handler,Dummy_Handler
 165              		.weak	SERCOM3_1_Handler
 166              		.thumb_set SERCOM3_1_Handler,Dummy_Handler
 167              		.weak	SERCOM3_0_Handler
 168              		.thumb_set SERCOM3_0_Handler,Dummy_Handler
 169              		.weak	SERCOM2_3_Handler
 170              		.thumb_set SERCOM2_3_Handler,Dummy_Handler
 171              		.weak	SERCOM2_2_Handler
 172              		.thumb_set SERCOM2_2_Handler,Dummy_Handler
 173              		.weak	SERCOM2_1_Handler
 174              		.thumb_set SERCOM2_1_Handler,Dummy_Handler
 175              		.weak	SERCOM2_0_Handler
 176              		.thumb_set SERCOM2_0_Handler,Dummy_Handler
 177              		.weak	SERCOM1_3_Handler
 178              		.thumb_set SERCOM1_3_Handler,Dummy_Handler
 179              		.weak	SERCOM1_2_Handler
 180              		.thumb_set SERCOM1_2_Handler,Dummy_Handler
 181              		.weak	SERCOM1_1_Handler
 182              		.thumb_set SERCOM1_1_Handler,Dummy_Handler
 183              		.weak	SERCOM1_0_Handler
 184              		.thumb_set SERCOM1_0_Handler,Dummy_Handler
 185              		.weak	SERCOM0_3_Handler
 186              		.thumb_set SERCOM0_3_Handler,Dummy_Handler
 187              		.weak	SERCOM0_2_Handler
 188              		.thumb_set SERCOM0_2_Handler,Dummy_Handler
 189              		.weak	SERCOM0_1_Handler
 190              		.thumb_set SERCOM0_1_Handler,Dummy_Handler
 191              		.weak	SERCOM0_0_Handler
 192              		.thumb_set SERCOM0_0_Handler,Dummy_Handler
 193              		.weak	RAMECC_Handler
 194              		.thumb_set RAMECC_Handler,Dummy_Handler
 195              		.weak	TAL_1_Handler
 196              		.thumb_set TAL_1_Handler,Dummy_Handler
 197              		.weak	TAL_0_Handler
 198              		.thumb_set TAL_0_Handler,Dummy_Handler
 199              		.weak	PAC_Handler
 200              		.thumb_set PAC_Handler,Dummy_Handler
 201              		.weak	EVSYS_4_Handler
 202              		.thumb_set EVSYS_4_Handler,Dummy_Handler
 203              		.weak	EVSYS_3_Handler
 204              		.thumb_set EVSYS_3_Handler,Dummy_Handler
 205              		.weak	EVSYS_2_Handler
 206              		.thumb_set EVSYS_2_Handler,Dummy_Handler
 207              		.weak	EVSYS_1_Handler
 208              		.thumb_set EVSYS_1_Handler,Dummy_Handler
 209              		.weak	EVSYS_0_Handler
 210              		.thumb_set EVSYS_0_Handler,Dummy_Handler
 211              		.weak	DMAC_4_Handler
 212              		.thumb_set DMAC_4_Handler,Dummy_Handler
 213              		.weak	DMAC_3_Handler
 214              		.thumb_set DMAC_3_Handler,Dummy_Handler
 215              		.weak	DMAC_2_Handler
 216              		.thumb_set DMAC_2_Handler,Dummy_Handler
 217              		.weak	DMAC_1_Handler
 218              		.thumb_set DMAC_1_Handler,Dummy_Handler
 219              		.weak	DMAC_0_Handler
 220              		.thumb_set DMAC_0_Handler,Dummy_Handler
 221              		.weak	NVMCTRL_1_Handler
 222              		.thumb_set NVMCTRL_1_Handler,Dummy_Handler
 223              		.weak	NVMCTRL_0_Handler
 224              		.thumb_set NVMCTRL_0_Handler,Dummy_Handler
 225              		.weak	FREQM_Handler
 226              		.thumb_set FREQM_Handler,Dummy_Handler
 227              		.weak	EIC_15_Handler
 228              		.thumb_set EIC_15_Handler,Dummy_Handler
 229              		.weak	EIC_14_Handler
 230              		.thumb_set EIC_14_Handler,Dummy_Handler
 231              		.weak	EIC_13_Handler
 232              		.thumb_set EIC_13_Handler,Dummy_Handler
 233              		.weak	EIC_12_Handler
 234              		.thumb_set EIC_12_Handler,Dummy_Handler
 235              		.weak	EIC_11_Handler
 236              		.thumb_set EIC_11_Handler,Dummy_Handler
 237              		.weak	EIC_10_Handler
 238              		.thumb_set EIC_10_Handler,Dummy_Handler
 239              		.weak	EIC_9_Handler
 240              		.thumb_set EIC_9_Handler,Dummy_Handler
 241              		.weak	EIC_8_Handler
 242              		.thumb_set EIC_8_Handler,Dummy_Handler
 243              		.weak	EIC_7_Handler
 244              		.thumb_set EIC_7_Handler,Dummy_Handler
 245              		.weak	EIC_6_Handler
 246              		.thumb_set EIC_6_Handler,Dummy_Handler
 247              		.weak	EIC_5_Handler
 248              		.thumb_set EIC_5_Handler,Dummy_Handler
 249              		.weak	EIC_4_Handler
 250              		.thumb_set EIC_4_Handler,Dummy_Handler
 251              		.weak	EIC_3_Handler
 252              		.thumb_set EIC_3_Handler,Dummy_Handler
 253              		.weak	EIC_2_Handler
 254              		.thumb_set EIC_2_Handler,Dummy_Handler
 255              		.weak	EIC_1_Handler
 256              		.thumb_set EIC_1_Handler,Dummy_Handler
 257              		.weak	EIC_0_Handler
 258              		.thumb_set EIC_0_Handler,Dummy_Handler
 259              		.weak	RTC_Handler
 260              		.thumb_set RTC_Handler,Dummy_Handler
 261              		.weak	WDT_Handler
 262              		.thumb_set WDT_Handler,Dummy_Handler
 263              		.weak	SUPC_1_Handler
 264              		.thumb_set SUPC_1_Handler,Dummy_Handler
 265              		.weak	SUPC_0_Handler
 266              		.thumb_set SUPC_0_Handler,Dummy_Handler
 267              		.weak	OSC32KCTRL_Handler
 268              		.thumb_set OSC32KCTRL_Handler,Dummy_Handler
 269              		.weak	OSCCTRL_4_Handler
 270              		.thumb_set OSCCTRL_4_Handler,Dummy_Handler
 271              		.weak	OSCCTRL_3_Handler
 272              		.thumb_set OSCCTRL_3_Handler,Dummy_Handler
 273              		.weak	OSCCTRL_2_Handler
 274              		.thumb_set OSCCTRL_2_Handler,Dummy_Handler
 275              		.weak	OSCCTRL_1_Handler
 276              		.thumb_set OSCCTRL_1_Handler,Dummy_Handler
 277              		.weak	OSCCTRL_0_Handler
 278              		.thumb_set OSCCTRL_0_Handler,Dummy_Handler
 279              		.weak	MCLK_Handler
 280              		.thumb_set MCLK_Handler,Dummy_Handler
 281              		.weak	PM_Handler
 282              		.thumb_set PM_Handler,Dummy_Handler
 283              		.weak	SysTick_Handler
 284              		.thumb_set SysTick_Handler,Dummy_Handler
 285              		.weak	PendSV_Handler
 286              		.thumb_set PendSV_Handler,Dummy_Handler
 287              		.weak	DebugMon_Handler
 288              		.thumb_set DebugMon_Handler,Dummy_Handler
 289              		.weak	SVC_Handler
 290              		.thumb_set SVC_Handler,Dummy_Handler
 291              		.weak	UsageFault_Handler
 292              		.thumb_set UsageFault_Handler,Dummy_Handler
 293              		.weak	BusFault_Handler
 294              		.thumb_set BusFault_Handler,Dummy_Handler
 295              		.weak	MemManage_Handler
 296              		.thumb_set MemManage_Handler,Dummy_Handler
 297              		.weak	HardFault_Handler
 298              		.thumb_set HardFault_Handler,Dummy_Handler
 299              		.weak	NMI_Handler
 300              		.thumb_set NMI_Handler,Dummy_Handler
 301              		.section	.text.Reset_Handler,"ax",%progbits
 302              		.align	1
 303              		.global	Reset_Handler
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv4-sp-d16
 309              	Reset_Handler:
 310              	.LFB123:
 503:tmk_core/protocol/arm_atsam/startup.c **** #ifdef KEYBOARD_massdrop_ctrl
 311              		.loc 1 503 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              	.LVL0:
 503:tmk_core/protocol/arm_atsam/startup.c **** #ifdef KEYBOARD_massdrop_ctrl
 316              		.loc 1 503 0
 317 0000 08B5     		push	{r3, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
 520:tmk_core/protocol/arm_atsam/startup.c ****         for (; pDest < &_erelocate;) {
 321              		.loc 1 520 0
 322 0002 144A     		ldr	r2, .L10
 323 0004 144B     		ldr	r3, .L10+4
 324 0006 9A42     		cmp	r2, r3
 325 0008 03D0     		beq	.L4
 521:tmk_core/protocol/arm_atsam/startup.c ****             *pDest++ = *pSrc++;
 326              		.loc 1 521 0
 327 000a 1449     		ldr	r1, .L10+8
 328 000c 043A     		subs	r2, r2, #4
 329              	.LVL1:
 330              	.L5:
 331 000e 8B42     		cmp	r3, r1
 332 0010 18D3     		bcc	.L7
 333              	.LVL2:
 334              	.L4:
 503:tmk_core/protocol/arm_atsam/startup.c **** #ifdef KEYBOARD_massdrop_ctrl
 335              		.loc 1 503 0
 336 0012 134B     		ldr	r3, .L10+12
 527:tmk_core/protocol/arm_atsam/startup.c ****         *pDest++ = 0;
 337              		.loc 1 527 0
 338 0014 134A     		ldr	r2, .L10+16
 528:tmk_core/protocol/arm_atsam/startup.c ****     }
 339              		.loc 1 528 0
 340 0016 0021     		movs	r1, #0
 341              	.L6:
 342              	.LVL3:
 527:tmk_core/protocol/arm_atsam/startup.c ****         *pDest++ = 0;
 343              		.loc 1 527 0 discriminator 1
 344 0018 9342     		cmp	r3, r2
 345 001a 18D3     		bcc	.L8
 346              	.LVL4:
 533:tmk_core/protocol/arm_atsam/startup.c **** 
 347              		.loc 1 533 0
 348 001c 124A     		ldr	r2, .L10+20
 349 001e 134B     		ldr	r3, .L10+24
 350              	.LVL5:
 351 0020 22F07F02 		bic	r2, r2, #127
 352 0024 9A60     		str	r2, [r3, #8]
 537:tmk_core/protocol/arm_atsam/startup.c ****     __DSB();
 353              		.loc 1 537 0
 354 0026 D3F88820 		ldr	r2, [r3, #136]
 355 002a 42F47002 		orr	r2, r2, #15728640
 356 002e C3F88820 		str	r2, [r3, #136]
 357              	.LBB6:
 358              	.LBB7:
 359              		.file 2 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h"
   1:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /*
   8:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  10:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  12:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  16:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  *
  18:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  24:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  25:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  28:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  34:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  38:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  41:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  44:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  47:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  50:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  53:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  61:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  64:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  67:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
  70:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  71:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  72:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   @{
  76:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  77:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  78:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
  79:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  83:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
  85:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
  87:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  88:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  89:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
  90:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
  94:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
  96:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
  98:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
  99:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 100:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 101:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 105:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 107:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 109:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 112:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 113:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 114:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 116:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 120:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 122:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 124:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 127:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 128:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 129:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 130:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 131:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 135:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 137:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 139:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 140:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 141:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 143:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 147:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 149:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 151:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 152:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 153:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 154:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 155:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 159:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 161:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 163:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 166:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 167:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 168:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 169:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 173:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 175:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 177:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 180:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 181:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 182:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 183:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 187:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 189:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 191:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 194:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 195:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 196:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 197:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 201:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 203:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 205:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 208:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 209:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 210:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 212:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 216:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 218:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 220:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 223:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 224:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 225:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 226:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 227:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 231:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 233:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 235:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 236:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 237:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 239:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 243:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 245:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 247:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 248:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 249:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 250:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 251:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 255:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 257:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 259:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 262:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 263:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 264:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 266:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 270:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 272:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 274:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 277:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 278:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 279:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 280:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 281:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 285:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 287:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 289:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 290:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 291:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 293:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 297:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 299:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 301:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 302:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 303:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 304:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 305:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 309:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 311:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 313:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 316:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 317:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 318:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 320:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 324:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 326:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 328:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 331:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 332:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 333:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 334:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 335:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 339:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 341:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 343:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 344:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 345:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 347:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 351:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 353:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 355:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 356:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 357:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 358:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 362:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 366:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 368:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 370:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 371:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 372:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 373:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 377:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 379:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 381:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 382:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 383:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 384:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 388:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 390:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 392:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 395:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 396:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 397:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 399:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 403:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 405:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 407:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 410:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 411:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 412:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 413:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 414:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 418:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 420:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 422:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 423:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 424:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 426:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 430:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 432:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 434:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 435:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 436:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 437:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 438:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 443:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 445:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 447:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 448:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 449:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 450:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 454:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 456:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 458:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 461:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 462:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 463:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 465:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 469:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 471:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 473:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 476:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 477:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 478:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 479:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 480:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 484:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 486:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 488:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 489:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 490:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 492:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 496:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 498:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 500:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 501:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 502:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 506:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 507:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 510:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 511:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 515:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 517:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 519:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 522:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 523:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 524:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 527:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 531:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 533:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 535:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 538:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 539:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 540:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 541:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 542:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 546:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 548:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 550:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 551:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 552:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 555:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 559:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 561:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 563:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 564:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 565:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 566:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 567:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 571:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 573:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 575:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 577:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 579:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 580:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 581:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 584:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 588:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 590:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 592:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 595:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 596:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 597:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 598:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 599:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 603:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 605:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 607:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 608:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 609:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 612:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 616:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 618:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 620:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 621:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 622:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 625:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 626:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 629:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 630:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 634:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 636:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 640:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #else
 643:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 645:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 646:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 647:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 648:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 649:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 653:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 655:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #else
 659:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 661:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 662:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 663:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 666:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 667:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 668:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 670:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 671:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   @{
 675:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** */
 676:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 677:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #else
 685:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #endif
 689:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 690:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 691:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 694:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 696:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 698:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 700:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 701:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 704:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 706:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 708:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 710:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 711:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 712:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 716:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 718:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 720:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 722:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 723:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 724:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 727:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //{
 729:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** //}
 731:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 733:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 734:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 735:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 740:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 742:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 744:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 745:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** 
 746:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** /**
 747:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****  */
 751:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** {
 753:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 360              		.loc 2 753 0
 361              		.syntax unified
 362              	@ 753 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 363 0032 BFF34F8F 		dsb 0xF
 364              	@ 0 "" 2
 365              		.thumb
 366              		.syntax unified
 367              	.LBE7:
 368              	.LBE6:
 369              	.LBB8:
 370              	.LBB9:
 742:lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h **** }
 371              		.loc 2 742 0
 372              		.syntax unified
 373              	@ 742 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/cmsis_gcc.h" 1
 374 0036 BFF36F8F 		isb 0xF
 375              	@ 0 "" 2
 376              		.thumb
 377              		.syntax unified
 378              	.LBE9:
 379              	.LBE8:
 543:tmk_core/protocol/arm_atsam/startup.c **** 
 380              		.loc 1 543 0
 381 003a FFF7FEFF 		bl	__libc_init_array
 382              	.LVL6:
 546:tmk_core/protocol/arm_atsam/startup.c **** 
 383              		.loc 1 546 0
 384 003e FFF7FEFF 		bl	main
 385              	.LVL7:
 386              	.L9:
 387 0042 FEE7     		b	.L9
 388              	.LVL8:
 389              	.L7:
 522:tmk_core/protocol/arm_atsam/startup.c ****         }
 390              		.loc 1 522 0
 391 0044 52F8040F 		ldr	r0, [r2, #4]!
 392 0048 43F8040B 		str	r0, [r3], #4
 393              	.LVL9:
 394 004c DFE7     		b	.L5
 395              	.LVL10:
 396              	.L8:
 528:tmk_core/protocol/arm_atsam/startup.c ****     }
 397              		.loc 1 528 0
 398 004e 43F8041B 		str	r1, [r3], #4
 399              	.LVL11:
 400 0052 E1E7     		b	.L6
 401              	.L11:
 402              		.align	2
 403              	.L10:
 404 0054 00000000 		.word	_etext
 405 0058 00000000 		.word	_srelocate
 406 005c 00000000 		.word	_erelocate
 407 0060 00000000 		.word	_szero
 408 0064 00000000 		.word	_ezero
 409 0068 00000000 		.word	_sfixed
 410 006c 00ED00E0 		.word	-536810240
 411              		.cfi_endproc
 412              	.LFE123:
 414              		.global	exception_table
 415              		.section	.vectors,"a",%progbits
 416              		.align	2
 419              	exception_table:
 420 0000 00000000 		.word	_estack
 421 0004 00000000 		.word	Reset_Handler
 422 0008 00000000 		.word	NMI_Handler
 423 000c 00000000 		.word	HardFault_Handler
 424 0010 00000000 		.word	MemManage_Handler
 425 0014 00000000 		.word	BusFault_Handler
 426 0018 00000000 		.word	UsageFault_Handler
 427 001c 00000000 		.word	0
 428 0020 00000000 		.word	0
 429 0024 00000000 		.word	0
 430 0028 00000000 		.word	0
 431 002c 00000000 		.word	SVC_Handler
 432 0030 00000000 		.word	DebugMon_Handler
 433 0034 00000000 		.word	0
 434 0038 00000000 		.word	PendSV_Handler
 435 003c 00000000 		.word	SysTick_Handler
 436 0040 00000000 		.word	PM_Handler
 437 0044 00000000 		.word	MCLK_Handler
 438 0048 00000000 		.word	OSCCTRL_0_Handler
 439 004c 00000000 		.word	OSCCTRL_1_Handler
 440 0050 00000000 		.word	OSCCTRL_2_Handler
 441 0054 00000000 		.word	OSCCTRL_3_Handler
 442 0058 00000000 		.word	OSCCTRL_4_Handler
 443 005c 00000000 		.word	OSC32KCTRL_Handler
 444 0060 00000000 		.word	SUPC_0_Handler
 445 0064 00000000 		.word	SUPC_1_Handler
 446 0068 00000000 		.word	WDT_Handler
 447 006c 00000000 		.word	RTC_Handler
 448 0070 00000000 		.word	EIC_0_Handler
 449 0074 00000000 		.word	EIC_1_Handler
 450 0078 00000000 		.word	EIC_2_Handler
 451 007c 00000000 		.word	EIC_3_Handler
 452 0080 00000000 		.word	EIC_4_Handler
 453 0084 00000000 		.word	EIC_5_Handler
 454 0088 00000000 		.word	EIC_6_Handler
 455 008c 00000000 		.word	EIC_7_Handler
 456 0090 00000000 		.word	EIC_8_Handler
 457 0094 00000000 		.word	EIC_9_Handler
 458 0098 00000000 		.word	EIC_10_Handler
 459 009c 00000000 		.word	EIC_11_Handler
 460 00a0 00000000 		.word	EIC_12_Handler
 461 00a4 00000000 		.word	EIC_13_Handler
 462 00a8 00000000 		.word	EIC_14_Handler
 463 00ac 00000000 		.word	EIC_15_Handler
 464 00b0 00000000 		.word	FREQM_Handler
 465 00b4 00000000 		.word	NVMCTRL_0_Handler
 466 00b8 00000000 		.word	NVMCTRL_1_Handler
 467 00bc 00000000 		.word	DMAC_0_Handler
 468 00c0 00000000 		.word	DMAC_1_Handler
 469 00c4 00000000 		.word	DMAC_2_Handler
 470 00c8 00000000 		.word	DMAC_3_Handler
 471 00cc 00000000 		.word	DMAC_4_Handler
 472 00d0 00000000 		.word	EVSYS_0_Handler
 473 00d4 00000000 		.word	EVSYS_1_Handler
 474 00d8 00000000 		.word	EVSYS_2_Handler
 475 00dc 00000000 		.word	EVSYS_3_Handler
 476 00e0 00000000 		.word	EVSYS_4_Handler
 477 00e4 00000000 		.word	PAC_Handler
 478 00e8 00000000 		.word	TAL_0_Handler
 479 00ec 00000000 		.word	TAL_1_Handler
 480 00f0 00000000 		.word	0
 481 00f4 00000000 		.word	RAMECC_Handler
 482 00f8 00000000 		.word	SERCOM0_0_Handler
 483 00fc 00000000 		.word	SERCOM0_1_Handler
 484 0100 00000000 		.word	SERCOM0_2_Handler
 485 0104 00000000 		.word	SERCOM0_3_Handler
 486 0108 00000000 		.word	SERCOM1_0_Handler
 487 010c 00000000 		.word	SERCOM1_1_Handler
 488 0110 00000000 		.word	SERCOM1_2_Handler
 489 0114 00000000 		.word	SERCOM1_3_Handler
 490 0118 00000000 		.word	SERCOM2_0_Handler
 491 011c 00000000 		.word	SERCOM2_1_Handler
 492 0120 00000000 		.word	SERCOM2_2_Handler
 493 0124 00000000 		.word	SERCOM2_3_Handler
 494 0128 00000000 		.word	SERCOM3_0_Handler
 495 012c 00000000 		.word	SERCOM3_1_Handler
 496 0130 00000000 		.word	SERCOM3_2_Handler
 497 0134 00000000 		.word	SERCOM3_3_Handler
 498 0138 00000000 		.word	SERCOM4_0_Handler
 499 013c 00000000 		.word	SERCOM4_1_Handler
 500 0140 00000000 		.word	SERCOM4_2_Handler
 501 0144 00000000 		.word	SERCOM4_3_Handler
 502 0148 00000000 		.word	SERCOM5_0_Handler
 503 014c 00000000 		.word	SERCOM5_1_Handler
 504 0150 00000000 		.word	SERCOM5_2_Handler
 505 0154 00000000 		.word	SERCOM5_3_Handler
 506 0158 00000000 		.word	0
 507 015c 00000000 		.word	0
 508 0160 00000000 		.word	0
 509 0164 00000000 		.word	0
 510 0168 00000000 		.word	0
 511 016c 00000000 		.word	0
 512 0170 00000000 		.word	0
 513 0174 00000000 		.word	0
 514 0178 00000000 		.word	0
 515 017c 00000000 		.word	0
 516 0180 00000000 		.word	USB_0_Handler
 517 0184 00000000 		.word	USB_1_Handler
 518 0188 00000000 		.word	USB_2_Handler
 519 018c 00000000 		.word	USB_3_Handler
 520 0190 00000000 		.word	0
 521 0194 00000000 		.word	TCC0_0_Handler
 522 0198 00000000 		.word	TCC0_1_Handler
 523 019c 00000000 		.word	TCC0_2_Handler
 524 01a0 00000000 		.word	TCC0_3_Handler
 525 01a4 00000000 		.word	TCC0_4_Handler
 526 01a8 00000000 		.word	TCC0_5_Handler
 527 01ac 00000000 		.word	TCC0_6_Handler
 528 01b0 00000000 		.word	TCC1_0_Handler
 529 01b4 00000000 		.word	TCC1_1_Handler
 530 01b8 00000000 		.word	TCC1_2_Handler
 531 01bc 00000000 		.word	TCC1_3_Handler
 532 01c0 00000000 		.word	TCC1_4_Handler
 533 01c4 00000000 		.word	TCC2_0_Handler
 534 01c8 00000000 		.word	TCC2_1_Handler
 535 01cc 00000000 		.word	TCC2_2_Handler
 536 01d0 00000000 		.word	TCC2_3_Handler
 537 01d4 00000000 		.word	TCC3_0_Handler
 538 01d8 00000000 		.word	TCC3_1_Handler
 539 01dc 00000000 		.word	TCC3_2_Handler
 540 01e0 00000000 		.word	TCC4_0_Handler
 541 01e4 00000000 		.word	TCC4_1_Handler
 542 01e8 00000000 		.word	TCC4_2_Handler
 543 01ec 00000000 		.word	TC0_Handler
 544 01f0 00000000 		.word	TC1_Handler
 545 01f4 00000000 		.word	TC2_Handler
 546 01f8 00000000 		.word	TC3_Handler
 547 01fc 00000000 		.word	TC4_Handler
 548 0200 00000000 		.word	TC5_Handler
 549 0204 00000000 		.word	0
 550 0208 00000000 		.word	0
 551 020c 00000000 		.word	PDEC_0_Handler
 552 0210 00000000 		.word	PDEC_1_Handler
 553 0214 00000000 		.word	PDEC_2_Handler
 554 0218 00000000 		.word	ADC0_0_Handler
 555 021c 00000000 		.word	ADC0_1_Handler
 556 0220 00000000 		.word	ADC1_0_Handler
 557 0224 00000000 		.word	ADC1_1_Handler
 558 0228 00000000 		.word	AC_Handler
 559 022c 00000000 		.word	DAC_0_Handler
 560 0230 00000000 		.word	DAC_1_Handler
 561 0234 00000000 		.word	DAC_2_Handler
 562 0238 00000000 		.word	DAC_3_Handler
 563 023c 00000000 		.word	DAC_4_Handler
 564 0240 00000000 		.word	I2S_Handler
 565 0244 00000000 		.word	PCC_Handler
 566 0248 00000000 		.word	AES_Handler
 567 024c 00000000 		.word	TRNG_Handler
 568 0250 00000000 		.word	ICM_Handler
 569 0254 00000000 		.word	PUKCC_Handler
 570 0258 00000000 		.word	QSPI_Handler
 571 025c 00000000 		.word	SDHC0_Handler
 572 0260 00000000 		.word	0
 573              		.text
 574              	.Letext0:
 575              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 576              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 577              		.file 5 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/samd51j18a.h"
 578              		.file 6 "lib/arm_atsam/packs/arm/cmsis/5.0.1/CMSIS/Include/core_cm4.h"
 579              		.file 7 "lib/arm_atsam/packs/atmel/SAMD51_DFP/1.0.70/include/system_samd51.h"
 580              		.file 8 "tmk_core/protocol/arm_atsam/md_bootloader.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 startup.c
/var/tmp//ccmaRgSw.s:18     .text.Dummy_Handler:0000000000000000 $t
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 Dummy_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SDHC0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 QSPI_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PUKCC_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 ICM_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TRNG_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 AES_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PCC_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 I2S_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DAC_4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DAC_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DAC_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DAC_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DAC_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 AC_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 ADC1_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 ADC1_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 ADC0_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 ADC0_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PDEC_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PDEC_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PDEC_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TC5_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TC4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TC3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TC2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TC1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TC0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC4_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC4_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC4_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC3_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC3_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC3_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC2_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC2_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC2_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC2_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC1_4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC1_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC1_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC1_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC1_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC0_6_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC0_5_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC0_4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC0_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC0_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC0_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TCC0_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 USB_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 USB_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 USB_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 USB_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM5_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM5_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM5_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM5_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM4_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM4_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM4_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM4_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM3_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM3_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM3_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM3_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM2_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM2_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM2_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM2_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM1_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM1_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM1_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM1_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM0_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM0_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM0_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SERCOM0_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 RAMECC_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TAL_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 TAL_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PAC_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EVSYS_4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EVSYS_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EVSYS_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EVSYS_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EVSYS_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DMAC_4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DMAC_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DMAC_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DMAC_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DMAC_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 NVMCTRL_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 NVMCTRL_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 FREQM_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_15_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_14_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_13_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_12_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_11_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_10_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_9_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_8_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_7_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_6_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_5_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 EIC_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 RTC_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 WDT_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SUPC_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SUPC_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 OSC32KCTRL_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 OSCCTRL_4_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 OSCCTRL_3_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 OSCCTRL_2_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 OSCCTRL_1_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 OSCCTRL_0_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 MCLK_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PM_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SysTick_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 PendSV_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 DebugMon_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 SVC_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 UsageFault_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 BusFault_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 MemManage_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 HardFault_Handler
/var/tmp//ccmaRgSw.s:25     .text.Dummy_Handler:0000000000000000 NMI_Handler
/var/tmp//ccmaRgSw.s:302    .text.Reset_Handler:0000000000000000 $t
/var/tmp//ccmaRgSw.s:309    .text.Reset_Handler:0000000000000000 Reset_Handler
/var/tmp//ccmaRgSw.s:404    .text.Reset_Handler:0000000000000054 $d
/var/tmp//ccmaRgSw.s:419    .vectors:0000000000000000 exception_table
/var/tmp//ccmaRgSw.s:416    .vectors:0000000000000000 $d

UNDEFINED SYMBOLS
__libc_init_array
main
_etext
_srelocate
_erelocate
_szero
_ezero
_sfixed
_estack
