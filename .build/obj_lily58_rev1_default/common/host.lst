   1               		.file	"host.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.host_set_driver,"ax",@progbits
  11               	.global	host_set_driver
  13               	host_set_driver:
  14               	.LFB0:
  15               		.file 1 "tmk_core/common/host.c"
   1:tmk_core/common/host.c **** /*
   2:tmk_core/common/host.c **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/host.c **** 
   4:tmk_core/common/host.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/host.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/host.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/host.c **** (at your option) any later version.
   8:tmk_core/common/host.c **** 
   9:tmk_core/common/host.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/host.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/host.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/host.c **** GNU General Public License for more details.
  13:tmk_core/common/host.c **** 
  14:tmk_core/common/host.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/host.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/host.c **** */
  17:tmk_core/common/host.c **** 
  18:tmk_core/common/host.c **** #include <stdint.h>
  19:tmk_core/common/host.c **** //#include <avr/interrupt.h>
  20:tmk_core/common/host.c **** #include "keycode.h"
  21:tmk_core/common/host.c **** #include "host.h"
  22:tmk_core/common/host.c **** #include "util.h"
  23:tmk_core/common/host.c **** #include "debug.h"
  24:tmk_core/common/host.c **** 
  25:tmk_core/common/host.c **** #ifdef NKRO_ENABLE
  26:tmk_core/common/host.c **** #    include "keycode_config.h"
  27:tmk_core/common/host.c **** extern keymap_config_t keymap_config;
  28:tmk_core/common/host.c **** #endif
  29:tmk_core/common/host.c **** 
  30:tmk_core/common/host.c **** static host_driver_t *driver;
  31:tmk_core/common/host.c **** static uint16_t       last_system_report   = 0;
  32:tmk_core/common/host.c **** static uint16_t       last_consumer_report = 0;
  33:tmk_core/common/host.c **** 
  34:tmk_core/common/host.c **** void host_set_driver(host_driver_t *d) { driver = d; }
  16               		.loc 1 34 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 34 0
  24 0000 9093 0000 		sts driver+1,r25
  25 0004 8093 0000 		sts driver,r24
  26               	/* epilogue start */
  27 0008 0895      		ret
  28               		.cfi_endproc
  29               	.LFE0:
  31               		.section	.text.host_get_driver,"ax",@progbits
  32               	.global	host_get_driver
  34               	host_get_driver:
  35               	.LFB1:
  35:tmk_core/common/host.c **** 
  36:tmk_core/common/host.c **** host_driver_t *host_get_driver(void) { return driver; }
  36               		.loc 1 36 0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  42               		.loc 1 36 0
  43 0000 8091 0000 		lds r24,driver
  44 0004 9091 0000 		lds r25,driver+1
  45               	/* epilogue start */
  46 0008 0895      		ret
  47               		.cfi_endproc
  48               	.LFE1:
  50               		.section	.text.host_keyboard_leds,"ax",@progbits
  51               	.global	host_keyboard_leds
  53               	host_keyboard_leds:
  54               	.LFB2:
  37:tmk_core/common/host.c **** 
  38:tmk_core/common/host.c **** uint8_t host_keyboard_leds(void) {
  55               		.loc 1 38 0
  56               		.cfi_startproc
  57               	/* prologue: function */
  58               	/* frame size = 0 */
  59               	/* stack size = 0 */
  60               	.L__stack_usage = 0
  39:tmk_core/common/host.c ****     if (!driver) return 0;
  61               		.loc 1 39 0
  62 0000 E091 0000 		lds r30,driver
  63 0004 F091 0000 		lds r31,driver+1
  64 0008 3097      		sbiw r30,0
  65 000a 01F0      		breq .L4
  40:tmk_core/common/host.c ****     return (*driver->keyboard_leds)();
  66               		.loc 1 40 0
  67 000c 0190      		ld __tmp_reg__,Z+
  68 000e F081      		ld r31,Z
  69 0010 E02D      		mov r30,__tmp_reg__
  70 0012 0994      		ijmp
  71               	.LVL1:
  72               	.L4:
  41:tmk_core/common/host.c **** }
  73               		.loc 1 41 0
  74 0014 80E0      		ldi r24,0
  75               	/* epilogue start */
  76 0016 0895      		ret
  77               		.cfi_endproc
  78               	.LFE2:
  80               		.section	.text.host_keyboard_send,"ax",@progbits
  81               	.global	host_keyboard_send
  83               	host_keyboard_send:
  84               	.LFB3:
  42:tmk_core/common/host.c **** /* send report */
  43:tmk_core/common/host.c **** void host_keyboard_send(report_keyboard_t *report) {
  85               		.loc 1 43 0
  86               		.cfi_startproc
  87               	.LVL2:
  88               	/* prologue: function */
  89               	/* frame size = 0 */
  90               	/* stack size = 0 */
  91               	.L__stack_usage = 0
  44:tmk_core/common/host.c ****     if (!driver) return;
  92               		.loc 1 44 0
  93 0000 E091 0000 		lds r30,driver
  94 0004 F091 0000 		lds r31,driver+1
  95 0008 3097      		sbiw r30,0
  96 000a 01F0      		breq .L5
  45:tmk_core/common/host.c **** #if defined(NKRO_ENABLE) && defined(NKRO_SHARED_EP)
  46:tmk_core/common/host.c ****     if (keyboard_protocol && keymap_config.nkro) {
  47:tmk_core/common/host.c ****         /* The callers of this function assume that report->mods is where mods go in.
  48:tmk_core/common/host.c ****          * But report->nkro.mods can be at a different offset if core keyboard does not have a repo
  49:tmk_core/common/host.c ****          */
  50:tmk_core/common/host.c ****         report->nkro.mods      = report->mods;
  51:tmk_core/common/host.c ****         report->nkro.report_id = REPORT_ID_NKRO;
  52:tmk_core/common/host.c ****     } else
  53:tmk_core/common/host.c **** #endif
  54:tmk_core/common/host.c ****     {
  55:tmk_core/common/host.c **** #ifdef KEYBOARD_SHARED_EP
  56:tmk_core/common/host.c ****         report->report_id = REPORT_ID_KEYBOARD;
  57:tmk_core/common/host.c **** #endif
  58:tmk_core/common/host.c ****     }
  59:tmk_core/common/host.c ****     (*driver->send_keyboard)(report);
  97               		.loc 1 59 0
  98 000c 0280      		ldd __tmp_reg__,Z+2
  99 000e F381      		ldd r31,Z+3
 100 0010 E02D      		mov r30,__tmp_reg__
 101 0012 0994      		ijmp
 102               	.LVL3:
 103               	.L5:
 104               	/* epilogue start */
  60:tmk_core/common/host.c **** 
  61:tmk_core/common/host.c ****     if (debug_keyboard) {
  62:tmk_core/common/host.c ****         dprint("keyboard_report: ");
  63:tmk_core/common/host.c ****         for (uint8_t i = 0; i < KEYBOARD_REPORT_SIZE; i++) {
  64:tmk_core/common/host.c ****             dprintf("%02X ", report->raw[i]);
  65:tmk_core/common/host.c ****         }
  66:tmk_core/common/host.c ****         dprint("\n");
  67:tmk_core/common/host.c ****     }
  68:tmk_core/common/host.c **** }
 105               		.loc 1 68 0
 106 0014 0895      		ret
 107               		.cfi_endproc
 108               	.LFE3:
 110               		.section	.text.host_mouse_send,"ax",@progbits
 111               	.global	host_mouse_send
 113               	host_mouse_send:
 114               	.LFB4:
  69:tmk_core/common/host.c **** 
  70:tmk_core/common/host.c **** void host_mouse_send(report_mouse_t *report) {
 115               		.loc 1 70 0
 116               		.cfi_startproc
 117               	.LVL4:
 118               	/* prologue: function */
 119               	/* frame size = 0 */
 120               	/* stack size = 0 */
 121               	.L__stack_usage = 0
  71:tmk_core/common/host.c ****     if (!driver) return;
 122               		.loc 1 71 0
 123 0000 E091 0000 		lds r30,driver
 124 0004 F091 0000 		lds r31,driver+1
 125 0008 3097      		sbiw r30,0
 126 000a 01F0      		breq .L7
  72:tmk_core/common/host.c **** #ifdef MOUSE_SHARED_EP
  73:tmk_core/common/host.c ****     report->report_id = REPORT_ID_MOUSE;
  74:tmk_core/common/host.c **** #endif
  75:tmk_core/common/host.c ****     (*driver->send_mouse)(report);
 127               		.loc 1 75 0
 128 000c 0480      		ldd __tmp_reg__,Z+4
 129 000e F581      		ldd r31,Z+5
 130 0010 E02D      		mov r30,__tmp_reg__
 131 0012 0994      		ijmp
 132               	.LVL5:
 133               	.L7:
 134               	/* epilogue start */
  76:tmk_core/common/host.c **** }
 135               		.loc 1 76 0
 136 0014 0895      		ret
 137               		.cfi_endproc
 138               	.LFE4:
 140               		.section	.text.host_system_send,"ax",@progbits
 141               	.global	host_system_send
 143               	host_system_send:
 144               	.LFB5:
  77:tmk_core/common/host.c **** 
  78:tmk_core/common/host.c **** void host_system_send(uint16_t report) {
 145               		.loc 1 78 0
 146               		.cfi_startproc
 147               	.LVL6:
 148               	/* prologue: function */
 149               	/* frame size = 0 */
 150               	/* stack size = 0 */
 151               	.L__stack_usage = 0
  79:tmk_core/common/host.c ****     if (report == last_system_report) return;
 152               		.loc 1 79 0
 153 0000 2091 0000 		lds r18,last_system_report
 154 0004 3091 0000 		lds r19,last_system_report+1
 155 0008 2817      		cp r18,r24
 156 000a 3907      		cpc r19,r25
 157 000c 01F0      		breq .L9
  80:tmk_core/common/host.c ****     last_system_report = report;
 158               		.loc 1 80 0
 159 000e 9093 0000 		sts last_system_report+1,r25
 160 0012 8093 0000 		sts last_system_report,r24
  81:tmk_core/common/host.c **** 
  82:tmk_core/common/host.c ****     if (!driver) return;
 161               		.loc 1 82 0
 162 0016 E091 0000 		lds r30,driver
 163 001a F091 0000 		lds r31,driver+1
 164 001e 3097      		sbiw r30,0
 165 0020 01F0      		breq .L9
  83:tmk_core/common/host.c ****     (*driver->send_system)(report);
 166               		.loc 1 83 0
 167 0022 0680      		ldd __tmp_reg__,Z+6
 168 0024 F781      		ldd r31,Z+7
 169 0026 E02D      		mov r30,__tmp_reg__
 170 0028 0994      		ijmp
 171               	.LVL7:
 172               	.L9:
 173               	/* epilogue start */
  84:tmk_core/common/host.c **** }
 174               		.loc 1 84 0
 175 002a 0895      		ret
 176               		.cfi_endproc
 177               	.LFE5:
 179               		.section	.text.host_consumer_send,"ax",@progbits
 180               	.global	host_consumer_send
 182               	host_consumer_send:
 183               	.LFB6:
  85:tmk_core/common/host.c **** 
  86:tmk_core/common/host.c **** void host_consumer_send(uint16_t report) {
 184               		.loc 1 86 0
 185               		.cfi_startproc
 186               	.LVL8:
 187               	/* prologue: function */
 188               	/* frame size = 0 */
 189               	/* stack size = 0 */
 190               	.L__stack_usage = 0
  87:tmk_core/common/host.c ****     if (report == last_consumer_report) return;
 191               		.loc 1 87 0
 192 0000 2091 0000 		lds r18,last_consumer_report
 193 0004 3091 0000 		lds r19,last_consumer_report+1
 194 0008 2817      		cp r18,r24
 195 000a 3907      		cpc r19,r25
 196 000c 01F0      		breq .L16
  88:tmk_core/common/host.c ****     last_consumer_report = report;
 197               		.loc 1 88 0
 198 000e 9093 0000 		sts last_consumer_report+1,r25
 199 0012 8093 0000 		sts last_consumer_report,r24
  89:tmk_core/common/host.c **** 
  90:tmk_core/common/host.c ****     if (!driver) return;
 200               		.loc 1 90 0
 201 0016 E091 0000 		lds r30,driver
 202 001a F091 0000 		lds r31,driver+1
 203 001e 3097      		sbiw r30,0
 204 0020 01F0      		breq .L16
  91:tmk_core/common/host.c ****     (*driver->send_consumer)(report);
 205               		.loc 1 91 0
 206 0022 0084      		ldd __tmp_reg__,Z+8
 207 0024 F185      		ldd r31,Z+9
 208 0026 E02D      		mov r30,__tmp_reg__
 209 0028 0994      		ijmp
 210               	.LVL9:
 211               	.L16:
 212               	/* epilogue start */
  92:tmk_core/common/host.c **** }
 213               		.loc 1 92 0
 214 002a 0895      		ret
 215               		.cfi_endproc
 216               	.LFE6:
 218               		.section	.text.host_last_system_report,"ax",@progbits
 219               	.global	host_last_system_report
 221               	host_last_system_report:
 222               	.LFB7:
  93:tmk_core/common/host.c **** 
  94:tmk_core/common/host.c **** uint16_t host_last_system_report(void) { return last_system_report; }
 223               		.loc 1 94 0
 224               		.cfi_startproc
 225               	/* prologue: function */
 226               	/* frame size = 0 */
 227               	/* stack size = 0 */
 228               	.L__stack_usage = 0
 229               		.loc 1 94 0
 230 0000 8091 0000 		lds r24,last_system_report
 231 0004 9091 0000 		lds r25,last_system_report+1
 232               	/* epilogue start */
 233 0008 0895      		ret
 234               		.cfi_endproc
 235               	.LFE7:
 237               		.section	.text.host_last_consumer_report,"ax",@progbits
 238               	.global	host_last_consumer_report
 240               	host_last_consumer_report:
 241               	.LFB8:
  95:tmk_core/common/host.c **** 
  96:tmk_core/common/host.c **** uint16_t host_last_consumer_report(void) { return last_consumer_report; }
 242               		.loc 1 96 0
 243               		.cfi_startproc
 244               	/* prologue: function */
 245               	/* frame size = 0 */
 246               	/* stack size = 0 */
 247               	.L__stack_usage = 0
 248               		.loc 1 96 0
 249 0000 8091 0000 		lds r24,last_consumer_report
 250 0004 9091 0000 		lds r25,last_consumer_report+1
 251               	/* epilogue start */
 252 0008 0895      		ret
 253               		.cfi_endproc
 254               	.LFE8:
 256               		.section	.bss.last_consumer_report,"aw",@nobits
 259               	last_consumer_report:
 260 0000 0000      		.zero	2
 261               		.section	.bss.last_system_report,"aw",@nobits
 264               	last_system_report:
 265 0000 0000      		.zero	2
 266               		.section	.bss.driver,"aw",@nobits
 269               	driver:
 270 0000 0000      		.zero	2
 271               		.text
 272               	.Letext0:
 273               		.file 2 "/usr/local/Cellar/avr-gcc@7/7.4.0/avr/include/stdint.h"
 274               		.file 3 "tmk_core/common/report.h"
 275               		.file 4 "tmk_core/common/host_driver.h"
 276               		.file 5 "tmk_core/common/host.h"
 277               		.file 6 "tmk_core/common/debug.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 host.c
/var/tmp//ccAWb7Yf.s:2      *ABS*:000000000000003e __SP_H__
/var/tmp//ccAWb7Yf.s:3      *ABS*:000000000000003d __SP_L__
/var/tmp//ccAWb7Yf.s:4      *ABS*:000000000000003f __SREG__
/var/tmp//ccAWb7Yf.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/tmp//ccAWb7Yf.s:6      *ABS*:0000000000000001 __zero_reg__
/var/tmp//ccAWb7Yf.s:13     .text.host_set_driver:0000000000000000 host_set_driver
/var/tmp//ccAWb7Yf.s:269    .bss.driver:0000000000000000 driver
/var/tmp//ccAWb7Yf.s:34     .text.host_get_driver:0000000000000000 host_get_driver
/var/tmp//ccAWb7Yf.s:53     .text.host_keyboard_leds:0000000000000000 host_keyboard_leds
/var/tmp//ccAWb7Yf.s:83     .text.host_keyboard_send:0000000000000000 host_keyboard_send
/var/tmp//ccAWb7Yf.s:113    .text.host_mouse_send:0000000000000000 host_mouse_send
/var/tmp//ccAWb7Yf.s:143    .text.host_system_send:0000000000000000 host_system_send
/var/tmp//ccAWb7Yf.s:264    .bss.last_system_report:0000000000000000 last_system_report
/var/tmp//ccAWb7Yf.s:182    .text.host_consumer_send:0000000000000000 host_consumer_send
/var/tmp//ccAWb7Yf.s:259    .bss.last_consumer_report:0000000000000000 last_consumer_report
/var/tmp//ccAWb7Yf.s:221    .text.host_last_system_report:0000000000000000 host_last_system_report
/var/tmp//ccAWb7Yf.s:240    .text.host_last_consumer_report:0000000000000000 host_last_consumer_report

UNDEFINED SYMBOLS
__do_clear_bss
