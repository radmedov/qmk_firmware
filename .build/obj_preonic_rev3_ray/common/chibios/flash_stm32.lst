   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"flash_stm32.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.FLASH_GetStatus,"ax",%progbits
  16              		.align	1
  17              		.global	FLASH_GetStatus
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	FLASH_GetStatus:
  24              	.LFB280:
  25              		.file 1 "tmk_core/common/chibios/flash_stm32.c"
   1:tmk_core/common/chibios/flash_stm32.c **** /*
   2:tmk_core/common/chibios/flash_stm32.c ****  * This software is experimental and a work in progress.
   3:tmk_core/common/chibios/flash_stm32.c ****  * Under no circumstances should these files be used in relation to any critical system(s).
   4:tmk_core/common/chibios/flash_stm32.c ****  * Use of these files is at your own risk.
   5:tmk_core/common/chibios/flash_stm32.c ****  *
   6:tmk_core/common/chibios/flash_stm32.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
   7:tmk_core/common/chibios/flash_stm32.c ****  * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
   8:tmk_core/common/chibios/flash_stm32.c ****  * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
   9:tmk_core/common/chibios/flash_stm32.c ****  * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  10:tmk_core/common/chibios/flash_stm32.c ****  * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  11:tmk_core/common/chibios/flash_stm32.c ****  * DEALINGS IN THE SOFTWARE.
  12:tmk_core/common/chibios/flash_stm32.c ****  *
  13:tmk_core/common/chibios/flash_stm32.c ****  * This files are free to use from https://github.com/rogerclarkmelbourne/Arduino_STM32 and
  14:tmk_core/common/chibios/flash_stm32.c ****  * https://github.com/leaflabs/libmaple
  15:tmk_core/common/chibios/flash_stm32.c ****  *
  16:tmk_core/common/chibios/flash_stm32.c ****  * Modifications for QMK and STM32F303 by Yiancar
  17:tmk_core/common/chibios/flash_stm32.c ****  */
  18:tmk_core/common/chibios/flash_stm32.c **** 
  19:tmk_core/common/chibios/flash_stm32.c **** #if defined(EEPROM_EMU_STM32F303xC)
  20:tmk_core/common/chibios/flash_stm32.c **** #    define STM32F303xC
  21:tmk_core/common/chibios/flash_stm32.c **** #    include "stm32f3xx.h"
  22:tmk_core/common/chibios/flash_stm32.c **** #elif defined(EEPROM_EMU_STM32F103xB)
  23:tmk_core/common/chibios/flash_stm32.c **** #    define STM32F103xB
  24:tmk_core/common/chibios/flash_stm32.c **** #    include "stm32f1xx.h"
  25:tmk_core/common/chibios/flash_stm32.c **** #elif defined(EEPROM_EMU_STM32F072xB)
  26:tmk_core/common/chibios/flash_stm32.c **** #    define STM32F072xB
  27:tmk_core/common/chibios/flash_stm32.c **** #    include "stm32f0xx.h"
  28:tmk_core/common/chibios/flash_stm32.c **** #else
  29:tmk_core/common/chibios/flash_stm32.c **** #    error "not implemented."
  30:tmk_core/common/chibios/flash_stm32.c **** #endif
  31:tmk_core/common/chibios/flash_stm32.c **** 
  32:tmk_core/common/chibios/flash_stm32.c **** #include "flash_stm32.h"
  33:tmk_core/common/chibios/flash_stm32.c **** 
  34:tmk_core/common/chibios/flash_stm32.c **** #if defined(EEPROM_EMU_STM32F103xB)
  35:tmk_core/common/chibios/flash_stm32.c **** #    define FLASH_SR_WRPERR FLASH_SR_WRPRTERR
  36:tmk_core/common/chibios/flash_stm32.c **** #endif
  37:tmk_core/common/chibios/flash_stm32.c **** 
  38:tmk_core/common/chibios/flash_stm32.c **** /* Delay definition */
  39:tmk_core/common/chibios/flash_stm32.c **** #define EraseTimeout ((uint32_t)0x00000FFF)
  40:tmk_core/common/chibios/flash_stm32.c **** #define ProgramTimeout ((uint32_t)0x0000001F)
  41:tmk_core/common/chibios/flash_stm32.c **** 
  42:tmk_core/common/chibios/flash_stm32.c **** #define ASSERT(exp) (void)((0))
  43:tmk_core/common/chibios/flash_stm32.c **** 
  44:tmk_core/common/chibios/flash_stm32.c **** /**
  45:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Inserts a time delay.
  46:tmk_core/common/chibios/flash_stm32.c ****  * @param  None
  47:tmk_core/common/chibios/flash_stm32.c ****  * @retval None
  48:tmk_core/common/chibios/flash_stm32.c ****  */
  49:tmk_core/common/chibios/flash_stm32.c **** static void delay(void) {
  50:tmk_core/common/chibios/flash_stm32.c ****     __IO uint32_t i = 0;
  51:tmk_core/common/chibios/flash_stm32.c ****     for (i = 0xFF; i != 0; i--) {
  52:tmk_core/common/chibios/flash_stm32.c ****     }
  53:tmk_core/common/chibios/flash_stm32.c **** }
  54:tmk_core/common/chibios/flash_stm32.c **** 
  55:tmk_core/common/chibios/flash_stm32.c **** /**
  56:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Returns the FLASH Status.
  57:tmk_core/common/chibios/flash_stm32.c ****  * @param  None
  58:tmk_core/common/chibios/flash_stm32.c ****  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
  59:tmk_core/common/chibios/flash_stm32.c ****  *   FLASH_ERROR_WRP or FLASH_COMPLETE
  60:tmk_core/common/chibios/flash_stm32.c ****  */
  61:tmk_core/common/chibios/flash_stm32.c **** FLASH_Status FLASH_GetStatus(void) {
  26              		.loc 1 61 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  62:tmk_core/common/chibios/flash_stm32.c ****     if ((FLASH->SR & FLASH_SR_BSY) == FLASH_SR_BSY) return FLASH_BUSY;
  31              		.loc 1 62 0
  32 0000 0B4B     		ldr	r3, .L7
  33 0002 DA68     		ldr	r2, [r3, #12]
  34 0004 D207     		lsls	r2, r2, #31
  35 0006 0CD4     		bmi	.L3
  63:tmk_core/common/chibios/flash_stm32.c **** 
  64:tmk_core/common/chibios/flash_stm32.c ****     if ((FLASH->SR & FLASH_SR_PGERR) != 0) return FLASH_ERROR_PG;
  36              		.loc 1 64 0
  37 0008 DA68     		ldr	r2, [r3, #12]
  38 000a 5107     		lsls	r1, r2, #29
  39 000c 0BD4     		bmi	.L4
  65:tmk_core/common/chibios/flash_stm32.c **** 
  66:tmk_core/common/chibios/flash_stm32.c ****     if ((FLASH->SR & FLASH_SR_WRPERR) != 0) return FLASH_ERROR_WRP;
  40              		.loc 1 66 0
  41 000e DA68     		ldr	r2, [r3, #12]
  42 0010 D206     		lsls	r2, r2, #27
  43 0012 0AD4     		bmi	.L5
  44              	.LBB4:
  45              	.LBB5:
  67:tmk_core/common/chibios/flash_stm32.c **** 
  68:tmk_core/common/chibios/flash_stm32.c ****     if ((FLASH->SR & FLASH_OBR_OPTERR) != 0) return FLASH_ERROR_OPT;
  46              		.loc 1 68 0
  47 0014 DB68     		ldr	r3, [r3, #12]
  48 0016 13F0010F 		tst	r3, #1
  69:tmk_core/common/chibios/flash_stm32.c **** 
  70:tmk_core/common/chibios/flash_stm32.c ****     return FLASH_COMPLETE;
  49              		.loc 1 70 0
  50 001a 14BF     		ite	ne
  51 001c 0420     		movne	r0, #4
  52 001e 0520     		moveq	r0, #5
  53 0020 7047     		bx	lr
  54              	.L3:
  55              	.LBE5:
  56              	.LBE4:
  62:tmk_core/common/chibios/flash_stm32.c **** 
  57              		.loc 1 62 0
  58 0022 0120     		movs	r0, #1
  59 0024 7047     		bx	lr
  60              	.L4:
  64:tmk_core/common/chibios/flash_stm32.c **** 
  61              		.loc 1 64 0
  62 0026 0220     		movs	r0, #2
  63 0028 7047     		bx	lr
  64              	.L5:
  66:tmk_core/common/chibios/flash_stm32.c **** 
  65              		.loc 1 66 0
  66 002a 0320     		movs	r0, #3
  71:tmk_core/common/chibios/flash_stm32.c **** }
  67              		.loc 1 71 0
  68 002c 7047     		bx	lr
  69              	.L8:
  70 002e 00BF     		.align	2
  71              	.L7:
  72 0030 00200240 		.word	1073881088
  73              		.cfi_endproc
  74              	.LFE280:
  76              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
  77              		.align	1
  78              		.global	FLASH_WaitForLastOperation
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	FLASH_WaitForLastOperation:
  85              	.LFB281:
  72:tmk_core/common/chibios/flash_stm32.c **** 
  73:tmk_core/common/chibios/flash_stm32.c **** /**
  74:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Waits for a Flash operation to complete or a TIMEOUT to occur.
  75:tmk_core/common/chibios/flash_stm32.c ****  * @param  Timeout: FLASH progamming Timeout
  76:tmk_core/common/chibios/flash_stm32.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  77:tmk_core/common/chibios/flash_stm32.c ****  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  78:tmk_core/common/chibios/flash_stm32.c ****  */
  79:tmk_core/common/chibios/flash_stm32.c **** FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout) {
  86              		.loc 1 79 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL0:
  91 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
  92              		.cfi_def_cfa_offset 24
  93              		.cfi_offset 4, -16
  94              		.cfi_offset 5, -12
  95              		.cfi_offset 6, -8
  96              		.cfi_offset 14, -4
  97              		.loc 1 79 0
  98 0002 0446     		mov	r4, r0
  80:tmk_core/common/chibios/flash_stm32.c ****     FLASH_Status status;
  81:tmk_core/common/chibios/flash_stm32.c **** 
  82:tmk_core/common/chibios/flash_stm32.c ****     /* Check for the Flash Status */
  83:tmk_core/common/chibios/flash_stm32.c ****     status = FLASH_GetStatus();
  99              		.loc 1 83 0
 100 0004 FFF7FEFF 		bl	FLASH_GetStatus
 101              	.LVL1:
 102              	.LBB8:
 103              	.LBB9:
  50:tmk_core/common/chibios/flash_stm32.c ****     for (i = 0xFF; i != 0; i--) {
 104              		.loc 1 50 0
 105 0008 0025     		movs	r5, #0
  51:tmk_core/common/chibios/flash_stm32.c ****     }
 106              		.loc 1 51 0
 107 000a FF26     		movs	r6, #255
 108              	.L10:
 109              	.LBE9:
 110              	.LBE8:
  84:tmk_core/common/chibios/flash_stm32.c ****     /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  85:tmk_core/common/chibios/flash_stm32.c ****     while ((status == FLASH_BUSY) && (Timeout != 0x00)) {
 111              		.loc 1 85 0
 112 000c 0128     		cmp	r0, #1
 113 000e 0FD1     		bne	.L13
 114              		.loc 1 85 0 is_stmt 0 discriminator 1
 115 0010 14B9     		cbnz	r4, .L14
  86:tmk_core/common/chibios/flash_stm32.c ****         delay();
  87:tmk_core/common/chibios/flash_stm32.c ****         status = FLASH_GetStatus();
  88:tmk_core/common/chibios/flash_stm32.c ****         Timeout--;
  89:tmk_core/common/chibios/flash_stm32.c ****     }
  90:tmk_core/common/chibios/flash_stm32.c ****     if (Timeout == 0) status = FLASH_TIMEOUT;
 116              		.loc 1 90 0 is_stmt 1
 117 0012 0620     		movs	r0, #6
 118              	.LVL2:
 119              	.L15:
  91:tmk_core/common/chibios/flash_stm32.c ****     /* Return the operation status */
  92:tmk_core/common/chibios/flash_stm32.c ****     return status;
  93:tmk_core/common/chibios/flash_stm32.c **** }
 120              		.loc 1 93 0
 121 0014 02B0     		add	sp, sp, #8
 122              		.cfi_remember_state
 123              		.cfi_def_cfa_offset 16
 124              		@ sp needed
 125 0016 70BD     		pop	{r4, r5, r6, pc}
 126              	.LVL3:
 127              	.L14:
 128              		.cfi_restore_state
 129              	.LBB12:
 130              	.LBB10:
  50:tmk_core/common/chibios/flash_stm32.c ****     for (i = 0xFF; i != 0; i--) {
 131              		.loc 1 50 0
 132 0018 0195     		str	r5, [sp, #4]
  51:tmk_core/common/chibios/flash_stm32.c ****     }
 133              		.loc 1 51 0
 134 001a 0196     		str	r6, [sp, #4]
 135              	.L11:
 136 001c 019B     		ldr	r3, [sp, #4]
 137 001e 1BB9     		cbnz	r3, .L12
 138              	.LBE10:
 139              	.LBE12:
  87:tmk_core/common/chibios/flash_stm32.c ****         Timeout--;
 140              		.loc 1 87 0
 141 0020 FFF7FEFF 		bl	FLASH_GetStatus
 142              	.LVL4:
  88:tmk_core/common/chibios/flash_stm32.c ****     }
 143              		.loc 1 88 0
 144 0024 013C     		subs	r4, r4, #1
 145              	.LVL5:
 146 0026 F1E7     		b	.L10
 147              	.L12:
 148              	.LBB13:
 149              	.LBB11:
  51:tmk_core/common/chibios/flash_stm32.c ****     }
 150              		.loc 1 51 0
 151 0028 019B     		ldr	r3, [sp, #4]
 152 002a 013B     		subs	r3, r3, #1
 153 002c 0193     		str	r3, [sp, #4]
 154 002e F5E7     		b	.L11
 155              	.L13:
 156              	.LBE11:
 157              	.LBE13:
  90:tmk_core/common/chibios/flash_stm32.c ****     /* Return the operation status */
 158              		.loc 1 90 0
 159 0030 002C     		cmp	r4, #0
 160 0032 08BF     		it	eq
 161 0034 0620     		moveq	r0, #6
 162              	.LVL6:
 163 0036 EDE7     		b	.L15
 164              		.cfi_endproc
 165              	.LFE281:
 167              		.section	.text.FLASH_ErasePage,"ax",%progbits
 168              		.align	1
 169              		.global	FLASH_ErasePage
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu softvfp
 175              	FLASH_ErasePage:
 176              	.LFB282:
  94:tmk_core/common/chibios/flash_stm32.c **** 
  95:tmk_core/common/chibios/flash_stm32.c **** /**
  96:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Erases a specified FLASH page.
  97:tmk_core/common/chibios/flash_stm32.c ****  * @param  Page_Address: The page address to be erased.
  98:tmk_core/common/chibios/flash_stm32.c ****  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
  99:tmk_core/common/chibios/flash_stm32.c ****  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 100:tmk_core/common/chibios/flash_stm32.c ****  */
 101:tmk_core/common/chibios/flash_stm32.c **** FLASH_Status FLASH_ErasePage(uint32_t Page_Address) {
 177              		.loc 1 101 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              	.LVL7:
 182 0000 38B5     		push	{r3, r4, r5, lr}
 183              		.cfi_def_cfa_offset 16
 184              		.cfi_offset 3, -16
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
 188              		.loc 1 101 0
 189 0002 0546     		mov	r5, r0
 102:tmk_core/common/chibios/flash_stm32.c ****     FLASH_Status status = FLASH_COMPLETE;
 103:tmk_core/common/chibios/flash_stm32.c ****     /* Check the parameters */
 104:tmk_core/common/chibios/flash_stm32.c ****     ASSERT(IS_FLASH_ADDRESS(Page_Address));
 105:tmk_core/common/chibios/flash_stm32.c ****     /* Wait for last operation to be completed */
 106:tmk_core/common/chibios/flash_stm32.c ****     status = FLASH_WaitForLastOperation(EraseTimeout);
 190              		.loc 1 106 0
 191 0004 40F6FF70 		movw	r0, #4095
 192              	.LVL8:
 193 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 194              	.LVL9:
 107:tmk_core/common/chibios/flash_stm32.c **** 
 108:tmk_core/common/chibios/flash_stm32.c ****     if (status == FLASH_COMPLETE) {
 195              		.loc 1 108 0
 196 000c 0528     		cmp	r0, #5
 197 000e 15D1     		bne	.L18
 109:tmk_core/common/chibios/flash_stm32.c ****         /* if the previous operation is completed, proceed to erase the page */
 110:tmk_core/common/chibios/flash_stm32.c ****         FLASH->CR |= FLASH_CR_PER;
 198              		.loc 1 110 0
 199 0010 0B4C     		ldr	r4, .L23
 200 0012 2369     		ldr	r3, [r4, #16]
 201 0014 43F00203 		orr	r3, r3, #2
 202 0018 2361     		str	r3, [r4, #16]
 111:tmk_core/common/chibios/flash_stm32.c ****         FLASH->AR = Page_Address;
 203              		.loc 1 111 0
 204 001a 6561     		str	r5, [r4, #20]
 112:tmk_core/common/chibios/flash_stm32.c ****         FLASH->CR |= FLASH_CR_STRT;
 205              		.loc 1 112 0
 206 001c 2369     		ldr	r3, [r4, #16]
 207 001e 43F04003 		orr	r3, r3, #64
 208 0022 2361     		str	r3, [r4, #16]
 113:tmk_core/common/chibios/flash_stm32.c **** 
 114:tmk_core/common/chibios/flash_stm32.c ****         /* Wait for last operation to be completed */
 115:tmk_core/common/chibios/flash_stm32.c ****         status = FLASH_WaitForLastOperation(EraseTimeout);
 209              		.loc 1 115 0
 210 0024 40F6FF70 		movw	r0, #4095
 211              	.LVL10:
 212 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 213              	.LVL11:
 116:tmk_core/common/chibios/flash_stm32.c ****         if (status != FLASH_TIMEOUT) {
 214              		.loc 1 116 0
 215 002c 0628     		cmp	r0, #6
 117:tmk_core/common/chibios/flash_stm32.c ****             /* if the erase operation is completed, disable the PER Bit */
 118:tmk_core/common/chibios/flash_stm32.c ****             FLASH->CR &= ~FLASH_CR_PER;
 216              		.loc 1 118 0
 217 002e 1EBF     		ittt	ne
 218 0030 2369     		ldrne	r3, [r4, #16]
 219 0032 23F00203 		bicne	r3, r3, #2
 220 0036 2361     		strne	r3, [r4, #16]
 119:tmk_core/common/chibios/flash_stm32.c ****         }
 120:tmk_core/common/chibios/flash_stm32.c ****         FLASH->SR = (FLASH_SR_EOP | FLASH_SR_PGERR | FLASH_SR_WRPERR);
 221              		.loc 1 120 0
 222 0038 3423     		movs	r3, #52
 223 003a E360     		str	r3, [r4, #12]
 224              	.L18:
 121:tmk_core/common/chibios/flash_stm32.c ****     }
 122:tmk_core/common/chibios/flash_stm32.c ****     /* Return the Erase Status */
 123:tmk_core/common/chibios/flash_stm32.c ****     return status;
 124:tmk_core/common/chibios/flash_stm32.c **** }
 225              		.loc 1 124 0
 226 003c 38BD     		pop	{r3, r4, r5, pc}
 227              	.LVL12:
 228              	.L24:
 229 003e 00BF     		.align	2
 230              	.L23:
 231 0040 00200240 		.word	1073881088
 232              		.cfi_endproc
 233              	.LFE282:
 235              		.section	.text.FLASH_ProgramHalfWord,"ax",%progbits
 236              		.align	1
 237              		.global	FLASH_ProgramHalfWord
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu softvfp
 243              	FLASH_ProgramHalfWord:
 244              	.LFB283:
 125:tmk_core/common/chibios/flash_stm32.c **** 
 126:tmk_core/common/chibios/flash_stm32.c **** /**
 127:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Programs a half word at a specified address.
 128:tmk_core/common/chibios/flash_stm32.c ****  * @param  Address: specifies the address to be programmed.
 129:tmk_core/common/chibios/flash_stm32.c ****  * @param  Data: specifies the data to be programmed.
 130:tmk_core/common/chibios/flash_stm32.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 131:tmk_core/common/chibios/flash_stm32.c ****  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 132:tmk_core/common/chibios/flash_stm32.c ****  */
 133:tmk_core/common/chibios/flash_stm32.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data) {
 245              		.loc 1 133 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL13:
 134:tmk_core/common/chibios/flash_stm32.c ****     FLASH_Status status = FLASH_BAD_ADDRESS;
 135:tmk_core/common/chibios/flash_stm32.c **** 
 136:tmk_core/common/chibios/flash_stm32.c ****     if (IS_FLASH_ADDRESS(Address)) {
 250              		.loc 1 136 0
 251 0000 104B     		ldr	r3, .L32
 252 0002 00F17842 		add	r2, r0, #-134217728
 253 0006 9A42     		cmp	r2, r3
 133:tmk_core/common/chibios/flash_stm32.c ****     FLASH_Status status = FLASH_BAD_ADDRESS;
 254              		.loc 1 133 0
 255 0008 70B5     		push	{r4, r5, r6, lr}
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 6, -8
 260              		.cfi_offset 14, -4
 133:tmk_core/common/chibios/flash_stm32.c ****     FLASH_Status status = FLASH_BAD_ADDRESS;
 261              		.loc 1 133 0
 262 000a 0546     		mov	r5, r0
 263 000c 0E46     		mov	r6, r1
 264              		.loc 1 136 0
 265 000e 16D8     		bhi	.L28
 137:tmk_core/common/chibios/flash_stm32.c ****         /* Wait for last operation to be completed */
 138:tmk_core/common/chibios/flash_stm32.c ****         status = FLASH_WaitForLastOperation(ProgramTimeout);
 266              		.loc 1 138 0
 267 0010 1F20     		movs	r0, #31
 268              	.LVL14:
 269 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 270              	.LVL15:
 139:tmk_core/common/chibios/flash_stm32.c ****         if (status == FLASH_COMPLETE) {
 271              		.loc 1 139 0
 272 0016 0528     		cmp	r0, #5
 273 0018 10D1     		bne	.L26
 140:tmk_core/common/chibios/flash_stm32.c ****             /* if the previous operation is completed, proceed to program the new data */
 141:tmk_core/common/chibios/flash_stm32.c ****             FLASH->CR |= FLASH_CR_PG;
 274              		.loc 1 141 0
 275 001a 0B4C     		ldr	r4, .L32+4
 276 001c 2369     		ldr	r3, [r4, #16]
 277 001e 43F00103 		orr	r3, r3, #1
 278 0022 2361     		str	r3, [r4, #16]
 142:tmk_core/common/chibios/flash_stm32.c ****             *(__IO uint16_t*)Address = Data;
 143:tmk_core/common/chibios/flash_stm32.c ****             /* Wait for last operation to be completed */
 144:tmk_core/common/chibios/flash_stm32.c ****             status = FLASH_WaitForLastOperation(ProgramTimeout);
 279              		.loc 1 144 0
 280 0024 1F20     		movs	r0, #31
 281              	.LVL16:
 142:tmk_core/common/chibios/flash_stm32.c ****             *(__IO uint16_t*)Address = Data;
 282              		.loc 1 142 0
 283 0026 2E80     		strh	r6, [r5]	@ movhi
 284              		.loc 1 144 0
 285 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 286              	.LVL17:
 145:tmk_core/common/chibios/flash_stm32.c ****             if (status != FLASH_TIMEOUT) {
 287              		.loc 1 145 0
 288 002c 0628     		cmp	r0, #6
 146:tmk_core/common/chibios/flash_stm32.c ****                 /* if the program operation is completed, disable the PG Bit */
 147:tmk_core/common/chibios/flash_stm32.c ****                 FLASH->CR &= ~FLASH_CR_PG;
 289              		.loc 1 147 0
 290 002e 1EBF     		ittt	ne
 291 0030 2369     		ldrne	r3, [r4, #16]
 292 0032 23F00103 		bicne	r3, r3, #1
 293 0036 2361     		strne	r3, [r4, #16]
 148:tmk_core/common/chibios/flash_stm32.c ****             }
 149:tmk_core/common/chibios/flash_stm32.c ****             FLASH->SR = (FLASH_SR_EOP | FLASH_SR_PGERR | FLASH_SR_WRPERR);
 294              		.loc 1 149 0
 295 0038 3423     		movs	r3, #52
 296 003a E360     		str	r3, [r4, #12]
 297              	.LVL18:
 298              	.L26:
 150:tmk_core/common/chibios/flash_stm32.c ****         }
 151:tmk_core/common/chibios/flash_stm32.c ****     }
 152:tmk_core/common/chibios/flash_stm32.c ****     return status;
 153:tmk_core/common/chibios/flash_stm32.c **** }
 299              		.loc 1 153 0
 300 003c 70BD     		pop	{r4, r5, r6, pc}
 301              	.LVL19:
 302              	.L28:
 134:tmk_core/common/chibios/flash_stm32.c **** 
 303              		.loc 1 134 0
 304 003e 0720     		movs	r0, #7
 305              	.LVL20:
 306 0040 FCE7     		b	.L26
 307              	.L33:
 308 0042 00BF     		.align	2
 309              	.L32:
 310 0044 FEFF0700 		.word	524286
 311 0048 00200240 		.word	1073881088
 312              		.cfi_endproc
 313              	.LFE283:
 315              		.section	.text.FLASH_Unlock,"ax",%progbits
 316              		.align	1
 317              		.global	FLASH_Unlock
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu softvfp
 323              	FLASH_Unlock:
 324              	.LFB284:
 154:tmk_core/common/chibios/flash_stm32.c **** 
 155:tmk_core/common/chibios/flash_stm32.c **** /**
 156:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Unlocks the FLASH Program Erase Controller.
 157:tmk_core/common/chibios/flash_stm32.c ****  * @param  None
 158:tmk_core/common/chibios/flash_stm32.c ****  * @retval None
 159:tmk_core/common/chibios/flash_stm32.c ****  */
 160:tmk_core/common/chibios/flash_stm32.c **** void FLASH_Unlock(void) {
 325              		.loc 1 160 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 161:tmk_core/common/chibios/flash_stm32.c ****     /* Authorize the FPEC Access */
 162:tmk_core/common/chibios/flash_stm32.c ****     FLASH->KEYR = FLASH_KEY1;
 330              		.loc 1 162 0
 331 0000 034B     		ldr	r3, .L35
 332 0002 044A     		ldr	r2, .L35+4
 333 0004 5A60     		str	r2, [r3, #4]
 163:tmk_core/common/chibios/flash_stm32.c ****     FLASH->KEYR = FLASH_KEY2;
 334              		.loc 1 163 0
 335 0006 02F18832 		add	r2, r2, #-2004318072
 336 000a 5A60     		str	r2, [r3, #4]
 164:tmk_core/common/chibios/flash_stm32.c **** }
 337              		.loc 1 164 0
 338 000c 7047     		bx	lr
 339              	.L36:
 340 000e 00BF     		.align	2
 341              	.L35:
 342 0010 00200240 		.word	1073881088
 343 0014 23016745 		.word	1164378403
 344              		.cfi_endproc
 345              	.LFE284:
 347              		.section	.text.FLASH_Lock,"ax",%progbits
 348              		.align	1
 349              		.global	FLASH_Lock
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu softvfp
 355              	FLASH_Lock:
 356              	.LFB285:
 165:tmk_core/common/chibios/flash_stm32.c **** 
 166:tmk_core/common/chibios/flash_stm32.c **** /**
 167:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Locks the FLASH Program Erase Controller.
 168:tmk_core/common/chibios/flash_stm32.c ****  * @param  None
 169:tmk_core/common/chibios/flash_stm32.c ****  * @retval None
 170:tmk_core/common/chibios/flash_stm32.c ****  */
 171:tmk_core/common/chibios/flash_stm32.c **** void FLASH_Lock(void) {
 357              		.loc 1 171 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 172:tmk_core/common/chibios/flash_stm32.c ****     /* Set the Lock Bit to lock the FPEC and the FCR */
 173:tmk_core/common/chibios/flash_stm32.c ****     FLASH->CR |= FLASH_CR_LOCK;
 362              		.loc 1 173 0
 363 0000 024A     		ldr	r2, .L38
 364 0002 1369     		ldr	r3, [r2, #16]
 365 0004 43F08003 		orr	r3, r3, #128
 366 0008 1361     		str	r3, [r2, #16]
 174:tmk_core/common/chibios/flash_stm32.c **** }
 367              		.loc 1 174 0
 368 000a 7047     		bx	lr
 369              	.L39:
 370              		.align	2
 371              	.L38:
 372 000c 00200240 		.word	1073881088
 373              		.cfi_endproc
 374              	.LFE285:
 376              		.section	.text.FLASH_ClearFlag,"ax",%progbits
 377              		.align	1
 378              		.global	FLASH_ClearFlag
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 384              	FLASH_ClearFlag:
 385              	.LFB286:
 175:tmk_core/common/chibios/flash_stm32.c **** 
 176:tmk_core/common/chibios/flash_stm32.c **** /**
 177:tmk_core/common/chibios/flash_stm32.c ****  * @brief  Clears the FLASH's pending flags.
 178:tmk_core/common/chibios/flash_stm32.c ****  * @param  FLASH_FLAG: specifies the FLASH flags to clear.
 179:tmk_core/common/chibios/flash_stm32.c ****  *   This parameter can be any combination of the following values:
 180:tmk_core/common/chibios/flash_stm32.c ****  *     @arg FLASH_FLAG_PGERR: FLASH Programming error flag flag
 181:tmk_core/common/chibios/flash_stm32.c ****  *     @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag
 182:tmk_core/common/chibios/flash_stm32.c ****  *     @arg FLASH_FLAG_EOP: FLASH End of Programming flag
 183:tmk_core/common/chibios/flash_stm32.c ****  * @retval None
 184:tmk_core/common/chibios/flash_stm32.c ****  */
 185:tmk_core/common/chibios/flash_stm32.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG) {
 386              		.loc 1 185 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              	.LVL21:
 186:tmk_core/common/chibios/flash_stm32.c ****     /* Clear the flags */
 187:tmk_core/common/chibios/flash_stm32.c ****     FLASH->SR = FLASH_FLAG;
 392              		.loc 1 187 0
 393 0000 014B     		ldr	r3, .L41
 394 0002 D860     		str	r0, [r3, #12]
 188:tmk_core/common/chibios/flash_stm32.c **** }
 395              		.loc 1 188 0
 396 0004 7047     		bx	lr
 397              	.L42:
 398 0006 00BF     		.align	2
 399              	.L41:
 400 0008 00200240 		.word	1073881088
 401              		.cfi_endproc
 402              	.LFE286:
 404              		.text
 405              	.Letext0:
 406              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 407              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 408              		.file 4 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 409              		.file 5 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 410              		.file 6 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 411              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 412              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 413              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 414              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 415              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 416              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 417              		.file 13 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 418              		.file 14 "./lib/chibios/os/rt/include/chtm.h"
 419              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 420              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 421              		.file 17 "./lib/chibios/os/rt/include/chsys.h"
 422              		.file 18 "./lib/chibios/os/rt/include/chregistry.h"
 423              		.file 19 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 424              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 425              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 426              		.file 22 "./lib/chibios/os/hal/include/hal_dac.h"
 427              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 428              		.file 24 "./lib/chibios/os/hal/include/hal_gpt.h"
 429              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 430              		.file 26 "./lib/chibios/os/hal/include/hal_i2c.h"
 431              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 432              		.file 28 "./lib/chibios/os/hal/include/hal_pwm.h"
 433              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 434              		.file 30 "./lib/chibios/os/hal/include/hal_usb.h"
 435              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 436              		.file 32 "tmk_core/common/chibios/flash_stm32.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 flash_stm32.c
/var/tmp//cccyvxsY.s:16     .text.FLASH_GetStatus:0000000000000000 $t
/var/tmp//cccyvxsY.s:23     .text.FLASH_GetStatus:0000000000000000 FLASH_GetStatus
/var/tmp//cccyvxsY.s:72     .text.FLASH_GetStatus:0000000000000030 $d
/var/tmp//cccyvxsY.s:77     .text.FLASH_WaitForLastOperation:0000000000000000 $t
/var/tmp//cccyvxsY.s:84     .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
/var/tmp//cccyvxsY.s:168    .text.FLASH_ErasePage:0000000000000000 $t
/var/tmp//cccyvxsY.s:175    .text.FLASH_ErasePage:0000000000000000 FLASH_ErasePage
/var/tmp//cccyvxsY.s:231    .text.FLASH_ErasePage:0000000000000040 $d
/var/tmp//cccyvxsY.s:236    .text.FLASH_ProgramHalfWord:0000000000000000 $t
/var/tmp//cccyvxsY.s:243    .text.FLASH_ProgramHalfWord:0000000000000000 FLASH_ProgramHalfWord
/var/tmp//cccyvxsY.s:310    .text.FLASH_ProgramHalfWord:0000000000000044 $d
/var/tmp//cccyvxsY.s:316    .text.FLASH_Unlock:0000000000000000 $t
/var/tmp//cccyvxsY.s:323    .text.FLASH_Unlock:0000000000000000 FLASH_Unlock
/var/tmp//cccyvxsY.s:342    .text.FLASH_Unlock:0000000000000010 $d
/var/tmp//cccyvxsY.s:348    .text.FLASH_Lock:0000000000000000 $t
/var/tmp//cccyvxsY.s:355    .text.FLASH_Lock:0000000000000000 FLASH_Lock
/var/tmp//cccyvxsY.s:372    .text.FLASH_Lock:000000000000000c $d
/var/tmp//cccyvxsY.s:377    .text.FLASH_ClearFlag:0000000000000000 $t
/var/tmp//cccyvxsY.s:384    .text.FLASH_ClearFlag:0000000000000000 FLASH_ClearFlag
/var/tmp//cccyvxsY.s:400    .text.FLASH_ClearFlag:0000000000000008 $d

NO UNDEFINED SYMBOLS
