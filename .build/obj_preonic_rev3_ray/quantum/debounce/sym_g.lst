   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"sym_g.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.debounce_init,"ax",%progbits
  16              		.align	1
  17              		.global	debounce_init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	debounce_init:
  24              	.LFB287:
  25              		.file 1 "quantum/debounce/sym_g.c"
   1:quantum/debounce/sym_g.c **** /*
   2:quantum/debounce/sym_g.c **** Copyright 2017 Alex Ong<the.onga@gmail.com>
   3:quantum/debounce/sym_g.c **** This program is free software: you can redistribute it and/or modify
   4:quantum/debounce/sym_g.c **** it under the terms of the GNU General Public License as published by
   5:quantum/debounce/sym_g.c **** the Free Software Foundation, either version 2 of the License, or
   6:quantum/debounce/sym_g.c **** (at your option) any later version.
   7:quantum/debounce/sym_g.c **** This program is distributed in the hope that it will be useful,
   8:quantum/debounce/sym_g.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
   9:quantum/debounce/sym_g.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  10:quantum/debounce/sym_g.c **** GNU General Public License for more details.
  11:quantum/debounce/sym_g.c **** You should have received a copy of the GNU General Public License
  12:quantum/debounce/sym_g.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  13:quantum/debounce/sym_g.c **** */
  14:quantum/debounce/sym_g.c **** 
  15:quantum/debounce/sym_g.c **** /*
  16:quantum/debounce/sym_g.c **** Basic global debounce algorithm. Used in 99% of keyboards at time of implementation
  17:quantum/debounce/sym_g.c **** When no state changes have occured for DEBOUNCE milliseconds, we push the state.
  18:quantum/debounce/sym_g.c **** */
  19:quantum/debounce/sym_g.c **** #include "matrix.h"
  20:quantum/debounce/sym_g.c **** #include "timer.h"
  21:quantum/debounce/sym_g.c **** #include "quantum.h"
  22:quantum/debounce/sym_g.c **** #ifndef DEBOUNCE
  23:quantum/debounce/sym_g.c **** #    define DEBOUNCE 5
  24:quantum/debounce/sym_g.c **** #endif
  25:quantum/debounce/sym_g.c **** 
  26:quantum/debounce/sym_g.c **** void        debounce_init(uint8_t num_rows) {}
  26              		.loc 1 26 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              		.loc 1 26 0
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE287:
  37              		.section	.text.debounce,"ax",%progbits
  38              		.align	1
  39              		.global	debounce
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	debounce:
  46              	.LFB288:
  27:quantum/debounce/sym_g.c **** static bool debouncing = false;
  28:quantum/debounce/sym_g.c **** 
  29:quantum/debounce/sym_g.c **** #if DEBOUNCE > 0
  30:quantum/debounce/sym_g.c **** static uint16_t debouncing_time;
  31:quantum/debounce/sym_g.c **** void            debounce(matrix_row_t raw[], matrix_row_t cooked[], uint8_t num_rows, bool changed)
  47              		.loc 1 31 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              	.LVL1:
  52 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  53              		.cfi_def_cfa_offset 24
  54              		.cfi_offset 3, -24
  55              		.cfi_offset 4, -20
  56              		.cfi_offset 5, -16
  57              		.cfi_offset 6, -12
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60              		.loc 1 31 0
  61 0002 0646     		mov	r6, r0
  62 0004 0F46     		mov	r7, r1
  63 0006 1546     		mov	r5, r2
  64 0008 0D4C     		ldr	r4, .L13
  32:quantum/debounce/sym_g.c ****     if (changed) {
  65              		.loc 1 32 0
  66 000a 2BB1     		cbz	r3, .L3
  33:quantum/debounce/sym_g.c ****         debouncing      = true;
  67              		.loc 1 33 0
  68 000c 0123     		movs	r3, #1
  69              	.LVL2:
  70 000e 2370     		strb	r3, [r4]
  34:quantum/debounce/sym_g.c ****         debouncing_time = timer_read();
  71              		.loc 1 34 0
  72 0010 FFF7FEFF 		bl	timer_read
  73              	.LVL3:
  74 0014 0B4B     		ldr	r3, .L13+4
  75 0016 1880     		strh	r0, [r3]	@ movhi
  76              	.L3:
  35:quantum/debounce/sym_g.c ****     }
  36:quantum/debounce/sym_g.c **** 
  37:quantum/debounce/sym_g.c ****     if (debouncing && timer_elapsed(debouncing_time) > DEBOUNCE) {
  77              		.loc 1 37 0
  78 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  79 001a 2BB1     		cbz	r3, .L2
  80              		.loc 1 37 0 is_stmt 0 discriminator 1
  81 001c 094B     		ldr	r3, .L13+4
  82 001e 1888     		ldrh	r0, [r3]
  83 0020 FFF7FEFF 		bl	timer_elapsed
  84              	.LVL4:
  85 0024 0528     		cmp	r0, #5
  86 0026 08D8     		bhi	.L9
  87              	.L2:
  38:quantum/debounce/sym_g.c ****         for (int i = 0; i < num_rows; i++) {
  39:quantum/debounce/sym_g.c ****             cooked[i] = raw[i];
  40:quantum/debounce/sym_g.c ****         }
  41:quantum/debounce/sym_g.c ****         debouncing = false;
  42:quantum/debounce/sym_g.c ****     }
  43:quantum/debounce/sym_g.c **** }
  88              		.loc 1 43 0 is_stmt 1
  89 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  90              	.LVL5:
  91              	.L8:
  92              	.LBB2:
  39:quantum/debounce/sym_g.c ****         }
  93              		.loc 1 39 0 discriminator 3
  94 002a F25C     		ldrb	r2, [r6, r3]	@ zero_extendqisi2
  95 002c FA54     		strb	r2, [r7, r3]
  38:quantum/debounce/sym_g.c ****         for (int i = 0; i < num_rows; i++) {
  96              		.loc 1 38 0 discriminator 3
  97 002e 0133     		adds	r3, r3, #1
  98              	.LVL6:
  99              	.L6:
  38:quantum/debounce/sym_g.c ****         for (int i = 0; i < num_rows; i++) {
 100              		.loc 1 38 0 is_stmt 0 discriminator 1
 101 0030 9D42     		cmp	r5, r3
 102 0032 FADC     		bgt	.L8
 103              	.LBE2:
  41:quantum/debounce/sym_g.c ****     }
 104              		.loc 1 41 0 is_stmt 1
 105 0034 0023     		movs	r3, #0
 106              	.LVL7:
 107 0036 2370     		strb	r3, [r4]
 108              		.loc 1 43 0
 109 0038 F6E7     		b	.L2
 110              	.L9:
 111              	.LBB3:
  38:quantum/debounce/sym_g.c ****         for (int i = 0; i < num_rows; i++) {
 112              		.loc 1 38 0
 113 003a 0023     		movs	r3, #0
 114 003c F8E7     		b	.L6
 115              	.L14:
 116 003e 00BF     		.align	2
 117              	.L13:
 118 0040 00000000 		.word	.LANCHOR0
 119 0044 00000000 		.word	.LANCHOR1
 120              	.LBE3:
 121              		.cfi_endproc
 122              	.LFE288:
 124              		.section	.text.debounce_active,"ax",%progbits
 125              		.align	1
 126              		.global	debounce_active
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
 132              	debounce_active:
 133              	.LFB289:
  44:quantum/debounce/sym_g.c **** #else  // no debouncing.
  45:quantum/debounce/sym_g.c **** void debounce(matrix_row_t raw[], matrix_row_t cooked[], uint8_t num_rows, bool changed) {
  46:quantum/debounce/sym_g.c ****     for (int i = 0; i < num_rows; i++) {
  47:quantum/debounce/sym_g.c ****         cooked[i] = raw[i];
  48:quantum/debounce/sym_g.c ****     }
  49:quantum/debounce/sym_g.c **** }
  50:quantum/debounce/sym_g.c **** #endif
  51:quantum/debounce/sym_g.c **** 
  52:quantum/debounce/sym_g.c **** bool debounce_active(void) { return debouncing; }
 134              		.loc 1 52 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              		.loc 1 52 0
 140 0000 014B     		ldr	r3, .L16
 141 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 142 0004 7047     		bx	lr
 143              	.L17:
 144 0006 00BF     		.align	2
 145              	.L16:
 146 0008 00000000 		.word	.LANCHOR0
 147              		.cfi_endproc
 148              	.LFE289:
 150              		.section	.bss.debouncing,"aw",%nobits
 151              		.set	.LANCHOR0,. + 0
 154              	debouncing:
 155 0000 00       		.space	1
 156              		.section	.bss.debouncing_time,"aw",%nobits
 157              		.align	1
 158              		.set	.LANCHOR1,. + 0
 161              	debouncing_time:
 162 0000 0000     		.space	2
 163              		.text
 164              	.Letext0:
 165              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 166              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 167              		.file 4 "tmk_core/common/matrix.h"
 168              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 169              		.file 6 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 170              		.file 7 "./lib/chibios/os/rt/include/chsystypes.h"
 171              		.file 8 "./lib/chibios/os/rt/include/chschd.h"
 172              		.file 9 "tmk_core/common/timer.h"
 173              		.file 10 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 174              		.file 11 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 175              		.file 12 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 176              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 177              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 178              		.file 15 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 179              		.file 16 "./lib/chibios/os/rt/include/chtm.h"
 180              		.file 17 "./lib/chibios/os/rt/include/chsem.h"
 181              		.file 18 "./lib/chibios/os/rt/include/chmtx.h"
 182              		.file 19 "./lib/chibios/os/rt/include/chsys.h"
 183              		.file 20 "./lib/chibios/os/rt/include/chregistry.h"
 184              		.file 21 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 185              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 186              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 187              		.file 24 "./lib/chibios/os/hal/include/hal_dac.h"
 188              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 189              		.file 26 "./lib/chibios/os/hal/include/hal_gpt.h"
 190              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 191              		.file 28 "./lib/chibios/os/hal/include/hal_i2c.h"
 192              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 193              		.file 30 "./lib/chibios/os/hal/include/hal_pwm.h"
 194              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 195              		.file 32 "./lib/chibios/os/hal/include/hal_usb.h"
 196              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 197              		.file 34 "tmk_core/common/action.h"
 198              		.file 35 "tmk_core/common/report.h"
 199              		.file 36 "tmk_core/common/host.h"
 200              		.file 37 "tmk_core/common/debug.h"
 201              		.file 38 "quantum/keycode_config.h"
 202              		.file 39 "quantum/keymap.h"
 203              		.file 40 "tmk_core/common/action_layer.h"
 204              		.file 41 "tmk_core/common/action_util.h"
 205              		.file 42 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 206              		.file 43 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 207              		.file 44 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 208              		.file 45 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 209              		.file 46 "quantum/audio/luts.h"
 210              		.file 47 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 211              		.file 48 "quantum/process_keycode/process_music.h"
 212              		.file 49 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 sym_g.c
/var/tmp//ccOLm7y5.s:16     .text.debounce_init:0000000000000000 $t
/var/tmp//ccOLm7y5.s:23     .text.debounce_init:0000000000000000 debounce_init
/var/tmp//ccOLm7y5.s:38     .text.debounce:0000000000000000 $t
/var/tmp//ccOLm7y5.s:45     .text.debounce:0000000000000000 debounce
/var/tmp//ccOLm7y5.s:118    .text.debounce:0000000000000040 $d
/var/tmp//ccOLm7y5.s:125    .text.debounce_active:0000000000000000 $t
/var/tmp//ccOLm7y5.s:132    .text.debounce_active:0000000000000000 debounce_active
/var/tmp//ccOLm7y5.s:146    .text.debounce_active:0000000000000008 $d
/var/tmp//ccOLm7y5.s:154    .bss.debouncing:0000000000000000 debouncing
/var/tmp//ccOLm7y5.s:155    .bss.debouncing:0000000000000000 $d
/var/tmp//ccOLm7y5.s:157    .bss.debouncing_time:0000000000000000 $d
/var/tmp//ccOLm7y5.s:161    .bss.debouncing_time:0000000000000000 debouncing_time

UNDEFINED SYMBOLS
timer_read
timer_elapsed
