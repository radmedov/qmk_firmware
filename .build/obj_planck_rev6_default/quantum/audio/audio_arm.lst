   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"audio_arm.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.end_cb1,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	end_cb1:
  23              	.LFB287:
  24              		.file 1 "quantum/audio/audio_arm.c"
   1:quantum/audio/audio_arm.c **** /* Copyright 2016 Jack Humbert
   2:quantum/audio/audio_arm.c ****  *
   3:quantum/audio/audio_arm.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/audio/audio_arm.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/audio/audio_arm.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/audio/audio_arm.c ****  * (at your option) any later version.
   7:quantum/audio/audio_arm.c ****  *
   8:quantum/audio/audio_arm.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/audio/audio_arm.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/audio/audio_arm.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/audio/audio_arm.c ****  * GNU General Public License for more details.
  12:quantum/audio/audio_arm.c ****  *
  13:quantum/audio/audio_arm.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/audio/audio_arm.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/audio/audio_arm.c ****  */
  16:quantum/audio/audio_arm.c **** 
  17:quantum/audio/audio_arm.c **** #include "audio.h"
  18:quantum/audio/audio_arm.c **** #include "ch.h"
  19:quantum/audio/audio_arm.c **** #include "hal.h"
  20:quantum/audio/audio_arm.c **** 
  21:quantum/audio/audio_arm.c **** #include <string.h>
  22:quantum/audio/audio_arm.c **** #include "print.h"
  23:quantum/audio/audio_arm.c **** #include "keymap.h"
  24:quantum/audio/audio_arm.c **** 
  25:quantum/audio/audio_arm.c **** #include "eeconfig.h"
  26:quantum/audio/audio_arm.c **** 
  27:quantum/audio/audio_arm.c **** // -----------------------------------------------------------------------------
  28:quantum/audio/audio_arm.c **** 
  29:quantum/audio/audio_arm.c **** int   voices        = 0;
  30:quantum/audio/audio_arm.c **** int   voice_place   = 0;
  31:quantum/audio/audio_arm.c **** float frequency     = 0;
  32:quantum/audio/audio_arm.c **** float frequency_alt = 0;
  33:quantum/audio/audio_arm.c **** int   volume        = 0;
  34:quantum/audio/audio_arm.c **** long  position      = 0;
  35:quantum/audio/audio_arm.c **** 
  36:quantum/audio/audio_arm.c **** float frequencies[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  37:quantum/audio/audio_arm.c **** int   volumes[8]     = {0, 0, 0, 0, 0, 0, 0, 0};
  38:quantum/audio/audio_arm.c **** bool  sliding        = false;
  39:quantum/audio/audio_arm.c **** 
  40:quantum/audio/audio_arm.c **** float place = 0;
  41:quantum/audio/audio_arm.c **** 
  42:quantum/audio/audio_arm.c **** uint8_t *sample;
  43:quantum/audio/audio_arm.c **** uint16_t sample_length = 0;
  44:quantum/audio/audio_arm.c **** 
  45:quantum/audio/audio_arm.c **** bool     playing_notes  = false;
  46:quantum/audio/audio_arm.c **** bool     playing_note   = false;
  47:quantum/audio/audio_arm.c **** float    note_frequency = 0;
  48:quantum/audio/audio_arm.c **** float    note_length    = 0;
  49:quantum/audio/audio_arm.c **** uint8_t  note_tempo     = TEMPO_DEFAULT;
  50:quantum/audio/audio_arm.c **** float    note_timbre    = TIMBRE_DEFAULT;
  51:quantum/audio/audio_arm.c **** uint16_t note_position  = 0;
  52:quantum/audio/audio_arm.c **** float (*notes_pointer)[][2];
  53:quantum/audio/audio_arm.c **** uint16_t notes_count;
  54:quantum/audio/audio_arm.c **** bool     notes_repeat;
  55:quantum/audio/audio_arm.c **** bool     note_resting = false;
  56:quantum/audio/audio_arm.c **** 
  57:quantum/audio/audio_arm.c **** uint16_t current_note = 0;
  58:quantum/audio/audio_arm.c **** uint8_t  rest_counter = 0;
  59:quantum/audio/audio_arm.c **** 
  60:quantum/audio/audio_arm.c **** #ifdef VIBRATO_ENABLE
  61:quantum/audio/audio_arm.c **** float vibrato_counter  = 0;
  62:quantum/audio/audio_arm.c **** float vibrato_strength = .5;
  63:quantum/audio/audio_arm.c **** float vibrato_rate     = 0.125;
  64:quantum/audio/audio_arm.c **** #endif
  65:quantum/audio/audio_arm.c **** 
  66:quantum/audio/audio_arm.c **** float polyphony_rate = 0;
  67:quantum/audio/audio_arm.c **** 
  68:quantum/audio/audio_arm.c **** static bool audio_initialized = false;
  69:quantum/audio/audio_arm.c **** 
  70:quantum/audio/audio_arm.c **** audio_config_t audio_config;
  71:quantum/audio/audio_arm.c **** 
  72:quantum/audio/audio_arm.c **** uint16_t envelope_index = 0;
  73:quantum/audio/audio_arm.c **** bool     glissando      = true;
  74:quantum/audio/audio_arm.c **** 
  75:quantum/audio/audio_arm.c **** #ifndef STARTUP_SONG
  76:quantum/audio/audio_arm.c **** #    define STARTUP_SONG SONG(STARTUP_SOUND)
  77:quantum/audio/audio_arm.c **** #endif
  78:quantum/audio/audio_arm.c **** float startup_song[][2] = STARTUP_SONG;
  79:quantum/audio/audio_arm.c **** 
  80:quantum/audio/audio_arm.c **** static void gpt_cb8(GPTDriver *gptp);
  81:quantum/audio/audio_arm.c **** 
  82:quantum/audio/audio_arm.c **** #define DAC_BUFFER_SIZE 100
  83:quantum/audio/audio_arm.c **** #ifndef DAC_SAMPLE_MAX
  84:quantum/audio/audio_arm.c **** #    define DAC_SAMPLE_MAX 65535U
  85:quantum/audio/audio_arm.c **** #endif
  86:quantum/audio/audio_arm.c **** 
  87:quantum/audio/audio_arm.c **** #define START_CHANNEL_1()        \
  88:quantum/audio/audio_arm.c ****     gptStart(&GPTD6, &gpt6cfg1); \
  89:quantum/audio/audio_arm.c ****     gptStartContinuous(&GPTD6, 2U)
  90:quantum/audio/audio_arm.c **** #define START_CHANNEL_2()        \
  91:quantum/audio/audio_arm.c ****     gptStart(&GPTD7, &gpt7cfg1); \
  92:quantum/audio/audio_arm.c ****     gptStartContinuous(&GPTD7, 2U)
  93:quantum/audio/audio_arm.c **** #define STOP_CHANNEL_1() gptStopTimer(&GPTD6)
  94:quantum/audio/audio_arm.c **** #define STOP_CHANNEL_2() gptStopTimer(&GPTD7)
  95:quantum/audio/audio_arm.c **** #define RESTART_CHANNEL_1() \
  96:quantum/audio/audio_arm.c ****     STOP_CHANNEL_1();       \
  97:quantum/audio/audio_arm.c ****     START_CHANNEL_1()
  98:quantum/audio/audio_arm.c **** #define RESTART_CHANNEL_2() \
  99:quantum/audio/audio_arm.c ****     STOP_CHANNEL_2();       \
 100:quantum/audio/audio_arm.c ****     START_CHANNEL_2()
 101:quantum/audio/audio_arm.c **** #define UPDATE_CHANNEL_1_FREQ(freq)              \
 102:quantum/audio/audio_arm.c ****     gpt6cfg1.frequency = freq * DAC_BUFFER_SIZE; \
 103:quantum/audio/audio_arm.c ****     RESTART_CHANNEL_1()
 104:quantum/audio/audio_arm.c **** #define UPDATE_CHANNEL_2_FREQ(freq)              \
 105:quantum/audio/audio_arm.c ****     gpt7cfg1.frequency = freq * DAC_BUFFER_SIZE; \
 106:quantum/audio/audio_arm.c ****     RESTART_CHANNEL_2()
 107:quantum/audio/audio_arm.c **** #define GET_CHANNEL_1_FREQ (uint16_t)(gpt6cfg1.frequency * DAC_BUFFER_SIZE)
 108:quantum/audio/audio_arm.c **** #define GET_CHANNEL_2_FREQ (uint16_t)(gpt7cfg1.frequency * DAC_BUFFER_SIZE)
 109:quantum/audio/audio_arm.c **** 
 110:quantum/audio/audio_arm.c **** /*
 111:quantum/audio/audio_arm.c ****  * GPT6 configuration.
 112:quantum/audio/audio_arm.c ****  */
 113:quantum/audio/audio_arm.c **** // static const GPTConfig gpt6cfg1 = {
 114:quantum/audio/audio_arm.c **** //   .frequency    = 1000000U,
 115:quantum/audio/audio_arm.c **** //   .callback     = NULL,
 116:quantum/audio/audio_arm.c **** //   .cr2          = TIM_CR2_MMS_1,    /* MMS = 010 = TRGO on Update Event.    */
 117:quantum/audio/audio_arm.c **** //   .dier         = 0U
 118:quantum/audio/audio_arm.c **** // };
 119:quantum/audio/audio_arm.c **** 
 120:quantum/audio/audio_arm.c **** GPTConfig gpt6cfg1 = {.frequency = 440U * DAC_BUFFER_SIZE,
 121:quantum/audio/audio_arm.c ****                       .callback  = NULL,
 122:quantum/audio/audio_arm.c ****                       .cr2       = TIM_CR2_MMS_1, /* MMS = 010 = TRGO on Update Event.    */
 123:quantum/audio/audio_arm.c ****                       .dier      = 0U};
 124:quantum/audio/audio_arm.c **** 
 125:quantum/audio/audio_arm.c **** GPTConfig gpt7cfg1 = {.frequency = 440U * DAC_BUFFER_SIZE,
 126:quantum/audio/audio_arm.c ****                       .callback  = NULL,
 127:quantum/audio/audio_arm.c ****                       .cr2       = TIM_CR2_MMS_1, /* MMS = 010 = TRGO on Update Event.    */
 128:quantum/audio/audio_arm.c ****                       .dier      = 0U};
 129:quantum/audio/audio_arm.c **** 
 130:quantum/audio/audio_arm.c **** GPTConfig gpt8cfg1 = {.frequency = 10,
 131:quantum/audio/audio_arm.c ****                       .callback  = gpt_cb8,
 132:quantum/audio/audio_arm.c ****                       .cr2       = TIM_CR2_MMS_1, /* MMS = 010 = TRGO on Update Event.    */
 133:quantum/audio/audio_arm.c ****                       .dier      = 0U};
 134:quantum/audio/audio_arm.c **** 
 135:quantum/audio/audio_arm.c **** /*
 136:quantum/audio/audio_arm.c ****  * DAC test buffer (sine wave).
 137:quantum/audio/audio_arm.c ****  */
 138:quantum/audio/audio_arm.c **** // static const dacsample_t dac_buffer[DAC_BUFFER_SIZE] = {
 139:quantum/audio/audio_arm.c **** //   2047, 2082, 2118, 2154, 2189, 2225, 2260, 2296, 2331, 2367, 2402, 2437,
 140:quantum/audio/audio_arm.c **** //   2472, 2507, 2542, 2576, 2611, 2645, 2679, 2713, 2747, 2780, 2813, 2846,
 141:quantum/audio/audio_arm.c **** //   2879, 2912, 2944, 2976, 3008, 3039, 3070, 3101, 3131, 3161, 3191, 3221,
 142:quantum/audio/audio_arm.c **** //   3250, 3278, 3307, 3335, 3362, 3389, 3416, 3443, 3468, 3494, 3519, 3544,
 143:quantum/audio/audio_arm.c **** //   3568, 3591, 3615, 3637, 3660, 3681, 3703, 3723, 3744, 3763, 3782, 3801,
 144:quantum/audio/audio_arm.c **** //   3819, 3837, 3854, 3870, 3886, 3902, 3917, 3931, 3944, 3958, 3970, 3982,
 145:quantum/audio/audio_arm.c **** //   3993, 4004, 4014, 4024, 4033, 4041, 4049, 4056, 4062, 4068, 4074, 4078,
 146:quantum/audio/audio_arm.c **** //   4082, 4086, 4089, 4091, 4092, 4093, 4094, 4093, 4092, 4091, 4089, 4086,
 147:quantum/audio/audio_arm.c **** //   4082, 4078, 4074, 4068, 4062, 4056, 4049, 4041, 4033, 4024, 4014, 4004,
 148:quantum/audio/audio_arm.c **** //   3993, 3982, 3970, 3958, 3944, 3931, 3917, 3902, 3886, 3870, 3854, 3837,
 149:quantum/audio/audio_arm.c **** //   3819, 3801, 3782, 3763, 3744, 3723, 3703, 3681, 3660, 3637, 3615, 3591,
 150:quantum/audio/audio_arm.c **** //   3568, 3544, 3519, 3494, 3468, 3443, 3416, 3389, 3362, 3335, 3307, 3278,
 151:quantum/audio/audio_arm.c **** //   3250, 3221, 3191, 3161, 3131, 3101, 3070, 3039, 3008, 2976, 2944, 2912,
 152:quantum/audio/audio_arm.c **** //   2879, 2846, 2813, 2780, 2747, 2713, 2679, 2645, 2611, 2576, 2542, 2507,
 153:quantum/audio/audio_arm.c **** //   2472, 2437, 2402, 2367, 2331, 2296, 2260, 2225, 2189, 2154, 2118, 2082,
 154:quantum/audio/audio_arm.c **** //   2047, 2012, 1976, 1940, 1905, 1869, 1834, 1798, 1763, 1727, 1692, 1657,
 155:quantum/audio/audio_arm.c **** //   1622, 1587, 1552, 1518, 1483, 1449, 1415, 1381, 1347, 1314, 1281, 1248,
 156:quantum/audio/audio_arm.c **** //   1215, 1182, 1150, 1118, 1086, 1055, 1024,  993,  963,  933,  903,  873,
 157:quantum/audio/audio_arm.c **** //    844,  816,  787,  759,  732,  705,  678,  651,  626,  600,  575,  550,
 158:quantum/audio/audio_arm.c **** //    526,  503,  479,  457,  434,  413,  391,  371,  350,  331,  312,  293,
 159:quantum/audio/audio_arm.c **** //    275,  257,  240,  224,  208,  192,  177,  163,  150,  136,  124,  112,
 160:quantum/audio/audio_arm.c **** //    101,   90,   80,   70,   61,   53,   45,   38,   32,   26,   20,   16,
 161:quantum/audio/audio_arm.c **** //     12,    8,    5,    3,    2,    1,    0,    1,    2,    3,    5,    8,
 162:quantum/audio/audio_arm.c **** //     12,   16,   20,   26,   32,   38,   45,   53,   61,   70,   80,   90,
 163:quantum/audio/audio_arm.c **** //    101,  112,  124,  136,  150,  163,  177,  192,  208,  224,  240,  257,
 164:quantum/audio/audio_arm.c **** //    275,  293,  312,  331,  350,  371,  391,  413,  434,  457,  479,  503,
 165:quantum/audio/audio_arm.c **** //    526,  550,  575,  600,  626,  651,  678,  705,  732,  759,  787,  816,
 166:quantum/audio/audio_arm.c **** //    844,  873,  903,  933,  963,  993, 1024, 1055, 1086, 1118, 1150, 1182,
 167:quantum/audio/audio_arm.c **** //   1215, 1248, 1281, 1314, 1347, 1381, 1415, 1449, 1483, 1518, 1552, 1587,
 168:quantum/audio/audio_arm.c **** //   1622, 1657, 1692, 1727, 1763, 1798, 1834, 1869, 1905, 1940, 1976, 2012
 169:quantum/audio/audio_arm.c **** // };
 170:quantum/audio/audio_arm.c **** 
 171:quantum/audio/audio_arm.c **** // static const dacsample_t dac_buffer_2[DAC_BUFFER_SIZE] = {
 172:quantum/audio/audio_arm.c **** //     12,    8,    5,    3,    2,    1,    0,    1,    2,    3,    5,    8,
 173:quantum/audio/audio_arm.c **** //     12,   16,   20,   26,   32,   38,   45,   53,   61,   70,   80,   90,
 174:quantum/audio/audio_arm.c **** //    101,  112,  124,  136,  150,  163,  177,  192,  208,  224,  240,  257,
 175:quantum/audio/audio_arm.c **** //    275,  293,  312,  331,  350,  371,  391,  413,  434,  457,  479,  503,
 176:quantum/audio/audio_arm.c **** //    526,  550,  575,  600,  626,  651,  678,  705,  732,  759,  787,  816,
 177:quantum/audio/audio_arm.c **** //    844,  873,  903,  933,  963,  993, 1024, 1055, 1086, 1118, 1150, 1182,
 178:quantum/audio/audio_arm.c **** //   1215, 1248, 1281, 1314, 1347, 1381, 1415, 1449, 1483, 1518, 1552, 1587,
 179:quantum/audio/audio_arm.c **** //   1622, 1657, 1692, 1727, 1763, 1798, 1834, 1869, 1905, 1940, 1976, 2012,
 180:quantum/audio/audio_arm.c **** //   2047, 2082, 2118, 2154, 2189, 2225, 2260, 2296, 2331, 2367, 2402, 2437,
 181:quantum/audio/audio_arm.c **** //   2472, 2507, 2542, 2576, 2611, 2645, 2679, 2713, 2747, 2780, 2813, 2846,
 182:quantum/audio/audio_arm.c **** //   2879, 2912, 2944, 2976, 3008, 3039, 3070, 3101, 3131, 3161, 3191, 3221,
 183:quantum/audio/audio_arm.c **** //   3250, 3278, 3307, 3335, 3362, 3389, 3416, 3443, 3468, 3494, 3519, 3544,
 184:quantum/audio/audio_arm.c **** //   3568, 3591, 3615, 3637, 3660, 3681, 3703, 3723, 3744, 3763, 3782, 3801,
 185:quantum/audio/audio_arm.c **** //   3819, 3837, 3854, 3870, 3886, 3902, 3917, 3931, 3944, 3958, 3970, 3982,
 186:quantum/audio/audio_arm.c **** //   3993, 4004, 4014, 4024, 4033, 4041, 4049, 4056, 4062, 4068, 4074, 4078,
 187:quantum/audio/audio_arm.c **** //   4082, 4086, 4089, 4091, 4092, 4093, 4094, 4093, 4092, 4091, 4089, 4086,
 188:quantum/audio/audio_arm.c **** //   4082, 4078, 4074, 4068, 4062, 4056, 4049, 4041, 4033, 4024, 4014, 4004,
 189:quantum/audio/audio_arm.c **** //   3993, 3982, 3970, 3958, 3944, 3931, 3917, 3902, 3886, 3870, 3854, 3837,
 190:quantum/audio/audio_arm.c **** //   3819, 3801, 3782, 3763, 3744, 3723, 3703, 3681, 3660, 3637, 3615, 3591,
 191:quantum/audio/audio_arm.c **** //   3568, 3544, 3519, 3494, 3468, 3443, 3416, 3389, 3362, 3335, 3307, 3278,
 192:quantum/audio/audio_arm.c **** //   3250, 3221, 3191, 3161, 3131, 3101, 3070, 3039, 3008, 2976, 2944, 2912,
 193:quantum/audio/audio_arm.c **** //   2879, 2846, 2813, 2780, 2747, 2713, 2679, 2645, 2611, 2576, 2542, 2507,
 194:quantum/audio/audio_arm.c **** //   2472, 2437, 2402, 2367, 2331, 2296, 2260, 2225, 2189, 2154, 2118, 2082,
 195:quantum/audio/audio_arm.c **** //   2047, 2012, 1976, 1940, 1905, 1869, 1834, 1798, 1763, 1727, 1692, 1657,
 196:quantum/audio/audio_arm.c **** //   1622, 1587, 1552, 1518, 1483, 1449, 1415, 1381, 1347, 1314, 1281, 1248,
 197:quantum/audio/audio_arm.c **** //   1215, 1182, 1150, 1118, 1086, 1055, 1024,  993,  963,  933,  903,  873,
 198:quantum/audio/audio_arm.c **** //    844,  816,  787,  759,  732,  705,  678,  651,  626,  600,  575,  550,
 199:quantum/audio/audio_arm.c **** //    526,  503,  479,  457,  434,  413,  391,  371,  350,  331,  312,  293,
 200:quantum/audio/audio_arm.c **** //    275,  257,  240,  224,  208,  192,  177,  163,  150,  136,  124,  112,
 201:quantum/audio/audio_arm.c **** //    101,   90,   80,   70,   61,   53,   45,   38,   32,   26,   20,   16
 202:quantum/audio/audio_arm.c **** // };
 203:quantum/audio/audio_arm.c **** 
 204:quantum/audio/audio_arm.c **** // squarewave
 205:quantum/audio/audio_arm.c **** static const dacsample_t dac_buffer[DAC_BUFFER_SIZE] = {
 206:quantum/audio/audio_arm.c ****     // First half is max, second half is 0
 207:quantum/audio/audio_arm.c ****     [0 ... DAC_BUFFER_SIZE / 2 - 1]               = DAC_SAMPLE_MAX,
 208:quantum/audio/audio_arm.c ****     [DAC_BUFFER_SIZE / 2 ... DAC_BUFFER_SIZE - 1] = 0,
 209:quantum/audio/audio_arm.c **** };
 210:quantum/audio/audio_arm.c **** 
 211:quantum/audio/audio_arm.c **** // squarewave
 212:quantum/audio/audio_arm.c **** static const dacsample_t dac_buffer_2[DAC_BUFFER_SIZE] = {
 213:quantum/audio/audio_arm.c ****     // opposite of dac_buffer above
 214:quantum/audio/audio_arm.c ****     [0 ... DAC_BUFFER_SIZE / 2 - 1]               = 0,
 215:quantum/audio/audio_arm.c ****     [DAC_BUFFER_SIZE / 2 ... DAC_BUFFER_SIZE - 1] = DAC_SAMPLE_MAX,
 216:quantum/audio/audio_arm.c **** };
 217:quantum/audio/audio_arm.c **** 
 218:quantum/audio/audio_arm.c **** /*
 219:quantum/audio/audio_arm.c ****  * DAC streaming callback.
 220:quantum/audio/audio_arm.c ****  */
 221:quantum/audio/audio_arm.c **** size_t      nx = 0, ny = 0, nz = 0;
 222:quantum/audio/audio_arm.c **** static void end_cb1(DACDriver *dacp, dacsample_t *buffer, size_t n) {
  25              		.loc 1 222 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 223:quantum/audio/audio_arm.c ****     (void)dacp;
 224:quantum/audio/audio_arm.c **** 
 225:quantum/audio/audio_arm.c ****     nz++;
  31              		.loc 1 225 0
  32 0000 084B     		ldr	r3, .L4
  33 0002 1868     		ldr	r0, [r3]
  34              	.LVL1:
  35 0004 0130     		adds	r0, r0, #1
  36 0006 1860     		str	r0, [r3]
 226:quantum/audio/audio_arm.c ****     if (dac_buffer == buffer) {
  37              		.loc 1 226 0
  38 0008 074B     		ldr	r3, .L4+4
  39 000a 8B42     		cmp	r3, r1
 227:quantum/audio/audio_arm.c ****         nx += n;
  40              		.loc 1 227 0
  41 000c 0BBF     		itete	eq
  42 000e 074B     		ldreq	r3, .L4+8
 228:quantum/audio/audio_arm.c ****     } else {
 229:quantum/audio/audio_arm.c ****         ny += n;
  43              		.loc 1 229 0
  44 0010 0749     		ldrne	r1, .L4+12
  45              	.LVL2:
 227:quantum/audio/audio_arm.c ****         nx += n;
  46              		.loc 1 227 0
  47 0012 1968     		ldreq	r1, [r3]
  48              		.loc 1 229 0
  49 0014 0B68     		ldrne	r3, [r1]
 227:quantum/audio/audio_arm.c ****         nx += n;
  50              		.loc 1 227 0
  51 0016 0BBF     		itete	eq
  52 0018 8918     		addeq	r1, r1, r2
  53              		.loc 1 229 0
  54 001a 9B18     		addne	r3, r3, r2
 227:quantum/audio/audio_arm.c ****         nx += n;
  55              		.loc 1 227 0
  56 001c 1960     		streq	r1, [r3]
  57              		.loc 1 229 0
  58 001e 0B60     		strne	r3, [r1]
 230:quantum/audio/audio_arm.c ****     }
 231:quantum/audio/audio_arm.c **** 
 232:quantum/audio/audio_arm.c ****     if ((nz % 1000) == 0) {
 233:quantum/audio/audio_arm.c ****         // palTogglePad(GPIOD, GPIOD_LED3);
 234:quantum/audio/audio_arm.c ****     }
 235:quantum/audio/audio_arm.c **** }
  59              		.loc 1 235 0
  60 0020 7047     		bx	lr
  61              	.L5:
  62 0022 00BF     		.align	2
  63              	.L4:
  64 0024 00000000 		.word	.LANCHOR0
  65 0028 00000000 		.word	.LANCHOR1
  66 002c 00000000 		.word	.LANCHOR2
  67 0030 00000000 		.word	.LANCHOR3
  68              		.cfi_endproc
  69              	.LFE287:
  71              		.global	__aeabi_fcmpeq
  72              		.global	__aeabi_fcmplt
  73              		.global	__aeabi_fdiv
  74              		.global	__aeabi_fmul
  75              		.global	__aeabi_f2d
  76              		.global	__aeabi_dmul
  77              		.global	__aeabi_dcmplt
  78              		.global	__aeabi_d2f
  79              		.global	__aeabi_fcmpgt
  80              		.global	__aeabi_dcmpgt
  81              		.global	__aeabi_f2uiz
  82              		.global	__aeabi_fadd
  83              		.global	__aeabi_i2f
  84              		.global	__aeabi_fsub
  85              		.global	__aeabi_fcmple
  86              		.global	__aeabi_fcmpge
  87              		.global	__aeabi_ui2f
  88              		.section	.text.gpt_cb8,"ax",%progbits
  89              		.align	1
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu softvfp
  95              	gpt_cb8:
  96              	.LFB292:
 236:quantum/audio/audio_arm.c **** 
 237:quantum/audio/audio_arm.c **** /*
 238:quantum/audio/audio_arm.c ****  * DAC error callback.
 239:quantum/audio/audio_arm.c ****  */
 240:quantum/audio/audio_arm.c **** static void error_cb1(DACDriver *dacp, dacerror_t err) {
 241:quantum/audio/audio_arm.c ****     (void)dacp;
 242:quantum/audio/audio_arm.c ****     (void)err;
 243:quantum/audio/audio_arm.c **** 
 244:quantum/audio/audio_arm.c ****     chSysHalt("DAC failure");
 245:quantum/audio/audio_arm.c **** }
 246:quantum/audio/audio_arm.c **** 
 247:quantum/audio/audio_arm.c **** static const DACConfig dac1cfg1 = {.init = DAC_SAMPLE_MAX, .datamode = DAC_DHRM_12BIT_RIGHT};
 248:quantum/audio/audio_arm.c **** 
 249:quantum/audio/audio_arm.c **** static const DACConversionGroup dacgrpcfg1 = {.num_channels = 1U, .end_cb = end_cb1, .error_cb = er
 250:quantum/audio/audio_arm.c **** 
 251:quantum/audio/audio_arm.c **** static const DACConfig dac1cfg2 = {.init = DAC_SAMPLE_MAX, .datamode = DAC_DHRM_12BIT_RIGHT};
 252:quantum/audio/audio_arm.c **** 
 253:quantum/audio/audio_arm.c **** static const DACConversionGroup dacgrpcfg2 = {.num_channels = 1U, .end_cb = end_cb1, .error_cb = er
 254:quantum/audio/audio_arm.c **** 
 255:quantum/audio/audio_arm.c **** void audio_init() {
 256:quantum/audio/audio_arm.c ****     if (audio_initialized) {
 257:quantum/audio/audio_arm.c ****         return;
 258:quantum/audio/audio_arm.c ****     }
 259:quantum/audio/audio_arm.c **** 
 260:quantum/audio/audio_arm.c **** // Check EEPROM
 261:quantum/audio/audio_arm.c **** #if defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EEPROM_SIZE)
 262:quantum/audio/audio_arm.c ****     if (!eeconfig_is_enabled()) {
 263:quantum/audio/audio_arm.c ****         eeconfig_init();
 264:quantum/audio/audio_arm.c ****     }
 265:quantum/audio/audio_arm.c ****     audio_config.raw = eeconfig_read_audio();
 266:quantum/audio/audio_arm.c **** #else  // ARM EEPROM
 267:quantum/audio/audio_arm.c ****     audio_config.enable        = true;
 268:quantum/audio/audio_arm.c **** #    ifdef AUDIO_CLICKY_ON
 269:quantum/audio/audio_arm.c ****     audio_config.clicky_enable = true;
 270:quantum/audio/audio_arm.c **** #    endif
 271:quantum/audio/audio_arm.c **** #endif  // ARM EEPROM
 272:quantum/audio/audio_arm.c **** 
 273:quantum/audio/audio_arm.c ****     /*
 274:quantum/audio/audio_arm.c ****      * Starting DAC1 driver, setting up the output pin as analog as suggested
 275:quantum/audio/audio_arm.c ****      * by the Reference Manual.
 276:quantum/audio/audio_arm.c ****      */
 277:quantum/audio/audio_arm.c ****     palSetPadMode(GPIOA, 4, PAL_MODE_INPUT_ANALOG);
 278:quantum/audio/audio_arm.c ****     palSetPadMode(GPIOA, 5, PAL_MODE_INPUT_ANALOG);
 279:quantum/audio/audio_arm.c ****     dacStart(&DACD1, &dac1cfg1);
 280:quantum/audio/audio_arm.c ****     dacStart(&DACD2, &dac1cfg2);
 281:quantum/audio/audio_arm.c **** 
 282:quantum/audio/audio_arm.c ****     /*
 283:quantum/audio/audio_arm.c ****      * Starting GPT6/7 driver, it is used for triggering the DAC.
 284:quantum/audio/audio_arm.c ****      */
 285:quantum/audio/audio_arm.c ****     START_CHANNEL_1();
 286:quantum/audio/audio_arm.c ****     START_CHANNEL_2();
 287:quantum/audio/audio_arm.c **** 
 288:quantum/audio/audio_arm.c ****     /*
 289:quantum/audio/audio_arm.c ****      * Starting a continuous conversion.
 290:quantum/audio/audio_arm.c ****      */
 291:quantum/audio/audio_arm.c ****     dacStartConversion(&DACD1, &dacgrpcfg1, (dacsample_t *)dac_buffer, DAC_BUFFER_SIZE);
 292:quantum/audio/audio_arm.c ****     dacStartConversion(&DACD2, &dacgrpcfg2, (dacsample_t *)dac_buffer_2, DAC_BUFFER_SIZE);
 293:quantum/audio/audio_arm.c **** 
 294:quantum/audio/audio_arm.c ****     audio_initialized = true;
 295:quantum/audio/audio_arm.c **** 
 296:quantum/audio/audio_arm.c ****     if (audio_config.enable) {
 297:quantum/audio/audio_arm.c ****         PLAY_SONG(startup_song);
 298:quantum/audio/audio_arm.c ****     } else {
 299:quantum/audio/audio_arm.c ****         stop_all_notes();
 300:quantum/audio/audio_arm.c ****     }
 301:quantum/audio/audio_arm.c **** }
 302:quantum/audio/audio_arm.c **** 
 303:quantum/audio/audio_arm.c **** void stop_all_notes() {
 304:quantum/audio/audio_arm.c ****     dprintf("audio stop all notes");
 305:quantum/audio/audio_arm.c **** 
 306:quantum/audio/audio_arm.c ****     if (!audio_initialized) {
 307:quantum/audio/audio_arm.c ****         audio_init();
 308:quantum/audio/audio_arm.c ****     }
 309:quantum/audio/audio_arm.c ****     voices = 0;
 310:quantum/audio/audio_arm.c **** 
 311:quantum/audio/audio_arm.c ****     gptStopTimer(&GPTD6);
 312:quantum/audio/audio_arm.c ****     gptStopTimer(&GPTD7);
 313:quantum/audio/audio_arm.c ****     gptStopTimer(&GPTD8);
 314:quantum/audio/audio_arm.c **** 
 315:quantum/audio/audio_arm.c ****     playing_notes = false;
 316:quantum/audio/audio_arm.c ****     playing_note  = false;
 317:quantum/audio/audio_arm.c ****     frequency     = 0;
 318:quantum/audio/audio_arm.c ****     frequency_alt = 0;
 319:quantum/audio/audio_arm.c ****     volume        = 0;
 320:quantum/audio/audio_arm.c **** 
 321:quantum/audio/audio_arm.c ****     for (uint8_t i = 0; i < 8; i++) {
 322:quantum/audio/audio_arm.c ****         frequencies[i] = 0;
 323:quantum/audio/audio_arm.c ****         volumes[i]     = 0;
 324:quantum/audio/audio_arm.c ****     }
 325:quantum/audio/audio_arm.c **** }
 326:quantum/audio/audio_arm.c **** 
 327:quantum/audio/audio_arm.c **** void stop_note(float freq) {
 328:quantum/audio/audio_arm.c ****     dprintf("audio stop note freq=%d", (int)freq);
 329:quantum/audio/audio_arm.c **** 
 330:quantum/audio/audio_arm.c ****     if (playing_note) {
 331:quantum/audio/audio_arm.c ****         if (!audio_initialized) {
 332:quantum/audio/audio_arm.c ****             audio_init();
 333:quantum/audio/audio_arm.c ****         }
 334:quantum/audio/audio_arm.c ****         for (int i = 7; i >= 0; i--) {
 335:quantum/audio/audio_arm.c ****             if (frequencies[i] == freq) {
 336:quantum/audio/audio_arm.c ****                 frequencies[i] = 0;
 337:quantum/audio/audio_arm.c ****                 volumes[i]     = 0;
 338:quantum/audio/audio_arm.c ****                 for (int j = i; (j < 7); j++) {
 339:quantum/audio/audio_arm.c ****                     frequencies[j]     = frequencies[j + 1];
 340:quantum/audio/audio_arm.c ****                     frequencies[j + 1] = 0;
 341:quantum/audio/audio_arm.c ****                     volumes[j]         = volumes[j + 1];
 342:quantum/audio/audio_arm.c ****                     volumes[j + 1]     = 0;
 343:quantum/audio/audio_arm.c ****                 }
 344:quantum/audio/audio_arm.c ****                 break;
 345:quantum/audio/audio_arm.c ****             }
 346:quantum/audio/audio_arm.c ****         }
 347:quantum/audio/audio_arm.c ****         voices--;
 348:quantum/audio/audio_arm.c ****         if (voices < 0) {
 349:quantum/audio/audio_arm.c ****             voices = 0;
 350:quantum/audio/audio_arm.c ****         }
 351:quantum/audio/audio_arm.c ****         if (voice_place >= voices) {
 352:quantum/audio/audio_arm.c ****             voice_place = 0;
 353:quantum/audio/audio_arm.c ****         }
 354:quantum/audio/audio_arm.c ****         if (voices == 0) {
 355:quantum/audio/audio_arm.c ****             STOP_CHANNEL_1();
 356:quantum/audio/audio_arm.c ****             STOP_CHANNEL_2();
 357:quantum/audio/audio_arm.c ****             gptStopTimer(&GPTD8);
 358:quantum/audio/audio_arm.c ****             frequency     = 0;
 359:quantum/audio/audio_arm.c ****             frequency_alt = 0;
 360:quantum/audio/audio_arm.c ****             volume        = 0;
 361:quantum/audio/audio_arm.c ****             playing_note  = false;
 362:quantum/audio/audio_arm.c ****         }
 363:quantum/audio/audio_arm.c ****     }
 364:quantum/audio/audio_arm.c **** }
 365:quantum/audio/audio_arm.c **** 
 366:quantum/audio/audio_arm.c **** #ifdef VIBRATO_ENABLE
 367:quantum/audio/audio_arm.c **** 
 368:quantum/audio/audio_arm.c **** float mod(float a, int b) {
 369:quantum/audio/audio_arm.c ****     float r = fmod(a, b);
 370:quantum/audio/audio_arm.c ****     return r < 0 ? r + b : r;
 371:quantum/audio/audio_arm.c **** }
 372:quantum/audio/audio_arm.c **** 
 373:quantum/audio/audio_arm.c **** float vibrato(float average_freq) {
 374:quantum/audio/audio_arm.c **** #    ifdef VIBRATO_STRENGTH_ENABLE
 375:quantum/audio/audio_arm.c ****     float vibrated_freq = average_freq * pow(vibrato_lut[(int)vibrato_counter], vibrato_strength);
 376:quantum/audio/audio_arm.c **** #    else
 377:quantum/audio/audio_arm.c ****     float vibrated_freq = average_freq * vibrato_lut[(int)vibrato_counter];
 378:quantum/audio/audio_arm.c **** #    endif
 379:quantum/audio/audio_arm.c ****     vibrato_counter = mod((vibrato_counter + vibrato_rate * (1.0 + 440.0 / average_freq)), VIBRATO_
 380:quantum/audio/audio_arm.c ****     return vibrated_freq;
 381:quantum/audio/audio_arm.c **** }
 382:quantum/audio/audio_arm.c **** 
 383:quantum/audio/audio_arm.c **** #endif
 384:quantum/audio/audio_arm.c **** 
 385:quantum/audio/audio_arm.c **** static void gpt_cb8(GPTDriver *gptp) {
  97              		.loc 1 385 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 24
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              	.LVL3:
 102 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 103              		.cfi_def_cfa_offset 36
 104              		.cfi_offset 4, -36
 105              		.cfi_offset 5, -32
 106              		.cfi_offset 6, -28
 107              		.cfi_offset 7, -24
 108              		.cfi_offset 8, -20
 109              		.cfi_offset 9, -16
 110              		.cfi_offset 10, -12
 111              		.cfi_offset 11, -8
 112              		.cfi_offset 14, -4
 386:quantum/audio/audio_arm.c ****     float freq;
 387:quantum/audio/audio_arm.c **** 
 388:quantum/audio/audio_arm.c ****     if (playing_note) {
 113              		.loc 1 388 0
 114 0004 BC4B     		ldr	r3, .L100
 385:quantum/audio/audio_arm.c ****     float freq;
 115              		.loc 1 385 0
 116 0006 87B0     		sub	sp, sp, #28
 117              		.cfi_def_cfa_offset 64
 118              		.loc 1 388 0
 119 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 120 000a 0393     		str	r3, [sp, #12]
 121 000c 002A     		cmp	r2, #0
 122 000e 00F01781 		beq	.L7
 389:quantum/audio/audio_arm.c ****         if (voices > 0) {
 123              		.loc 1 389 0
 124 0012 BA4B     		ldr	r3, .L100+4
 125 0014 1C68     		ldr	r4, [r3]
 126 0016 002C     		cmp	r4, #0
 127 0018 9A46     		mov	r10, r3
 128 001a 40F31181 		ble	.L7
 129              	.LVL4:
 130              	.LBB2:
 390:quantum/audio/audio_arm.c ****             float freq_alt = 0;
 391:quantum/audio/audio_arm.c ****             if (voices > 1) {
 131              		.loc 1 391 0
 132 001e 012C     		cmp	r4, #1
 133 0020 DFF824B3 		ldr	fp, .L100+80
 134 0024 B64D     		ldr	r5, .L100+8
 135 0026 4FF00008 		mov	r8, #0
 136 002a 00F0A080 		beq	.L8
 392:quantum/audio/audio_arm.c ****                 if (polyphony_rate == 0) {
 137              		.loc 1 392 0
 138 002e 4146     		mov	r1, r8
 139 0030 DBF80000 		ldr	r0, [fp]	@ float
 140              	.LVL5:
 141 0034 FFF7FEFF 		bl	__aeabi_fcmpeq
 142              	.LVL6:
 143 0038 0028     		cmp	r0, #0
 144 003a 00F02D82 		beq	.L92
 393:quantum/audio/audio_arm.c ****                     if (glissando) {
 145              		.loc 1 393 0
 146 003e B14B     		ldr	r3, .L100+12
 147 0040 023C     		subs	r4, r4, #2
 148 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 149 0044 55F82460 		ldr	r6, [r5, r4, lsl #2]	@ float
 150 0048 AF4C     		ldr	r4, .L100+16
 151 004a 002B     		cmp	r3, #0
 152 004c 00F02282 		beq	.L11
 394:quantum/audio/audio_arm.c ****                         if (frequency_alt != 0 && frequency_alt < frequencies[voices - 2] && freque
 153              		.loc 1 394 0
 154 0050 2768     		ldr	r7, [r4]	@ float
 155 0052 4146     		mov	r1, r8
 156 0054 3846     		mov	r0, r7
 157 0056 FFF7FEFF 		bl	__aeabi_fcmpeq
 158              	.LVL7:
 159 005a 0028     		cmp	r0, #0
 160 005c 40F0D281 		bne	.L12
 161              		.loc 1 394 0 is_stmt 0 discriminator 1
 162 0060 3146     		mov	r1, r6
 163 0062 3846     		mov	r0, r7
 164 0064 FFF7FEFF 		bl	__aeabi_fcmplt
 165              	.LVL8:
 166 0068 0028     		cmp	r0, #0
 167 006a 00F0CB81 		beq	.L12
 168              		.loc 1 394 0 discriminator 2
 169 006e 3146     		mov	r1, r6
 170 0070 A648     		ldr	r0, .L100+20
 171 0072 FFF7FEFF 		bl	__aeabi_fdiv
 172              	.LVL9:
 173 0076 A649     		ldr	r1, .L100+24
 174 0078 FFF7FEFF 		bl	__aeabi_fdiv
 175              	.LVL10:
 176 007c 4FF07C51 		mov	r1, #1056964608
 177 0080 FFF7FEFF 		bl	__aeabi_fmul
 178              	.LVL11:
 179 0084 FFF7FEFF 		bl	__aeabi_f2d
 180              	.LVL12:
 181 0088 0246     		mov	r2, r0
 182 008a 0B46     		mov	r3, r1
 183 008c 0020     		movs	r0, #0
 184 008e 4FF08041 		mov	r1, #1073741824
 185 0092 FFF7FEFF 		bl	pow
 186              	.LVL13:
 187 0096 0246     		mov	r2, r0
 188 0098 0B46     		mov	r3, r1
 189 009a 3846     		mov	r0, r7
 190 009c CDE90423 		strd	r2, [sp, #16]
 191 00a0 FFF7FEFF 		bl	__aeabi_f2d
 192              	.LVL14:
 193 00a4 CDE90001 		strd	r0, [sp]
 194 00a8 3046     		mov	r0, r6
 195 00aa FFF7FEFF 		bl	__aeabi_f2d
 196              	.LVL15:
 197 00ae DDE90423 		ldrd	r2, [sp, #16]
 198 00b2 FFF7FEFF 		bl	__aeabi_dmul
 199              	.LVL16:
 200 00b6 0246     		mov	r2, r0
 201 00b8 0B46     		mov	r3, r1
 202 00ba DDE90001 		ldrd	r0, [sp]
 203 00be FFF7FEFF 		bl	__aeabi_dcmplt
 204              	.LVL17:
 205 00c2 0028     		cmp	r0, #0
 206 00c4 00F09E81 		beq	.L12
 395:quantum/audio/audio_arm.c ****                             frequency_alt = frequency_alt * pow(2, 440 / frequency_alt / 12 / 2);
 207              		.loc 1 395 0 is_stmt 1
 208 00c8 D4F80090 		ldr	r9, [r4]	@ float
 209 00cc 9148     		ldr	r0, .L100+28
 210 00ce 4946     		mov	r1, r9
 211              	.L95:
 396:quantum/audio/audio_arm.c ****                         } else if (frequency_alt != 0 && frequency_alt > frequencies[voices - 2] &&
 397:quantum/audio/audio_arm.c ****                             frequency_alt = frequency_alt * pow(2, -440 / frequency_alt / 12 / 2);
 212              		.loc 1 397 0
 213 00d0 FFF7FEFF 		bl	__aeabi_fdiv
 214              	.LVL18:
 215 00d4 8E49     		ldr	r1, .L100+24
 216 00d6 FFF7FEFF 		bl	__aeabi_fdiv
 217              	.LVL19:
 218 00da 4FF07C51 		mov	r1, #1056964608
 219 00de FFF7FEFF 		bl	__aeabi_fmul
 220              	.LVL20:
 221 00e2 FFF7FEFF 		bl	__aeabi_f2d
 222              	.LVL21:
 223 00e6 0246     		mov	r2, r0
 224 00e8 0B46     		mov	r3, r1
 225 00ea 0020     		movs	r0, #0
 226 00ec 4FF08041 		mov	r1, #1073741824
 227 00f0 FFF7FEFF 		bl	pow
 228              	.LVL22:
 229 00f4 0646     		mov	r6, r0
 230 00f6 0F46     		mov	r7, r1
 231 00f8 4846     		mov	r0, r9
 232 00fa FFF7FEFF 		bl	__aeabi_f2d
 233              	.LVL23:
 234 00fe 3246     		mov	r2, r6
 235 0100 3B46     		mov	r3, r7
 236 0102 FFF7FEFF 		bl	__aeabi_dmul
 237              	.LVL24:
 238 0106 FFF7FEFF 		bl	__aeabi_d2f
 239              	.LVL25:
 240 010a 2060     		str	r0, [r4]	@ float
 241              	.L16:
 398:quantum/audio/audio_arm.c ****                         } else {
 399:quantum/audio/audio_arm.c ****                             frequency_alt = frequencies[voices - 2];
 400:quantum/audio/audio_arm.c ****                         }
 401:quantum/audio/audio_arm.c ****                     } else {
 402:quantum/audio/audio_arm.c ****                         frequency_alt = frequencies[voices - 2];
 403:quantum/audio/audio_arm.c ****                     }
 404:quantum/audio/audio_arm.c **** 
 405:quantum/audio/audio_arm.c **** #ifdef VIBRATO_ENABLE
 406:quantum/audio/audio_arm.c ****                     if (vibrato_strength > 0) {
 407:quantum/audio/audio_arm.c ****                         freq_alt = vibrato(frequency_alt);
 408:quantum/audio/audio_arm.c ****                     } else {
 409:quantum/audio/audio_arm.c ****                         freq_alt = frequency_alt;
 410:quantum/audio/audio_arm.c ****                     }
 411:quantum/audio/audio_arm.c **** #else
 412:quantum/audio/audio_arm.c ****                     freq_alt = frequency_alt;
 242              		.loc 1 412 0
 243 010c 2068     		ldr	r0, [r4]	@ float
 244              	.LVL26:
 245              	.L9:
 413:quantum/audio/audio_arm.c **** #endif
 414:quantum/audio/audio_arm.c ****                 }
 415:quantum/audio/audio_arm.c **** 
 416:quantum/audio/audio_arm.c ****                 if (envelope_index < 65535) {
 246              		.loc 1 416 0
 247 010e 8249     		ldr	r1, .L100+32
 248 0110 0B88     		ldrh	r3, [r1]
 249 0112 4FF6FF72 		movw	r2, #65535
 250 0116 9342     		cmp	r3, r2
 417:quantum/audio/audio_arm.c ****                     envelope_index++;
 251              		.loc 1 417 0
 252 0118 1CBF     		itt	ne
 253 011a 0133     		addne	r3, r3, #1
 254 011c 0B80     		strhne	r3, [r1]	@ movhi
 418:quantum/audio/audio_arm.c ****                 }
 419:quantum/audio/audio_arm.c **** 
 420:quantum/audio/audio_arm.c ****                 freq_alt = voice_envelope(freq_alt);
 255              		.loc 1 420 0
 256 011e FFF7FEFF 		bl	voice_envelope
 257              	.LVL27:
 421:quantum/audio/audio_arm.c **** 
 422:quantum/audio/audio_arm.c ****                 if (freq_alt < 30.517578125) {
 258              		.loc 1 422 0
 259 0122 7E49     		ldr	r1, .L100+36
 420:quantum/audio/audio_arm.c **** 
 260              		.loc 1 420 0
 261 0124 0646     		mov	r6, r0
 262              	.LVL28:
 263              		.loc 1 422 0
 264 0126 FFF7FEFF 		bl	__aeabi_fcmplt
 265              	.LVL29:
 266 012a 00B1     		cbz	r0, .L22
 423:quantum/audio/audio_arm.c ****                     freq_alt = 30.52;
 267              		.loc 1 423 0
 268 012c 7C4E     		ldr	r6, .L100+40
 269              	.LVL30:
 270              	.L22:
 424:quantum/audio/audio_arm.c ****                 }
 425:quantum/audio/audio_arm.c **** 
 426:quantum/audio/audio_arm.c ****                 if (GET_CHANNEL_2_FREQ != (uint16_t)freq_alt) {
 271              		.loc 1 426 0
 272 012e 7D4C     		ldr	r4, .L100+44
 273 0130 2368     		ldr	r3, [r4]
 274 0132 03EB8303 		add	r3, r3, r3, lsl #2
 275 0136 03EB8303 		add	r3, r3, r3, lsl #2
 276 013a 3046     		mov	r0, r6
 277 013c 9F00     		lsls	r7, r3, #2
 278 013e FFF7FEFF 		bl	__aeabi_f2uiz
 279              	.LVL31:
 280 0142 BFB2     		uxth	r7, r7
 281 0144 80B2     		uxth	r0, r0
 282 0146 B842     		cmp	r0, r7
 283 0148 06D0     		beq	.L23
 427:quantum/audio/audio_arm.c ****                     UPDATE_CHANNEL_2_FREQ(freq_alt);
 284              		.loc 1 427 0
 285 014a 7749     		ldr	r1, .L100+48
 286 014c 3046     		mov	r0, r6
 287 014e FFF7FEFF 		bl	__aeabi_fmul
 288              	.LVL32:
 289 0152 FFF7FEFF 		bl	__aeabi_f2uiz
 290              	.LVL33:
 291 0156 2060     		str	r0, [r4]
 292              	.L23:
 428:quantum/audio/audio_arm.c ****                 } else {
 429:quantum/audio/audio_arm.c ****                     RESTART_CHANNEL_2();
 293              		.loc 1 429 0
 294 0158 7448     		ldr	r0, .L100+52
 295 015a FFF7FEFF 		bl	gptStopTimer
 296              	.LVL34:
 297 015e 2146     		mov	r1, r4
 298 0160 7248     		ldr	r0, .L100+52
 299 0162 FFF7FEFF 		bl	gptStart
 300              	.LVL35:
 301 0166 0221     		movs	r1, #2
 302 0168 7048     		ldr	r0, .L100+52
 303 016a FFF7FEFF 		bl	gptStartContinuous
 304              	.LVL36:
 305              	.L8:
 430:quantum/audio/audio_arm.c ****                 }
 431:quantum/audio/audio_arm.c ****                 // note_timbre;
 432:quantum/audio/audio_arm.c ****             }
 433:quantum/audio/audio_arm.c **** 
 434:quantum/audio/audio_arm.c ****             if (polyphony_rate > 0) {
 306              		.loc 1 434 0
 307 016e DBF80060 		ldr	r6, [fp]	@ float
 308 0172 DAF80070 		ldr	r7, [r10]
 309 0176 0021     		movs	r1, #0
 310 0178 3046     		mov	r0, r6
 311 017a FFF7FEFF 		bl	__aeabi_fcmpgt
 312              	.LVL37:
 313 017e 0028     		cmp	r0, #0
 314 0180 00F08C81 		beq	.L93
 435:quantum/audio/audio_arm.c ****                 if (voices > 1) {
 315              		.loc 1 435 0
 316 0184 012F     		cmp	r7, #1
 317 0186 DFF8C491 		ldr	r9, .L100+84
 318 018a 25DD     		ble	.L27
 436:quantum/audio/audio_arm.c ****                     voice_place %= voices;
 437:quantum/audio/audio_arm.c ****                     if (place++ > (frequencies[voice_place] / polyphony_rate)) {
 319              		.loc 1 437 0
 320 018c DFF8C0A1 		ldr	r10, .L100+88
 436:quantum/audio/audio_arm.c ****                     voice_place %= voices;
 321              		.loc 1 436 0
 322 0190 D9F80030 		ldr	r3, [r9]
 323              		.loc 1 437 0
 324 0194 DAF800B0 		ldr	fp, [r10]	@ float
 436:quantum/audio/audio_arm.c ****                     voice_place %= voices;
 325              		.loc 1 436 0
 326 0198 93FBF7F4 		sdiv	r4, r3, r7
 327 019c 07FB1434 		mls	r4, r7, r4, r3
 328              		.loc 1 437 0
 329 01a0 4FF07E51 		mov	r1, #1065353216
 436:quantum/audio/audio_arm.c ****                     voice_place %= voices;
 330              		.loc 1 436 0
 331 01a4 C9F80040 		str	r4, [r9]
 332              		.loc 1 437 0
 333 01a8 5846     		mov	r0, fp
 334 01aa FFF7FEFF 		bl	__aeabi_fadd
 335              	.LVL38:
 336 01ae 3146     		mov	r1, r6
 337 01b0 CAF80000 		str	r0, [r10]	@ float
 338 01b4 55F82400 		ldr	r0, [r5, r4, lsl #2]	@ float
 339 01b8 FFF7FEFF 		bl	__aeabi_fdiv
 340              	.LVL39:
 341 01bc 0146     		mov	r1, r0
 342 01be 5846     		mov	r0, fp
 343 01c0 FFF7FEFF 		bl	__aeabi_fcmpgt
 344              	.LVL40:
 345 01c4 40B1     		cbz	r0, .L27
 438:quantum/audio/audio_arm.c ****                         voice_place = (voice_place + 1) % voices;
 346              		.loc 1 438 0
 347 01c6 0134     		adds	r4, r4, #1
 348 01c8 94FBF7F3 		sdiv	r3, r4, r7
 349 01cc 07FB1344 		mls	r4, r7, r3, r4
 350 01d0 C9F80040 		str	r4, [r9]
 439:quantum/audio/audio_arm.c ****                         place       = 0.0;
 351              		.loc 1 439 0
 352 01d4 CAF80080 		str	r8, [r10]	@ float
 353              	.L27:
 440:quantum/audio/audio_arm.c ****                     }
 441:quantum/audio/audio_arm.c ****                 }
 442:quantum/audio/audio_arm.c **** 
 443:quantum/audio/audio_arm.c **** #ifdef VIBRATO_ENABLE
 444:quantum/audio/audio_arm.c ****                 if (vibrato_strength > 0) {
 445:quantum/audio/audio_arm.c ****                     freq = vibrato(frequencies[voice_place]);
 446:quantum/audio/audio_arm.c ****                 } else {
 447:quantum/audio/audio_arm.c ****                     freq = frequencies[voice_place];
 448:quantum/audio/audio_arm.c ****                 }
 449:quantum/audio/audio_arm.c **** #else
 450:quantum/audio/audio_arm.c ****                 freq = frequencies[voice_place];
 354              		.loc 1 450 0
 355 01d8 D9F80030 		ldr	r3, [r9]
 356 01dc 55F82300 		ldr	r0, [r5, r3, lsl #2]	@ float
 357              	.LVL41:
 358              	.L30:
 451:quantum/audio/audio_arm.c **** #endif
 452:quantum/audio/audio_arm.c ****             } else {
 453:quantum/audio/audio_arm.c ****                 if (glissando) {
 454:quantum/audio/audio_arm.c ****                     if (frequency != 0 && frequency < frequencies[voices - 1] && frequency < freque
 455:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, 440 / frequency / 12 / 2);
 456:quantum/audio/audio_arm.c ****                     } else if (frequency != 0 && frequency > frequencies[voices - 1] && frequency >
 457:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, -440 / frequency / 12 / 2);
 458:quantum/audio/audio_arm.c ****                     } else {
 459:quantum/audio/audio_arm.c ****                         frequency = frequencies[voices - 1];
 460:quantum/audio/audio_arm.c ****                     }
 461:quantum/audio/audio_arm.c ****                 } else {
 462:quantum/audio/audio_arm.c ****                     frequency = frequencies[voices - 1];
 463:quantum/audio/audio_arm.c ****                 }
 464:quantum/audio/audio_arm.c **** 
 465:quantum/audio/audio_arm.c **** #ifdef VIBRATO_ENABLE
 466:quantum/audio/audio_arm.c ****                 if (vibrato_strength > 0) {
 467:quantum/audio/audio_arm.c ****                     freq = vibrato(frequency);
 468:quantum/audio/audio_arm.c ****                 } else {
 469:quantum/audio/audio_arm.c ****                     freq = frequency;
 470:quantum/audio/audio_arm.c ****                 }
 471:quantum/audio/audio_arm.c **** #else
 472:quantum/audio/audio_arm.c ****                 freq = frequency;
 473:quantum/audio/audio_arm.c **** #endif
 474:quantum/audio/audio_arm.c ****             }
 475:quantum/audio/audio_arm.c **** 
 476:quantum/audio/audio_arm.c ****             if (envelope_index < 65535) {
 359              		.loc 1 476 0
 360 01e0 4D49     		ldr	r1, .L100+32
 361 01e2 0B88     		ldrh	r3, [r1]
 362 01e4 4FF6FF72 		movw	r2, #65535
 363 01e8 9342     		cmp	r3, r2
 477:quantum/audio/audio_arm.c ****                 envelope_index++;
 364              		.loc 1 477 0
 365 01ea 1CBF     		itt	ne
 366 01ec 0133     		addne	r3, r3, #1
 367 01ee 0B80     		strhne	r3, [r1]	@ movhi
 478:quantum/audio/audio_arm.c ****             }
 479:quantum/audio/audio_arm.c **** 
 480:quantum/audio/audio_arm.c ****             freq = voice_envelope(freq);
 368              		.loc 1 480 0
 369 01f0 FFF7FEFF 		bl	voice_envelope
 370              	.LVL42:
 481:quantum/audio/audio_arm.c **** 
 482:quantum/audio/audio_arm.c ****             if (freq < 30.517578125) {
 371              		.loc 1 482 0
 372 01f4 4949     		ldr	r1, .L100+36
 480:quantum/audio/audio_arm.c **** 
 373              		.loc 1 480 0
 374 01f6 0646     		mov	r6, r0
 375              	.LVL43:
 376              		.loc 1 482 0
 377 01f8 FFF7FEFF 		bl	__aeabi_fcmplt
 378              	.LVL44:
 379 01fc 00B1     		cbz	r0, .L42
 483:quantum/audio/audio_arm.c ****                 freq = 30.52;
 380              		.loc 1 483 0
 381 01fe 484E     		ldr	r6, .L100+40
 382              	.LVL45:
 383              	.L42:
 484:quantum/audio/audio_arm.c ****             }
 485:quantum/audio/audio_arm.c **** 
 486:quantum/audio/audio_arm.c ****             if (GET_CHANNEL_1_FREQ != (uint16_t)freq) {
 384              		.loc 1 486 0
 385 0200 4B4D     		ldr	r5, .L100+56
 386 0202 2B68     		ldr	r3, [r5]
 387 0204 03EB8303 		add	r3, r3, r3, lsl #2
 388 0208 03EB8303 		add	r3, r3, r3, lsl #2
 389 020c 3046     		mov	r0, r6
 390 020e 9C00     		lsls	r4, r3, #2
 391 0210 FFF7FEFF 		bl	__aeabi_f2uiz
 392              	.LVL46:
 393 0214 A4B2     		uxth	r4, r4
 394 0216 80B2     		uxth	r0, r0
 395 0218 A042     		cmp	r0, r4
 396 021a 06D0     		beq	.L43
 487:quantum/audio/audio_arm.c ****                 UPDATE_CHANNEL_1_FREQ(freq);
 397              		.loc 1 487 0
 398 021c 4249     		ldr	r1, .L100+48
 399 021e 3046     		mov	r0, r6
 400 0220 FFF7FEFF 		bl	__aeabi_fmul
 401              	.LVL47:
 402 0224 FFF7FEFF 		bl	__aeabi_f2uiz
 403              	.LVL48:
 404 0228 2860     		str	r0, [r5]
 405              	.L43:
 488:quantum/audio/audio_arm.c ****             } else {
 489:quantum/audio/audio_arm.c ****                 RESTART_CHANNEL_1();
 406              		.loc 1 489 0
 407 022a 4248     		ldr	r0, .L100+60
 408 022c FFF7FEFF 		bl	gptStopTimer
 409              	.LVL49:
 410 0230 2946     		mov	r1, r5
 411 0232 4048     		ldr	r0, .L100+60
 412 0234 FFF7FEFF 		bl	gptStart
 413              	.LVL50:
 414 0238 0221     		movs	r1, #2
 415 023a 3E48     		ldr	r0, .L100+60
 416 023c FFF7FEFF 		bl	gptStartContinuous
 417              	.LVL51:
 418              	.L7:
 419              	.LBE2:
 490:quantum/audio/audio_arm.c ****             }
 491:quantum/audio/audio_arm.c ****             // note_timbre;
 492:quantum/audio/audio_arm.c ****         }
 493:quantum/audio/audio_arm.c ****     }
 494:quantum/audio/audio_arm.c **** 
 495:quantum/audio/audio_arm.c ****     if (playing_notes) {
 420              		.loc 1 495 0
 421 0240 3D4F     		ldr	r7, .L100+64
 422 0242 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 423 0244 002B     		cmp	r3, #0
 424 0246 00F0D480 		beq	.L45
 425              	.LBB3:
 496:quantum/audio/audio_arm.c ****         if (note_frequency > 0) {
 426              		.loc 1 496 0
 427 024a 3C4E     		ldr	r6, .L100+68
 428 024c DFF8E080 		ldr	r8, .L100+56
 429 0250 3468     		ldr	r4, [r6]	@ float
 430 0252 0021     		movs	r1, #0
 431 0254 2046     		mov	r0, r4
 432 0256 FFF7FEFF 		bl	__aeabi_fcmpgt
 433              	.LVL52:
 434 025a 0028     		cmp	r0, #0
 435 025c 3AD0     		beq	.L47
 436              	.LVL53:
 497:quantum/audio/audio_arm.c **** #ifdef VIBRATO_ENABLE
 498:quantum/audio/audio_arm.c ****             if (vibrato_strength > 0) {
 499:quantum/audio/audio_arm.c ****                 freq = vibrato(note_frequency);
 500:quantum/audio/audio_arm.c ****             } else {
 501:quantum/audio/audio_arm.c ****                 freq = note_frequency;
 502:quantum/audio/audio_arm.c ****             }
 503:quantum/audio/audio_arm.c **** #else
 504:quantum/audio/audio_arm.c ****             freq = note_frequency;
 505:quantum/audio/audio_arm.c **** #endif
 506:quantum/audio/audio_arm.c **** 
 507:quantum/audio/audio_arm.c ****             if (envelope_index < 65535) {
 437              		.loc 1 507 0
 438 025e 2E4A     		ldr	r2, .L100+32
 439 0260 1388     		ldrh	r3, [r2]
 440 0262 4FF6FF71 		movw	r1, #65535
 441 0266 8B42     		cmp	r3, r1
 508:quantum/audio/audio_arm.c ****                 envelope_index++;
 442              		.loc 1 508 0
 443 0268 18BF     		it	ne
 444 026a 0133     		addne	r3, r3, #1
 509:quantum/audio/audio_arm.c ****             }
 510:quantum/audio/audio_arm.c ****             freq = voice_envelope(freq);
 445              		.loc 1 510 0
 446 026c 2046     		mov	r0, r4
 508:quantum/audio/audio_arm.c ****                 envelope_index++;
 447              		.loc 1 508 0
 448 026e 18BF     		it	ne
 449 0270 1380     		strhne	r3, [r2]	@ movhi
 450              		.loc 1 510 0
 451 0272 FFF7FEFF 		bl	voice_envelope
 452              	.LVL54:
 511:quantum/audio/audio_arm.c **** 
 512:quantum/audio/audio_arm.c ****             if (GET_CHANNEL_1_FREQ != (uint16_t)freq) {
 453              		.loc 1 512 0
 454 0276 D8F80030 		ldr	r3, [r8]
 455 027a 03EB8303 		add	r3, r3, r3, lsl #2
 456 027e 03EB8303 		add	r3, r3, r3, lsl #2
 457 0282 9C00     		lsls	r4, r3, #2
 458              	.LVL55:
 510:quantum/audio/audio_arm.c **** 
 459              		.loc 1 510 0
 460 0284 0546     		mov	r5, r0
 461              	.LVL56:
 462              		.loc 1 512 0
 463 0286 FFF7FEFF 		bl	__aeabi_f2uiz
 464              	.LVL57:
 465 028a A4B2     		uxth	r4, r4
 466 028c 80B2     		uxth	r0, r0
 467 028e A042     		cmp	r0, r4
 468 0290 20D0     		beq	.L47
 513:quantum/audio/audio_arm.c ****                 UPDATE_CHANNEL_1_FREQ(freq);
 469              		.loc 1 513 0
 470 0292 2549     		ldr	r1, .L100+48
 514:quantum/audio/audio_arm.c ****                 UPDATE_CHANNEL_2_FREQ(freq);
 471              		.loc 1 514 0
 472 0294 234C     		ldr	r4, .L100+44
 513:quantum/audio/audio_arm.c ****                 UPDATE_CHANNEL_1_FREQ(freq);
 473              		.loc 1 513 0
 474 0296 2846     		mov	r0, r5
 475 0298 FFF7FEFF 		bl	__aeabi_fmul
 476              	.LVL58:
 477 029c FFF7FEFF 		bl	__aeabi_f2uiz
 478              	.LVL59:
 479 02a0 0546     		mov	r5, r0
 480              	.LVL60:
 481 02a2 C8F80000 		str	r0, [r8]
 482 02a6 2348     		ldr	r0, .L100+60
 483 02a8 FFF7FEFF 		bl	gptStopTimer
 484              	.LVL61:
 485 02ac 2049     		ldr	r1, .L100+56
 486 02ae 2148     		ldr	r0, .L100+60
 487 02b0 FFF7FEFF 		bl	gptStart
 488              	.LVL62:
 489 02b4 0221     		movs	r1, #2
 490 02b6 1F48     		ldr	r0, .L100+60
 491 02b8 FFF7FEFF 		bl	gptStartContinuous
 492              	.LVL63:
 493              		.loc 1 514 0
 494 02bc 1B48     		ldr	r0, .L100+52
 495 02be 2560     		str	r5, [r4]
 496 02c0 FFF7FEFF 		bl	gptStopTimer
 497              	.LVL64:
 498 02c4 2146     		mov	r1, r4
 499 02c6 1948     		ldr	r0, .L100+52
 500 02c8 FFF7FEFF 		bl	gptStart
 501              	.LVL65:
 502 02cc 0221     		movs	r1, #2
 503 02ce 1748     		ldr	r0, .L100+52
 504 02d0 FFF7FEFF 		bl	gptStartContinuous
 505              	.LVL66:
 506              	.L47:
 515:quantum/audio/audio_arm.c ****             }
 516:quantum/audio/audio_arm.c ****             // note_timbre;
 517:quantum/audio/audio_arm.c ****         } else {
 518:quantum/audio/audio_arm.c ****             // gptStopTimer(&GPTD6);
 519:quantum/audio/audio_arm.c ****             // gptStopTimer(&GPTD7);
 520:quantum/audio/audio_arm.c ****         }
 521:quantum/audio/audio_arm.c **** 
 522:quantum/audio/audio_arm.c ****         note_position++;
 507              		.loc 1 522 0
 508 02d4 1A4C     		ldr	r4, .L100+72
 509 02d6 1B4D     		ldr	r5, .L100+76
 510 02d8 2088     		ldrh	r0, [r4]
 511 02da 0130     		adds	r0, r0, #1
 512 02dc 80B2     		uxth	r0, r0
 513 02de 2080     		strh	r0, [r4]	@ movhi
 514              	.LVL67:
 515 02e0 FFF7FEFF 		bl	__aeabi_i2f
 516              	.LVL68:
 517 02e4 4FF08241 		mov	r1, #1090519040
 518 02e8 8146     		mov	r9, r0
 519 02ea 2868     		ldr	r0, [r5]	@ float
 520 02ec FFF7FEFF 		bl	__aeabi_fmul
 521              	.LVL69:
 523:quantum/audio/audio_arm.c ****         bool end_of_note = false;
 524:quantum/audio/audio_arm.c ****         if (GET_CHANNEL_1_FREQ > 0) {
 522              		.loc 1 524 0
 523 02f0 D8F80030 		ldr	r3, [r8]
 524 02f4 2EE0     		b	.L101
 525              	.L102:
 526 02f6 00BF     		.align	2
 527              	.L100:
 528 02f8 00000000 		.word	.LANCHOR4
 529 02fc 00000000 		.word	.LANCHOR5
 530 0300 00000000 		.word	.LANCHOR7
 531 0304 00000000 		.word	.LANCHOR8
 532 0308 00000000 		.word	.LANCHOR9
 533 030c 0000DCC3 		.word	-1008992256
 534 0310 00004041 		.word	1094713344
 535 0314 0000DC43 		.word	1138491392
 536 0318 00000000 		.word	.LANCHOR10
 537 031c 0024F441 		.word	1106519040
 538 0320 F628F441 		.word	1106520310
 539 0324 00000000 		.word	.LANCHOR11
 540 0328 0000C842 		.word	1120403456
 541 032c 00000000 		.word	GPTD7
 542 0330 00000000 		.word	.LANCHOR15
 543 0334 00000000 		.word	GPTD6
 544 0338 00000000 		.word	.LANCHOR16
 545 033c 00000000 		.word	.LANCHOR17
 546 0340 00000000 		.word	.LANCHOR18
 547 0344 00000000 		.word	.LANCHOR19
 548 0348 00000000 		.word	.LANCHOR6
 549 034c 00000000 		.word	.LANCHOR12
 550 0350 00000000 		.word	.LANCHOR13
 551              	.L101:
 552 0354 03EB8303 		add	r3, r3, r3, lsl #2
 553 0358 03EB8303 		add	r3, r3, r3, lsl #2
 554 035c 9B00     		lsls	r3, r3, #2
 555 035e 9BB2     		uxth	r3, r3
 556 0360 0146     		mov	r1, r0
 557 0362 A046     		mov	r8, r4
 558 0364 002B     		cmp	r3, #0
 559 0366 00F04381 		beq	.L50
 525:quantum/audio/audio_arm.c ****             if (!note_resting)
 560              		.loc 1 525 0
 561 036a AA4B     		ldr	r3, .L103
 562 036c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 563 036e 002B     		cmp	r3, #0
 564 0370 40F03E81 		bne	.L50
 526:quantum/audio/audio_arm.c ****                 end_of_note = (note_position >= (note_length * 8 - 1));
 565              		.loc 1 526 0
 566 0374 4FF07E51 		mov	r1, #1065353216
 567 0378 FFF7FEFF 		bl	__aeabi_fsub
 568              	.LVL70:
 569 037c 4946     		mov	r1, r9
 570 037e 4FF00104 		mov	r4, #1
 571 0382 FFF7FEFF 		bl	__aeabi_fcmple
 572              	.LVL71:
 573              	.L99:
 527:quantum/audio/audio_arm.c ****             else
 528:quantum/audio/audio_arm.c ****                 end_of_note = (note_position >= (note_length * 8));
 529:quantum/audio/audio_arm.c ****         } else {
 530:quantum/audio/audio_arm.c ****             end_of_note = (note_position >= (note_length * 8));
 574              		.loc 1 530 0
 575 0386 00B9     		cbnz	r0, .L55
 576 0388 0446     		mov	r4, r0
 577              	.L55:
 578 038a E4B2     		uxtb	r4, r4
 579              	.LVL72:
 531:quantum/audio/audio_arm.c ****         }
 532:quantum/audio/audio_arm.c **** 
 533:quantum/audio/audio_arm.c ****         if (end_of_note) {
 580              		.loc 1 533 0
 581 038c 002C     		cmp	r4, #0
 582 038e 30D0     		beq	.L45
 534:quantum/audio/audio_arm.c ****             current_note++;
 583              		.loc 1 534 0
 584 0390 A14B     		ldr	r3, .L103+4
 535:quantum/audio/audio_arm.c ****             if (current_note >= notes_count) {
 585              		.loc 1 535 0
 586 0392 A249     		ldr	r1, .L103+8
 534:quantum/audio/audio_arm.c ****             current_note++;
 587              		.loc 1 534 0
 588 0394 1A88     		ldrh	r2, [r3]
 589              		.loc 1 535 0
 590 0396 0988     		ldrh	r1, [r1]
 534:quantum/audio/audio_arm.c ****             current_note++;
 591              		.loc 1 534 0
 592 0398 0132     		adds	r2, r2, #1
 593 039a 92B2     		uxth	r2, r2
 594              		.loc 1 535 0
 595 039c 9142     		cmp	r1, r2
 534:quantum/audio/audio_arm.c ****             current_note++;
 596              		.loc 1 534 0
 597 039e 1A80     		strh	r2, [r3]	@ movhi
 598              		.loc 1 535 0
 599 03a0 06D8     		bhi	.L57
 536:quantum/audio/audio_arm.c ****                 if (notes_repeat) {
 600              		.loc 1 536 0
 601 03a2 9F4A     		ldr	r2, .L103+12
 602 03a4 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 603              	.LVL73:
 604 03a6 002C     		cmp	r4, #0
 605 03a8 00F02881 		beq	.L58
 537:quantum/audio/audio_arm.c ****                     current_note = 0;
 606              		.loc 1 537 0
 607 03ac 0022     		movs	r2, #0
 608 03ae 1A80     		strh	r2, [r3]	@ movhi
 609              	.L57:
 610 03b0 9C4A     		ldr	r2, .L103+16
 611 03b2 1C88     		ldrh	r4, [r3]
 612 03b4 D2F80090 		ldr	r9, [r2]
 538:quantum/audio/audio_arm.c ****                 } else {
 539:quantum/audio/audio_arm.c ****                     STOP_CHANNEL_1();
 540:quantum/audio/audio_arm.c ****                     STOP_CHANNEL_2();
 541:quantum/audio/audio_arm.c ****                     // gptStopTimer(&GPTD8);
 542:quantum/audio/audio_arm.c ****                     playing_notes = false;
 543:quantum/audio/audio_arm.c ****                     return;
 544:quantum/audio/audio_arm.c ****                 }
 545:quantum/audio/audio_arm.c ****             }
 546:quantum/audio/audio_arm.c ****             if (!note_resting) {
 613              		.loc 1 546 0
 614 03b8 964A     		ldr	r2, .L103
 615 03ba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 616 03bc 0029     		cmp	r1, #0
 617 03be 40F04381 		bne	.L60
 547:quantum/audio/audio_arm.c ****                 note_resting = true;
 618              		.loc 1 547 0
 619 03c2 0121     		movs	r1, #1
 620 03c4 1170     		strb	r1, [r2]
 548:quantum/audio/audio_arm.c ****                 current_note--;
 621              		.loc 1 548 0
 622 03c6 621E     		subs	r2, r4, #1
 623 03c8 92B2     		uxth	r2, r2
 624 03ca 1A80     		strh	r2, [r3]	@ movhi
 549:quantum/audio/audio_arm.c ****                 if ((*notes_pointer)[current_note][0] == (*notes_pointer)[current_note + 1][0]) {
 625              		.loc 1 549 0
 626 03cc 59F83240 		ldr	r4, [r9, r2, lsl #3]	@ float
 627 03d0 09EBC203 		add	r3, r9, r2, lsl #3
 628 03d4 2046     		mov	r0, r4
 629 03d6 9968     		ldr	r1, [r3, #8]	@ float
 630 03d8 FFF7FEFF 		bl	__aeabi_fcmpeq
 631              	.LVL74:
 632 03dc 4FF07E53 		mov	r3, #1065353216
 633 03e0 0028     		cmp	r0, #0
 634 03e2 00F01581 		beq	.L94
 550:quantum/audio/audio_arm.c ****                     note_frequency = 0;
 635              		.loc 1 550 0
 636 03e6 0022     		movs	r2, #0
 637 03e8 3260     		str	r2, [r6]	@ float
 638              	.L97:
 551:quantum/audio/audio_arm.c ****                     note_length    = 1;
 552:quantum/audio/audio_arm.c ****                 } else {
 553:quantum/audio/audio_arm.c ****                     note_frequency = (*notes_pointer)[current_note][0];
 554:quantum/audio/audio_arm.c ****                     note_length    = 1;
 639              		.loc 1 554 0
 640 03ea 2B60     		str	r3, [r5]	@ float
 641              	.L63:
 555:quantum/audio/audio_arm.c ****                 }
 556:quantum/audio/audio_arm.c ****             } else {
 557:quantum/audio/audio_arm.c ****                 note_resting   = false;
 558:quantum/audio/audio_arm.c ****                 envelope_index = 0;
 559:quantum/audio/audio_arm.c ****                 note_frequency = (*notes_pointer)[current_note][0];
 560:quantum/audio/audio_arm.c ****                 note_length    = ((*notes_pointer)[current_note][1] / 4) * (((float)note_tempo) / 1
 561:quantum/audio/audio_arm.c ****             }
 562:quantum/audio/audio_arm.c **** 
 563:quantum/audio/audio_arm.c ****             note_position = 0;
 642              		.loc 1 563 0
 643 03ec 0023     		movs	r3, #0
 644 03ee A8F80030 		strh	r3, [r8]	@ movhi
 645              	.L45:
 646              	.LBE3:
 564:quantum/audio/audio_arm.c ****         }
 565:quantum/audio/audio_arm.c ****     }
 566:quantum/audio/audio_arm.c **** 
 567:quantum/audio/audio_arm.c ****     if (!audio_config.enable) {
 647              		.loc 1 567 0
 648 03f2 8D4B     		ldr	r3, .L103+20
 649 03f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 650 03f6 13F00103 		ands	r3, r3, #1
 568:quantum/audio/audio_arm.c ****         playing_notes = false;
 569:quantum/audio/audio_arm.c ****         playing_note  = false;
 651              		.loc 1 569 0
 652 03fa 02BF     		ittt	eq
 653 03fc 039A     		ldreq	r2, [sp, #12]
 568:quantum/audio/audio_arm.c ****         playing_notes = false;
 654              		.loc 1 568 0
 655 03fe 3B70     		strbeq	r3, [r7]
 656              		.loc 1 569 0
 657 0400 1370     		strbeq	r3, [r2]
 658 0402 02E1     		b	.L6
 659              	.LVL75:
 660              	.L12:
 661              	.LBB4:
 396:quantum/audio/audio_arm.c ****                             frequency_alt = frequency_alt * pow(2, -440 / frequency_alt / 12 / 2);
 662              		.loc 1 396 0
 663 0404 2768     		ldr	r7, [r4]	@ float
 664 0406 0021     		movs	r1, #0
 665 0408 3846     		mov	r0, r7
 666 040a FFF7FEFF 		bl	__aeabi_fcmpeq
 667              	.LVL76:
 668 040e 0028     		cmp	r0, #0
 669 0410 39D1     		bne	.L17
 670 0412 DAF80030 		ldr	r3, [r10]
 671 0416 023B     		subs	r3, r3, #2
 396:quantum/audio/audio_arm.c ****                             frequency_alt = frequency_alt * pow(2, -440 / frequency_alt / 12 / 2);
 672              		.loc 1 396 0 is_stmt 0 discriminator 1
 673 0418 3846     		mov	r0, r7
 674 041a 55F82360 		ldr	r6, [r5, r3, lsl #2]	@ float
 675 041e 3146     		mov	r1, r6
 676 0420 FFF7FEFF 		bl	__aeabi_fcmpgt
 677              	.LVL77:
 678 0424 78B3     		cbz	r0, .L17
 396:quantum/audio/audio_arm.c ****                             frequency_alt = frequency_alt * pow(2, -440 / frequency_alt / 12 / 2);
 679              		.loc 1 396 0 discriminator 2
 680 0426 3146     		mov	r1, r6
 681 0428 8048     		ldr	r0, .L103+24
 682 042a FFF7FEFF 		bl	__aeabi_fdiv
 683              	.LVL78:
 684 042e 8049     		ldr	r1, .L103+28
 685 0430 FFF7FEFF 		bl	__aeabi_fdiv
 686              	.LVL79:
 687 0434 4FF07C51 		mov	r1, #1056964608
 688 0438 FFF7FEFF 		bl	__aeabi_fmul
 689              	.LVL80:
 690 043c FFF7FEFF 		bl	__aeabi_f2d
 691              	.LVL81:
 692 0440 0246     		mov	r2, r0
 693 0442 0B46     		mov	r3, r1
 694 0444 0020     		movs	r0, #0
 695 0446 4FF08041 		mov	r1, #1073741824
 696 044a FFF7FEFF 		bl	pow
 697              	.LVL82:
 698 044e 0246     		mov	r2, r0
 699 0450 0B46     		mov	r3, r1
 700 0452 3846     		mov	r0, r7
 701 0454 CDE90423 		strd	r2, [sp, #16]
 702 0458 FFF7FEFF 		bl	__aeabi_f2d
 703              	.LVL83:
 704 045c CDE90001 		strd	r0, [sp]
 705 0460 3046     		mov	r0, r6
 706 0462 FFF7FEFF 		bl	__aeabi_f2d
 707              	.LVL84:
 708 0466 DDE90423 		ldrd	r2, [sp, #16]
 709 046a FFF7FEFF 		bl	__aeabi_dmul
 710              	.LVL85:
 711 046e 0246     		mov	r2, r0
 712 0470 0B46     		mov	r3, r1
 713 0472 DDE90001 		ldrd	r0, [sp]
 714 0476 FFF7FEFF 		bl	__aeabi_dcmpgt
 715              	.LVL86:
 716 047a 20B1     		cbz	r0, .L17
 397:quantum/audio/audio_arm.c ****                         } else {
 717              		.loc 1 397 0 is_stmt 1
 718 047c D4F80090 		ldr	r9, [r4]	@ float
 719 0480 6C48     		ldr	r0, .L103+32
 720 0482 4946     		mov	r1, r9
 721 0484 24E6     		b	.L95
 722              	.L17:
 399:quantum/audio/audio_arm.c ****                         }
 723              		.loc 1 399 0
 724 0486 DAF80030 		ldr	r3, [r10]
 725 048a 023B     		subs	r3, r3, #2
 726 048c 55F82330 		ldr	r3, [r5, r3, lsl #2]	@ float
 727 0490 2360     		str	r3, [r4]	@ float
 728 0492 3BE6     		b	.L16
 729              	.L11:
 402:quantum/audio/audio_arm.c ****                     }
 730              		.loc 1 402 0
 731 0494 2660     		str	r6, [r4]	@ float
 732 0496 39E6     		b	.L16
 733              	.L92:
 390:quantum/audio/audio_arm.c ****             if (voices > 1) {
 734              		.loc 1 390 0
 735 0498 4046     		mov	r0, r8
 736 049a 38E6     		b	.L9
 737              	.LVL87:
 738              	.L93:
 739 049c 7B1E     		subs	r3, r7, #1
 740 049e 664C     		ldr	r4, .L103+36
 741 04a0 55F823B0 		ldr	fp, [r5, r3, lsl #2]	@ float
 453:quantum/audio/audio_arm.c ****                     if (frequency != 0 && frequency < frequencies[voices - 1] && frequency < freque
 742              		.loc 1 453 0
 743 04a4 654B     		ldr	r3, .L103+40
 744 04a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 745 04a8 002B     		cmp	r3, #0
 746 04aa 00F09E80 		beq	.L31
 454:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, 440 / frequency / 12 / 2);
 747              		.loc 1 454 0
 748 04ae 2668     		ldr	r6, [r4]	@ float
 749 04b0 0021     		movs	r1, #0
 750 04b2 3046     		mov	r0, r6
 751 04b4 FFF7FEFF 		bl	__aeabi_fcmpeq
 752              	.LVL88:
 753 04b8 0028     		cmp	r0, #0
 754 04ba 51D1     		bne	.L32
 454:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, 440 / frequency / 12 / 2);
 755              		.loc 1 454 0 is_stmt 0 discriminator 1
 756 04bc 5946     		mov	r1, fp
 757 04be 3046     		mov	r0, r6
 758 04c0 FFF7FEFF 		bl	__aeabi_fcmplt
 759              	.LVL89:
 760 04c4 0028     		cmp	r0, #0
 761 04c6 4BD0     		beq	.L32
 454:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, 440 / frequency / 12 / 2);
 762              		.loc 1 454 0 discriminator 2
 763 04c8 5946     		mov	r1, fp
 764 04ca 5A48     		ldr	r0, .L103+32
 765 04cc FFF7FEFF 		bl	__aeabi_fdiv
 766              	.LVL90:
 767 04d0 5749     		ldr	r1, .L103+28
 768 04d2 FFF7FEFF 		bl	__aeabi_fdiv
 769              	.LVL91:
 770 04d6 4FF07C51 		mov	r1, #1056964608
 771 04da FFF7FEFF 		bl	__aeabi_fmul
 772              	.LVL92:
 773 04de FFF7FEFF 		bl	__aeabi_f2d
 774              	.LVL93:
 775 04e2 0246     		mov	r2, r0
 776 04e4 0B46     		mov	r3, r1
 777 04e6 0020     		movs	r0, #0
 778 04e8 4FF08041 		mov	r1, #1073741824
 779 04ec FFF7FEFF 		bl	pow
 780              	.LVL94:
 781 04f0 8046     		mov	r8, r0
 782 04f2 3046     		mov	r0, r6
 783 04f4 8946     		mov	r9, r1
 784 04f6 FFF7FEFF 		bl	__aeabi_f2d
 785              	.LVL95:
 786 04fa 0646     		mov	r6, r0
 787 04fc 5846     		mov	r0, fp
 788 04fe 0F46     		mov	r7, r1
 789 0500 FFF7FEFF 		bl	__aeabi_f2d
 790              	.LVL96:
 791 0504 4246     		mov	r2, r8
 792 0506 4B46     		mov	r3, r9
 793 0508 FFF7FEFF 		bl	__aeabi_dmul
 794              	.LVL97:
 795 050c 0246     		mov	r2, r0
 796 050e 0B46     		mov	r3, r1
 797 0510 3046     		mov	r0, r6
 798 0512 3946     		mov	r1, r7
 799 0514 FFF7FEFF 		bl	__aeabi_dcmplt
 800              	.LVL98:
 801 0518 10B3     		cbz	r0, .L32
 455:quantum/audio/audio_arm.c ****                     } else if (frequency != 0 && frequency > frequencies[voices - 1] && frequency >
 802              		.loc 1 455 0 is_stmt 1
 803 051a 2568     		ldr	r5, [r4]	@ float
 804 051c 4348     		ldr	r0, .L103+24
 805 051e 2946     		mov	r1, r5
 806              	.L96:
 457:quantum/audio/audio_arm.c ****                     } else {
 807              		.loc 1 457 0
 808 0520 FFF7FEFF 		bl	__aeabi_fdiv
 809              	.LVL99:
 810 0524 4249     		ldr	r1, .L103+28
 811 0526 FFF7FEFF 		bl	__aeabi_fdiv
 812              	.LVL100:
 813 052a 4FF07C51 		mov	r1, #1056964608
 814 052e FFF7FEFF 		bl	__aeabi_fmul
 815              	.LVL101:
 816 0532 FFF7FEFF 		bl	__aeabi_f2d
 817              	.LVL102:
 818 0536 0246     		mov	r2, r0
 819 0538 0B46     		mov	r3, r1
 820 053a 0020     		movs	r0, #0
 821 053c 4FF08041 		mov	r1, #1073741824
 822 0540 FFF7FEFF 		bl	pow
 823              	.LVL103:
 824 0544 0646     		mov	r6, r0
 825 0546 0F46     		mov	r7, r1
 826 0548 2846     		mov	r0, r5
 827 054a FFF7FEFF 		bl	__aeabi_f2d
 828              	.LVL104:
 829 054e 3246     		mov	r2, r6
 830 0550 3B46     		mov	r3, r7
 831 0552 FFF7FEFF 		bl	__aeabi_dmul
 832              	.LVL105:
 833 0556 FFF7FEFF 		bl	__aeabi_d2f
 834              	.LVL106:
 835 055a 2060     		str	r0, [r4]	@ float
 836              	.L36:
 472:quantum/audio/audio_arm.c **** #endif
 837              		.loc 1 472 0
 838 055c 2068     		ldr	r0, [r4]	@ float
 839              	.LVL107:
 840 055e 3FE6     		b	.L30
 841              	.LVL108:
 842              	.L32:
 456:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, -440 / frequency / 12 / 2);
 843              		.loc 1 456 0
 844 0560 2668     		ldr	r6, [r4]	@ float
 845 0562 0021     		movs	r1, #0
 846 0564 3046     		mov	r0, r6
 847 0566 FFF7FEFF 		bl	__aeabi_fcmpeq
 848              	.LVL109:
 849 056a 0028     		cmp	r0, #0
 850 056c 36D1     		bne	.L37
 851 056e DAF80030 		ldr	r3, [r10]
 852 0572 013B     		subs	r3, r3, #1
 456:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, -440 / frequency / 12 / 2);
 853              		.loc 1 456 0 is_stmt 0 discriminator 1
 854 0574 3046     		mov	r0, r6
 855 0576 55F823B0 		ldr	fp, [r5, r3, lsl #2]	@ float
 856 057a 5946     		mov	r1, fp
 857 057c FFF7FEFF 		bl	__aeabi_fcmpgt
 858              	.LVL110:
 859 0580 60B3     		cbz	r0, .L37
 456:quantum/audio/audio_arm.c ****                         frequency = frequency * pow(2, -440 / frequency / 12 / 2);
 860              		.loc 1 456 0 discriminator 2
 861 0582 5946     		mov	r1, fp
 862 0584 2948     		ldr	r0, .L103+24
 863 0586 FFF7FEFF 		bl	__aeabi_fdiv
 864              	.LVL111:
 865 058a 2949     		ldr	r1, .L103+28
 866 058c FFF7FEFF 		bl	__aeabi_fdiv
 867              	.LVL112:
 868 0590 4FF07C51 		mov	r1, #1056964608
 869 0594 FFF7FEFF 		bl	__aeabi_fmul
 870              	.LVL113:
 871 0598 FFF7FEFF 		bl	__aeabi_f2d
 872              	.LVL114:
 873 059c 0246     		mov	r2, r0
 874 059e 0B46     		mov	r3, r1
 875 05a0 0020     		movs	r0, #0
 876 05a2 4FF08041 		mov	r1, #1073741824
 877 05a6 FFF7FEFF 		bl	pow
 878              	.LVL115:
 879 05aa 8046     		mov	r8, r0
 880 05ac 3046     		mov	r0, r6
 881 05ae 8946     		mov	r9, r1
 882 05b0 FFF7FEFF 		bl	__aeabi_f2d
 883              	.LVL116:
 884 05b4 0646     		mov	r6, r0
 885 05b6 5846     		mov	r0, fp
 886 05b8 0F46     		mov	r7, r1
 887 05ba FFF7FEFF 		bl	__aeabi_f2d
 888              	.LVL117:
 889 05be 4246     		mov	r2, r8
 890 05c0 4B46     		mov	r3, r9
 891 05c2 FFF7FEFF 		bl	__aeabi_dmul
 892              	.LVL118:
 893 05c6 0246     		mov	r2, r0
 894 05c8 0B46     		mov	r3, r1
 895 05ca 3046     		mov	r0, r6
 896 05cc 3946     		mov	r1, r7
 897 05ce FFF7FEFF 		bl	__aeabi_dcmpgt
 898              	.LVL119:
 899 05d2 18B1     		cbz	r0, .L37
 457:quantum/audio/audio_arm.c ****                     } else {
 900              		.loc 1 457 0 is_stmt 1
 901 05d4 2568     		ldr	r5, [r4]	@ float
 902 05d6 1748     		ldr	r0, .L103+32
 903 05d8 2946     		mov	r1, r5
 904 05da A1E7     		b	.L96
 905              	.L37:
 459:quantum/audio/audio_arm.c ****                     }
 906              		.loc 1 459 0
 907 05dc DAF80030 		ldr	r3, [r10]
 908 05e0 013B     		subs	r3, r3, #1
 909 05e2 55F82330 		ldr	r3, [r5, r3, lsl #2]	@ float
 910 05e6 2360     		str	r3, [r4]	@ float
 911 05e8 B8E7     		b	.L36
 912              	.L31:
 462:quantum/audio/audio_arm.c ****                 }
 913              		.loc 1 462 0
 914 05ea C4F800B0 		str	fp, [r4]	@ float
 915 05ee B5E7     		b	.L36
 916              	.LVL120:
 917              	.L50:
 918              	.LBE4:
 919              	.LBB5:
 530:quantum/audio/audio_arm.c ****         }
 920              		.loc 1 530 0
 921 05f0 4846     		mov	r0, r9
 922 05f2 4FF00104 		mov	r4, #1
 923 05f6 FFF7FEFF 		bl	__aeabi_fcmpge
 924              	.LVL121:
 925 05fa C4E6     		b	.L99
 926              	.LVL122:
 927              	.L58:
 539:quantum/audio/audio_arm.c ****                     STOP_CHANNEL_2();
 928              		.loc 1 539 0
 929 05fc 1048     		ldr	r0, .L103+44
 930 05fe FFF7FEFF 		bl	gptStopTimer
 931              	.LVL123:
 540:quantum/audio/audio_arm.c ****                     // gptStopTimer(&GPTD8);
 932              		.loc 1 540 0
 933 0602 1048     		ldr	r0, .L103+48
 934 0604 FFF7FEFF 		bl	gptStopTimer
 935              	.LVL124:
 542:quantum/audio/audio_arm.c ****                     return;
 936              		.loc 1 542 0
 937 0608 3C70     		strb	r4, [r7]
 938              	.L6:
 939              	.LBE5:
 570:quantum/audio/audio_arm.c ****     }
 571:quantum/audio/audio_arm.c **** }
 940              		.loc 1 571 0
 941 060a 07B0     		add	sp, sp, #28
 942              		.cfi_remember_state
 943              		.cfi_def_cfa_offset 36
 944              		@ sp needed
 945 060c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 946              	.L94:
 947              		.cfi_restore_state
 948              	.LBB6:
 553:quantum/audio/audio_arm.c ****                     note_length    = 1;
 949              		.loc 1 553 0
 950 0610 3460     		str	r4, [r6]	@ float
 951 0612 EAE6     		b	.L97
 952              	.L104:
 953              		.align	2
 954              	.L103:
 955 0614 00000000 		.word	.LANCHOR20
 956 0618 00000000 		.word	.LANCHOR21
 957 061c 00000000 		.word	.LANCHOR22
 958 0620 00000000 		.word	.LANCHOR23
 959 0624 00000000 		.word	.LANCHOR24
 960 0628 00000000 		.word	.LANCHOR26
 961 062c 0000DC43 		.word	1138491392
 962 0630 00004041 		.word	1094713344
 963 0634 0000DCC3 		.word	-1008992256
 964 0638 00000000 		.word	.LANCHOR14
 965 063c 00000000 		.word	.LANCHOR8
 966 0640 00000000 		.word	GPTD6
 967 0644 00000000 		.word	GPTD7
 968              	.L60:
 557:quantum/audio/audio_arm.c ****                 envelope_index = 0;
 969              		.loc 1 557 0
 970 0648 0023     		movs	r3, #0
 971 064a 1370     		strb	r3, [r2]
 558:quantum/audio/audio_arm.c ****                 note_frequency = (*notes_pointer)[current_note][0];
 972              		.loc 1 558 0
 973 064c 0C4A     		ldr	r2, .L105
 974 064e 1380     		strh	r3, [r2]	@ movhi
 559:quantum/audio/audio_arm.c ****                 note_length    = ((*notes_pointer)[current_note][1] / 4) * (((float)note_tempo) / 1
 975              		.loc 1 559 0
 976 0650 59F83430 		ldr	r3, [r9, r4, lsl #3]	@ float
 977 0654 3360     		str	r3, [r6]	@ float
 560:quantum/audio/audio_arm.c ****             }
 978              		.loc 1 560 0
 979 0656 0B4B     		ldr	r3, .L105+4
 980 0658 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 981 065a FFF7FEFF 		bl	__aeabi_ui2f
 982              	.LVL125:
 983 065e 0A49     		ldr	r1, .L105+8
 984 0660 FFF7FEFF 		bl	__aeabi_fdiv
 985              	.LVL126:
 986 0664 09EBC404 		add	r4, r9, r4, lsl #3
 987 0668 0646     		mov	r6, r0
 988 066a 4FF07A51 		mov	r1, #1048576000
 989 066e 6068     		ldr	r0, [r4, #4]	@ float
 990 0670 FFF7FEFF 		bl	__aeabi_fmul
 991              	.LVL127:
 992 0674 0146     		mov	r1, r0
 993 0676 3046     		mov	r0, r6
 994 0678 FFF7FEFF 		bl	__aeabi_fmul
 995              	.LVL128:
 996 067c 2860     		str	r0, [r5]	@ float
 997 067e B5E6     		b	.L63
 998              	.L106:
 999              		.align	2
 1000              	.L105:
 1001 0680 00000000 		.word	.LANCHOR10
 1002 0684 00000000 		.word	.LANCHOR25
 1003 0688 0000C842 		.word	1120403456
 1004              	.LBE6:
 1005              		.cfi_endproc
 1006              	.LFE292:
 1008              		.section	.text.error_cb1,"ax",%progbits
 1009              		.align	1
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1013              		.fpu softvfp
 1015              	error_cb1:
 1016              	.LFB288:
 240:quantum/audio/audio_arm.c ****     (void)dacp;
 1017              		.loc 1 240 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 1022              	.LVL129:
 244:quantum/audio/audio_arm.c **** }
 1023              		.loc 1 244 0
 1024 0000 0148     		ldr	r0, .L108
 1025              	.LVL130:
 1026 0002 FFF7FEBF 		b	chSysHalt
 1027              	.LVL131:
 1028              	.L109:
 1029 0006 00BF     		.align	2
 1030              	.L108:
 1031 0008 00000000 		.word	.LC0
 1032              		.cfi_endproc
 1033              	.LFE288:
 1035              		.section	.text.play_notes,"ax",%progbits
 1036              		.align	1
 1037              		.global	play_notes
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1041              		.fpu softvfp
 1043              	play_notes:
 1044              	.LFB294:
 572:quantum/audio/audio_arm.c **** 
 573:quantum/audio/audio_arm.c **** void play_note(float freq, int vol) {
 574:quantum/audio/audio_arm.c ****     dprintf("audio play note freq=%d vol=%d", (int)freq, vol);
 575:quantum/audio/audio_arm.c **** 
 576:quantum/audio/audio_arm.c ****     if (!audio_initialized) {
 577:quantum/audio/audio_arm.c ****         audio_init();
 578:quantum/audio/audio_arm.c ****     }
 579:quantum/audio/audio_arm.c **** 
 580:quantum/audio/audio_arm.c ****     if (audio_config.enable && voices < 8) {
 581:quantum/audio/audio_arm.c ****         // Cancel notes if notes are playing
 582:quantum/audio/audio_arm.c ****         if (playing_notes) {
 583:quantum/audio/audio_arm.c ****             stop_all_notes();
 584:quantum/audio/audio_arm.c ****         }
 585:quantum/audio/audio_arm.c **** 
 586:quantum/audio/audio_arm.c ****         playing_note = true;
 587:quantum/audio/audio_arm.c **** 
 588:quantum/audio/audio_arm.c ****         envelope_index = 0;
 589:quantum/audio/audio_arm.c **** 
 590:quantum/audio/audio_arm.c ****         if (freq > 0) {
 591:quantum/audio/audio_arm.c ****             frequencies[voices] = freq;
 592:quantum/audio/audio_arm.c ****             volumes[voices]     = vol;
 593:quantum/audio/audio_arm.c ****             voices++;
 594:quantum/audio/audio_arm.c ****         }
 595:quantum/audio/audio_arm.c **** 
 596:quantum/audio/audio_arm.c ****         gptStart(&GPTD8, &gpt8cfg1);
 597:quantum/audio/audio_arm.c ****         gptStartContinuous(&GPTD8, 2U);
 598:quantum/audio/audio_arm.c ****         RESTART_CHANNEL_1();
 599:quantum/audio/audio_arm.c ****         RESTART_CHANNEL_2();
 600:quantum/audio/audio_arm.c ****     }
 601:quantum/audio/audio_arm.c **** }
 602:quantum/audio/audio_arm.c **** 
 603:quantum/audio/audio_arm.c **** void play_notes(float (*np)[][2], uint16_t n_count, bool n_repeat) {
 1045              		.loc 1 603 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              	.LVL132:
 604:quantum/audio/audio_arm.c ****     if (!audio_initialized) {
 1050              		.loc 1 604 0
 1051 0000 2C4B     		ldr	r3, .L117
 1052 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 603:quantum/audio/audio_arm.c ****     if (!audio_initialized) {
 1053              		.loc 1 603 0
 1054 0004 70B5     		push	{r4, r5, r6, lr}
 1055              		.cfi_def_cfa_offset 16
 1056              		.cfi_offset 4, -16
 1057              		.cfi_offset 5, -12
 1058              		.cfi_offset 6, -8
 1059              		.cfi_offset 14, -4
 603:quantum/audio/audio_arm.c ****     if (!audio_initialized) {
 1060              		.loc 1 603 0
 1061 0006 0446     		mov	r4, r0
 1062 0008 0E46     		mov	r6, r1
 1063 000a 1546     		mov	r5, r2
 1064              		.loc 1 604 0
 1065 000c 0BB9     		cbnz	r3, .L111
 605:quantum/audio/audio_arm.c ****         audio_init();
 1066              		.loc 1 605 0
 1067 000e FFF7FEFF 		bl	audio_init
 1068              	.LVL133:
 1069              	.L111:
 606:quantum/audio/audio_arm.c ****     }
 607:quantum/audio/audio_arm.c **** 
 608:quantum/audio/audio_arm.c ****     if (audio_config.enable) {
 1070              		.loc 1 608 0
 1071 0012 294B     		ldr	r3, .L117+4
 1072 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 0016 DB07     		lsls	r3, r3, #31
 1074 0018 4BD5     		bpl	.L110
 1075              	.LVL134:
 1076              	.LBB9:
 1077              	.LBB10:
 609:quantum/audio/audio_arm.c ****         // Cancel note if a note is playing
 610:quantum/audio/audio_arm.c ****         if (playing_note) {
 1078              		.loc 1 610 0
 1079 001a 284B     		ldr	r3, .L117+8
 1080 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1081 001e 0BB1     		cbz	r3, .L113
 611:quantum/audio/audio_arm.c ****             stop_all_notes();
 1082              		.loc 1 611 0
 1083 0020 FFF7FEFF 		bl	stop_all_notes
 1084              	.LVL135:
 1085              	.L113:
 612:quantum/audio/audio_arm.c ****         }
 613:quantum/audio/audio_arm.c **** 
 614:quantum/audio/audio_arm.c ****         playing_notes = true;
 1086              		.loc 1 614 0
 1087 0024 264B     		ldr	r3, .L117+12
 1088 0026 0122     		movs	r2, #1
 1089 0028 1A70     		strb	r2, [r3]
 615:quantum/audio/audio_arm.c **** 
 616:quantum/audio/audio_arm.c ****         notes_pointer = np;
 1090              		.loc 1 616 0
 1091 002a 264B     		ldr	r3, .L117+16
 1092 002c 1C60     		str	r4, [r3]
 617:quantum/audio/audio_arm.c ****         notes_count   = n_count;
 1093              		.loc 1 617 0
 1094 002e 264B     		ldr	r3, .L117+20
 1095 0030 1E80     		strh	r6, [r3]	@ movhi
 618:quantum/audio/audio_arm.c ****         notes_repeat  = n_repeat;
 1096              		.loc 1 618 0
 1097 0032 264B     		ldr	r3, .L117+24
 1098 0034 1D70     		strb	r5, [r3]
 619:quantum/audio/audio_arm.c **** 
 620:quantum/audio/audio_arm.c ****         place        = 0;
 1099              		.loc 1 620 0
 1100 0036 264B     		ldr	r3, .L117+28
 1101 0038 0022     		movs	r2, #0
 1102 003a 1A60     		str	r2, [r3]	@ float
 621:quantum/audio/audio_arm.c ****         current_note = 0;
 1103              		.loc 1 621 0
 1104 003c 254B     		ldr	r3, .L117+32
 622:quantum/audio/audio_arm.c **** 
 623:quantum/audio/audio_arm.c ****         note_frequency = (*notes_pointer)[current_note][0];
 1105              		.loc 1 623 0
 1106 003e 2268     		ldr	r2, [r4]	@ float
 621:quantum/audio/audio_arm.c ****         current_note = 0;
 1107              		.loc 1 621 0
 1108 0040 0025     		movs	r5, #0
 1109              	.LVL136:
 1110 0042 1D80     		strh	r5, [r3]	@ movhi
 1111              		.loc 1 623 0
 1112 0044 244B     		ldr	r3, .L117+36
 1113 0046 1A60     		str	r2, [r3]	@ float
 624:quantum/audio/audio_arm.c ****         note_length    = ((*notes_pointer)[current_note][1] / 4) * (((float)note_tempo) / 100);
 1114              		.loc 1 624 0
 1115 0048 244B     		ldr	r3, .L117+40
 1116 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1117 004c FFF7FEFF 		bl	__aeabi_ui2f
 1118              	.LVL137:
 1119 0050 2349     		ldr	r1, .L117+44
 1120 0052 FFF7FEFF 		bl	__aeabi_fdiv
 1121              	.LVL138:
 1122 0056 4FF07A51 		mov	r1, #1048576000
 1123 005a 0646     		mov	r6, r0
 1124              	.LVL139:
 1125 005c 6068     		ldr	r0, [r4, #4]	@ float
 1126 005e FFF7FEFF 		bl	__aeabi_fmul
 1127              	.LVL140:
 1128 0062 0146     		mov	r1, r0
 1129 0064 3046     		mov	r0, r6
 1130 0066 FFF7FEFF 		bl	__aeabi_fmul
 1131              	.LVL141:
 1132 006a 1E4B     		ldr	r3, .L117+48
 625:quantum/audio/audio_arm.c ****         note_position  = 0;
 626:quantum/audio/audio_arm.c **** 
 627:quantum/audio/audio_arm.c ****         gptStart(&GPTD8, &gpt8cfg1);
 1133              		.loc 1 627 0
 1134 006c 1E49     		ldr	r1, .L117+52
 624:quantum/audio/audio_arm.c ****         note_length    = ((*notes_pointer)[current_note][1] / 4) * (((float)note_tempo) / 100);
 1135              		.loc 1 624 0
 1136 006e 1860     		str	r0, [r3]	@ float
 625:quantum/audio/audio_arm.c ****         note_position  = 0;
 1137              		.loc 1 625 0
 1138 0070 1E4B     		ldr	r3, .L117+56
 1139              		.loc 1 627 0
 1140 0072 1F48     		ldr	r0, .L117+60
 625:quantum/audio/audio_arm.c ****         note_position  = 0;
 1141              		.loc 1 625 0
 1142 0074 1D80     		strh	r5, [r3]	@ movhi
 1143              		.loc 1 627 0
 1144 0076 FFF7FEFF 		bl	gptStart
 1145              	.LVL142:
 628:quantum/audio/audio_arm.c ****         gptStartContinuous(&GPTD8, 2U);
 1146              		.loc 1 628 0
 1147 007a 0221     		movs	r1, #2
 1148 007c 1C48     		ldr	r0, .L117+60
 1149 007e FFF7FEFF 		bl	gptStartContinuous
 1150              	.LVL143:
 629:quantum/audio/audio_arm.c ****         RESTART_CHANNEL_1();
 1151              		.loc 1 629 0
 1152 0082 1C48     		ldr	r0, .L117+64
 1153 0084 FFF7FEFF 		bl	gptStopTimer
 1154              	.LVL144:
 1155 0088 1B49     		ldr	r1, .L117+68
 1156 008a 1A48     		ldr	r0, .L117+64
 1157 008c FFF7FEFF 		bl	gptStart
 1158              	.LVL145:
 1159 0090 0221     		movs	r1, #2
 1160 0092 1848     		ldr	r0, .L117+64
 1161 0094 FFF7FEFF 		bl	gptStartContinuous
 1162              	.LVL146:
 630:quantum/audio/audio_arm.c ****         RESTART_CHANNEL_2();
 1163              		.loc 1 630 0
 1164 0098 1848     		ldr	r0, .L117+72
 1165 009a FFF7FEFF 		bl	gptStopTimer
 1166              	.LVL147:
 1167 009e 1849     		ldr	r1, .L117+76
 1168 00a0 1648     		ldr	r0, .L117+72
 1169 00a2 FFF7FEFF 		bl	gptStart
 1170              	.LVL148:
 1171 00a6 0221     		movs	r1, #2
 1172 00a8 1448     		ldr	r0, .L117+72
 1173              	.LBE10:
 1174              	.LBE9:
 631:quantum/audio/audio_arm.c ****     }
 632:quantum/audio/audio_arm.c **** }
 1175              		.loc 1 632 0
 1176 00aa BDE87040 		pop	{r4, r5, r6, lr}
 1177              		.cfi_remember_state
 1178              		.cfi_restore 14
 1179              		.cfi_restore 6
 1180              		.cfi_restore 5
 1181              		.cfi_restore 4
 1182              		.cfi_def_cfa_offset 0
 1183              	.LVL149:
 1184              	.LBB12:
 1185              	.LBB11:
 630:quantum/audio/audio_arm.c ****         RESTART_CHANNEL_2();
 1186              		.loc 1 630 0
 1187 00ae FFF7FEBF 		b	gptStartContinuous
 1188              	.LVL150:
 1189              	.L110:
 1190              		.cfi_restore_state
 1191              	.LBE11:
 1192              	.LBE12:
 1193              		.loc 1 632 0
 1194 00b2 70BD     		pop	{r4, r5, r6, pc}
 1195              	.LVL151:
 1196              	.L118:
 1197              		.align	2
 1198              	.L117:
 1199 00b4 00000000 		.word	.LANCHOR27
 1200 00b8 00000000 		.word	.LANCHOR26
 1201 00bc 00000000 		.word	.LANCHOR4
 1202 00c0 00000000 		.word	.LANCHOR16
 1203 00c4 00000000 		.word	.LANCHOR24
 1204 00c8 00000000 		.word	.LANCHOR22
 1205 00cc 00000000 		.word	.LANCHOR23
 1206 00d0 00000000 		.word	.LANCHOR13
 1207 00d4 00000000 		.word	.LANCHOR21
 1208 00d8 00000000 		.word	.LANCHOR17
 1209 00dc 00000000 		.word	.LANCHOR25
 1210 00e0 0000C842 		.word	1120403456
 1211 00e4 00000000 		.word	.LANCHOR19
 1212 00e8 00000000 		.word	.LANCHOR28
 1213 00ec 00000000 		.word	.LANCHOR18
 1214 00f0 00000000 		.word	GPTD8
 1215 00f4 00000000 		.word	GPTD6
 1216 00f8 00000000 		.word	.LANCHOR15
 1217 00fc 00000000 		.word	GPTD7
 1218 0100 00000000 		.word	.LANCHOR11
 1219              		.cfi_endproc
 1220              	.LFE294:
 1222              		.section	.text.audio_init,"ax",%progbits
 1223              		.align	1
 1224              		.global	audio_init
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu softvfp
 1230              	audio_init:
 1231              	.LFB289:
 255:quantum/audio/audio_arm.c ****     if (audio_initialized) {
 1232              		.loc 1 255 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236 0000 38B5     		push	{r3, r4, r5, lr}
 1237              		.cfi_def_cfa_offset 16
 1238              		.cfi_offset 3, -16
 1239              		.cfi_offset 4, -12
 1240              		.cfi_offset 5, -8
 1241              		.cfi_offset 14, -4
 256:quantum/audio/audio_arm.c ****         return;
 1242              		.loc 1 256 0
 1243 0002 274C     		ldr	r4, .L123
 1244 0004 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1245 0006 002A     		cmp	r2, #0
 1246 0008 48D1     		bne	.L119
 1247              	.LBB15:
 1248              	.LBB16:
 262:quantum/audio/audio_arm.c ****         eeconfig_init();
 1249              		.loc 1 262 0
 1250 000a FFF7FEFF 		bl	eeconfig_is_enabled
 1251              	.LVL152:
 1252 000e 08B9     		cbnz	r0, .L121
 263:quantum/audio/audio_arm.c ****     }
 1253              		.loc 1 263 0
 1254 0010 FFF7FEFF 		bl	eeconfig_init
 1255              	.LVL153:
 1256              	.L121:
 265:quantum/audio/audio_arm.c **** #else  // ARM EEPROM
 1257              		.loc 1 265 0
 1258 0014 FFF7FEFF 		bl	eeconfig_read_audio
 1259              	.LVL154:
 1260 0018 224D     		ldr	r5, .L123+4
 277:quantum/audio/audio_arm.c ****     palSetPadMode(GPIOA, 5, PAL_MODE_INPUT_ANALOG);
 1261              		.loc 1 277 0
 1262 001a 0322     		movs	r2, #3
 265:quantum/audio/audio_arm.c **** #else  // ARM EEPROM
 1263              		.loc 1 265 0
 1264 001c 2870     		strb	r0, [r5]
 277:quantum/audio/audio_arm.c ****     palSetPadMode(GPIOA, 5, PAL_MODE_INPUT_ANALOG);
 1265              		.loc 1 277 0
 1266 001e 1021     		movs	r1, #16
 1267 0020 4FF09040 		mov	r0, #1207959552
 1268 0024 FFF7FEFF 		bl	_pal_lld_setgroupmode
 1269              	.LVL155:
 278:quantum/audio/audio_arm.c ****     dacStart(&DACD1, &dac1cfg1);
 1270              		.loc 1 278 0
 1271 0028 0322     		movs	r2, #3
 1272 002a 2021     		movs	r1, #32
 1273 002c 4FF09040 		mov	r0, #1207959552
 1274 0030 FFF7FEFF 		bl	_pal_lld_setgroupmode
 1275              	.LVL156:
 279:quantum/audio/audio_arm.c ****     dacStart(&DACD2, &dac1cfg2);
 1276              		.loc 1 279 0
 1277 0034 1C49     		ldr	r1, .L123+8
 1278 0036 1D48     		ldr	r0, .L123+12
 1279 0038 FFF7FEFF 		bl	dacStart
 1280              	.LVL157:
 280:quantum/audio/audio_arm.c **** 
 1281              		.loc 1 280 0
 1282 003c 1C49     		ldr	r1, .L123+16
 1283 003e 1D48     		ldr	r0, .L123+20
 1284 0040 FFF7FEFF 		bl	dacStart
 1285              	.LVL158:
 285:quantum/audio/audio_arm.c ****     START_CHANNEL_2();
 1286              		.loc 1 285 0
 1287 0044 1C49     		ldr	r1, .L123+24
 1288 0046 1D48     		ldr	r0, .L123+28
 1289 0048 FFF7FEFF 		bl	gptStart
 1290              	.LVL159:
 1291 004c 0221     		movs	r1, #2
 1292 004e 1B48     		ldr	r0, .L123+28
 1293 0050 FFF7FEFF 		bl	gptStartContinuous
 1294              	.LVL160:
 286:quantum/audio/audio_arm.c **** 
 1295              		.loc 1 286 0
 1296 0054 1A49     		ldr	r1, .L123+32
 1297 0056 1B48     		ldr	r0, .L123+36
 1298 0058 FFF7FEFF 		bl	gptStart
 1299              	.LVL161:
 1300 005c 0221     		movs	r1, #2
 1301 005e 1948     		ldr	r0, .L123+36
 1302 0060 FFF7FEFF 		bl	gptStartContinuous
 1303              	.LVL162:
 291:quantum/audio/audio_arm.c ****     dacStartConversion(&DACD2, &dacgrpcfg2, (dacsample_t *)dac_buffer_2, DAC_BUFFER_SIZE);
 1304              		.loc 1 291 0
 1305 0064 6423     		movs	r3, #100
 1306 0066 184A     		ldr	r2, .L123+40
 1307 0068 1849     		ldr	r1, .L123+44
 1308 006a 1048     		ldr	r0, .L123+12
 1309 006c FFF7FEFF 		bl	dacStartConversion
 1310              	.LVL163:
 292:quantum/audio/audio_arm.c **** 
 1311              		.loc 1 292 0
 1312 0070 6423     		movs	r3, #100
 1313 0072 174A     		ldr	r2, .L123+48
 1314 0074 1749     		ldr	r1, .L123+52
 1315 0076 0F48     		ldr	r0, .L123+20
 1316 0078 FFF7FEFF 		bl	dacStartConversion
 1317              	.LVL164:
 294:quantum/audio/audio_arm.c **** 
 1318              		.loc 1 294 0
 1319 007c 0123     		movs	r3, #1
 1320 007e 2370     		strb	r3, [r4]
 296:quantum/audio/audio_arm.c ****         PLAY_SONG(startup_song);
 1321              		.loc 1 296 0
 1322 0080 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1323 0082 DB07     		lsls	r3, r3, #31
 1324 0084 06D5     		bpl	.L122
 297:quantum/audio/audio_arm.c ****     } else {
 1325              		.loc 1 297 0
 1326 0086 0022     		movs	r2, #0
 1327 0088 0521     		movs	r1, #5
 1328 008a 1348     		ldr	r0, .L123+56
 1329              	.LBE16:
 1330              	.LBE15:
 301:quantum/audio/audio_arm.c **** 
 1331              		.loc 1 301 0
 1332 008c BDE83840 		pop	{r3, r4, r5, lr}
 1333              		.cfi_remember_state
 1334              		.cfi_restore 14
 1335              		.cfi_restore 5
 1336              		.cfi_restore 4
 1337              		.cfi_restore 3
 1338              		.cfi_def_cfa_offset 0
 1339              	.LBB19:
 1340              	.LBB17:
 297:quantum/audio/audio_arm.c ****     } else {
 1341              		.loc 1 297 0
 1342 0090 FFF7FEBF 		b	play_notes
 1343              	.LVL165:
 1344              	.L122:
 1345              		.cfi_restore_state
 1346              	.LBE17:
 1347              	.LBE19:
 301:quantum/audio/audio_arm.c **** 
 1348              		.loc 1 301 0
 1349 0094 BDE83840 		pop	{r3, r4, r5, lr}
 1350              		.cfi_remember_state
 1351              		.cfi_restore 14
 1352              		.cfi_restore 5
 1353              		.cfi_restore 4
 1354              		.cfi_restore 3
 1355              		.cfi_def_cfa_offset 0
 1356              	.LBB20:
 1357              	.LBB18:
 299:quantum/audio/audio_arm.c ****     }
 1358              		.loc 1 299 0
 1359 0098 FFF7FEBF 		b	stop_all_notes
 1360              	.LVL166:
 1361              	.L119:
 1362              		.cfi_restore_state
 1363              	.LBE18:
 1364              	.LBE20:
 301:quantum/audio/audio_arm.c **** 
 1365              		.loc 1 301 0
 1366 009c 38BD     		pop	{r3, r4, r5, pc}
 1367              	.L124:
 1368 009e 00BF     		.align	2
 1369              	.L123:
 1370 00a0 00000000 		.word	.LANCHOR27
 1371 00a4 00000000 		.word	.LANCHOR26
 1372 00a8 00000000 		.word	.LANCHOR29
 1373 00ac 00000000 		.word	DACD1
 1374 00b0 00000000 		.word	.LANCHOR30
 1375 00b4 00000000 		.word	DACD2
 1376 00b8 00000000 		.word	.LANCHOR15
 1377 00bc 00000000 		.word	GPTD6
 1378 00c0 00000000 		.word	.LANCHOR11
 1379 00c4 00000000 		.word	GPTD7
 1380 00c8 00000000 		.word	.LANCHOR1
 1381 00cc 00000000 		.word	.LANCHOR31
 1382 00d0 00000000 		.word	.LANCHOR32
 1383 00d4 00000000 		.word	.LANCHOR33
 1384 00d8 00000000 		.word	.LANCHOR34
 1385              		.cfi_endproc
 1386              	.LFE289:
 1388              		.section	.text.stop_all_notes,"ax",%progbits
 1389              		.align	1
 1390              		.global	stop_all_notes
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1394              		.fpu softvfp
 1396              	stop_all_notes:
 1397              	.LFB290:
 303:quantum/audio/audio_arm.c ****     dprintf("audio stop all notes");
 1398              		.loc 1 303 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 304:quantum/audio/audio_arm.c **** 
 1402              		.loc 1 304 0
 1403 0000 174B     		ldr	r3, .L133
 1404 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 0004 DB07     		lsls	r3, r3, #31
 303:quantum/audio/audio_arm.c ****     dprintf("audio stop all notes");
 1406              		.loc 1 303 0
 1407 0006 10B5     		push	{r4, lr}
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 4, -8
 1410              		.cfi_offset 14, -4
 304:quantum/audio/audio_arm.c **** 
 1411              		.loc 1 304 0
 1412 0008 02D5     		bpl	.L126
 304:quantum/audio/audio_arm.c **** 
 1413              		.loc 1 304 0 is_stmt 0 discriminator 1
 1414 000a 1648     		ldr	r0, .L133+4
 1415 000c FFF7FEFF 		bl	tfp_printf
 1416              	.LVL167:
 1417              	.L126:
 306:quantum/audio/audio_arm.c ****         audio_init();
 1418              		.loc 1 306 0 is_stmt 1
 1419 0010 154B     		ldr	r3, .L133+8
 1420 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1421 0014 0BB9     		cbnz	r3, .L127
 307:quantum/audio/audio_arm.c ****     }
 1422              		.loc 1 307 0
 1423 0016 FFF7FEFF 		bl	audio_init
 1424              	.LVL168:
 1425              	.L127:
 309:quantum/audio/audio_arm.c **** 
 1426              		.loc 1 309 0
 1427 001a 144B     		ldr	r3, .L133+12
 311:quantum/audio/audio_arm.c ****     gptStopTimer(&GPTD7);
 1428              		.loc 1 311 0
 1429 001c 1448     		ldr	r0, .L133+16
 309:quantum/audio/audio_arm.c **** 
 1430              		.loc 1 309 0
 1431 001e 0024     		movs	r4, #0
 1432 0020 1C60     		str	r4, [r3]
 311:quantum/audio/audio_arm.c ****     gptStopTimer(&GPTD7);
 1433              		.loc 1 311 0
 1434 0022 FFF7FEFF 		bl	gptStopTimer
 1435              	.LVL169:
 312:quantum/audio/audio_arm.c ****     gptStopTimer(&GPTD8);
 1436              		.loc 1 312 0
 1437 0026 1348     		ldr	r0, .L133+20
 1438 0028 FFF7FEFF 		bl	gptStopTimer
 1439              	.LVL170:
 313:quantum/audio/audio_arm.c **** 
 1440              		.loc 1 313 0
 1441 002c 1248     		ldr	r0, .L133+24
 1442 002e FFF7FEFF 		bl	gptStopTimer
 1443              	.LVL171:
 315:quantum/audio/audio_arm.c ****     playing_note  = false;
 1444              		.loc 1 315 0
 1445 0032 124B     		ldr	r3, .L133+28
 1446              	.LBB21:
 323:quantum/audio/audio_arm.c ****     }
 1447              		.loc 1 323 0
 1448 0034 1249     		ldr	r1, .L133+32
 1449              	.LBE21:
 315:quantum/audio/audio_arm.c ****     playing_note  = false;
 1450              		.loc 1 315 0
 1451 0036 1C70     		strb	r4, [r3]
 316:quantum/audio/audio_arm.c ****     frequency     = 0;
 1452              		.loc 1 316 0
 1453 0038 124B     		ldr	r3, .L133+36
 1454 003a 1C70     		strb	r4, [r3]
 317:quantum/audio/audio_arm.c ****     frequency_alt = 0;
 1455              		.loc 1 317 0
 1456 003c 124B     		ldr	r3, .L133+40
 1457 003e 0022     		movs	r2, #0
 1458 0040 1A60     		str	r2, [r3]	@ float
 318:quantum/audio/audio_arm.c ****     volume        = 0;
 1459              		.loc 1 318 0
 1460 0042 124B     		ldr	r3, .L133+44
 1461 0044 1A60     		str	r2, [r3]	@ float
 319:quantum/audio/audio_arm.c **** 
 1462              		.loc 1 319 0
 1463 0046 124B     		ldr	r3, .L133+48
 1464 0048 1C60     		str	r4, [r3]
 1465              	.LVL172:
 1466 004a 2346     		mov	r3, r4
 1467              	.LBB22:
 322:quantum/audio/audio_arm.c ****         volumes[i]     = 0;
 1468              		.loc 1 322 0
 1469 004c 114C     		ldr	r4, .L133+52
 323:quantum/audio/audio_arm.c ****     }
 1470              		.loc 1 323 0
 1471 004e 1846     		mov	r0, r3
 1472              	.LVL173:
 1473              	.L128:
 322:quantum/audio/audio_arm.c ****         volumes[i]     = 0;
 1474              		.loc 1 322 0 discriminator 3
 1475 0050 44F82320 		str	r2, [r4, r3, lsl #2]	@ float
 323:quantum/audio/audio_arm.c ****     }
 1476              		.loc 1 323 0 discriminator 3
 1477 0054 41F82300 		str	r0, [r1, r3, lsl #2]
 1478              	.LVL174:
 1479 0058 0133     		adds	r3, r3, #1
 1480              	.LVL175:
 321:quantum/audio/audio_arm.c ****         frequencies[i] = 0;
 1481              		.loc 1 321 0 discriminator 3
 1482 005a 082B     		cmp	r3, #8
 1483 005c F8D1     		bne	.L128
 1484              	.LBE22:
 325:quantum/audio/audio_arm.c **** 
 1485              		.loc 1 325 0
 1486 005e 10BD     		pop	{r4, pc}
 1487              	.L134:
 1488              		.align	2
 1489              	.L133:
 1490 0060 00000000 		.word	debug_config
 1491 0064 00000000 		.word	.LC1
 1492 0068 00000000 		.word	.LANCHOR27
 1493 006c 00000000 		.word	.LANCHOR5
 1494 0070 00000000 		.word	GPTD6
 1495 0074 00000000 		.word	GPTD7
 1496 0078 00000000 		.word	GPTD8
 1497 007c 00000000 		.word	.LANCHOR16
 1498 0080 00000000 		.word	.LANCHOR36
 1499 0084 00000000 		.word	.LANCHOR4
 1500 0088 00000000 		.word	.LANCHOR14
 1501 008c 00000000 		.word	.LANCHOR9
 1502 0090 00000000 		.word	.LANCHOR35
 1503 0094 00000000 		.word	.LANCHOR7
 1504              		.cfi_endproc
 1505              	.LFE290:
 1507              		.global	__aeabi_f2iz
 1508              		.section	.text.stop_note,"ax",%progbits
 1509              		.align	1
 1510              		.global	stop_note
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu softvfp
 1516              	stop_note:
 1517              	.LFB291:
 327:quantum/audio/audio_arm.c ****     dprintf("audio stop note freq=%d", (int)freq);
 1518              		.loc 1 327 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL176:
 1523 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1524              		.cfi_def_cfa_offset 24
 1525              		.cfi_offset 3, -24
 1526              		.cfi_offset 4, -20
 1527              		.cfi_offset 5, -16
 1528              		.cfi_offset 6, -12
 1529              		.cfi_offset 7, -8
 1530              		.cfi_offset 14, -4
 328:quantum/audio/audio_arm.c **** 
 1531              		.loc 1 328 0
 1532 0002 2C4B     		ldr	r3, .L157
 1533 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 0006 DB07     		lsls	r3, r3, #31
 327:quantum/audio/audio_arm.c ****     dprintf("audio stop note freq=%d", (int)freq);
 1535              		.loc 1 327 0
 1536 0008 0746     		mov	r7, r0
 328:quantum/audio/audio_arm.c **** 
 1537              		.loc 1 328 0
 1538 000a 05D5     		bpl	.L136
 328:quantum/audio/audio_arm.c **** 
 1539              		.loc 1 328 0 is_stmt 0 discriminator 1
 1540 000c FFF7FEFF 		bl	__aeabi_f2iz
 1541              	.LVL177:
 1542 0010 0146     		mov	r1, r0
 1543 0012 2948     		ldr	r0, .L157+4
 1544 0014 FFF7FEFF 		bl	tfp_printf
 1545              	.LVL178:
 1546              	.L136:
 330:quantum/audio/audio_arm.c ****         if (!audio_initialized) {
 1547              		.loc 1 330 0 is_stmt 1
 1548 0018 284E     		ldr	r6, .L157+8
 1549 001a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1550 001c 002B     		cmp	r3, #0
 1551 001e 39D0     		beq	.L135
 331:quantum/audio/audio_arm.c ****             audio_init();
 1552              		.loc 1 331 0
 1553 0020 274B     		ldr	r3, .L157+12
 1554 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1555 0024 0BB9     		cbnz	r3, .L139
 332:quantum/audio/audio_arm.c ****         }
 1556              		.loc 1 332 0
 1557 0026 FFF7FEFF 		bl	audio_init
 1558              	.LVL179:
 1559              	.L139:
 1560              	.LBB23:
 335:quantum/audio/audio_arm.c ****                 frequencies[i] = 0;
 1561              		.loc 1 335 0
 1562 002a 264D     		ldr	r5, .L157+16
 334:quantum/audio/audio_arm.c ****             if (frequencies[i] == freq) {
 1563              		.loc 1 334 0
 1564 002c 0724     		movs	r4, #7
 1565              	.LVL180:
 1566              	.L145:
 335:quantum/audio/audio_arm.c ****                 frequencies[i] = 0;
 1567              		.loc 1 335 0
 1568 002e 3946     		mov	r1, r7
 1569 0030 55F82400 		ldr	r0, [r5, r4, lsl #2]	@ float
 1570 0034 FFF7FEFF 		bl	__aeabi_fcmpeq
 1571              	.LVL181:
 1572 0038 0028     		cmp	r0, #0
 1573 003a 36D0     		beq	.L155
 337:quantum/audio/audio_arm.c ****                 for (int j = i; (j < 7); j++) {
 1574              		.loc 1 337 0
 1575 003c 224A     		ldr	r2, .L157+20
 336:quantum/audio/audio_arm.c ****                 volumes[i]     = 0;
 1576              		.loc 1 336 0
 1577 003e 0021     		movs	r1, #0
 337:quantum/audio/audio_arm.c ****                 for (int j = i; (j < 7); j++) {
 1578              		.loc 1 337 0
 1579 0040 0020     		movs	r0, #0
 1580 0042 42F82400 		str	r0, [r2, r4, lsl #2]
 1581              	.LVL182:
 336:quantum/audio/audio_arm.c ****                 volumes[i]     = 0;
 1582              		.loc 1 336 0
 1583 0046 45F82410 		str	r1, [r5, r4, lsl #2]	@ float
 1584 004a A400     		lsls	r4, r4, #2
 1585 004c 2B19     		adds	r3, r5, r4
 1586 004e 1444     		add	r4, r4, r2
 1587 0050 1E4A     		ldr	r2, .L157+24
 1588              	.L142:
 1589              	.LBB24:
 338:quantum/audio/audio_arm.c ****                     frequencies[j]     = frequencies[j + 1];
 1590              		.loc 1 338 0 discriminator 1
 1591 0052 9342     		cmp	r3, r2
 1592 0054 1FD1     		bne	.L143
 1593              	.L144:
 1594              	.LBE24:
 1595              	.LBE23:
 347:quantum/audio/audio_arm.c ****         if (voices < 0) {
 1596              		.loc 1 347 0
 1597 0056 1E4B     		ldr	r3, .L157+28
 1598 0058 1A68     		ldr	r2, [r3]
 348:quantum/audio/audio_arm.c ****             voices = 0;
 1599              		.loc 1 348 0
 1600 005a 013A     		subs	r2, r2, #1
 349:quantum/audio/audio_arm.c ****         }
 1601              		.loc 1 349 0
 1602 005c 48BF     		it	mi
 1603 005e 0022     		movmi	r2, #0
 1604 0060 1A60     		str	r2, [r3]
 351:quantum/audio/audio_arm.c ****             voice_place = 0;
 1605              		.loc 1 351 0
 1606 0062 1C68     		ldr	r4, [r3]
 1607 0064 1B4B     		ldr	r3, .L157+32
 1608 0066 1A68     		ldr	r2, [r3]
 1609 0068 A242     		cmp	r2, r4
 352:quantum/audio/audio_arm.c ****         }
 1610              		.loc 1 352 0
 1611 006a A4BF     		itt	ge
 1612 006c 0022     		movge	r2, #0
 1613 006e 1A60     		strge	r2, [r3]
 354:quantum/audio/audio_arm.c ****             STOP_CHANNEL_1();
 1614              		.loc 1 354 0
 1615 0070 84B9     		cbnz	r4, .L135
 355:quantum/audio/audio_arm.c ****             STOP_CHANNEL_2();
 1616              		.loc 1 355 0
 1617 0072 1948     		ldr	r0, .L157+36
 1618 0074 FFF7FEFF 		bl	gptStopTimer
 1619              	.LVL183:
 356:quantum/audio/audio_arm.c ****             gptStopTimer(&GPTD8);
 1620              		.loc 1 356 0
 1621 0078 1848     		ldr	r0, .L157+40
 1622 007a FFF7FEFF 		bl	gptStopTimer
 1623              	.LVL184:
 357:quantum/audio/audio_arm.c ****             frequency     = 0;
 1624              		.loc 1 357 0
 1625 007e 1848     		ldr	r0, .L157+44
 1626 0080 FFF7FEFF 		bl	gptStopTimer
 1627              	.LVL185:
 358:quantum/audio/audio_arm.c ****             frequency_alt = 0;
 1628              		.loc 1 358 0
 1629 0084 174A     		ldr	r2, .L157+48
 361:quantum/audio/audio_arm.c ****         }
 1630              		.loc 1 361 0
 1631 0086 3470     		strb	r4, [r6]
 358:quantum/audio/audio_arm.c ****             frequency_alt = 0;
 1632              		.loc 1 358 0
 1633 0088 0023     		movs	r3, #0
 1634 008a 1360     		str	r3, [r2]	@ float
 359:quantum/audio/audio_arm.c ****             volume        = 0;
 1635              		.loc 1 359 0
 1636 008c 164A     		ldr	r2, .L157+52
 1637 008e 1360     		str	r3, [r2]	@ float
 360:quantum/audio/audio_arm.c ****             playing_note  = false;
 1638              		.loc 1 360 0
 1639 0090 164B     		ldr	r3, .L157+56
 1640 0092 1C60     		str	r4, [r3]
 1641              	.L135:
 364:quantum/audio/audio_arm.c **** 
 1642              		.loc 1 364 0
 1643 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1644              	.LVL186:
 1645              	.L143:
 1646              	.LBB26:
 1647              	.LBB25:
 339:quantum/audio/audio_arm.c ****                     frequencies[j + 1] = 0;
 1648              		.loc 1 339 0 discriminator 3
 1649 0096 53F8045F 		ldr	r5, [r3, #4]!	@ float
 1650 009a 43F8045C 		str	r5, [r3, #-4]	@ float
 341:quantum/audio/audio_arm.c ****                     volumes[j + 1]     = 0;
 1651              		.loc 1 341 0 discriminator 3
 1652 009e 54F8045F 		ldr	r5, [r4, #4]!
 340:quantum/audio/audio_arm.c ****                     volumes[j]         = volumes[j + 1];
 1653              		.loc 1 340 0 discriminator 3
 1654 00a2 1960     		str	r1, [r3]	@ float
 342:quantum/audio/audio_arm.c ****                 }
 1655              		.loc 1 342 0 discriminator 3
 1656 00a4 44E90150 		strd	r5, r0, [r4, #-4]
 1657 00a8 D3E7     		b	.L142
 1658              	.L155:
 1659              	.LVL187:
 1660              	.LBE25:
 334:quantum/audio/audio_arm.c ****             if (frequencies[i] == freq) {
 1661              		.loc 1 334 0 discriminator 2
 1662 00aa 14F1FF34 		adds	r4, r4, #-1
 1663              	.LVL188:
 1664 00ae BED2     		bcs	.L145
 1665 00b0 D1E7     		b	.L144
 1666              	.L158:
 1667 00b2 00BF     		.align	2
 1668              	.L157:
 1669 00b4 00000000 		.word	debug_config
 1670 00b8 00000000 		.word	.LC2
 1671 00bc 00000000 		.word	.LANCHOR4
 1672 00c0 00000000 		.word	.LANCHOR27
 1673 00c4 00000000 		.word	.LANCHOR7
 1674 00c8 00000000 		.word	.LANCHOR36
 1675 00cc 1C000000 		.word	.LANCHOR7+28
 1676 00d0 00000000 		.word	.LANCHOR5
 1677 00d4 00000000 		.word	.LANCHOR12
 1678 00d8 00000000 		.word	GPTD6
 1679 00dc 00000000 		.word	GPTD7
 1680 00e0 00000000 		.word	GPTD8
 1681 00e4 00000000 		.word	.LANCHOR14
 1682 00e8 00000000 		.word	.LANCHOR9
 1683 00ec 00000000 		.word	.LANCHOR35
 1684              	.LBE26:
 1685              		.cfi_endproc
 1686              	.LFE291:
 1688              		.section	.text.play_note,"ax",%progbits
 1689              		.align	1
 1690              		.global	play_note
 1691              		.syntax unified
 1692              		.thumb
 1693              		.thumb_func
 1694              		.fpu softvfp
 1696              	play_note:
 1697              	.LFB293:
 573:quantum/audio/audio_arm.c ****     dprintf("audio play note freq=%d vol=%d", (int)freq, vol);
 1698              		.loc 1 573 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 1702              	.LVL189:
 574:quantum/audio/audio_arm.c **** 
 1703              		.loc 1 574 0
 1704 0000 2A4B     		ldr	r3, .L176
 1705 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1706 0004 DA07     		lsls	r2, r3, #31
 573:quantum/audio/audio_arm.c ****     dprintf("audio play note freq=%d vol=%d", (int)freq, vol);
 1707              		.loc 1 573 0
 1708 0006 70B5     		push	{r4, r5, r6, lr}
 1709              		.cfi_def_cfa_offset 16
 1710              		.cfi_offset 4, -16
 1711              		.cfi_offset 5, -12
 1712              		.cfi_offset 6, -8
 1713              		.cfi_offset 14, -4
 573:quantum/audio/audio_arm.c ****     dprintf("audio play note freq=%d vol=%d", (int)freq, vol);
 1714              		.loc 1 573 0
 1715 0008 0646     		mov	r6, r0
 1716 000a 0D46     		mov	r5, r1
 574:quantum/audio/audio_arm.c **** 
 1717              		.loc 1 574 0
 1718 000c 06D5     		bpl	.L160
 574:quantum/audio/audio_arm.c **** 
 1719              		.loc 1 574 0 is_stmt 0 discriminator 1
 1720 000e FFF7FEFF 		bl	__aeabi_f2iz
 1721              	.LVL190:
 1722 0012 2A46     		mov	r2, r5
 1723 0014 0146     		mov	r1, r0
 1724 0016 2648     		ldr	r0, .L176+4
 1725 0018 FFF7FEFF 		bl	tfp_printf
 1726              	.LVL191:
 1727              	.L160:
 576:quantum/audio/audio_arm.c ****         audio_init();
 1728              		.loc 1 576 0 is_stmt 1
 1729 001c 254B     		ldr	r3, .L176+8
 1730 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 0020 0BB9     		cbnz	r3, .L161
 577:quantum/audio/audio_arm.c ****     }
 1732              		.loc 1 577 0
 1733 0022 FFF7FEFF 		bl	audio_init
 1734              	.LVL192:
 1735              	.L161:
 580:quantum/audio/audio_arm.c ****         // Cancel notes if notes are playing
 1736              		.loc 1 580 0
 1737 0026 244B     		ldr	r3, .L176+12
 1738 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1739 002a DB07     		lsls	r3, r3, #31
 1740 002c 3CD5     		bpl	.L159
 580:quantum/audio/audio_arm.c ****         // Cancel notes if notes are playing
 1741              		.loc 1 580 0 is_stmt 0 discriminator 1
 1742 002e 234C     		ldr	r4, .L176+16
 1743 0030 2368     		ldr	r3, [r4]
 1744 0032 072B     		cmp	r3, #7
 1745 0034 38DC     		bgt	.L159
 582:quantum/audio/audio_arm.c ****             stop_all_notes();
 1746              		.loc 1 582 0 is_stmt 1
 1747 0036 224B     		ldr	r3, .L176+20
 1748 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749 003a 0BB1     		cbz	r3, .L163
 583:quantum/audio/audio_arm.c ****         }
 1750              		.loc 1 583 0
 1751 003c FFF7FEFF 		bl	stop_all_notes
 1752              	.LVL193:
 1753              	.L163:
 586:quantum/audio/audio_arm.c **** 
 1754              		.loc 1 586 0
 1755 0040 204B     		ldr	r3, .L176+24
 1756 0042 0122     		movs	r2, #1
 1757 0044 1A70     		strb	r2, [r3]
 588:quantum/audio/audio_arm.c **** 
 1758              		.loc 1 588 0
 1759 0046 204B     		ldr	r3, .L176+28
 1760 0048 0022     		movs	r2, #0
 1761 004a 1A80     		strh	r2, [r3]	@ movhi
 590:quantum/audio/audio_arm.c ****             frequencies[voices] = freq;
 1762              		.loc 1 590 0
 1763 004c 0021     		movs	r1, #0
 1764 004e 3046     		mov	r0, r6
 1765 0050 FFF7FEFF 		bl	__aeabi_fcmpgt
 1766              	.LVL194:
 1767 0054 40B1     		cbz	r0, .L164
 591:quantum/audio/audio_arm.c ****             volumes[voices]     = vol;
 1768              		.loc 1 591 0
 1769 0056 2368     		ldr	r3, [r4]
 1770 0058 1C4A     		ldr	r2, .L176+32
 1771 005a 42F82360 		str	r6, [r2, r3, lsl #2]	@ float
 592:quantum/audio/audio_arm.c ****             voices++;
 1772              		.loc 1 592 0
 1773 005e 1C4A     		ldr	r2, .L176+36
 1774 0060 42F82350 		str	r5, [r2, r3, lsl #2]
 593:quantum/audio/audio_arm.c ****         }
 1775              		.loc 1 593 0
 1776 0064 0133     		adds	r3, r3, #1
 1777 0066 2360     		str	r3, [r4]
 1778              	.L164:
 596:quantum/audio/audio_arm.c ****         gptStartContinuous(&GPTD8, 2U);
 1779              		.loc 1 596 0
 1780 0068 1A49     		ldr	r1, .L176+40
 1781 006a 1B48     		ldr	r0, .L176+44
 1782 006c FFF7FEFF 		bl	gptStart
 1783              	.LVL195:
 597:quantum/audio/audio_arm.c ****         RESTART_CHANNEL_1();
 1784              		.loc 1 597 0
 1785 0070 0221     		movs	r1, #2
 1786 0072 1948     		ldr	r0, .L176+44
 1787 0074 FFF7FEFF 		bl	gptStartContinuous
 1788              	.LVL196:
 598:quantum/audio/audio_arm.c ****         RESTART_CHANNEL_2();
 1789              		.loc 1 598 0
 1790 0078 1848     		ldr	r0, .L176+48
 1791 007a FFF7FEFF 		bl	gptStopTimer
 1792              	.LVL197:
 1793 007e 1849     		ldr	r1, .L176+52
 1794 0080 1648     		ldr	r0, .L176+48
 1795 0082 FFF7FEFF 		bl	gptStart
 1796              	.LVL198:
 1797 0086 0221     		movs	r1, #2
 1798 0088 1448     		ldr	r0, .L176+48
 1799 008a FFF7FEFF 		bl	gptStartContinuous
 1800              	.LVL199:
 599:quantum/audio/audio_arm.c ****     }
 1801              		.loc 1 599 0
 1802 008e 1548     		ldr	r0, .L176+56
 1803 0090 FFF7FEFF 		bl	gptStopTimer
 1804              	.LVL200:
 1805 0094 1449     		ldr	r1, .L176+60
 1806 0096 1348     		ldr	r0, .L176+56
 1807 0098 FFF7FEFF 		bl	gptStart
 1808              	.LVL201:
 1809 009c 0221     		movs	r1, #2
 1810 009e 1148     		ldr	r0, .L176+56
 601:quantum/audio/audio_arm.c **** 
 1811              		.loc 1 601 0
 1812 00a0 BDE87040 		pop	{r4, r5, r6, lr}
 1813              		.cfi_remember_state
 1814              		.cfi_restore 14
 1815              		.cfi_restore 6
 1816              		.cfi_restore 5
 1817              		.cfi_restore 4
 1818              		.cfi_def_cfa_offset 0
 1819              	.LVL202:
 599:quantum/audio/audio_arm.c ****     }
 1820              		.loc 1 599 0
 1821 00a4 FFF7FEBF 		b	gptStartContinuous
 1822              	.LVL203:
 1823              	.L159:
 1824              		.cfi_restore_state
 601:quantum/audio/audio_arm.c **** 
 1825              		.loc 1 601 0
 1826 00a8 70BD     		pop	{r4, r5, r6, pc}
 1827              	.LVL204:
 1828              	.L177:
 1829 00aa 00BF     		.align	2
 1830              	.L176:
 1831 00ac 00000000 		.word	debug_config
 1832 00b0 00000000 		.word	.LC3
 1833 00b4 00000000 		.word	.LANCHOR27
 1834 00b8 00000000 		.word	.LANCHOR26
 1835 00bc 00000000 		.word	.LANCHOR5
 1836 00c0 00000000 		.word	.LANCHOR16
 1837 00c4 00000000 		.word	.LANCHOR4
 1838 00c8 00000000 		.word	.LANCHOR10
 1839 00cc 00000000 		.word	.LANCHOR7
 1840 00d0 00000000 		.word	.LANCHOR36
 1841 00d4 00000000 		.word	.LANCHOR28
 1842 00d8 00000000 		.word	GPTD8
 1843 00dc 00000000 		.word	GPTD6
 1844 00e0 00000000 		.word	.LANCHOR15
 1845 00e4 00000000 		.word	GPTD7
 1846 00e8 00000000 		.word	.LANCHOR11
 1847              		.cfi_endproc
 1848              	.LFE293:
 1850              		.section	.text.is_playing_notes,"ax",%progbits
 1851              		.align	1
 1852              		.global	is_playing_notes
 1853              		.syntax unified
 1854              		.thumb
 1855              		.thumb_func
 1856              		.fpu softvfp
 1858              	is_playing_notes:
 1859              	.LFB295:
 633:quantum/audio/audio_arm.c **** 
 634:quantum/audio/audio_arm.c **** bool is_playing_notes(void) { return playing_notes; }
 1860              		.loc 1 634 0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 0
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 1864              		@ link register save eliminated.
 1865              		.loc 1 634 0
 1866 0000 014B     		ldr	r3, .L179
 1867 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1868 0004 7047     		bx	lr
 1869              	.L180:
 1870 0006 00BF     		.align	2
 1871              	.L179:
 1872 0008 00000000 		.word	.LANCHOR16
 1873              		.cfi_endproc
 1874              	.LFE295:
 1876              		.section	.text.is_audio_on,"ax",%progbits
 1877              		.align	1
 1878              		.global	is_audio_on
 1879              		.syntax unified
 1880              		.thumb
 1881              		.thumb_func
 1882              		.fpu softvfp
 1884              	is_audio_on:
 1885              	.LFB296:
 635:quantum/audio/audio_arm.c **** 
 636:quantum/audio/audio_arm.c **** bool is_audio_on(void) { return (audio_config.enable != 0); }
 1886              		.loc 1 636 0
 1887              		.cfi_startproc
 1888              		@ args = 0, pretend = 0, frame = 0
 1889              		@ frame_needed = 0, uses_anonymous_args = 0
 1890              		@ link register save eliminated.
 1891              		.loc 1 636 0
 1892 0000 024B     		ldr	r3, .L182
 1893 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1894 0004 00F00100 		and	r0, r0, #1
 1895 0008 7047     		bx	lr
 1896              	.L183:
 1897 000a 00BF     		.align	2
 1898              	.L182:
 1899 000c 00000000 		.word	.LANCHOR26
 1900              		.cfi_endproc
 1901              	.LFE296:
 1903              		.section	.text.audio_toggle,"ax",%progbits
 1904              		.align	1
 1905              		.global	audio_toggle
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1909              		.fpu softvfp
 1911              	audio_toggle:
 1912              	.LFB297:
 637:quantum/audio/audio_arm.c **** 
 638:quantum/audio/audio_arm.c **** void audio_toggle(void) {
 1913              		.loc 1 638 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 1917 0000 10B5     		push	{r4, lr}
 1918              		.cfi_def_cfa_offset 8
 1919              		.cfi_offset 4, -8
 1920              		.cfi_offset 14, -4
 639:quantum/audio/audio_arm.c ****     audio_config.enable ^= 1;
 1921              		.loc 1 639 0
 1922 0002 0A4C     		ldr	r4, .L186
 1923 0004 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1924 0006 C0F30003 		ubfx	r3, r0, #0, #1
 1925 000a 83F00103 		eor	r3, r3, #1
 1926 000e 63F30000 		bfi	r0, r3, #0, #1
 1927 0012 2070     		strb	r0, [r4]
 640:quantum/audio/audio_arm.c ****     eeconfig_update_audio(audio_config.raw);
 1928              		.loc 1 640 0
 1929 0014 C0B2     		uxtb	r0, r0
 1930 0016 FFF7FEFF 		bl	eeconfig_update_audio
 1931              	.LVL205:
 641:quantum/audio/audio_arm.c ****     if (audio_config.enable) {
 1932              		.loc 1 641 0
 1933 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1934 001c DB07     		lsls	r3, r3, #31
 1935 001e 03D5     		bpl	.L184
 642:quantum/audio/audio_arm.c ****         audio_on_user();
 643:quantum/audio/audio_arm.c ****     }
 644:quantum/audio/audio_arm.c **** }
 1936              		.loc 1 644 0
 1937 0020 BDE81040 		pop	{r4, lr}
 1938              		.cfi_remember_state
 1939              		.cfi_restore 14
 1940              		.cfi_restore 4
 1941              		.cfi_def_cfa_offset 0
 642:quantum/audio/audio_arm.c ****         audio_on_user();
 1942              		.loc 1 642 0
 1943 0024 FFF7FEBF 		b	audio_on_user
 1944              	.LVL206:
 1945              	.L184:
 1946              		.cfi_restore_state
 1947              		.loc 1 644 0
 1948 0028 10BD     		pop	{r4, pc}
 1949              	.L187:
 1950 002a 00BF     		.align	2
 1951              	.L186:
 1952 002c 00000000 		.word	.LANCHOR26
 1953              		.cfi_endproc
 1954              	.LFE297:
 1956              		.section	.text.audio_on,"ax",%progbits
 1957              		.align	1
 1958              		.global	audio_on
 1959              		.syntax unified
 1960              		.thumb
 1961              		.thumb_func
 1962              		.fpu softvfp
 1964              	audio_on:
 1965              	.LFB298:
 645:quantum/audio/audio_arm.c **** 
 646:quantum/audio/audio_arm.c **** void audio_on(void) {
 1966              		.loc 1 646 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970 0000 08B5     		push	{r3, lr}
 1971              		.cfi_def_cfa_offset 8
 1972              		.cfi_offset 3, -8
 1973              		.cfi_offset 14, -4
 647:quantum/audio/audio_arm.c ****     audio_config.enable = 1;
 1974              		.loc 1 647 0
 1975 0002 054B     		ldr	r3, .L189
 1976 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1977 0006 40F00100 		orr	r0, r0, #1
 1978 000a 1870     		strb	r0, [r3]
 648:quantum/audio/audio_arm.c ****     eeconfig_update_audio(audio_config.raw);
 1979              		.loc 1 648 0
 1980 000c FFF7FEFF 		bl	eeconfig_update_audio
 1981              	.LVL207:
 649:quantum/audio/audio_arm.c ****     audio_on_user();
 650:quantum/audio/audio_arm.c **** }
 1982              		.loc 1 650 0
 1983 0010 BDE80840 		pop	{r3, lr}
 1984              		.cfi_restore 14
 1985              		.cfi_restore 3
 1986              		.cfi_def_cfa_offset 0
 649:quantum/audio/audio_arm.c ****     audio_on_user();
 1987              		.loc 1 649 0
 1988 0014 FFF7FEBF 		b	audio_on_user
 1989              	.LVL208:
 1990              	.L190:
 1991              		.align	2
 1992              	.L189:
 1993 0018 00000000 		.word	.LANCHOR26
 1994              		.cfi_endproc
 1995              	.LFE298:
 1997              		.section	.text.audio_off,"ax",%progbits
 1998              		.align	1
 1999              		.global	audio_off
 2000              		.syntax unified
 2001              		.thumb
 2002              		.thumb_func
 2003              		.fpu softvfp
 2005              	audio_off:
 2006              	.LFB299:
 651:quantum/audio/audio_arm.c **** 
 652:quantum/audio/audio_arm.c **** void audio_off(void) {
 2007              		.loc 1 652 0
 2008              		.cfi_startproc
 2009              		@ args = 0, pretend = 0, frame = 0
 2010              		@ frame_needed = 0, uses_anonymous_args = 0
 2011 0000 08B5     		push	{r3, lr}
 2012              		.cfi_def_cfa_offset 8
 2013              		.cfi_offset 3, -8
 2014              		.cfi_offset 14, -4
 653:quantum/audio/audio_arm.c ****     stop_all_notes();
 2015              		.loc 1 653 0
 2016 0002 FFF7FEFF 		bl	stop_all_notes
 2017              	.LVL209:
 654:quantum/audio/audio_arm.c ****     audio_config.enable = 0;
 2018              		.loc 1 654 0
 2019 0006 054B     		ldr	r3, .L192
 2020 0008 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2021 000a 6FF30000 		bfc	r0, #0, #1
 2022 000e 1870     		strb	r0, [r3]
 655:quantum/audio/audio_arm.c ****     eeconfig_update_audio(audio_config.raw);
 2023              		.loc 1 655 0
 2024 0010 C0B2     		uxtb	r0, r0
 656:quantum/audio/audio_arm.c **** }
 2025              		.loc 1 656 0
 2026 0012 BDE80840 		pop	{r3, lr}
 2027              		.cfi_restore 14
 2028              		.cfi_restore 3
 2029              		.cfi_def_cfa_offset 0
 655:quantum/audio/audio_arm.c ****     eeconfig_update_audio(audio_config.raw);
 2030              		.loc 1 655 0
 2031 0016 FFF7FEBF 		b	eeconfig_update_audio
 2032              	.LVL210:
 2033              	.L193:
 2034 001a 00BF     		.align	2
 2035              	.L192:
 2036 001c 00000000 		.word	.LANCHOR26
 2037              		.cfi_endproc
 2038              	.LFE299:
 2040              		.section	.text.set_polyphony_rate,"ax",%progbits
 2041              		.align	1
 2042              		.global	set_polyphony_rate
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2046              		.fpu softvfp
 2048              	set_polyphony_rate:
 2049              	.LFB300:
 657:quantum/audio/audio_arm.c **** 
 658:quantum/audio/audio_arm.c **** #ifdef VIBRATO_ENABLE
 659:quantum/audio/audio_arm.c **** 
 660:quantum/audio/audio_arm.c **** // Vibrato rate functions
 661:quantum/audio/audio_arm.c **** 
 662:quantum/audio/audio_arm.c **** void set_vibrato_rate(float rate) { vibrato_rate = rate; }
 663:quantum/audio/audio_arm.c **** 
 664:quantum/audio/audio_arm.c **** void increase_vibrato_rate(float change) { vibrato_rate *= change; }
 665:quantum/audio/audio_arm.c **** 
 666:quantum/audio/audio_arm.c **** void decrease_vibrato_rate(float change) { vibrato_rate /= change; }
 667:quantum/audio/audio_arm.c **** 
 668:quantum/audio/audio_arm.c **** #    ifdef VIBRATO_STRENGTH_ENABLE
 669:quantum/audio/audio_arm.c **** 
 670:quantum/audio/audio_arm.c **** void set_vibrato_strength(float strength) { vibrato_strength = strength; }
 671:quantum/audio/audio_arm.c **** 
 672:quantum/audio/audio_arm.c **** void increase_vibrato_strength(float change) { vibrato_strength *= change; }
 673:quantum/audio/audio_arm.c **** 
 674:quantum/audio/audio_arm.c **** void decrease_vibrato_strength(float change) { vibrato_strength /= change; }
 675:quantum/audio/audio_arm.c **** 
 676:quantum/audio/audio_arm.c **** #    endif /* VIBRATO_STRENGTH_ENABLE */
 677:quantum/audio/audio_arm.c **** 
 678:quantum/audio/audio_arm.c **** #endif /* VIBRATO_ENABLE */
 679:quantum/audio/audio_arm.c **** 
 680:quantum/audio/audio_arm.c **** // Polyphony functions
 681:quantum/audio/audio_arm.c **** 
 682:quantum/audio/audio_arm.c **** void set_polyphony_rate(float rate) { polyphony_rate = rate; }
 2050              		.loc 1 682 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 0, uses_anonymous_args = 0
 2054              		@ link register save eliminated.
 2055              	.LVL211:
 2056              		.loc 1 682 0
 2057 0000 014B     		ldr	r3, .L195
 2058 0002 1860     		str	r0, [r3]	@ float
 2059 0004 7047     		bx	lr
 2060              	.L196:
 2061 0006 00BF     		.align	2
 2062              	.L195:
 2063 0008 00000000 		.word	.LANCHOR6
 2064              		.cfi_endproc
 2065              	.LFE300:
 2067              		.section	.text.enable_polyphony,"ax",%progbits
 2068              		.align	1
 2069              		.global	enable_polyphony
 2070              		.syntax unified
 2071              		.thumb
 2072              		.thumb_func
 2073              		.fpu softvfp
 2075              	enable_polyphony:
 2076              	.LFB301:
 683:quantum/audio/audio_arm.c **** 
 684:quantum/audio/audio_arm.c **** void enable_polyphony() { polyphony_rate = 5; }
 2077              		.loc 1 684 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
 2082              		.loc 1 684 0
 2083 0000 014B     		ldr	r3, .L198
 2084 0002 024A     		ldr	r2, .L198+4
 2085 0004 1A60     		str	r2, [r3]	@ float
 2086 0006 7047     		bx	lr
 2087              	.L199:
 2088              		.align	2
 2089              	.L198:
 2090 0008 00000000 		.word	.LANCHOR6
 2091 000c 0000A040 		.word	1084227584
 2092              		.cfi_endproc
 2093              	.LFE301:
 2095              		.section	.text.disable_polyphony,"ax",%progbits
 2096              		.align	1
 2097              		.global	disable_polyphony
 2098              		.syntax unified
 2099              		.thumb
 2100              		.thumb_func
 2101              		.fpu softvfp
 2103              	disable_polyphony:
 2104              	.LFB302:
 685:quantum/audio/audio_arm.c **** 
 686:quantum/audio/audio_arm.c **** void disable_polyphony() { polyphony_rate = 0; }
 2105              		.loc 1 686 0
 2106              		.cfi_startproc
 2107              		@ args = 0, pretend = 0, frame = 0
 2108              		@ frame_needed = 0, uses_anonymous_args = 0
 2109              		@ link register save eliminated.
 2110              		.loc 1 686 0
 2111 0000 014B     		ldr	r3, .L201
 2112 0002 0022     		movs	r2, #0
 2113 0004 1A60     		str	r2, [r3]	@ float
 2114 0006 7047     		bx	lr
 2115              	.L202:
 2116              		.align	2
 2117              	.L201:
 2118 0008 00000000 		.word	.LANCHOR6
 2119              		.cfi_endproc
 2120              	.LFE302:
 2122              		.section	.text.increase_polyphony_rate,"ax",%progbits
 2123              		.align	1
 2124              		.global	increase_polyphony_rate
 2125              		.syntax unified
 2126              		.thumb
 2127              		.thumb_func
 2128              		.fpu softvfp
 2130              	increase_polyphony_rate:
 2131              	.LFB303:
 687:quantum/audio/audio_arm.c **** 
 688:quantum/audio/audio_arm.c **** void increase_polyphony_rate(float change) { polyphony_rate *= change; }
 2132              		.loc 1 688 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              	.LVL212:
 2137 0000 10B5     		push	{r4, lr}
 2138              		.cfi_def_cfa_offset 8
 2139              		.cfi_offset 4, -8
 2140              		.cfi_offset 14, -4
 2141              		.loc 1 688 0
 2142 0002 034C     		ldr	r4, .L204
 2143 0004 0146     		mov	r1, r0
 2144 0006 2068     		ldr	r0, [r4]	@ float
 2145              	.LVL213:
 2146 0008 FFF7FEFF 		bl	__aeabi_fmul
 2147              	.LVL214:
 2148 000c 2060     		str	r0, [r4]	@ float
 2149 000e 10BD     		pop	{r4, pc}
 2150              	.L205:
 2151              		.align	2
 2152              	.L204:
 2153 0010 00000000 		.word	.LANCHOR6
 2154              		.cfi_endproc
 2155              	.LFE303:
 2157              		.section	.text.decrease_polyphony_rate,"ax",%progbits
 2158              		.align	1
 2159              		.global	decrease_polyphony_rate
 2160              		.syntax unified
 2161              		.thumb
 2162              		.thumb_func
 2163              		.fpu softvfp
 2165              	decrease_polyphony_rate:
 2166              	.LFB304:
 689:quantum/audio/audio_arm.c **** 
 690:quantum/audio/audio_arm.c **** void decrease_polyphony_rate(float change) { polyphony_rate /= change; }
 2167              		.loc 1 690 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
 2171              	.LVL215:
 2172 0000 10B5     		push	{r4, lr}
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 4, -8
 2175              		.cfi_offset 14, -4
 2176              		.loc 1 690 0
 2177 0002 034C     		ldr	r4, .L207
 2178 0004 0146     		mov	r1, r0
 2179 0006 2068     		ldr	r0, [r4]	@ float
 2180              	.LVL216:
 2181 0008 FFF7FEFF 		bl	__aeabi_fdiv
 2182              	.LVL217:
 2183 000c 2060     		str	r0, [r4]	@ float
 2184 000e 10BD     		pop	{r4, pc}
 2185              	.L208:
 2186              		.align	2
 2187              	.L207:
 2188 0010 00000000 		.word	.LANCHOR6
 2189              		.cfi_endproc
 2190              	.LFE304:
 2192              		.section	.text.set_timbre,"ax",%progbits
 2193              		.align	1
 2194              		.global	set_timbre
 2195              		.syntax unified
 2196              		.thumb
 2197              		.thumb_func
 2198              		.fpu softvfp
 2200              	set_timbre:
 2201              	.LFB305:
 691:quantum/audio/audio_arm.c **** 
 692:quantum/audio/audio_arm.c **** // Timbre function
 693:quantum/audio/audio_arm.c **** 
 694:quantum/audio/audio_arm.c **** void set_timbre(float timbre) { note_timbre = timbre; }
 2202              		.loc 1 694 0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 0
 2205              		@ frame_needed = 0, uses_anonymous_args = 0
 2206              		@ link register save eliminated.
 2207              	.LVL218:
 2208              		.loc 1 694 0
 2209 0000 014B     		ldr	r3, .L210
 2210 0002 1860     		str	r0, [r3]	@ float
 2211 0004 7047     		bx	lr
 2212              	.L211:
 2213 0006 00BF     		.align	2
 2214              	.L210:
 2215 0008 00000000 		.word	.LANCHOR37
 2216              		.cfi_endproc
 2217              	.LFE305:
 2219              		.section	.text.set_tempo,"ax",%progbits
 2220              		.align	1
 2221              		.global	set_tempo
 2222              		.syntax unified
 2223              		.thumb
 2224              		.thumb_func
 2225              		.fpu softvfp
 2227              	set_tempo:
 2228              	.LFB306:
 695:quantum/audio/audio_arm.c **** 
 696:quantum/audio/audio_arm.c **** // Tempo functions
 697:quantum/audio/audio_arm.c **** 
 698:quantum/audio/audio_arm.c **** void set_tempo(uint8_t tempo) { note_tempo = tempo; }
 2229              		.loc 1 698 0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 0
 2232              		@ frame_needed = 0, uses_anonymous_args = 0
 2233              		@ link register save eliminated.
 2234              	.LVL219:
 2235              		.loc 1 698 0
 2236 0000 014B     		ldr	r3, .L213
 2237 0002 1870     		strb	r0, [r3]
 2238 0004 7047     		bx	lr
 2239              	.L214:
 2240 0006 00BF     		.align	2
 2241              	.L213:
 2242 0008 00000000 		.word	.LANCHOR25
 2243              		.cfi_endproc
 2244              	.LFE306:
 2246              		.section	.text.decrease_tempo,"ax",%progbits
 2247              		.align	1
 2248              		.global	decrease_tempo
 2249              		.syntax unified
 2250              		.thumb
 2251              		.thumb_func
 2252              		.fpu softvfp
 2254              	decrease_tempo:
 2255              	.LFB307:
 699:quantum/audio/audio_arm.c **** 
 700:quantum/audio/audio_arm.c **** void decrease_tempo(uint8_t tempo_change) { note_tempo += tempo_change; }
 2256              		.loc 1 700 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 2261              	.LVL220:
 2262              		.loc 1 700 0
 2263 0000 024A     		ldr	r2, .L216
 2264 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2265 0004 1844     		add	r0, r0, r3
 2266              	.LVL221:
 2267 0006 1070     		strb	r0, [r2]
 2268 0008 7047     		bx	lr
 2269              	.L217:
 2270 000a 00BF     		.align	2
 2271              	.L216:
 2272 000c 00000000 		.word	.LANCHOR25
 2273              		.cfi_endproc
 2274              	.LFE307:
 2276              		.section	.text.increase_tempo,"ax",%progbits
 2277              		.align	1
 2278              		.global	increase_tempo
 2279              		.syntax unified
 2280              		.thumb
 2281              		.thumb_func
 2282              		.fpu softvfp
 2284              	increase_tempo:
 2285              	.LFB308:
 701:quantum/audio/audio_arm.c **** 
 702:quantum/audio/audio_arm.c **** void increase_tempo(uint8_t tempo_change) {
 2286              		.loc 1 702 0
 2287              		.cfi_startproc
 2288              		@ args = 0, pretend = 0, frame = 0
 2289              		@ frame_needed = 0, uses_anonymous_args = 0
 2290              		@ link register save eliminated.
 2291              	.LVL222:
 703:quantum/audio/audio_arm.c ****     if (note_tempo - tempo_change < 10) {
 2292              		.loc 1 703 0
 2293 0000 044A     		ldr	r2, .L221
 2294 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2295 0004 181A     		subs	r0, r3, r0
 2296              	.LVL223:
 2297 0006 0928     		cmp	r0, #9
 704:quantum/audio/audio_arm.c ****         note_tempo = 10;
 2298              		.loc 1 704 0
 2299 0008 DABF     		itte	le
 2300 000a 0A23     		movle	r3, #10
 2301 000c 1370     		strble	r3, [r2]
 705:quantum/audio/audio_arm.c ****     } else {
 706:quantum/audio/audio_arm.c ****         note_tempo -= tempo_change;
 2302              		.loc 1 706 0
 2303 000e 1070     		strbgt	r0, [r2]
 707:quantum/audio/audio_arm.c ****     }
 708:quantum/audio/audio_arm.c **** }
 2304              		.loc 1 708 0
 2305 0010 7047     		bx	lr
 2306              	.L222:
 2307 0012 00BF     		.align	2
 2308              	.L221:
 2309 0014 00000000 		.word	.LANCHOR25
 2310              		.cfi_endproc
 2311              	.LFE308:
 2313              		.global	nz
 2314              		.global	ny
 2315              		.global	nx
 2316              		.global	gpt8cfg1
 2317              		.global	gpt7cfg1
 2318              		.global	gpt6cfg1
 2319              		.global	startup_song
 2320              		.global	glissando
 2321              		.global	envelope_index
 2322              		.global	audio_config
 2323              		.global	polyphony_rate
 2324              		.global	rest_counter
 2325              		.global	current_note
 2326              		.global	note_resting
 2327              		.global	notes_repeat
 2328              		.global	notes_count
 2329              		.global	notes_pointer
 2330              		.global	note_position
 2331              		.global	note_timbre
 2332              		.global	note_tempo
 2333              		.global	note_length
 2334              		.global	note_frequency
 2335              		.global	playing_note
 2336              		.global	playing_notes
 2337              		.global	sample_length
 2338              		.global	sample
 2339              		.global	place
 2340              		.global	sliding
 2341              		.global	volumes
 2342              		.global	frequencies
 2343              		.global	position
 2344              		.global	volume
 2345              		.global	frequency_alt
 2346              		.global	frequency
 2347              		.global	voice_place
 2348              		.global	voices
 2349              		.section	.bss.audio_config,"aw",%nobits
 2350              		.set	.LANCHOR26,. + 0
 2353              	audio_config:
 2354 0000 00       		.space	1
 2355              		.section	.bss.audio_initialized,"aw",%nobits
 2356              		.set	.LANCHOR27,. + 0
 2359              	audio_initialized:
 2360 0000 00       		.space	1
 2361              		.section	.bss.current_note,"aw",%nobits
 2362              		.align	1
 2363              		.set	.LANCHOR21,. + 0
 2366              	current_note:
 2367 0000 0000     		.space	2
 2368              		.section	.bss.envelope_index,"aw",%nobits
 2369              		.align	1
 2370              		.set	.LANCHOR10,. + 0
 2373              	envelope_index:
 2374 0000 0000     		.space	2
 2375              		.section	.bss.frequencies,"aw",%nobits
 2376              		.align	2
 2377              		.set	.LANCHOR7,. + 0
 2380              	frequencies:
 2381 0000 00000000 		.space	32
 2381      00000000 
 2381      00000000 
 2381      00000000 
 2381      00000000 
 2382              		.section	.bss.frequency,"aw",%nobits
 2383              		.align	2
 2384              		.set	.LANCHOR14,. + 0
 2387              	frequency:
 2388 0000 00000000 		.space	4
 2389              		.section	.bss.frequency_alt,"aw",%nobits
 2390              		.align	2
 2391              		.set	.LANCHOR9,. + 0
 2394              	frequency_alt:
 2395 0000 00000000 		.space	4
 2396              		.section	.bss.note_frequency,"aw",%nobits
 2397              		.align	2
 2398              		.set	.LANCHOR17,. + 0
 2401              	note_frequency:
 2402 0000 00000000 		.space	4
 2403              		.section	.bss.note_length,"aw",%nobits
 2404              		.align	2
 2405              		.set	.LANCHOR19,. + 0
 2408              	note_length:
 2409 0000 00000000 		.space	4
 2410              		.section	.bss.note_position,"aw",%nobits
 2411              		.align	1
 2412              		.set	.LANCHOR18,. + 0
 2415              	note_position:
 2416 0000 0000     		.space	2
 2417              		.section	.bss.note_resting,"aw",%nobits
 2418              		.set	.LANCHOR20,. + 0
 2421              	note_resting:
 2422 0000 00       		.space	1
 2423              		.section	.bss.notes_count,"aw",%nobits
 2424              		.align	1
 2425              		.set	.LANCHOR22,. + 0
 2428              	notes_count:
 2429 0000 0000     		.space	2
 2430              		.section	.bss.notes_pointer,"aw",%nobits
 2431              		.align	2
 2432              		.set	.LANCHOR24,. + 0
 2435              	notes_pointer:
 2436 0000 00000000 		.space	4
 2437              		.section	.bss.notes_repeat,"aw",%nobits
 2438              		.set	.LANCHOR23,. + 0
 2441              	notes_repeat:
 2442 0000 00       		.space	1
 2443              		.section	.bss.nx,"aw",%nobits
 2444              		.align	2
 2445              		.set	.LANCHOR2,. + 0
 2448              	nx:
 2449 0000 00000000 		.space	4
 2450              		.section	.bss.ny,"aw",%nobits
 2451              		.align	2
 2452              		.set	.LANCHOR3,. + 0
 2455              	ny:
 2456 0000 00000000 		.space	4
 2457              		.section	.bss.nz,"aw",%nobits
 2458              		.align	2
 2459              		.set	.LANCHOR0,. + 0
 2462              	nz:
 2463 0000 00000000 		.space	4
 2464              		.section	.bss.place,"aw",%nobits
 2465              		.align	2
 2466              		.set	.LANCHOR13,. + 0
 2469              	place:
 2470 0000 00000000 		.space	4
 2471              		.section	.bss.playing_note,"aw",%nobits
 2472              		.set	.LANCHOR4,. + 0
 2475              	playing_note:
 2476 0000 00       		.space	1
 2477              		.section	.bss.playing_notes,"aw",%nobits
 2478              		.set	.LANCHOR16,. + 0
 2481              	playing_notes:
 2482 0000 00       		.space	1
 2483              		.section	.bss.polyphony_rate,"aw",%nobits
 2484              		.align	2
 2485              		.set	.LANCHOR6,. + 0
 2488              	polyphony_rate:
 2489 0000 00000000 		.space	4
 2490              		.section	.bss.position,"aw",%nobits
 2491              		.align	2
 2494              	position:
 2495 0000 00000000 		.space	4
 2496              		.section	.bss.rest_counter,"aw",%nobits
 2499              	rest_counter:
 2500 0000 00       		.space	1
 2501              		.section	.bss.sample,"aw",%nobits
 2502              		.align	2
 2505              	sample:
 2506 0000 00000000 		.space	4
 2507              		.section	.bss.sample_length,"aw",%nobits
 2508              		.align	1
 2511              	sample_length:
 2512 0000 0000     		.space	2
 2513              		.section	.bss.sliding,"aw",%nobits
 2516              	sliding:
 2517 0000 00       		.space	1
 2518              		.section	.bss.voice_place,"aw",%nobits
 2519              		.align	2
 2520              		.set	.LANCHOR12,. + 0
 2523              	voice_place:
 2524 0000 00000000 		.space	4
 2525              		.section	.bss.voices,"aw",%nobits
 2526              		.align	2
 2527              		.set	.LANCHOR5,. + 0
 2530              	voices:
 2531 0000 00000000 		.space	4
 2532              		.section	.bss.volume,"aw",%nobits
 2533              		.align	2
 2534              		.set	.LANCHOR35,. + 0
 2537              	volume:
 2538 0000 00000000 		.space	4
 2539              		.section	.bss.volumes,"aw",%nobits
 2540              		.align	2
 2541              		.set	.LANCHOR36,. + 0
 2544              	volumes:
 2545 0000 00000000 		.space	32
 2545      00000000 
 2545      00000000 
 2545      00000000 
 2545      00000000 
 2546              		.section	.data.glissando,"aw",%progbits
 2547              		.set	.LANCHOR8,. + 0
 2550              	glissando:
 2551 0000 01       		.byte	1
 2552              		.section	.data.gpt6cfg1,"aw",%progbits
 2553              		.align	2
 2554              		.set	.LANCHOR15,. + 0
 2557              	gpt6cfg1:
 2558 0000 E0AB0000 		.word	44000
 2559 0004 00000000 		.word	0
 2560 0008 20000000 		.word	32
 2561 000c 00000000 		.word	0
 2562              		.section	.data.gpt7cfg1,"aw",%progbits
 2563              		.align	2
 2564              		.set	.LANCHOR11,. + 0
 2567              	gpt7cfg1:
 2568 0000 E0AB0000 		.word	44000
 2569 0004 00000000 		.word	0
 2570 0008 20000000 		.word	32
 2571 000c 00000000 		.word	0
 2572              		.section	.data.gpt8cfg1,"aw",%progbits
 2573              		.align	2
 2574              		.set	.LANCHOR28,. + 0
 2577              	gpt8cfg1:
 2578 0000 0A000000 		.word	10
 2579 0004 00000000 		.word	gpt_cb8
 2580 0008 20000000 		.word	32
 2581 000c 00000000 		.word	0
 2582              		.section	.data.note_tempo,"aw",%progbits
 2583              		.set	.LANCHOR25,. + 0
 2586              	note_tempo:
 2587 0000 64       		.byte	100
 2588              		.section	.data.note_timbre,"aw",%progbits
 2589              		.align	2
 2590              		.set	.LANCHOR37,. + 0
 2593              	note_timbre:
 2594 0000 0000003F 		.word	1056964608
 2595              		.section	.data.startup_song,"aw",%progbits
 2596              		.align	2
 2597              		.set	.LANCHOR34,. + 0
 2600              	startup_song:
 2601 0000 52D02445 		.word	1160040530
 2602 0004 00004041 		.word	1094713344
 2603 0008 5C970A45 		.word	1158322012
 2604 000c 00000041 		.word	1090519040
 2605 0010 52D0A444 		.word	1151651922
 2606 0014 00000041 		.word	1090519040
 2607 0018 0000DC44 		.word	1155268608
 2608 001c 00000041 		.word	1090519040
 2609 0020 5C970A45 		.word	1158322012
 2610 0024 0000A041 		.word	1101004800
 2611              		.section	.rodata.dac1cfg1,"a",%progbits
 2612              		.align	1
 2613              		.set	.LANCHOR29,. + 0
 2616              	dac1cfg1:
 2617 0000 FFFF     		.short	-1
 2618 0002 00       		.byte	0
 2619 0003 000000   		.space	3
 2620              		.section	.rodata.dac1cfg2,"a",%progbits
 2621              		.align	1
 2622              		.set	.LANCHOR30,. + 0
 2625              	dac1cfg2:
 2626 0000 FFFF     		.short	-1
 2627 0002 00       		.byte	0
 2628 0003 000000   		.space	3
 2629              		.section	.rodata.dac_buffer,"a",%progbits
 2630              		.align	1
 2631              		.set	.LANCHOR1,. + 0
 2634              	dac_buffer:
 2635 0000 FFFF     		.short	-1
 2636 0002 FFFF     		.short	-1
 2637 0004 FFFF     		.short	-1
 2638 0006 FFFF     		.short	-1
 2639 0008 FFFF     		.short	-1
 2640 000a FFFF     		.short	-1
 2641 000c FFFF     		.short	-1
 2642 000e FFFF     		.short	-1
 2643 0010 FFFF     		.short	-1
 2644 0012 FFFF     		.short	-1
 2645 0014 FFFF     		.short	-1
 2646 0016 FFFF     		.short	-1
 2647 0018 FFFF     		.short	-1
 2648 001a FFFF     		.short	-1
 2649 001c FFFF     		.short	-1
 2650 001e FFFF     		.short	-1
 2651 0020 FFFF     		.short	-1
 2652 0022 FFFF     		.short	-1
 2653 0024 FFFF     		.short	-1
 2654 0026 FFFF     		.short	-1
 2655 0028 FFFF     		.short	-1
 2656 002a FFFF     		.short	-1
 2657 002c FFFF     		.short	-1
 2658 002e FFFF     		.short	-1
 2659 0030 FFFF     		.short	-1
 2660 0032 FFFF     		.short	-1
 2661 0034 FFFF     		.short	-1
 2662 0036 FFFF     		.short	-1
 2663 0038 FFFF     		.short	-1
 2664 003a FFFF     		.short	-1
 2665 003c FFFF     		.short	-1
 2666 003e FFFF     		.short	-1
 2667 0040 FFFF     		.short	-1
 2668 0042 FFFF     		.short	-1
 2669 0044 FFFF     		.short	-1
 2670 0046 FFFF     		.short	-1
 2671 0048 FFFF     		.short	-1
 2672 004a FFFF     		.short	-1
 2673 004c FFFF     		.short	-1
 2674 004e FFFF     		.short	-1
 2675 0050 FFFF     		.short	-1
 2676 0052 FFFF     		.short	-1
 2677 0054 FFFF     		.short	-1
 2678 0056 FFFF     		.short	-1
 2679 0058 FFFF     		.short	-1
 2680 005a FFFF     		.short	-1
 2681 005c FFFF     		.short	-1
 2682 005e FFFF     		.short	-1
 2683 0060 FFFF     		.short	-1
 2684 0062 FFFF     		.short	-1
 2685 0064 0000     		.short	0
 2686 0066 0000     		.short	0
 2687 0068 0000     		.short	0
 2688 006a 0000     		.short	0
 2689 006c 0000     		.short	0
 2690 006e 0000     		.short	0
 2691 0070 0000     		.short	0
 2692 0072 0000     		.short	0
 2693 0074 0000     		.short	0
 2694 0076 0000     		.short	0
 2695 0078 0000     		.short	0
 2696 007a 0000     		.short	0
 2697 007c 0000     		.short	0
 2698 007e 0000     		.short	0
 2699 0080 0000     		.short	0
 2700 0082 0000     		.short	0
 2701 0084 0000     		.short	0
 2702 0086 0000     		.short	0
 2703 0088 0000     		.short	0
 2704 008a 0000     		.short	0
 2705 008c 0000     		.short	0
 2706 008e 0000     		.short	0
 2707 0090 0000     		.short	0
 2708 0092 0000     		.short	0
 2709 0094 0000     		.short	0
 2710 0096 0000     		.short	0
 2711 0098 0000     		.short	0
 2712 009a 0000     		.short	0
 2713 009c 0000     		.short	0
 2714 009e 0000     		.short	0
 2715 00a0 0000     		.short	0
 2716 00a2 0000     		.short	0
 2717 00a4 0000     		.short	0
 2718 00a6 0000     		.short	0
 2719 00a8 0000     		.short	0
 2720 00aa 0000     		.short	0
 2721 00ac 0000     		.short	0
 2722 00ae 0000     		.short	0
 2723 00b0 0000     		.short	0
 2724 00b2 0000     		.short	0
 2725 00b4 0000     		.short	0
 2726 00b6 0000     		.short	0
 2727 00b8 0000     		.short	0
 2728 00ba 0000     		.short	0
 2729 00bc 0000     		.short	0
 2730 00be 0000     		.short	0
 2731 00c0 0000     		.short	0
 2732 00c2 0000     		.short	0
 2733 00c4 0000     		.short	0
 2734 00c6 0000     		.short	0
 2735              		.section	.rodata.dac_buffer_2,"a",%progbits
 2736              		.align	1
 2737              		.set	.LANCHOR32,. + 0
 2740              	dac_buffer_2:
 2741 0000 0000     		.short	0
 2742 0002 0000     		.short	0
 2743 0004 0000     		.short	0
 2744 0006 0000     		.short	0
 2745 0008 0000     		.short	0
 2746 000a 0000     		.short	0
 2747 000c 0000     		.short	0
 2748 000e 0000     		.short	0
 2749 0010 0000     		.short	0
 2750 0012 0000     		.short	0
 2751 0014 0000     		.short	0
 2752 0016 0000     		.short	0
 2753 0018 0000     		.short	0
 2754 001a 0000     		.short	0
 2755 001c 0000     		.short	0
 2756 001e 0000     		.short	0
 2757 0020 0000     		.short	0
 2758 0022 0000     		.short	0
 2759 0024 0000     		.short	0
 2760 0026 0000     		.short	0
 2761 0028 0000     		.short	0
 2762 002a 0000     		.short	0
 2763 002c 0000     		.short	0
 2764 002e 0000     		.short	0
 2765 0030 0000     		.short	0
 2766 0032 0000     		.short	0
 2767 0034 0000     		.short	0
 2768 0036 0000     		.short	0
 2769 0038 0000     		.short	0
 2770 003a 0000     		.short	0
 2771 003c 0000     		.short	0
 2772 003e 0000     		.short	0
 2773 0040 0000     		.short	0
 2774 0042 0000     		.short	0
 2775 0044 0000     		.short	0
 2776 0046 0000     		.short	0
 2777 0048 0000     		.short	0
 2778 004a 0000     		.short	0
 2779 004c 0000     		.short	0
 2780 004e 0000     		.short	0
 2781 0050 0000     		.short	0
 2782 0052 0000     		.short	0
 2783 0054 0000     		.short	0
 2784 0056 0000     		.short	0
 2785 0058 0000     		.short	0
 2786 005a 0000     		.short	0
 2787 005c 0000     		.short	0
 2788 005e 0000     		.short	0
 2789 0060 0000     		.short	0
 2790 0062 0000     		.short	0
 2791 0064 FFFF     		.short	-1
 2792 0066 FFFF     		.short	-1
 2793 0068 FFFF     		.short	-1
 2794 006a FFFF     		.short	-1
 2795 006c FFFF     		.short	-1
 2796 006e FFFF     		.short	-1
 2797 0070 FFFF     		.short	-1
 2798 0072 FFFF     		.short	-1
 2799 0074 FFFF     		.short	-1
 2800 0076 FFFF     		.short	-1
 2801 0078 FFFF     		.short	-1
 2802 007a FFFF     		.short	-1
 2803 007c FFFF     		.short	-1
 2804 007e FFFF     		.short	-1
 2805 0080 FFFF     		.short	-1
 2806 0082 FFFF     		.short	-1
 2807 0084 FFFF     		.short	-1
 2808 0086 FFFF     		.short	-1
 2809 0088 FFFF     		.short	-1
 2810 008a FFFF     		.short	-1
 2811 008c FFFF     		.short	-1
 2812 008e FFFF     		.short	-1
 2813 0090 FFFF     		.short	-1
 2814 0092 FFFF     		.short	-1
 2815 0094 FFFF     		.short	-1
 2816 0096 FFFF     		.short	-1
 2817 0098 FFFF     		.short	-1
 2818 009a FFFF     		.short	-1
 2819 009c FFFF     		.short	-1
 2820 009e FFFF     		.short	-1
 2821 00a0 FFFF     		.short	-1
 2822 00a2 FFFF     		.short	-1
 2823 00a4 FFFF     		.short	-1
 2824 00a6 FFFF     		.short	-1
 2825 00a8 FFFF     		.short	-1
 2826 00aa FFFF     		.short	-1
 2827 00ac FFFF     		.short	-1
 2828 00ae FFFF     		.short	-1
 2829 00b0 FFFF     		.short	-1
 2830 00b2 FFFF     		.short	-1
 2831 00b4 FFFF     		.short	-1
 2832 00b6 FFFF     		.short	-1
 2833 00b8 FFFF     		.short	-1
 2834 00ba FFFF     		.short	-1
 2835 00bc FFFF     		.short	-1
 2836 00be FFFF     		.short	-1
 2837 00c0 FFFF     		.short	-1
 2838 00c2 FFFF     		.short	-1
 2839 00c4 FFFF     		.short	-1
 2840 00c6 FFFF     		.short	-1
 2841              		.section	.rodata.dacgrpcfg1,"a",%progbits
 2842              		.align	2
 2843              		.set	.LANCHOR31,. + 0
 2846              	dacgrpcfg1:
 2847 0000 01000000 		.word	1
 2848 0004 00000000 		.word	end_cb1
 2849 0008 00000000 		.word	error_cb1
 2850 000c 00000000 		.word	0
 2851              		.section	.rodata.dacgrpcfg2,"a",%progbits
 2852              		.align	2
 2853              		.set	.LANCHOR33,. + 0
 2856              	dacgrpcfg2:
 2857 0000 01000000 		.word	1
 2858 0004 00000000 		.word	end_cb1
 2859 0008 00000000 		.word	error_cb1
 2860 000c 00000000 		.word	0
 2861              		.section	.rodata.error_cb1.str1.1,"aMS",%progbits,1
 2862              	.LC0:
 2863 0000 44414320 		.ascii	"DAC failure\000"
 2863      6661696C 
 2863      75726500 
 2864              		.section	.rodata.play_note.str1.1,"aMS",%progbits,1
 2865              	.LC3:
 2866 0000 61756469 		.ascii	"audio play note freq=%d vol=%d\000"
 2866      6F20706C 
 2866      6179206E 
 2866      6F746520 
 2866      66726571 
 2867              		.section	.rodata.stop_all_notes.str1.1,"aMS",%progbits,1
 2868              	.LC1:
 2869 0000 61756469 		.ascii	"audio stop all notes\000"
 2869      6F207374 
 2869      6F702061 
 2869      6C6C206E 
 2869      6F746573 
 2870              		.section	.rodata.stop_note.str1.1,"aMS",%progbits,1
 2871              	.LC2:
 2872 0000 61756469 		.ascii	"audio stop note freq=%d\000"
 2872      6F207374 
 2872      6F70206E 
 2872      6F746520 
 2872      66726571 
 2873              		.text
 2874              	.Letext0:
 2875              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 2876              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 2877              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 2878              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2879              		.file 6 "./lib/chibios/os/rt/include/chsystypes.h"
 2880              		.file 7 "./lib/chibios/os/rt/include/chschd.h"
 2881              		.file 8 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 2882              		.file 9 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 2883              		.file 10 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 2884              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 2885              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 2886              		.file 13 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 2887              		.file 14 "./lib/chibios/os/rt/include/chtm.h"
 2888              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 2889              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 2890              		.file 17 "./lib/chibios/os/rt/include/chsys.h"
 2891              		.file 18 "./lib/chibios/os/rt/include/chregistry.h"
 2892              		.file 19 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 2893              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 2894              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 2895              		.file 22 "./lib/chibios/os/hal/include/hal_dac.h"
 2896              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 2897              		.file 24 "./lib/chibios/os/hal/include/hal_gpt.h"
 2898              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 2899              		.file 26 "./lib/chibios/os/hal/include/hal_i2c.h"
 2900              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 2901              		.file 28 "./lib/chibios/os/hal/include/hal_pwm.h"
 2902              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 2903              		.file 30 "./lib/chibios/os/hal/include/hal_usb.h"
 2904              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2905              		.file 32 "quantum/audio/luts.h"
 2906              		.file 33 "tmk_core/common/action.h"
 2907              		.file 34 "tmk_core/common/report.h"
 2908              		.file 35 "tmk_core/common/host.h"
 2909              		.file 36 "tmk_core/common/debug.h"
 2910              		.file 37 "quantum/keycode_config.h"
 2911              		.file 38 "quantum/keymap.h"
 2912              		.file 39 "tmk_core/common/action_layer.h"
 2913              		.file 40 "tmk_core/common/timer.h"
 2914              		.file 41 "tmk_core/common/action_util.h"
 2915              		.file 42 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 2916              		.file 43 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 2917              		.file 44 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 2918              		.file 45 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 2919              		.file 46 "quantum/process_keycode/process_music.h"
 2920              		.file 47 "quantum/quantum.h"
 2921              		.file 48 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 2922              		.file 49 "quantum/audio/audio.h"
 2923              		.file 50 "tmk_core/common/eeconfig.h"
 2924              		.file 51 "quantum/process_keycode/process_audio.h"
 2925              		.file 52 "tmk_core/common/chibios/printf.h"
 2926              		.file 53 "quantum/audio/voices.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 audio_arm.c
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:16     .text.end_cb1:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:22     .text.end_cb1:0000000000000000 end_cb1
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:64     .text.end_cb1:0000000000000024 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:89     .text.gpt_cb8:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:95     .text.gpt_cb8:0000000000000000 gpt_cb8
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:528    .text.gpt_cb8:00000000000002f8 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:552    .text.gpt_cb8:0000000000000354 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:955    .text.gpt_cb8:0000000000000614 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:970    .text.gpt_cb8:0000000000000648 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1001   .text.gpt_cb8:0000000000000680 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1009   .text.error_cb1:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1015   .text.error_cb1:0000000000000000 error_cb1
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1031   .text.error_cb1:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1036   .text.play_notes:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1043   .text.play_notes:0000000000000000 play_notes
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1230   .text.audio_init:0000000000000000 audio_init
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1396   .text.stop_all_notes:0000000000000000 stop_all_notes
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1199   .text.play_notes:00000000000000b4 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1223   .text.audio_init:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1370   .text.audio_init:00000000000000a0 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1389   .text.stop_all_notes:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1490   .text.stop_all_notes:0000000000000060 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1509   .text.stop_note:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1516   .text.stop_note:0000000000000000 stop_note
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1669   .text.stop_note:00000000000000b4 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1689   .text.play_note:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1696   .text.play_note:0000000000000000 play_note
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1831   .text.play_note:00000000000000ac $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1851   .text.is_playing_notes:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1858   .text.is_playing_notes:0000000000000000 is_playing_notes
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1872   .text.is_playing_notes:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1877   .text.is_audio_on:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1884   .text.is_audio_on:0000000000000000 is_audio_on
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1899   .text.is_audio_on:000000000000000c $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1904   .text.audio_toggle:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1911   .text.audio_toggle:0000000000000000 audio_toggle
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1952   .text.audio_toggle:000000000000002c $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1957   .text.audio_on:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1964   .text.audio_on:0000000000000000 audio_on
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1993   .text.audio_on:0000000000000018 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:1998   .text.audio_off:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2005   .text.audio_off:0000000000000000 audio_off
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2036   .text.audio_off:000000000000001c $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2041   .text.set_polyphony_rate:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2048   .text.set_polyphony_rate:0000000000000000 set_polyphony_rate
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2063   .text.set_polyphony_rate:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2068   .text.enable_polyphony:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2075   .text.enable_polyphony:0000000000000000 enable_polyphony
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2090   .text.enable_polyphony:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2096   .text.disable_polyphony:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2103   .text.disable_polyphony:0000000000000000 disable_polyphony
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2118   .text.disable_polyphony:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2123   .text.increase_polyphony_rate:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2130   .text.increase_polyphony_rate:0000000000000000 increase_polyphony_rate
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2153   .text.increase_polyphony_rate:0000000000000010 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2158   .text.decrease_polyphony_rate:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2165   .text.decrease_polyphony_rate:0000000000000000 decrease_polyphony_rate
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2188   .text.decrease_polyphony_rate:0000000000000010 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2193   .text.set_timbre:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2200   .text.set_timbre:0000000000000000 set_timbre
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2215   .text.set_timbre:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2220   .text.set_tempo:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2227   .text.set_tempo:0000000000000000 set_tempo
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2242   .text.set_tempo:0000000000000008 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2247   .text.decrease_tempo:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2254   .text.decrease_tempo:0000000000000000 decrease_tempo
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2272   .text.decrease_tempo:000000000000000c $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2277   .text.increase_tempo:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2284   .text.increase_tempo:0000000000000000 increase_tempo
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2309   .text.increase_tempo:0000000000000014 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2462   .bss.nz:0000000000000000 nz
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2455   .bss.ny:0000000000000000 ny
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2448   .bss.nx:0000000000000000 nx
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2577   .data.gpt8cfg1:0000000000000000 gpt8cfg1
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2567   .data.gpt7cfg1:0000000000000000 gpt7cfg1
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2557   .data.gpt6cfg1:0000000000000000 gpt6cfg1
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2600   .data.startup_song:0000000000000000 startup_song
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2550   .data.glissando:0000000000000000 glissando
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2373   .bss.envelope_index:0000000000000000 envelope_index
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2353   .bss.audio_config:0000000000000000 audio_config
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2488   .bss.polyphony_rate:0000000000000000 polyphony_rate
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2499   .bss.rest_counter:0000000000000000 rest_counter
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2366   .bss.current_note:0000000000000000 current_note
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2421   .bss.note_resting:0000000000000000 note_resting
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2441   .bss.notes_repeat:0000000000000000 notes_repeat
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2428   .bss.notes_count:0000000000000000 notes_count
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2435   .bss.notes_pointer:0000000000000000 notes_pointer
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2415   .bss.note_position:0000000000000000 note_position
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2593   .data.note_timbre:0000000000000000 note_timbre
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2586   .data.note_tempo:0000000000000000 note_tempo
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2408   .bss.note_length:0000000000000000 note_length
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2401   .bss.note_frequency:0000000000000000 note_frequency
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2475   .bss.playing_note:0000000000000000 playing_note
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2481   .bss.playing_notes:0000000000000000 playing_notes
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2511   .bss.sample_length:0000000000000000 sample_length
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2505   .bss.sample:0000000000000000 sample
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2469   .bss.place:0000000000000000 place
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2516   .bss.sliding:0000000000000000 sliding
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2544   .bss.volumes:0000000000000000 volumes
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2380   .bss.frequencies:0000000000000000 frequencies
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2494   .bss.position:0000000000000000 position
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2537   .bss.volume:0000000000000000 volume
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2394   .bss.frequency_alt:0000000000000000 frequency_alt
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2387   .bss.frequency:0000000000000000 frequency
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2523   .bss.voice_place:0000000000000000 voice_place
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2530   .bss.voices:0000000000000000 voices
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2354   .bss.audio_config:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2359   .bss.audio_initialized:0000000000000000 audio_initialized
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2360   .bss.audio_initialized:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2362   .bss.current_note:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2369   .bss.envelope_index:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2376   .bss.frequencies:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2383   .bss.frequency:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2390   .bss.frequency_alt:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2397   .bss.note_frequency:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2404   .bss.note_length:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2411   .bss.note_position:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2422   .bss.note_resting:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2424   .bss.notes_count:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2431   .bss.notes_pointer:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2442   .bss.notes_repeat:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2444   .bss.nx:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2451   .bss.ny:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2458   .bss.nz:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2465   .bss.place:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2476   .bss.playing_note:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2482   .bss.playing_notes:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2484   .bss.polyphony_rate:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2491   .bss.position:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2500   .bss.rest_counter:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2502   .bss.sample:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2508   .bss.sample_length:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2517   .bss.sliding:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2519   .bss.voice_place:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2526   .bss.voices:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2533   .bss.volume:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2540   .bss.volumes:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2553   .data.gpt6cfg1:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2563   .data.gpt7cfg1:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2573   .data.gpt8cfg1:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2589   .data.note_timbre:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2596   .data.startup_song:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2612   .rodata.dac1cfg1:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2616   .rodata.dac1cfg1:0000000000000000 dac1cfg1
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2621   .rodata.dac1cfg2:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2625   .rodata.dac1cfg2:0000000000000000 dac1cfg2
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2630   .rodata.dac_buffer:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2634   .rodata.dac_buffer:0000000000000000 dac_buffer
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2736   .rodata.dac_buffer_2:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2740   .rodata.dac_buffer_2:0000000000000000 dac_buffer_2
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2842   .rodata.dacgrpcfg1:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2846   .rodata.dacgrpcfg1:0000000000000000 dacgrpcfg1
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2852   .rodata.dacgrpcfg2:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//cc4sR6Tv.s:2856   .rodata.dacgrpcfg2:0000000000000000 dacgrpcfg2

UNDEFINED SYMBOLS
__aeabi_fcmpeq
__aeabi_fcmplt
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2d
__aeabi_dmul
__aeabi_dcmplt
__aeabi_d2f
__aeabi_fcmpgt
__aeabi_dcmpgt
__aeabi_f2uiz
__aeabi_fadd
__aeabi_i2f
__aeabi_fsub
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_ui2f
pow
voice_envelope
gptStopTimer
gptStart
gptStartContinuous
GPTD7
GPTD6
chSysHalt
GPTD8
eeconfig_is_enabled
eeconfig_init
eeconfig_read_audio
_pal_lld_setgroupmode
dacStart
dacStartConversion
DACD1
DACD2
tfp_printf
debug_config
__aeabi_f2iz
eeconfig_update_audio
audio_on_user
