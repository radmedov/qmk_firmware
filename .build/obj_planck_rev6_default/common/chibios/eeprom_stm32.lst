   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"eeprom_stm32.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.EEPROM_Init,"ax",%progbits
  16              		.align	1
  17              		.global	EEPROM_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	EEPROM_Init:
  24              	.LFB282:
  25              		.file 1 "tmk_core/common/chibios/eeprom_stm32.c"
   1:tmk_core/common/chibios/eeprom_stm32.c **** /*
   2:tmk_core/common/chibios/eeprom_stm32.c ****  * This software is experimental and a work in progress.
   3:tmk_core/common/chibios/eeprom_stm32.c ****  * Under no circumstances should these files be used in relation to any critical system(s).
   4:tmk_core/common/chibios/eeprom_stm32.c ****  * Use of these files is at your own risk.
   5:tmk_core/common/chibios/eeprom_stm32.c ****  *
   6:tmk_core/common/chibios/eeprom_stm32.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
   7:tmk_core/common/chibios/eeprom_stm32.c ****  * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
   8:tmk_core/common/chibios/eeprom_stm32.c ****  * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
   9:tmk_core/common/chibios/eeprom_stm32.c ****  * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  10:tmk_core/common/chibios/eeprom_stm32.c ****  * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  11:tmk_core/common/chibios/eeprom_stm32.c ****  * DEALINGS IN THE SOFTWARE.
  12:tmk_core/common/chibios/eeprom_stm32.c ****  *
  13:tmk_core/common/chibios/eeprom_stm32.c ****  * This files are free to use from http://engsta.com/stm32-flash-memory-eeprom-emulator/ by
  14:tmk_core/common/chibios/eeprom_stm32.c ****  * Artur F.
  15:tmk_core/common/chibios/eeprom_stm32.c ****  *
  16:tmk_core/common/chibios/eeprom_stm32.c ****  * Modifications for QMK and STM32F303 by Yiancar
  17:tmk_core/common/chibios/eeprom_stm32.c ****  */
  18:tmk_core/common/chibios/eeprom_stm32.c **** 
  19:tmk_core/common/chibios/eeprom_stm32.c **** #include <stdio.h>
  20:tmk_core/common/chibios/eeprom_stm32.c **** #include <string.h>
  21:tmk_core/common/chibios/eeprom_stm32.c **** #include "eeprom_stm32.h"
  22:tmk_core/common/chibios/eeprom_stm32.c **** /*****************************************************************************
  23:tmk_core/common/chibios/eeprom_stm32.c ****  * Allows to use the internal flash to store non volatile data. To initialize
  24:tmk_core/common/chibios/eeprom_stm32.c ****  * the functionality use the EEPROM_Init() function. Be sure that by reprogramming
  25:tmk_core/common/chibios/eeprom_stm32.c ****  * of the controller just affected pages will be deleted. In other case the non
  26:tmk_core/common/chibios/eeprom_stm32.c ****  * volatile data will be lost.
  27:tmk_core/common/chibios/eeprom_stm32.c ****  ******************************************************************************/
  28:tmk_core/common/chibios/eeprom_stm32.c **** 
  29:tmk_core/common/chibios/eeprom_stm32.c **** /* Private macro -------------------------------------------------------------*/
  30:tmk_core/common/chibios/eeprom_stm32.c **** /* Private variables ---------------------------------------------------------*/
  31:tmk_core/common/chibios/eeprom_stm32.c **** /* Functions -----------------------------------------------------------------*/
  32:tmk_core/common/chibios/eeprom_stm32.c **** 
  33:tmk_core/common/chibios/eeprom_stm32.c **** uint8_t DataBuf[FEE_PAGE_SIZE];
  34:tmk_core/common/chibios/eeprom_stm32.c **** /*****************************************************************************
  35:tmk_core/common/chibios/eeprom_stm32.c ****  *  Delete Flash Space used for user Data, deletes the whole space between
  36:tmk_core/common/chibios/eeprom_stm32.c ****  *  RW_PAGE_BASE_ADDRESS and the last uC Flash Page
  37:tmk_core/common/chibios/eeprom_stm32.c ****  ******************************************************************************/
  38:tmk_core/common/chibios/eeprom_stm32.c **** uint16_t EEPROM_Init(void) {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
  39:tmk_core/common/chibios/eeprom_stm32.c ****     // unlock flash
  40:tmk_core/common/chibios/eeprom_stm32.c ****     FLASH_Unlock();
  34              		.loc 1 40 0
  35 0002 FFF7FEFF 		bl	FLASH_Unlock
  36              	.LVL0:
  41:tmk_core/common/chibios/eeprom_stm32.c **** 
  42:tmk_core/common/chibios/eeprom_stm32.c ****     // Clear Flags
  43:tmk_core/common/chibios/eeprom_stm32.c ****     // FLASH_ClearFlag(FLASH_SR_EOP|FLASH_SR_PGERR|FLASH_SR_WRPERR);
  44:tmk_core/common/chibios/eeprom_stm32.c **** 
  45:tmk_core/common/chibios/eeprom_stm32.c ****     return FEE_DENSITY_BYTES;
  46:tmk_core/common/chibios/eeprom_stm32.c **** }
  37              		.loc 1 46 0
  38 0006 40F6FF70 		movw	r0, #4095
  39 000a 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE282:
  43              		.section	.text.EEPROM_Erase,"ax",%progbits
  44              		.align	1
  45              		.global	EEPROM_Erase
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	EEPROM_Erase:
  52              	.LFB283:
  47:tmk_core/common/chibios/eeprom_stm32.c **** /*****************************************************************************
  48:tmk_core/common/chibios/eeprom_stm32.c ****  *  Erase the whole reserved Flash Space used for user Data
  49:tmk_core/common/chibios/eeprom_stm32.c ****  ******************************************************************************/
  50:tmk_core/common/chibios/eeprom_stm32.c **** void EEPROM_Erase(void) {
  53              		.loc 1 50 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              	.LVL1:
  58 0000 08B5     		push	{r3, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 3, -8
  61              		.cfi_offset 14, -4
  51:tmk_core/common/chibios/eeprom_stm32.c ****     int page_num = 0;
  52:tmk_core/common/chibios/eeprom_stm32.c **** 
  53:tmk_core/common/chibios/eeprom_stm32.c ****     // delete all pages from specified start page to the last page
  54:tmk_core/common/chibios/eeprom_stm32.c ****     do {
  55:tmk_core/common/chibios/eeprom_stm32.c ****         FLASH_ErasePage(FEE_PAGE_BASE_ADDRESS + (page_num * FEE_PAGE_SIZE));
  62              		.loc 1 55 0
  63 0002 0748     		ldr	r0, .L3
  64 0004 FFF7FEFF 		bl	FLASH_ErasePage
  65              	.LVL2:
  66 0008 0648     		ldr	r0, .L3+4
  67 000a FFF7FEFF 		bl	FLASH_ErasePage
  68              	.LVL3:
  69 000e 0648     		ldr	r0, .L3+8
  70 0010 FFF7FEFF 		bl	FLASH_ErasePage
  71              	.LVL4:
  72 0014 0548     		ldr	r0, .L3+12
  56:tmk_core/common/chibios/eeprom_stm32.c ****         page_num++;
  57:tmk_core/common/chibios/eeprom_stm32.c ****     } while (page_num < FEE_DENSITY_PAGES);
  58:tmk_core/common/chibios/eeprom_stm32.c **** }
  73              		.loc 1 58 0
  74 0016 BDE80840 		pop	{r3, lr}
  75              		.cfi_restore 14
  76              		.cfi_restore 3
  77              		.cfi_def_cfa_offset 0
  55:tmk_core/common/chibios/eeprom_stm32.c ****         page_num++;
  78              		.loc 1 55 0
  79 001a FFF7FEBF 		b	FLASH_ErasePage
  80              	.LVL5:
  81              	.L4:
  82 001e 00BF     		.align	2
  83              	.L3:
  84 0020 00E00308 		.word	134471680
  85 0024 00E80308 		.word	134473728
  86 0028 00F00308 		.word	134475776
  87 002c 00F80308 		.word	134477824
  88              		.cfi_endproc
  89              	.LFE283:
  91              		.section	.text.EEPROM_WriteDataByte,"ax",%progbits
  92              		.align	1
  93              		.global	EEPROM_WriteDataByte
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu softvfp
  99              	EEPROM_WriteDataByte:
 100              	.LFB284:
  59:tmk_core/common/chibios/eeprom_stm32.c **** /*****************************************************************************
  60:tmk_core/common/chibios/eeprom_stm32.c ****  *  Writes once data byte to flash on specified address. If a byte is already
  61:tmk_core/common/chibios/eeprom_stm32.c ****  *  written, the whole page must be copied to a buffer, the byte changed and
  62:tmk_core/common/chibios/eeprom_stm32.c ****  *  the manipulated buffer written after PageErase.
  63:tmk_core/common/chibios/eeprom_stm32.c ****  *******************************************************************************/
  64:tmk_core/common/chibios/eeprom_stm32.c **** uint16_t EEPROM_WriteDataByte(uint16_t Address, uint8_t DataByte) {
 101              		.loc 1 64 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              	.LVL6:
  65:tmk_core/common/chibios/eeprom_stm32.c ****     FLASH_Status FlashStatus = FLASH_COMPLETE;
  66:tmk_core/common/chibios/eeprom_stm32.c **** 
  67:tmk_core/common/chibios/eeprom_stm32.c ****     uint32_t page;
  68:tmk_core/common/chibios/eeprom_stm32.c ****     int      i;
  69:tmk_core/common/chibios/eeprom_stm32.c **** 
  70:tmk_core/common/chibios/eeprom_stm32.c ****     // exit if desired address is above the limit (e.G. under 2048 Bytes for 4 pages)
  71:tmk_core/common/chibios/eeprom_stm32.c ****     if (Address > FEE_DENSITY_BYTES) {
 106              		.loc 1 71 0
 107 0000 B0F5805F 		cmp	r0, #4096
  64:tmk_core/common/chibios/eeprom_stm32.c ****     FLASH_Status FlashStatus = FLASH_COMPLETE;
 108              		.loc 1 64 0
 109 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 110              		.cfi_def_cfa_offset 24
 111              		.cfi_offset 4, -24
 112              		.cfi_offset 5, -20
 113              		.cfi_offset 6, -16
 114              		.cfi_offset 7, -12
 115              		.cfi_offset 8, -8
 116              		.cfi_offset 14, -4
  64:tmk_core/common/chibios/eeprom_stm32.c ****     FLASH_Status FlashStatus = FLASH_COMPLETE;
 117              		.loc 1 64 0
 118 0008 8846     		mov	r8, r1
 119              		.loc 1 71 0
 120 000a 02D3     		bcc	.L6
 121              	.LVL7:
 122              	.L10:
  72:tmk_core/common/chibios/eeprom_stm32.c ****         return 0;
 123              		.loc 1 72 0
 124 000c 0020     		movs	r0, #0
 125              	.L7:
  73:tmk_core/common/chibios/eeprom_stm32.c ****     }
  74:tmk_core/common/chibios/eeprom_stm32.c **** 
  75:tmk_core/common/chibios/eeprom_stm32.c ****     // calculate which page is affected (Pagenum1/Pagenum2...PagenumN)
  76:tmk_core/common/chibios/eeprom_stm32.c ****     page = FEE_ADDR_OFFSET(Address) / FEE_PAGE_SIZE;
  77:tmk_core/common/chibios/eeprom_stm32.c **** 
  78:tmk_core/common/chibios/eeprom_stm32.c ****     // if current data is 0xFF, the byte is empty, just overwrite with the new one
  79:tmk_core/common/chibios/eeprom_stm32.c ****     if ((*(__IO uint16_t *)(FEE_PAGE_BASE_ADDRESS + FEE_ADDR_OFFSET(Address))) == FEE_EMPTY_WORD) {
  80:tmk_core/common/chibios/eeprom_stm32.c ****         FlashStatus = FLASH_ProgramHalfWord(FEE_PAGE_BASE_ADDRESS + FEE_ADDR_OFFSET(Address), (uint
  81:tmk_core/common/chibios/eeprom_stm32.c ****     } else {
  82:tmk_core/common/chibios/eeprom_stm32.c ****         // Copy Page to a buffer
  83:tmk_core/common/chibios/eeprom_stm32.c ****         memcpy(DataBuf, (uint8_t *)FEE_PAGE_BASE_ADDRESS + (page * FEE_PAGE_SIZE), FEE_PAGE_SIZE); 
  84:tmk_core/common/chibios/eeprom_stm32.c **** 
  85:tmk_core/common/chibios/eeprom_stm32.c ****         // check if new data is differ to current data, return if not, proceed if yes
  86:tmk_core/common/chibios/eeprom_stm32.c ****         if (DataByte == *(__IO uint8_t *)(FEE_PAGE_BASE_ADDRESS + FEE_ADDR_OFFSET(Address))) {
  87:tmk_core/common/chibios/eeprom_stm32.c ****             return 0;
  88:tmk_core/common/chibios/eeprom_stm32.c ****         }
  89:tmk_core/common/chibios/eeprom_stm32.c **** 
  90:tmk_core/common/chibios/eeprom_stm32.c ****         // manipulate desired data byte in temp data array if new byte is differ to the current
  91:tmk_core/common/chibios/eeprom_stm32.c ****         DataBuf[FEE_ADDR_OFFSET(Address) % FEE_PAGE_SIZE] = DataByte;
  92:tmk_core/common/chibios/eeprom_stm32.c **** 
  93:tmk_core/common/chibios/eeprom_stm32.c ****         // Erase Page
  94:tmk_core/common/chibios/eeprom_stm32.c ****         FlashStatus = FLASH_ErasePage(FEE_PAGE_BASE_ADDRESS + (page * FEE_PAGE_SIZE));
  95:tmk_core/common/chibios/eeprom_stm32.c **** 
  96:tmk_core/common/chibios/eeprom_stm32.c ****         // Write new data (whole page) to flash if data has been changed
  97:tmk_core/common/chibios/eeprom_stm32.c ****         for (i = 0; i < (FEE_PAGE_SIZE / 2); i++) {
  98:tmk_core/common/chibios/eeprom_stm32.c ****             if ((__IO uint16_t)(0xFF00 | DataBuf[FEE_ADDR_OFFSET(i)]) != 0xFFFF) {
  99:tmk_core/common/chibios/eeprom_stm32.c ****                 FlashStatus = FLASH_ProgramHalfWord((FEE_PAGE_BASE_ADDRESS + (page * FEE_PAGE_SIZE)
 100:tmk_core/common/chibios/eeprom_stm32.c ****             }
 101:tmk_core/common/chibios/eeprom_stm32.c ****         }
 102:tmk_core/common/chibios/eeprom_stm32.c ****     }
 103:tmk_core/common/chibios/eeprom_stm32.c ****     return FlashStatus;
 104:tmk_core/common/chibios/eeprom_stm32.c **** }
 126              		.loc 1 104 0
 127 000e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 128              	.LVL8:
 129              	.L6:
 130              	.LBB30:
 131              	.LBB31:
  79:tmk_core/common/chibios/eeprom_stm32.c ****         FlashStatus = FLASH_ProgramHalfWord(FEE_PAGE_BASE_ADDRESS + FEE_ADDR_OFFSET(Address), (uint
 132              		.loc 1 79 0
 133 0012 4600     		lsls	r6, r0, #1
 134 0014 06F10065 		add	r5, r6, #134217728
 135 0018 05F57835 		add	r5, r5, #253952
 136 001c 4FF6FF72 		movw	r2, #65535
 137 0020 2B88     		ldrh	r3, [r5]
 138 0022 9A42     		cmp	r2, r3
  76:tmk_core/common/chibios/eeprom_stm32.c **** 
 139              		.loc 1 76 0
 140 0024 4FEAA024 		asr	r4, r0, #10
 141              	.LVL9:
  79:tmk_core/common/chibios/eeprom_stm32.c ****         FlashStatus = FLASH_ProgramHalfWord(FEE_PAGE_BASE_ADDRESS + FEE_ADDR_OFFSET(Address), (uint
 142              		.loc 1 79 0
 143 0028 04D1     		bne	.L8
  80:tmk_core/common/chibios/eeprom_stm32.c ****     } else {
 144              		.loc 1 80 0
 145 002a 2846     		mov	r0, r5
 146              	.LVL10:
 147 002c FFF7FEFF 		bl	FLASH_ProgramHalfWord
 148              	.LVL11:
 149              	.L9:
 103:tmk_core/common/chibios/eeprom_stm32.c **** }
 150              		.loc 1 103 0
 151 0030 80B2     		uxth	r0, r0
 152              	.LVL12:
 153 0032 ECE7     		b	.L7
 154              	.LVL13:
 155              	.L8:
  83:tmk_core/common/chibios/eeprom_stm32.c **** 
 156              		.loc 1 83 0
 157 0034 E402     		lsls	r4, r4, #11
 158              	.LVL14:
 159 0036 124F     		ldr	r7, .L17
 160 0038 04F10064 		add	r4, r4, #134217728
 161 003c 04F57834 		add	r4, r4, #253952
 162 0040 4FF40062 		mov	r2, #2048
 163 0044 2146     		mov	r1, r4
 164              	.LVL15:
 165 0046 3846     		mov	r0, r7
 166              	.LVL16:
 167 0048 FFF7FEFF 		bl	memcpy
 168              	.LVL17:
  86:tmk_core/common/chibios/eeprom_stm32.c ****             return 0;
 169              		.loc 1 86 0
 170 004c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 171 004e 9845     		cmp	r8, r3
 172 0050 DCD0     		beq	.L10
  91:tmk_core/common/chibios/eeprom_stm32.c **** 
 173              		.loc 1 91 0
 174 0052 40F2FE73 		movw	r3, #2046
 175 0056 3340     		ands	r3, r3, r6
  94:tmk_core/common/chibios/eeprom_stm32.c **** 
 176              		.loc 1 94 0
 177 0058 2046     		mov	r0, r4
  91:tmk_core/common/chibios/eeprom_stm32.c **** 
 178              		.loc 1 91 0
 179 005a 07F80380 		strb	r8, [r7, r3]
  94:tmk_core/common/chibios/eeprom_stm32.c **** 
 180              		.loc 1 94 0
 181 005e FFF7FEFF 		bl	FLASH_ErasePage
 182              	.LVL18:
 183 0062 0025     		movs	r5, #0
 184              	.LVL19:
 185              	.L12:
  98:tmk_core/common/chibios/eeprom_stm32.c ****                 FlashStatus = FLASH_ProgramHalfWord((FEE_PAGE_BASE_ADDRESS + (page * FEE_PAGE_SIZE)
 186              		.loc 1 98 0
 187 0064 795D     		ldrb	r1, [r7, r5]	@ zero_extendqisi2
 188 0066 61F0FF01 		orn	r1, r1, #255
 189 006a 4B1C     		adds	r3, r1, #1
 190 006c 03D0     		beq	.L11
  99:tmk_core/common/chibios/eeprom_stm32.c ****             }
 191              		.loc 1 99 0
 192 006e 89B2     		uxth	r1, r1
 193 0070 6019     		adds	r0, r4, r5
 194 0072 FFF7FEFF 		bl	FLASH_ProgramHalfWord
 195              	.LVL20:
 196              	.L11:
 197 0076 0235     		adds	r5, r5, #2
  97:tmk_core/common/chibios/eeprom_stm32.c ****             if ((__IO uint16_t)(0xFF00 | DataBuf[FEE_ADDR_OFFSET(i)]) != 0xFFFF) {
 198              		.loc 1 97 0
 199 0078 B5F5006F 		cmp	r5, #2048
 200 007c F2D1     		bne	.L12
 201 007e D7E7     		b	.L9
 202              	.L18:
 203              		.align	2
 204              	.L17:
 205 0080 00000000 		.word	.LANCHOR0
 206              	.LBE31:
 207              	.LBE30:
 208              		.cfi_endproc
 209              	.LFE284:
 211              		.section	.text.EEPROM_ReadDataByte,"ax",%progbits
 212              		.align	1
 213              		.global	EEPROM_ReadDataByte
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 219              	EEPROM_ReadDataByte:
 220              	.LFB285:
 105:tmk_core/common/chibios/eeprom_stm32.c **** /*****************************************************************************
 106:tmk_core/common/chibios/eeprom_stm32.c ****  *  Read once data byte from a specified address.
 107:tmk_core/common/chibios/eeprom_stm32.c ****  *******************************************************************************/
 108:tmk_core/common/chibios/eeprom_stm32.c **** uint8_t EEPROM_ReadDataByte(uint16_t Address) {
 221              		.loc 1 108 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL21:
 109:tmk_core/common/chibios/eeprom_stm32.c ****     uint8_t DataByte = 0xFF;
 110:tmk_core/common/chibios/eeprom_stm32.c **** 
 111:tmk_core/common/chibios/eeprom_stm32.c ****     // Get Byte from specified address
 112:tmk_core/common/chibios/eeprom_stm32.c ****     DataByte = (*(__IO uint8_t *)(FEE_PAGE_BASE_ADDRESS + FEE_ADDR_OFFSET(Address)));
 227              		.loc 1 112 0
 228 0000 4000     		lsls	r0, r0, #1
 229              	.LVL22:
 230 0002 00F10060 		add	r0, r0, #134217728
 231 0006 00F57830 		add	r0, r0, #253952
 232 000a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 233              	.LVL23:
 113:tmk_core/common/chibios/eeprom_stm32.c **** 
 114:tmk_core/common/chibios/eeprom_stm32.c ****     return DataByte;
 115:tmk_core/common/chibios/eeprom_stm32.c **** }
 234              		.loc 1 115 0
 235 000c 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE285:
 239              		.section	.text.eeprom_read_byte,"ax",%progbits
 240              		.align	1
 241              		.global	eeprom_read_byte
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu softvfp
 247              	eeprom_read_byte:
 248              	.LFB286:
 116:tmk_core/common/chibios/eeprom_stm32.c **** 
 117:tmk_core/common/chibios/eeprom_stm32.c **** /*****************************************************************************
 118:tmk_core/common/chibios/eeprom_stm32.c ****  *  Wrap library in AVR style functions.
 119:tmk_core/common/chibios/eeprom_stm32.c ****  *******************************************************************************/
 120:tmk_core/common/chibios/eeprom_stm32.c **** uint8_t eeprom_read_byte(const uint8_t *Address) {
 249              		.loc 1 120 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL24:
 255              	.LBB32:
 256              	.LBB33:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 257              		.loc 1 112 0
 258 0000 80B2     		uxth	r0, r0
 259              	.LVL25:
 260 0002 4000     		lsls	r0, r0, #1
 261              	.LVL26:
 262 0004 00F10060 		add	r0, r0, #134217728
 263 0008 00F57830 		add	r0, r0, #253952
 264 000c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 265              	.LBE33:
 266              	.LBE32:
 121:tmk_core/common/chibios/eeprom_stm32.c ****     const uint16_t p = (const uint32_t)Address;
 122:tmk_core/common/chibios/eeprom_stm32.c ****     return EEPROM_ReadDataByte(p);
 123:tmk_core/common/chibios/eeprom_stm32.c **** }
 267              		.loc 1 123 0
 268 000e 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE286:
 272              		.section	.text.eeprom_write_byte,"ax",%progbits
 273              		.align	1
 274              		.global	eeprom_write_byte
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	eeprom_write_byte:
 281              	.LFB287:
 124:tmk_core/common/chibios/eeprom_stm32.c **** 
 125:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_write_byte(uint8_t *Address, uint8_t Value) {
 282              		.loc 1 125 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL27:
 126:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p = (uint32_t)Address;
 127:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p, Value);
 288              		.loc 1 127 0
 289 0000 80B2     		uxth	r0, r0
 290              	.LVL28:
 291 0002 FFF7FEBF 		b	EEPROM_WriteDataByte
 292              	.LVL29:
 293              		.cfi_endproc
 294              	.LFE287:
 296              		.section	.text.eeprom_update_byte,"ax",%progbits
 297              		.align	1
 298              		.global	eeprom_update_byte
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu softvfp
 304              	eeprom_update_byte:
 305              	.LFB300:
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B2     		uxth	r0, r0
 311 0002 FFF7FEBF 		b	EEPROM_WriteDataByte
 312              		.cfi_endproc
 313              	.LFE300:
 315              		.section	.text.eeprom_read_word,"ax",%progbits
 316              		.align	1
 317              		.global	eeprom_read_word
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu softvfp
 323              	eeprom_read_word:
 324              	.LFB289:
 128:tmk_core/common/chibios/eeprom_stm32.c **** }
 129:tmk_core/common/chibios/eeprom_stm32.c **** 
 130:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_update_byte(uint8_t *Address, uint8_t Value) {
 131:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p = (uint32_t)Address;
 132:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p, Value);
 133:tmk_core/common/chibios/eeprom_stm32.c **** }
 134:tmk_core/common/chibios/eeprom_stm32.c **** 
 135:tmk_core/common/chibios/eeprom_stm32.c **** uint16_t eeprom_read_word(const uint16_t *Address) {
 325              		.loc 1 135 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL30:
 331              	.LBB34:
 332              	.LBB35:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 333              		.loc 1 112 0
 334 0000 83B2     		uxth	r3, r0
 335 0002 5B00     		lsls	r3, r3, #1
 336 0004 03F10063 		add	r3, r3, #134217728
 337 0008 03F57833 		add	r3, r3, #253952
 338 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 339              	.LBE35:
 340              	.LBE34:
 136:tmk_core/common/chibios/eeprom_stm32.c ****     const uint16_t p = (const uint32_t)Address;
 137:tmk_core/common/chibios/eeprom_stm32.c ****     return EEPROM_ReadDataByte(p) | (EEPROM_ReadDataByte(p + 1) << 8);
 341              		.loc 1 137 0
 342 000e 431C     		adds	r3, r0, #1
 343              	.LBB36:
 344              	.LBB37:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 345              		.loc 1 112 0
 346 0010 9BB2     		uxth	r3, r3
 347 0012 5B00     		lsls	r3, r3, #1
 348 0014 03F10063 		add	r3, r3, #134217728
 349 0018 03F57833 		add	r3, r3, #253952
 350 001c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 351              	.LVL31:
 352              	.LBE37:
 353              	.LBE36:
 138:tmk_core/common/chibios/eeprom_stm32.c **** }
 354              		.loc 1 138 0
 355 001e 42EA0020 		orr	r0, r2, r0, lsl #8
 356 0022 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE289:
 360              		.section	.text.eeprom_write_word,"ax",%progbits
 361              		.align	1
 362              		.global	eeprom_write_word
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu softvfp
 368              	eeprom_write_word:
 369              	.LFB290:
 139:tmk_core/common/chibios/eeprom_stm32.c **** 
 140:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_write_word(uint16_t *Address, uint16_t Value) {
 370              		.loc 1 140 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL32:
 375 0000 38B5     		push	{r3, r4, r5, lr}
 376              		.cfi_def_cfa_offset 16
 377              		.cfi_offset 3, -16
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 141:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p = (uint32_t)Address;
 381              		.loc 1 141 0
 382 0002 84B2     		uxth	r4, r0
 383              	.LVL33:
 140:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p = (uint32_t)Address;
 384              		.loc 1 140 0
 385 0004 0D46     		mov	r5, r1
 142:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p, (uint8_t)Value);
 386              		.loc 1 142 0
 387 0006 2046     		mov	r0, r4
 388              	.LVL34:
 389 0008 C9B2     		uxtb	r1, r1
 390              	.LVL35:
 391 000a FFF7FEFF 		bl	EEPROM_WriteDataByte
 392              	.LVL36:
 143:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p + 1, (uint8_t)(Value >> 8));
 393              		.loc 1 143 0
 394 000e 601C     		adds	r0, r4, #1
 395 0010 290A     		lsrs	r1, r5, #8
 396 0012 80B2     		uxth	r0, r0
 144:tmk_core/common/chibios/eeprom_stm32.c **** }
 397              		.loc 1 144 0
 398 0014 BDE83840 		pop	{r3, r4, r5, lr}
 399              		.cfi_restore 14
 400              		.cfi_restore 5
 401              		.cfi_restore 4
 402              		.cfi_restore 3
 403              		.cfi_def_cfa_offset 0
 404              	.LVL37:
 143:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p + 1, (uint8_t)(Value >> 8));
 405              		.loc 1 143 0
 406 0018 FFF7FEBF 		b	EEPROM_WriteDataByte
 407              	.LVL38:
 408              		.cfi_endproc
 409              	.LFE290:
 411              		.section	.text.eeprom_update_word,"ax",%progbits
 412              		.align	1
 413              		.global	eeprom_update_word
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu softvfp
 419              	eeprom_update_word:
 420              	.LFB302:
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425 0000 FFF7FEBF 		b	eeprom_write_word
 426              		.cfi_endproc
 427              	.LFE302:
 429              		.section	.text.eeprom_read_dword,"ax",%progbits
 430              		.align	1
 431              		.global	eeprom_read_dword
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu softvfp
 437              	eeprom_read_dword:
 438              	.LFB292:
 145:tmk_core/common/chibios/eeprom_stm32.c **** 
 146:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_update_word(uint16_t *Address, uint16_t Value) {
 147:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p = (uint32_t)Address;
 148:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p, (uint8_t)Value);
 149:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p + 1, (uint8_t)(Value >> 8));
 150:tmk_core/common/chibios/eeprom_stm32.c **** }
 151:tmk_core/common/chibios/eeprom_stm32.c **** 
 152:tmk_core/common/chibios/eeprom_stm32.c **** uint32_t eeprom_read_dword(const uint32_t *Address) {
 439              		.loc 1 152 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              	.LVL39:
 153:tmk_core/common/chibios/eeprom_stm32.c ****     const uint16_t p = (const uint32_t)Address;
 444              		.loc 1 153 0
 445 0000 83B2     		uxth	r3, r0
 446              	.LVL40:
 154:tmk_core/common/chibios/eeprom_stm32.c ****     return EEPROM_ReadDataByte(p) | (EEPROM_ReadDataByte(p + 1) << 8) | (EEPROM_ReadDataByte(p + 2)
 447              		.loc 1 154 0
 448 0002 5A1C     		adds	r2, r3, #1
 152:tmk_core/common/chibios/eeprom_stm32.c ****     const uint16_t p = (const uint32_t)Address;
 449              		.loc 1 152 0
 450 0004 10B5     		push	{r4, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 4, -8
 453              		.cfi_offset 14, -4
 454              	.LBB38:
 455              	.LBB39:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 456              		.loc 1 112 0
 457 0006 92B2     		uxth	r2, r2
 458              	.LBE39:
 459              	.LBE38:
 460              	.LBB44:
 461              	.LBB45:
 462 0008 5800     		lsls	r0, r3, #1
 463              	.LVL41:
 464              	.LBE45:
 465              	.LBE44:
 466              	.LBB49:
 467              	.LBB40:
 468 000a 5200     		lsls	r2, r2, #1
 469              	.LBE40:
 470              	.LBE49:
 471              	.LBB50:
 472              	.LBB46:
 473 000c 00F10060 		add	r0, r0, #134217728
 474              	.LBE46:
 475              	.LBE50:
 476              	.LBB51:
 477              	.LBB41:
 478 0010 02F10062 		add	r2, r2, #134217728
 479              	.LBE41:
 480              	.LBE51:
 481              	.LBB52:
 482              	.LBB47:
 483 0014 00F57830 		add	r0, r0, #253952
 484              	.LBE47:
 485              	.LBE52:
 486              	.LBB53:
 487              	.LBB42:
 488 0018 02F57832 		add	r2, r2, #253952
 489              	.LBE42:
 490              	.LBE53:
 491              	.LBB54:
 492              	.LBB48:
 493 001c 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 494              	.LBE48:
 495              	.LBE54:
 496              	.LBB55:
 497              	.LBB43:
 498 001e 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 499              	.LBE43:
 500              	.LBE55:
 501              		.loc 1 154 0
 502 0020 9A1C     		adds	r2, r3, #2
 503              	.LBB56:
 504              	.LBB57:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 505              		.loc 1 112 0
 506 0022 92B2     		uxth	r2, r2
 507 0024 5200     		lsls	r2, r2, #1
 508              	.LBE57:
 509              	.LBE56:
 510              		.loc 1 154 0
 511 0026 0333     		adds	r3, r3, #3
 512              	.LVL42:
 513              	.LBB61:
 514              	.LBB58:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 515              		.loc 1 112 0
 516 0028 02F10062 		add	r2, r2, #134217728
 517              	.LBE58:
 518              	.LBE61:
 519              	.LBB62:
 520              	.LBB63:
 521 002c 9BB2     		uxth	r3, r3
 522              	.LVL43:
 523              	.LBE63:
 524              	.LBE62:
 525              	.LBB66:
 526              	.LBB59:
 527 002e 02F57832 		add	r2, r2, #253952
 528              	.LBE59:
 529              	.LBE66:
 530              	.LBB67:
 531              	.LBB64:
 532 0032 5B00     		lsls	r3, r3, #1
 533 0034 03F10063 		add	r3, r3, #134217728
 534              	.LBE64:
 535              	.LBE67:
 536              	.LBB68:
 537              	.LBB60:
 538 0038 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 539              	.LBE60:
 540              	.LBE68:
 541              	.LBB69:
 542              	.LBB65:
 543 003a 03F57833 		add	r3, r3, #253952
 544 003e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 545              	.LBE65:
 546              	.LBE69:
 547              		.loc 1 154 0
 548 0040 1304     		lsls	r3, r2, #16
 549 0042 43EA0423 		orr	r3, r3, r4, lsl #8
 550 0046 0B43     		orrs	r3, r3, r1
 155:tmk_core/common/chibios/eeprom_stm32.c **** }
 551              		.loc 1 155 0
 552 0048 43EA0060 		orr	r0, r3, r0, lsl #24
 553 004c 10BD     		pop	{r4, pc}
 554              		.cfi_endproc
 555              	.LFE292:
 557              		.section	.text.eeprom_write_dword,"ax",%progbits
 558              		.align	1
 559              		.global	eeprom_write_dword
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	eeprom_write_dword:
 566              	.LFB293:
 156:tmk_core/common/chibios/eeprom_stm32.c **** 
 157:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_write_dword(uint32_t *Address, uint32_t Value) {
 567              		.loc 1 157 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL44:
 572 0000 38B5     		push	{r3, r4, r5, lr}
 573              		.cfi_def_cfa_offset 16
 574              		.cfi_offset 3, -16
 575              		.cfi_offset 4, -12
 576              		.cfi_offset 5, -8
 577              		.cfi_offset 14, -4
 158:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p = (const uint32_t)Address;
 578              		.loc 1 158 0
 579 0002 84B2     		uxth	r4, r0
 580              	.LVL45:
 157:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p = (const uint32_t)Address;
 581              		.loc 1 157 0
 582 0004 0D46     		mov	r5, r1
 159:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p, (uint8_t)Value);
 583              		.loc 1 159 0
 584 0006 2046     		mov	r0, r4
 585              	.LVL46:
 586 0008 C9B2     		uxtb	r1, r1
 587              	.LVL47:
 588 000a FFF7FEFF 		bl	EEPROM_WriteDataByte
 589              	.LVL48:
 160:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p + 1, (uint8_t)(Value >> 8));
 590              		.loc 1 160 0
 591 000e 601C     		adds	r0, r4, #1
 592 0010 C5F30721 		ubfx	r1, r5, #8, #8
 593 0014 80B2     		uxth	r0, r0
 594 0016 FFF7FEFF 		bl	EEPROM_WriteDataByte
 595              	.LVL49:
 161:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p + 2, (uint8_t)(Value >> 16));
 596              		.loc 1 161 0
 597 001a A01C     		adds	r0, r4, #2
 598 001c C5F30741 		ubfx	r1, r5, #16, #8
 599 0020 80B2     		uxth	r0, r0
 600 0022 FFF7FEFF 		bl	EEPROM_WriteDataByte
 601              	.LVL50:
 162:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p + 3, (uint8_t)(Value >> 24));
 602              		.loc 1 162 0
 603 0026 E01C     		adds	r0, r4, #3
 604 0028 290E     		lsrs	r1, r5, #24
 605 002a 80B2     		uxth	r0, r0
 163:tmk_core/common/chibios/eeprom_stm32.c **** }
 606              		.loc 1 163 0
 607 002c BDE83840 		pop	{r3, r4, r5, lr}
 608              		.cfi_restore 14
 609              		.cfi_restore 5
 610              		.cfi_restore 4
 611              		.cfi_restore 3
 612              		.cfi_def_cfa_offset 0
 613              	.LVL51:
 162:tmk_core/common/chibios/eeprom_stm32.c ****     EEPROM_WriteDataByte(p + 3, (uint8_t)(Value >> 24));
 614              		.loc 1 162 0
 615 0030 FFF7FEBF 		b	EEPROM_WriteDataByte
 616              	.LVL52:
 617              		.cfi_endproc
 618              	.LFE293:
 620              		.section	.text.eeprom_update_dword,"ax",%progbits
 621              		.align	1
 622              		.global	eeprom_update_dword
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu softvfp
 628              	eeprom_update_dword:
 629              	.LFB294:
 164:tmk_core/common/chibios/eeprom_stm32.c **** 
 165:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_update_dword(uint32_t *Address, uint32_t Value) {
 630              		.loc 1 165 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              	.LVL53:
 166:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p             = (const uint32_t)Address;
 635              		.loc 1 166 0
 636 0000 80B2     		uxth	r0, r0
 637              	.LVL54:
 165:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p             = (const uint32_t)Address;
 638              		.loc 1 165 0
 639 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 640              		.cfi_def_cfa_offset 24
 641              		.cfi_offset 3, -24
 642              		.cfi_offset 4, -20
 643              		.cfi_offset 5, -16
 644              		.cfi_offset 6, -12
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
 167:tmk_core/common/chibios/eeprom_stm32.c ****     uint32_t existingValue = EEPROM_ReadDataByte(p) | (EEPROM_ReadDataByte(p + 1) << 8) | (EEPROM_R
 647              		.loc 1 167 0
 648 0004 471C     		adds	r7, r0, #1
 649 0006 BFB2     		uxth	r7, r7
 650              	.LVL55:
 651              	.LBB70:
 652              	.LBB71:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 653              		.loc 1 112 0
 654 0008 4300     		lsls	r3, r0, #1
 655              	.LBE71:
 656              	.LBE70:
 657              	.LBB75:
 658              	.LBB76:
 659 000a 7A00     		lsls	r2, r7, #1
 660              	.LBE76:
 661              	.LBE75:
 662              	.LBB80:
 663              	.LBB72:
 664 000c 03F10063 		add	r3, r3, #134217728
 665              	.LBE72:
 666              	.LBE80:
 667              	.LBB81:
 668              	.LBB77:
 669 0010 02F10062 		add	r2, r2, #134217728
 670              	.LBE77:
 671              	.LBE81:
 672              	.LBB82:
 673              	.LBB73:
 674 0014 03F57833 		add	r3, r3, #253952
 675              	.LBE73:
 676              	.LBE82:
 677              	.LBB83:
 678              	.LBB78:
 679 0018 02F57832 		add	r2, r2, #253952
 680              	.LBE78:
 681              	.LBE83:
 682              		.loc 1 167 0
 683 001c 861C     		adds	r6, r0, #2
 684 001e B6B2     		uxth	r6, r6
 685              	.LVL56:
 165:tmk_core/common/chibios/eeprom_stm32.c ****     uint16_t p             = (const uint32_t)Address;
 686              		.loc 1 165 0
 687 0020 0C46     		mov	r4, r1
 688              	.LBB84:
 689              	.LBB74:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 690              		.loc 1 112 0
 691 0022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 692              	.LVL57:
 693              	.LBE74:
 694              	.LBE84:
 695              	.LBB85:
 696              	.LBB79:
 697 0024 92F800C0 		ldrb	ip, [r2]	@ zero_extendqisi2
 698              	.LBE79:
 699              	.LBE85:
 700              	.LBB86:
 701              	.LBB87:
 702 0028 7200     		lsls	r2, r6, #1
 703 002a 02F10062 		add	r2, r2, #134217728
 704 002e 02F57832 		add	r2, r2, #253952
 705              	.LBE87:
 706              	.LBE86:
 707              		.loc 1 167 0
 708 0032 C51C     		adds	r5, r0, #3
 709 0034 ADB2     		uxth	r5, r5
 710              	.LVL58:
 711              	.LBB89:
 712              	.LBB88:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 713              		.loc 1 112 0
 714 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 715              	.LBE88:
 716              	.LBE89:
 717              	.LBB90:
 718              	.LBB91:
 719 0038 6A00     		lsls	r2, r5, #1
 720 003a 02F10062 		add	r2, r2, #134217728
 721 003e 02F57832 		add	r2, r2, #253952
 722              	.LBE91:
 723              	.LBE90:
 724              		.loc 1 167 0
 725 0042 1B04     		lsls	r3, r3, #16
 726              	.LBB93:
 727              	.LBB92:
 112:tmk_core/common/chibios/eeprom_stm32.c **** 
 728              		.loc 1 112 0
 729 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 730              	.LVL59:
 731              	.LBE92:
 732              	.LBE93:
 733              		.loc 1 167 0
 734 0046 43EA0C23 		orr	r3, r3, ip, lsl #8
 735 004a 0B43     		orrs	r3, r3, r1
 736 004c 43EA0263 		orr	r3, r3, r2, lsl #24
 168:tmk_core/common/chibios/eeprom_stm32.c ****     if (Value != existingValue) {
 737              		.loc 1 168 0
 738 0050 A342     		cmp	r3, r4
 739 0052 12D0     		beq	.L28
 169:tmk_core/common/chibios/eeprom_stm32.c ****         EEPROM_WriteDataByte(p, (uint8_t)Value);
 740              		.loc 1 169 0
 741 0054 E1B2     		uxtb	r1, r4
 742 0056 FFF7FEFF 		bl	EEPROM_WriteDataByte
 743              	.LVL60:
 170:tmk_core/common/chibios/eeprom_stm32.c ****         EEPROM_WriteDataByte(p + 1, (uint8_t)(Value >> 8));
 744              		.loc 1 170 0
 745 005a C4F30721 		ubfx	r1, r4, #8, #8
 746 005e 3846     		mov	r0, r7
 747 0060 FFF7FEFF 		bl	EEPROM_WriteDataByte
 748              	.LVL61:
 171:tmk_core/common/chibios/eeprom_stm32.c ****         EEPROM_WriteDataByte(p + 2, (uint8_t)(Value >> 16));
 749              		.loc 1 171 0
 750 0064 C4F30741 		ubfx	r1, r4, #16, #8
 751 0068 3046     		mov	r0, r6
 752 006a FFF7FEFF 		bl	EEPROM_WriteDataByte
 753              	.LVL62:
 172:tmk_core/common/chibios/eeprom_stm32.c ****         EEPROM_WriteDataByte(p + 3, (uint8_t)(Value >> 24));
 754              		.loc 1 172 0
 755 006e 210E     		lsrs	r1, r4, #24
 756 0070 2846     		mov	r0, r5
 173:tmk_core/common/chibios/eeprom_stm32.c ****     }
 174:tmk_core/common/chibios/eeprom_stm32.c **** }
 757              		.loc 1 174 0
 758 0072 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 759              		.cfi_remember_state
 760              		.cfi_restore 14
 761              		.cfi_restore 7
 762              		.cfi_restore 6
 763              		.cfi_restore 5
 764              		.cfi_restore 4
 765              		.cfi_restore 3
 766              		.cfi_def_cfa_offset 0
 767              	.LVL63:
 172:tmk_core/common/chibios/eeprom_stm32.c ****         EEPROM_WriteDataByte(p + 3, (uint8_t)(Value >> 24));
 768              		.loc 1 172 0
 769 0076 FFF7FEBF 		b	EEPROM_WriteDataByte
 770              	.LVL64:
 771              	.L28:
 772              		.cfi_restore_state
 773              		.loc 1 174 0
 774 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 775              		.cfi_endproc
 776              	.LFE294:
 778              		.section	.text.eeprom_read_block,"ax",%progbits
 779              		.align	1
 780              		.global	eeprom_read_block
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	eeprom_read_block:
 787              	.LFB295:
 175:tmk_core/common/chibios/eeprom_stm32.c **** 
 176:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_read_block(void *buf, const void *addr, uint32_t len) {
 788              		.loc 1 176 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              	.LVL65:
 793 0000 10B5     		push	{r4, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 4, -8
 796              		.cfi_offset 14, -4
 797              		.loc 1 176 0
 798 0002 0346     		mov	r3, r0
 799              	.LVL66:
 800 0004 0244     		add	r2, r2, r0
 801              	.LVL67:
 802              	.L31:
 177:tmk_core/common/chibios/eeprom_stm32.c ****     const uint8_t *p    = (const uint8_t *)addr;
 178:tmk_core/common/chibios/eeprom_stm32.c ****     uint8_t *      dest = (uint8_t *)buf;
 179:tmk_core/common/chibios/eeprom_stm32.c ****     while (len--) {
 803              		.loc 1 179 0
 804 0006 9342     		cmp	r3, r2
 805 0008 00D1     		bne	.L32
 180:tmk_core/common/chibios/eeprom_stm32.c ****         *dest++ = eeprom_read_byte(p++);
 181:tmk_core/common/chibios/eeprom_stm32.c ****     }
 182:tmk_core/common/chibios/eeprom_stm32.c **** }
 806              		.loc 1 182 0
 807 000a 10BD     		pop	{r4, pc}
 808              	.L32:
 180:tmk_core/common/chibios/eeprom_stm32.c ****         *dest++ = eeprom_read_byte(p++);
 809              		.loc 1 180 0
 810 000c 0846     		mov	r0, r1
 811 000e 4C1C     		adds	r4, r1, #1
 812              	.LVL68:
 813 0010 FFF7FEFF 		bl	eeprom_read_byte
 814              	.LVL69:
 815 0014 2146     		mov	r1, r4
 816 0016 03F8010B 		strb	r0, [r3], #1
 817              	.LVL70:
 818 001a F4E7     		b	.L31
 819              		.cfi_endproc
 820              	.LFE295:
 822              		.section	.text.eeprom_write_block,"ax",%progbits
 823              		.align	1
 824              		.global	eeprom_write_block
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 828              		.fpu softvfp
 830              	eeprom_write_block:
 831              	.LFB296:
 183:tmk_core/common/chibios/eeprom_stm32.c **** 
 184:tmk_core/common/chibios/eeprom_stm32.c **** void eeprom_write_block(const void *buf, void *addr, uint32_t len) {
 832              		.loc 1 184 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              	.LVL71:
 837 0000 70B5     		push	{r4, r5, r6, lr}
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 4, -16
 840              		.cfi_offset 5, -12
 841              		.cfi_offset 6, -8
 842              		.cfi_offset 14, -4
 843              		.loc 1 184 0
 844 0002 0446     		mov	r4, r0
 845              	.LVL72:
 846 0004 0D46     		mov	r5, r1
 847 0006 8618     		adds	r6, r0, r2
 848              	.LVL73:
 849              	.L34:
 185:tmk_core/common/chibios/eeprom_stm32.c ****     uint8_t *      p   = (uint8_t *)addr;
 186:tmk_core/common/chibios/eeprom_stm32.c ****     const uint8_t *src = (const uint8_t *)buf;
 187:tmk_core/common/chibios/eeprom_stm32.c ****     while (len--) {
 850              		.loc 1 187 0
 851 0008 B442     		cmp	r4, r6
 852 000a 00D1     		bne	.L35
 188:tmk_core/common/chibios/eeprom_stm32.c ****         eeprom_write_byte(p++, *src++);
 189:tmk_core/common/chibios/eeprom_stm32.c ****     }
 190:tmk_core/common/chibios/eeprom_stm32.c **** }
 853              		.loc 1 190 0
 854 000c 70BD     		pop	{r4, r5, r6, pc}
 855              	.LVL74:
 856              	.L35:
 857              	.LBB94:
 858              	.LBB95:
 127:tmk_core/common/chibios/eeprom_stm32.c **** }
 859              		.loc 1 127 0
 860 000e A8B2     		uxth	r0, r5
 861 0010 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 862              	.LVL75:
 863 0014 FFF7FEFF 		bl	EEPROM_WriteDataByte
 864              	.LVL76:
 865 0018 0135     		adds	r5, r5, #1
 866              	.LVL77:
 867 001a F5E7     		b	.L34
 868              	.LBE95:
 869              	.LBE94:
 870              		.cfi_endproc
 871              	.LFE296:
 873              		.section	.text.eeprom_update_block,"ax",%progbits
 874              		.align	1
 875              		.global	eeprom_update_block
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu softvfp
 881              	eeprom_update_block:
 882              	.LFB304:
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887 0000 FFF7FEBF 		b	eeprom_write_block
 888              		.cfi_endproc
 889              	.LFE304:
 891              		.global	DataBuf
 892              		.section	.bss.DataBuf,"aw",%nobits
 893              		.set	.LANCHOR0,. + 0
 896              	DataBuf:
 897 0000 00000000 		.space	2048
 897      00000000 
 897      00000000 
 897      00000000 
 897      00000000 
 898              		.text
 899              	.Letext0:
 900              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 901              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 902              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 903              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 904              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 905              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 906              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 907              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 908              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 909              		.file 11 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 910              		.file 12 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 911              		.file 13 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 912              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 913              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 914              		.file 16 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 915              		.file 17 "./lib/chibios/os/rt/include/chtm.h"
 916              		.file 18 "./lib/chibios/os/rt/include/chsem.h"
 917              		.file 19 "./lib/chibios/os/rt/include/chmtx.h"
 918              		.file 20 "./lib/chibios/os/rt/include/chsys.h"
 919              		.file 21 "./lib/chibios/os/rt/include/chregistry.h"
 920              		.file 22 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 921              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 922              		.file 24 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 923              		.file 25 "./lib/chibios/os/hal/include/hal_dac.h"
 924              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 925              		.file 27 "./lib/chibios/os/hal/include/hal_gpt.h"
 926              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 927              		.file 29 "./lib/chibios/os/hal/include/hal_i2c.h"
 928              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 929              		.file 31 "./lib/chibios/os/hal/include/hal_pwm.h"
 930              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 931              		.file 33 "./lib/chibios/os/hal/include/hal_usb.h"
 932              		.file 34 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 933              		.file 35 "tmk_core/common/chibios/flash_stm32.h"
 934              		.file 36 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 eeprom_stm32.c
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:16     .text.EEPROM_Init:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:23     .text.EEPROM_Init:0000000000000000 EEPROM_Init
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:44     .text.EEPROM_Erase:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:51     .text.EEPROM_Erase:0000000000000000 EEPROM_Erase
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:84     .text.EEPROM_Erase:0000000000000020 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:92     .text.EEPROM_WriteDataByte:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:99     .text.EEPROM_WriteDataByte:0000000000000000 EEPROM_WriteDataByte
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:205    .text.EEPROM_WriteDataByte:0000000000000080 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:212    .text.EEPROM_ReadDataByte:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:219    .text.EEPROM_ReadDataByte:0000000000000000 EEPROM_ReadDataByte
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:240    .text.eeprom_read_byte:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:247    .text.eeprom_read_byte:0000000000000000 eeprom_read_byte
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:273    .text.eeprom_write_byte:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:280    .text.eeprom_write_byte:0000000000000000 eeprom_write_byte
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:297    .text.eeprom_update_byte:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:304    .text.eeprom_update_byte:0000000000000000 eeprom_update_byte
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:316    .text.eeprom_read_word:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:323    .text.eeprom_read_word:0000000000000000 eeprom_read_word
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:361    .text.eeprom_write_word:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:368    .text.eeprom_write_word:0000000000000000 eeprom_write_word
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:412    .text.eeprom_update_word:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:419    .text.eeprom_update_word:0000000000000000 eeprom_update_word
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:430    .text.eeprom_read_dword:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:437    .text.eeprom_read_dword:0000000000000000 eeprom_read_dword
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:558    .text.eeprom_write_dword:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:565    .text.eeprom_write_dword:0000000000000000 eeprom_write_dword
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:621    .text.eeprom_update_dword:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:628    .text.eeprom_update_dword:0000000000000000 eeprom_update_dword
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:779    .text.eeprom_read_block:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:786    .text.eeprom_read_block:0000000000000000 eeprom_read_block
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:823    .text.eeprom_write_block:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:830    .text.eeprom_write_block:0000000000000000 eeprom_write_block
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:874    .text.eeprom_update_block:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:881    .text.eeprom_update_block:0000000000000000 eeprom_update_block
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:896    .bss.DataBuf:0000000000000000 DataBuf
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSo6wLk.s:897    .bss.DataBuf:0000000000000000 $d

UNDEFINED SYMBOLS
FLASH_Unlock
FLASH_ErasePage
FLASH_ProgramHalfWord
memcpy
