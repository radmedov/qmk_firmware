   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"mousekey.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.move_unit,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	move_unit:
  23              	.LFB282:
  24              		.file 1 "tmk_core/common/mousekey.c"
   1:tmk_core/common/mousekey.c **** /*
   2:tmk_core/common/mousekey.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/mousekey.c **** 
   4:tmk_core/common/mousekey.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/mousekey.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/mousekey.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/mousekey.c **** (at your option) any later version.
   8:tmk_core/common/mousekey.c **** 
   9:tmk_core/common/mousekey.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/mousekey.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/mousekey.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/mousekey.c **** GNU General Public License for more details.
  13:tmk_core/common/mousekey.c **** 
  14:tmk_core/common/mousekey.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/mousekey.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/mousekey.c **** */
  17:tmk_core/common/mousekey.c **** 
  18:tmk_core/common/mousekey.c **** #include <stdint.h>
  19:tmk_core/common/mousekey.c **** #include "keycode.h"
  20:tmk_core/common/mousekey.c **** #include "host.h"
  21:tmk_core/common/mousekey.c **** #include "timer.h"
  22:tmk_core/common/mousekey.c **** #include "print.h"
  23:tmk_core/common/mousekey.c **** #include "debug.h"
  24:tmk_core/common/mousekey.c **** #include "mousekey.h"
  25:tmk_core/common/mousekey.c **** 
  26:tmk_core/common/mousekey.c **** inline int8_t times_inv_sqrt2(int8_t x) {
  27:tmk_core/common/mousekey.c ****     // 181/256 is pretty close to 1/sqrt(2)
  28:tmk_core/common/mousekey.c ****     // 0.70703125                 0.707106781
  29:tmk_core/common/mousekey.c ****     // 1 too small for x=99 and x=198
  30:tmk_core/common/mousekey.c ****     // This ends up being a mult and discard lower 8 bits
  31:tmk_core/common/mousekey.c ****     return (x * 181) >> 8;
  32:tmk_core/common/mousekey.c **** }
  33:tmk_core/common/mousekey.c **** 
  34:tmk_core/common/mousekey.c **** static report_mouse_t mouse_report = {0};
  35:tmk_core/common/mousekey.c **** static void           mousekey_debug(void);
  36:tmk_core/common/mousekey.c **** static uint8_t        mousekey_accel  = 0;
  37:tmk_core/common/mousekey.c **** static uint8_t        mousekey_repeat = 0;
  38:tmk_core/common/mousekey.c **** static uint16_t       last_timer      = 0;
  39:tmk_core/common/mousekey.c **** 
  40:tmk_core/common/mousekey.c **** #ifndef MK_3_SPEED
  41:tmk_core/common/mousekey.c **** 
  42:tmk_core/common/mousekey.c **** /*
  43:tmk_core/common/mousekey.c ****  * Mouse keys  acceleration algorithm
  44:tmk_core/common/mousekey.c ****  *  http://en.wikipedia.org/wiki/Mouse_keys
  45:tmk_core/common/mousekey.c ****  *
  46:tmk_core/common/mousekey.c ****  *  speed = delta * max_speed * (repeat / time_to_max)**((1000+curve)/1000)
  47:tmk_core/common/mousekey.c ****  */
  48:tmk_core/common/mousekey.c **** /* milliseconds between the initial key press and first repeated motion event (0-2550) */
  49:tmk_core/common/mousekey.c **** uint8_t mk_delay = MOUSEKEY_DELAY / 10;
  50:tmk_core/common/mousekey.c **** /* milliseconds between repeated motion events (0-255) */
  51:tmk_core/common/mousekey.c **** uint8_t mk_interval = MOUSEKEY_INTERVAL;
  52:tmk_core/common/mousekey.c **** /* steady speed (in action_delta units) applied each event (0-255) */
  53:tmk_core/common/mousekey.c **** uint8_t mk_max_speed = MOUSEKEY_MAX_SPEED;
  54:tmk_core/common/mousekey.c **** /* number of events (count) accelerating to steady speed (0-255) */
  55:tmk_core/common/mousekey.c **** uint8_t mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
  56:tmk_core/common/mousekey.c **** /* ramp used to reach maximum pointer speed (NOT SUPPORTED) */
  57:tmk_core/common/mousekey.c **** // int8_t mk_curve = 0;
  58:tmk_core/common/mousekey.c **** /* wheel params */
  59:tmk_core/common/mousekey.c **** uint8_t mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
  60:tmk_core/common/mousekey.c **** uint8_t mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
  61:tmk_core/common/mousekey.c **** 
  62:tmk_core/common/mousekey.c **** static uint8_t move_unit(void) {
  25              		.loc 1 62 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  63:tmk_core/common/mousekey.c ****     uint16_t unit;
  64:tmk_core/common/mousekey.c ****     if (mousekey_accel & (1 << 0)) {
  30              		.loc 1 64 0
  31 0000 194B     		ldr	r3, .L12
  32 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  33 0004 D907     		lsls	r1, r3, #31
  34 0006 09D5     		bpl	.L2
  65:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed) / 4;
  35              		.loc 1 65 0
  36 0008 184B     		ldr	r3, .L12+4
  37 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  38 000c 00EB8000 		add	r0, r0, r0, lsl #2
  39 0010 8008     		lsrs	r0, r0, #2
  40              	.LVL0:
  41              	.L3:
  66:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
  67:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed) / 2;
  68:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  69:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed);
  70:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat == 0) {
  71:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA;
  72:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat >= mk_time_to_max) {
  73:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
  74:tmk_core/common/mousekey.c ****     } else {
  75:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed * mousekey_repeat) / mk_time_to_max;
  76:tmk_core/common/mousekey.c ****     }
  77:tmk_core/common/mousekey.c ****     return (unit > MOUSEKEY_MOVE_MAX ? MOUSEKEY_MOVE_MAX : (unit == 0 ? 1 : unit));
  42              		.loc 1 77 0
  43 0012 7F28     		cmp	r0, #127
  44 0014 23D8     		bhi	.L10
  45              		.loc 1 77 0 is_stmt 0 discriminator 1
  46 0016 20B3     		cbz	r0, .L11
  47              	.LVL1:
  48              	.L6:
  49              		.loc 1 77 0 discriminator 3
  50 0018 C0B2     		uxtb	r0, r0
  51 001a 7047     		bx	lr
  52              	.L2:
  66:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
  53              		.loc 1 66 0 is_stmt 1
  54 001c 9A07     		lsls	r2, r3, #30
  55 001e 05D5     		bpl	.L4
  67:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  56              		.loc 1 67 0
  57 0020 124B     		ldr	r3, .L12+4
  58 0022 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  59 0024 00EB8000 		add	r0, r0, r0, lsl #2
  60 0028 4008     		lsrs	r0, r0, #1
  61              	.LVL2:
  62 002a F2E7     		b	.L3
  63              	.LVL3:
  64              	.L4:
  68:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed);
  65              		.loc 1 68 0
  66 002c 5B07     		lsls	r3, r3, #29
  67 002e 04D5     		bpl	.L5
  69:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat == 0) {
  68              		.loc 1 69 0
  69 0030 0E4B     		ldr	r3, .L12+4
  70 0032 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  71 0034 00EB8000 		add	r0, r0, r0, lsl #2
  72              	.LVL4:
  73 0038 EBE7     		b	.L3
  74              	.LVL5:
  75              	.L5:
  70:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA;
  76              		.loc 1 70 0
  77 003a 0D4B     		ldr	r3, .L12+8
  78 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79 003e 63B1     		cbz	r3, .L9
  72:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
  80              		.loc 1 72 0
  81 0040 0C4A     		ldr	r2, .L12+12
  82 0042 0A49     		ldr	r1, .L12+4
  83 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  84 0046 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
  85 0048 9342     		cmp	r3, r2
  73:tmk_core/common/mousekey.c ****     } else {
  86              		.loc 1 73 0
  87 004a 00EB8000 		add	r0, r0, r0, lsl #2
  88              	.LVL6:
  75:tmk_core/common/mousekey.c ****     }
  89              		.loc 1 75 0
  90 004e 3EBF     		ittt	cc
  91 0050 5843     		mulcc	r0, r3, r0
  92              	.LVL7:
  93 0052 90FBF2F0 		sdivcc	r0, r0, r2
  94 0056 80B2     		uxthcc	r0, r0
  95              	.LVL8:
  96 0058 DBE7     		b	.L3
  97              	.LVL9:
  98              	.L9:
  71:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat >= mk_time_to_max) {
  99              		.loc 1 71 0
 100 005a 0520     		movs	r0, #5
 101 005c DCE7     		b	.L6
 102              	.LVL10:
 103              	.L10:
 104              		.loc 1 77 0
 105 005e 7F20     		movs	r0, #127
 106              	.LVL11:
 107 0060 7047     		bx	lr
 108              	.LVL12:
 109              	.L11:
 110 0062 0120     		movs	r0, #1
 111              	.LVL13:
  78:tmk_core/common/mousekey.c **** }
 112              		.loc 1 78 0
 113 0064 7047     		bx	lr
 114              	.L13:
 115 0066 00BF     		.align	2
 116              	.L12:
 117 0068 00000000 		.word	.LANCHOR0
 118 006c 00000000 		.word	.LANCHOR1
 119 0070 00000000 		.word	.LANCHOR2
 120 0074 00000000 		.word	.LANCHOR3
 121              		.cfi_endproc
 122              	.LFE282:
 124              		.section	.text.wheel_unit,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	wheel_unit:
 132              	.LFB283:
  79:tmk_core/common/mousekey.c **** 
  80:tmk_core/common/mousekey.c **** static uint8_t wheel_unit(void) {
 133              		.loc 1 80 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
  81:tmk_core/common/mousekey.c ****     uint16_t unit;
  82:tmk_core/common/mousekey.c ****     if (mousekey_accel & (1 << 0)) {
 138              		.loc 1 82 0
 139 0000 154B     		ldr	r3, .L26
 140 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141 0004 D907     		lsls	r1, r3, #31
 142 0006 05D5     		bpl	.L15
  83:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed) / 4;
 143              		.loc 1 83 0
 144 0008 144B     		ldr	r3, .L26+4
 145 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 146 000c 8008     		lsrs	r0, r0, #2
 147              	.LVL14:
 148              	.L16:
  84:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
  85:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed) / 2;
  86:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  87:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed);
  88:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat == 0) {
  89:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA;
  90:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat >= mk_wheel_time_to_max) {
  91:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
  92:tmk_core/common/mousekey.c ****     } else {
  93:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed * mousekey_repeat) / mk_wheel_time_to_max
  94:tmk_core/common/mousekey.c ****     }
  95:tmk_core/common/mousekey.c ****     return (unit > MOUSEKEY_WHEEL_MAX ? MOUSEKEY_WHEEL_MAX : (unit == 0 ? 1 : unit));
 149              		.loc 1 95 0 discriminator 1
 150 000e 00B3     		cbz	r0, .L25
 151              	.L20:
 152              		.loc 1 95 0 is_stmt 0 discriminator 3
 153 0010 C0B2     		uxtb	r0, r0
 154 0012 7047     		bx	lr
 155              	.L15:
  84:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 156              		.loc 1 84 0 is_stmt 1
 157 0014 9A07     		lsls	r2, r3, #30
 158 0016 03D5     		bpl	.L17
  85:tmk_core/common/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
 159              		.loc 1 85 0
 160 0018 104B     		ldr	r3, .L26+4
 161 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 162 001c 4008     		lsrs	r0, r0, #1
 163              	.LVL15:
 164 001e F6E7     		b	.L16
 165              	.LVL16:
 166              	.L17:
  86:tmk_core/common/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed);
 167              		.loc 1 86 0
 168 0020 5B07     		lsls	r3, r3, #29
 169 0022 05D5     		bpl	.L18
  87:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat == 0) {
 170              		.loc 1 87 0
 171 0024 0D4B     		ldr	r3, .L26+4
 172 0026 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 173              	.LVL17:
 174              	.L19:
 175              		.loc 1 95 0
 176 0028 7F28     		cmp	r0, #127
 177 002a F0D9     		bls	.L16
 178 002c 7F20     		movs	r0, #127
 179              	.LVL18:
 180 002e 7047     		bx	lr
 181              	.L18:
  88:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA;
 182              		.loc 1 88 0
 183 0030 0B4B     		ldr	r3, .L26+8
 184 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 185 0034 5BB1     		cbz	r3, .L23
  90:tmk_core/common/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
 186              		.loc 1 90 0
 187 0036 0B4A     		ldr	r2, .L26+12
 188 0038 0849     		ldr	r1, .L26+4
 189 003a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 190 003c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 191 003e 9342     		cmp	r3, r2
  93:tmk_core/common/mousekey.c ****     }
 192              		.loc 1 93 0
 193 0040 36BF     		itet	cc
 194 0042 10FB03F0 		smulbbcc	r0, r0, r3
  91:tmk_core/common/mousekey.c ****     } else {
 195              		.loc 1 91 0
 196 0046 80B2     		uxthcs	r0, r0
  93:tmk_core/common/mousekey.c ****     }
 197              		.loc 1 93 0
 198 0048 90FBF2F0 		sdivcc	r0, r0, r2
 199              	.LVL19:
 200 004c ECE7     		b	.L19
 201              	.LVL20:
 202              	.L23:
  89:tmk_core/common/mousekey.c ****     } else if (mousekey_repeat >= mk_wheel_time_to_max) {
 203              		.loc 1 89 0
 204 004e 0120     		movs	r0, #1
 205 0050 DEE7     		b	.L20
 206              	.L25:
 207              		.loc 1 95 0
 208 0052 0120     		movs	r0, #1
  96:tmk_core/common/mousekey.c **** }
 209              		.loc 1 96 0
 210 0054 7047     		bx	lr
 211              	.L27:
 212 0056 00BF     		.align	2
 213              	.L26:
 214 0058 00000000 		.word	.LANCHOR0
 215 005c 00000000 		.word	.LANCHOR4
 216 0060 00000000 		.word	.LANCHOR2
 217 0064 00000000 		.word	.LANCHOR5
 218              		.cfi_endproc
 219              	.LFE283:
 221              		.section	.text.mousekey_on,"ax",%progbits
 222              		.align	1
 223              		.global	mousekey_on
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu softvfp
 229              	mousekey_on:
 230              	.LFB285:
  97:tmk_core/common/mousekey.c **** 
  98:tmk_core/common/mousekey.c **** void mousekey_task(void) {
  99:tmk_core/common/mousekey.c ****     if (timer_elapsed(last_timer) < (mousekey_repeat ? mk_interval : mk_delay * 10)) {
 100:tmk_core/common/mousekey.c ****         return;
 101:tmk_core/common/mousekey.c ****     }
 102:tmk_core/common/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0 && mouse_report.v == 0 && mouse_report.h == 0) {
 103:tmk_core/common/mousekey.c ****         return;
 104:tmk_core/common/mousekey.c ****     }
 105:tmk_core/common/mousekey.c ****     if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 106:tmk_core/common/mousekey.c ****     if (mouse_report.x > 0) mouse_report.x = move_unit();
 107:tmk_core/common/mousekey.c ****     if (mouse_report.x < 0) mouse_report.x = move_unit() * -1;
 108:tmk_core/common/mousekey.c ****     if (mouse_report.y > 0) mouse_report.y = move_unit();
 109:tmk_core/common/mousekey.c ****     if (mouse_report.y < 0) mouse_report.y = move_unit() * -1;
 110:tmk_core/common/mousekey.c ****     /* diagonal move [1/sqrt(2)] */
 111:tmk_core/common/mousekey.c ****     if (mouse_report.x && mouse_report.y) {
 112:tmk_core/common/mousekey.c ****         mouse_report.x = times_inv_sqrt2(mouse_report.x);
 113:tmk_core/common/mousekey.c ****         if (mouse_report.x == 0) {
 114:tmk_core/common/mousekey.c ****             mouse_report.x = 1;
 115:tmk_core/common/mousekey.c ****         }
 116:tmk_core/common/mousekey.c ****         mouse_report.y = times_inv_sqrt2(mouse_report.y);
 117:tmk_core/common/mousekey.c ****         if (mouse_report.y == 0) {
 118:tmk_core/common/mousekey.c ****             mouse_report.y = 1;
 119:tmk_core/common/mousekey.c ****         }
 120:tmk_core/common/mousekey.c ****     }
 121:tmk_core/common/mousekey.c ****     if (mouse_report.v > 0) mouse_report.v = wheel_unit();
 122:tmk_core/common/mousekey.c ****     if (mouse_report.v < 0) mouse_report.v = wheel_unit() * -1;
 123:tmk_core/common/mousekey.c ****     if (mouse_report.h > 0) mouse_report.h = wheel_unit();
 124:tmk_core/common/mousekey.c ****     if (mouse_report.h < 0) mouse_report.h = wheel_unit() * -1;
 125:tmk_core/common/mousekey.c ****     mousekey_send();
 126:tmk_core/common/mousekey.c **** }
 127:tmk_core/common/mousekey.c **** 
 128:tmk_core/common/mousekey.c **** void mousekey_on(uint8_t code) {
 231              		.loc 1 128 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL21:
 129:tmk_core/common/mousekey.c ****     if (code == KC_MS_UP)
 236              		.loc 1 129 0
 237 0000 F028     		cmp	r0, #240
 128:tmk_core/common/mousekey.c ****     if (code == KC_MS_UP)
 238              		.loc 1 128 0
 239 0002 08B5     		push	{r3, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 243              		.loc 1 129 0
 244 0004 05D1     		bne	.L29
 130:tmk_core/common/mousekey.c ****         mouse_report.y = move_unit() * -1;
 245              		.loc 1 130 0
 246 0006 FFF7FEFF 		bl	move_unit
 247              	.LVL22:
 248 000a 4042     		negs	r0, r0
 249              	.L45:
 131:tmk_core/common/mousekey.c ****     else if (code == KC_MS_DOWN)
 132:tmk_core/common/mousekey.c ****         mouse_report.y = move_unit();
 250              		.loc 1 132 0
 251 000c 344B     		ldr	r3, .L51
 252 000e D870     		strb	r0, [r3, #3]
 253              	.L28:
 133:tmk_core/common/mousekey.c ****     else if (code == KC_MS_LEFT)
 134:tmk_core/common/mousekey.c ****         mouse_report.x = move_unit() * -1;
 135:tmk_core/common/mousekey.c ****     else if (code == KC_MS_RIGHT)
 136:tmk_core/common/mousekey.c ****         mouse_report.x = move_unit();
 137:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_UP)
 138:tmk_core/common/mousekey.c ****         mouse_report.v = wheel_unit();
 139:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_DOWN)
 140:tmk_core/common/mousekey.c ****         mouse_report.v = wheel_unit() * -1;
 141:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 142:tmk_core/common/mousekey.c ****         mouse_report.h = wheel_unit() * -1;
 143:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 144:tmk_core/common/mousekey.c ****         mouse_report.h = wheel_unit();
 145:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN1)
 146:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN1;
 147:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN2)
 148:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN2;
 149:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN3)
 150:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN3;
 151:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN4)
 152:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN4;
 153:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN5)
 154:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN5;
 155:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 156:tmk_core/common/mousekey.c ****         mousekey_accel |= (1 << 0);
 157:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 158:tmk_core/common/mousekey.c ****         mousekey_accel |= (1 << 1);
 159:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 160:tmk_core/common/mousekey.c ****         mousekey_accel |= (1 << 2);
 161:tmk_core/common/mousekey.c **** }
 254              		.loc 1 161 0
 255 0010 08BD     		pop	{r3, pc}
 256              	.LVL23:
 257              	.L29:
 131:tmk_core/common/mousekey.c ****     else if (code == KC_MS_DOWN)
 258              		.loc 1 131 0
 259 0012 F128     		cmp	r0, #241
 260 0014 02D1     		bne	.L31
 132:tmk_core/common/mousekey.c ****     else if (code == KC_MS_LEFT)
 261              		.loc 1 132 0
 262 0016 FFF7FEFF 		bl	move_unit
 263              	.LVL24:
 264 001a F7E7     		b	.L45
 265              	.LVL25:
 266              	.L31:
 133:tmk_core/common/mousekey.c ****     else if (code == KC_MS_LEFT)
 267              		.loc 1 133 0
 268 001c F228     		cmp	r0, #242
 269 001e 05D1     		bne	.L32
 134:tmk_core/common/mousekey.c ****     else if (code == KC_MS_RIGHT)
 270              		.loc 1 134 0
 271 0020 FFF7FEFF 		bl	move_unit
 272              	.LVL26:
 273 0024 4042     		negs	r0, r0
 274              	.L47:
 136:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_UP)
 275              		.loc 1 136 0
 276 0026 2E4B     		ldr	r3, .L51
 277 0028 9870     		strb	r0, [r3, #2]
 278 002a F1E7     		b	.L28
 279              	.LVL27:
 280              	.L32:
 135:tmk_core/common/mousekey.c ****         mouse_report.x = move_unit();
 281              		.loc 1 135 0
 282 002c F328     		cmp	r0, #243
 283 002e 02D1     		bne	.L33
 136:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_UP)
 284              		.loc 1 136 0
 285 0030 FFF7FEFF 		bl	move_unit
 286              	.LVL28:
 287 0034 F7E7     		b	.L47
 288              	.LVL29:
 289              	.L33:
 137:tmk_core/common/mousekey.c ****         mouse_report.v = wheel_unit();
 290              		.loc 1 137 0
 291 0036 F928     		cmp	r0, #249
 292 0038 04D1     		bne	.L34
 138:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_DOWN)
 293              		.loc 1 138 0
 294 003a FFF7FEFF 		bl	wheel_unit
 295              	.LVL30:
 296              	.L49:
 140:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 297              		.loc 1 140 0
 298 003e 284B     		ldr	r3, .L51
 299 0040 1871     		strb	r0, [r3, #4]
 300 0042 E5E7     		b	.L28
 301              	.LVL31:
 302              	.L34:
 139:tmk_core/common/mousekey.c ****         mouse_report.v = wheel_unit() * -1;
 303              		.loc 1 139 0
 304 0044 FA28     		cmp	r0, #250
 305 0046 03D1     		bne	.L35
 140:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 306              		.loc 1 140 0
 307 0048 FFF7FEFF 		bl	wheel_unit
 308              	.LVL32:
 309 004c 4042     		negs	r0, r0
 310 004e F6E7     		b	.L49
 311              	.LVL33:
 312              	.L35:
 141:tmk_core/common/mousekey.c ****         mouse_report.h = wheel_unit() * -1;
 313              		.loc 1 141 0
 314 0050 FB28     		cmp	r0, #251
 315 0052 05D1     		bne	.L36
 142:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 316              		.loc 1 142 0
 317 0054 FFF7FEFF 		bl	wheel_unit
 318              	.LVL34:
 319 0058 4042     		negs	r0, r0
 320              	.L50:
 144:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN1)
 321              		.loc 1 144 0
 322 005a 214B     		ldr	r3, .L51
 323 005c 5871     		strb	r0, [r3, #5]
 324 005e D7E7     		b	.L28
 325              	.LVL35:
 326              	.L36:
 143:tmk_core/common/mousekey.c ****         mouse_report.h = wheel_unit();
 327              		.loc 1 143 0
 328 0060 FC28     		cmp	r0, #252
 329 0062 02D1     		bne	.L37
 144:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN1)
 330              		.loc 1 144 0
 331 0064 FFF7FEFF 		bl	wheel_unit
 332              	.LVL36:
 333 0068 F7E7     		b	.L50
 334              	.LVL37:
 335              	.L37:
 145:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN1;
 336              		.loc 1 145 0
 337 006a F428     		cmp	r0, #244
 338 006c 05D1     		bne	.L38
 146:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN2)
 339              		.loc 1 146 0
 340 006e 1C4A     		ldr	r2, .L51
 341 0070 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 342 0072 43F00103 		orr	r3, r3, #1
 343              	.L48:
 154:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 344              		.loc 1 154 0
 345 0076 5370     		strb	r3, [r2, #1]
 346 0078 CAE7     		b	.L28
 347              	.L38:
 147:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN2;
 348              		.loc 1 147 0
 349 007a F528     		cmp	r0, #245
 350 007c 04D1     		bne	.L39
 148:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN3)
 351              		.loc 1 148 0
 352 007e 184A     		ldr	r2, .L51
 353 0080 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 354 0082 43F00203 		orr	r3, r3, #2
 355 0086 F6E7     		b	.L48
 356              	.L39:
 149:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN3;
 357              		.loc 1 149 0
 358 0088 F628     		cmp	r0, #246
 359 008a 04D1     		bne	.L40
 150:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN4)
 360              		.loc 1 150 0
 361 008c 144A     		ldr	r2, .L51
 362 008e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 363 0090 43F00403 		orr	r3, r3, #4
 364 0094 EFE7     		b	.L48
 365              	.L40:
 151:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN4;
 366              		.loc 1 151 0
 367 0096 F728     		cmp	r0, #247
 368 0098 04D1     		bne	.L41
 152:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN5)
 369              		.loc 1 152 0
 370 009a 114A     		ldr	r2, .L51
 371 009c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 372 009e 43F00803 		orr	r3, r3, #8
 373 00a2 E8E7     		b	.L48
 374              	.L41:
 153:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN5;
 375              		.loc 1 153 0
 376 00a4 F828     		cmp	r0, #248
 377 00a6 04D1     		bne	.L42
 154:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 378              		.loc 1 154 0
 379 00a8 0D4A     		ldr	r2, .L51
 380 00aa 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 381 00ac 43F01003 		orr	r3, r3, #16
 382 00b0 E1E7     		b	.L48
 383              	.L42:
 155:tmk_core/common/mousekey.c ****         mousekey_accel |= (1 << 0);
 384              		.loc 1 155 0
 385 00b2 FD28     		cmp	r0, #253
 386 00b4 05D1     		bne	.L43
 156:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 387              		.loc 1 156 0
 388 00b6 0B4A     		ldr	r2, .L51+4
 389 00b8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 390 00ba 43F00103 		orr	r3, r3, #1
 391              	.L46:
 160:tmk_core/common/mousekey.c **** }
 392              		.loc 1 160 0
 393 00be 1370     		strb	r3, [r2]
 394              		.loc 1 161 0
 395 00c0 A6E7     		b	.L28
 396              	.L43:
 157:tmk_core/common/mousekey.c ****         mousekey_accel |= (1 << 1);
 397              		.loc 1 157 0
 398 00c2 FE28     		cmp	r0, #254
 399 00c4 04D1     		bne	.L44
 158:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 400              		.loc 1 158 0
 401 00c6 074A     		ldr	r2, .L51+4
 402 00c8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 403 00ca 43F00203 		orr	r3, r3, #2
 404 00ce F6E7     		b	.L46
 405              	.L44:
 159:tmk_core/common/mousekey.c ****         mousekey_accel |= (1 << 2);
 406              		.loc 1 159 0
 407 00d0 FF28     		cmp	r0, #255
 408 00d2 9DD1     		bne	.L28
 160:tmk_core/common/mousekey.c **** }
 409              		.loc 1 160 0
 410 00d4 034A     		ldr	r2, .L51+4
 411 00d6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 412 00d8 43F00403 		orr	r3, r3, #4
 413 00dc EFE7     		b	.L46
 414              	.L52:
 415 00de 00BF     		.align	2
 416              	.L51:
 417 00e0 00000000 		.word	.LANCHOR6
 418 00e4 00000000 		.word	.LANCHOR0
 419              		.cfi_endproc
 420              	.LFE285:
 422              		.section	.text.mousekey_off,"ax",%progbits
 423              		.align	1
 424              		.global	mousekey_off
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu softvfp
 430              	mousekey_off:
 431              	.LFB286:
 162:tmk_core/common/mousekey.c **** 
 163:tmk_core/common/mousekey.c **** void mousekey_off(uint8_t code) {
 432              		.loc 1 163 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437              	.LVL38:
 164:tmk_core/common/mousekey.c ****     if (code == KC_MS_UP && mouse_report.y < 0)
 438              		.loc 1 164 0
 439 0000 F028     		cmp	r0, #240
 440 0002 404B     		ldr	r3, .L77
 441 0004 14D1     		bne	.L54
 442              		.loc 1 164 0 is_stmt 0 discriminator 1
 443 0006 93F90320 		ldrsb	r2, [r3, #3]
 444 000a 002A     		cmp	r2, #0
 445 000c 01DA     		bge	.L55
 446              	.L57:
 165:tmk_core/common/mousekey.c ****         mouse_report.y = 0;
 447              		.loc 1 165 0 is_stmt 1
 448 000e 0022     		movs	r2, #0
 449 0010 DA70     		strb	r2, [r3, #3]
 450              	.L55:
 166:tmk_core/common/mousekey.c ****     else if (code == KC_MS_DOWN && mouse_report.y > 0)
 167:tmk_core/common/mousekey.c ****         mouse_report.y = 0;
 168:tmk_core/common/mousekey.c ****     else if (code == KC_MS_LEFT && mouse_report.x < 0)
 169:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 170:tmk_core/common/mousekey.c ****     else if (code == KC_MS_RIGHT && mouse_report.x > 0)
 171:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 172:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_UP && mouse_report.v > 0)
 173:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 174:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_DOWN && mouse_report.v < 0)
 175:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 176:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_LEFT && mouse_report.h < 0)
 177:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 178:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_RIGHT && mouse_report.h > 0)
 179:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 180:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN1)
 181:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN1;
 182:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN2)
 183:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN2;
 184:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN3)
 185:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN3;
 186:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN4)
 187:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN4;
 188:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN5)
 189:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN5;
 190:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 191:tmk_core/common/mousekey.c ****         mousekey_accel &= ~(1 << 0);
 192:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 193:tmk_core/common/mousekey.c ****         mousekey_accel &= ~(1 << 1);
 194:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 195:tmk_core/common/mousekey.c ****         mousekey_accel &= ~(1 << 2);
 196:tmk_core/common/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0 && mouse_report.v == 0 && mouse_report.h == 0) m
 451              		.loc 1 196 0
 452 0012 93F90220 		ldrsb	r2, [r3, #2]
 453 0016 52B9     		cbnz	r2, .L53
 454              		.loc 1 196 0 is_stmt 0 discriminator 1
 455 0018 93F90320 		ldrsb	r2, [r3, #3]
 456 001c 3AB9     		cbnz	r2, .L53
 457              		.loc 1 196 0 discriminator 2
 458 001e 93F90420 		ldrsb	r2, [r3, #4]
 459 0022 22B9     		cbnz	r2, .L53
 460              		.loc 1 196 0 discriminator 3
 461 0024 93F90530 		ldrsb	r3, [r3, #5]
 462 0028 0BB9     		cbnz	r3, .L53
 463              		.loc 1 196 0 discriminator 4
 464 002a 374A     		ldr	r2, .L77+4
 465 002c 1370     		strb	r3, [r2]
 466              	.L53:
 197:tmk_core/common/mousekey.c **** }
 467              		.loc 1 197 0 is_stmt 1
 468 002e 7047     		bx	lr
 469              	.L54:
 166:tmk_core/common/mousekey.c ****     else if (code == KC_MS_DOWN && mouse_report.y > 0)
 470              		.loc 1 166 0
 471 0030 F128     		cmp	r0, #241
 472 0032 04D1     		bne	.L56
 166:tmk_core/common/mousekey.c ****     else if (code == KC_MS_DOWN && mouse_report.y > 0)
 473              		.loc 1 166 0 is_stmt 0 discriminator 1
 474 0034 93F90320 		ldrsb	r2, [r3, #3]
 475 0038 002A     		cmp	r2, #0
 476 003a E8DC     		bgt	.L57
 477 003c E9E7     		b	.L55
 478              	.L56:
 168:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 479              		.loc 1 168 0 is_stmt 1
 480 003e F228     		cmp	r0, #242
 481 0040 93F90220 		ldrsb	r2, [r3, #2]
 482 0044 04D1     		bne	.L58
 168:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 483              		.loc 1 168 0 is_stmt 0 discriminator 1
 484 0046 002A     		cmp	r2, #0
 485 0048 E3DA     		bge	.L55
 486              	.L60:
 169:tmk_core/common/mousekey.c ****     else if (code == KC_MS_RIGHT && mouse_report.x > 0)
 487              		.loc 1 169 0 is_stmt 1
 488 004a 0022     		movs	r2, #0
 489 004c 9A70     		strb	r2, [r3, #2]
 490 004e E0E7     		b	.L55
 491              	.L58:
 170:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 492              		.loc 1 170 0
 493 0050 F328     		cmp	r0, #243
 494 0052 02D1     		bne	.L59
 170:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 495              		.loc 1 170 0 is_stmt 0 discriminator 1
 496 0054 002A     		cmp	r2, #0
 497 0056 F8DC     		bgt	.L60
 498 0058 DBE7     		b	.L55
 499              	.L59:
 172:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 500              		.loc 1 172 0 is_stmt 1
 501 005a F928     		cmp	r0, #249
 502 005c 06D1     		bne	.L61
 172:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 503              		.loc 1 172 0 is_stmt 0 discriminator 1
 504 005e 93F90420 		ldrsb	r2, [r3, #4]
 505 0062 002A     		cmp	r2, #0
 506 0064 D5DD     		ble	.L55
 507              	.L63:
 173:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_DOWN && mouse_report.v < 0)
 508              		.loc 1 173 0 is_stmt 1
 509 0066 0022     		movs	r2, #0
 510 0068 1A71     		strb	r2, [r3, #4]
 511 006a D2E7     		b	.L55
 512              	.L61:
 174:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 513              		.loc 1 174 0
 514 006c FA28     		cmp	r0, #250
 515 006e 04D1     		bne	.L62
 174:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 516              		.loc 1 174 0 is_stmt 0 discriminator 1
 517 0070 93F90420 		ldrsb	r2, [r3, #4]
 518 0074 002A     		cmp	r2, #0
 519 0076 CCDA     		bge	.L55
 520 0078 F5E7     		b	.L63
 521              	.L62:
 176:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 522              		.loc 1 176 0 is_stmt 1
 523 007a FB28     		cmp	r0, #251
 524 007c 06D1     		bne	.L64
 176:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 525              		.loc 1 176 0 is_stmt 0 discriminator 1
 526 007e 93F90520 		ldrsb	r2, [r3, #5]
 527 0082 002A     		cmp	r2, #0
 528 0084 C5DA     		bge	.L55
 529              	.L66:
 177:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_RIGHT && mouse_report.h > 0)
 530              		.loc 1 177 0 is_stmt 1
 531 0086 0022     		movs	r2, #0
 532 0088 5A71     		strb	r2, [r3, #5]
 533 008a C2E7     		b	.L55
 534              	.L64:
 178:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 535              		.loc 1 178 0
 536 008c FC28     		cmp	r0, #252
 537 008e 04D1     		bne	.L65
 178:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 538              		.loc 1 178 0 is_stmt 0 discriminator 1
 539 0090 93F90520 		ldrsb	r2, [r3, #5]
 540 0094 002A     		cmp	r2, #0
 541 0096 F6DC     		bgt	.L66
 542 0098 BBE7     		b	.L55
 543              	.L65:
 180:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN1;
 544              		.loc 1 180 0 is_stmt 1
 545 009a F428     		cmp	r0, #244
 546 009c 04D1     		bne	.L67
 181:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN2)
 547              		.loc 1 181 0
 548 009e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 549 00a0 22F00102 		bic	r2, r2, #1
 550              	.L76:
 189:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 551              		.loc 1 189 0
 552 00a4 5A70     		strb	r2, [r3, #1]
 553 00a6 B4E7     		b	.L55
 554              	.L67:
 182:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN2;
 555              		.loc 1 182 0
 556 00a8 F528     		cmp	r0, #245
 557 00aa 03D1     		bne	.L68
 183:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN3)
 558              		.loc 1 183 0
 559 00ac 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 560 00ae 22F00202 		bic	r2, r2, #2
 561 00b2 F7E7     		b	.L76
 562              	.L68:
 184:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN3;
 563              		.loc 1 184 0
 564 00b4 F628     		cmp	r0, #246
 565 00b6 03D1     		bne	.L69
 185:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN4)
 566              		.loc 1 185 0
 567 00b8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 568 00ba 22F00402 		bic	r2, r2, #4
 569 00be F1E7     		b	.L76
 570              	.L69:
 186:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN4;
 571              		.loc 1 186 0
 572 00c0 F728     		cmp	r0, #247
 573 00c2 03D1     		bne	.L70
 187:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN5)
 574              		.loc 1 187 0
 575 00c4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 576 00c6 22F00802 		bic	r2, r2, #8
 577 00ca EBE7     		b	.L76
 578              	.L70:
 188:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN5;
 579              		.loc 1 188 0
 580 00cc F828     		cmp	r0, #248
 581 00ce 03D1     		bne	.L71
 189:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 582              		.loc 1 189 0
 583 00d0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 584 00d2 22F01002 		bic	r2, r2, #16
 585 00d6 E5E7     		b	.L76
 586              	.L71:
 190:tmk_core/common/mousekey.c ****         mousekey_accel &= ~(1 << 0);
 587              		.loc 1 190 0
 588 00d8 FD28     		cmp	r0, #253
 589 00da 05D1     		bne	.L72
 191:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 590              		.loc 1 191 0
 591 00dc 0B49     		ldr	r1, .L77+8
 592 00de 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 593 00e0 22F00102 		bic	r2, r2, #1
 594              	.L75:
 195:tmk_core/common/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0 && mouse_report.v == 0 && mouse_report.h == 0) m
 595              		.loc 1 195 0
 596 00e4 0A70     		strb	r2, [r1]
 597 00e6 94E7     		b	.L55
 598              	.L72:
 192:tmk_core/common/mousekey.c ****         mousekey_accel &= ~(1 << 1);
 599              		.loc 1 192 0
 600 00e8 FE28     		cmp	r0, #254
 601 00ea 04D1     		bne	.L73
 193:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 602              		.loc 1 193 0
 603 00ec 0749     		ldr	r1, .L77+8
 604 00ee 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 605 00f0 22F00202 		bic	r2, r2, #2
 606 00f4 F6E7     		b	.L75
 607              	.L73:
 194:tmk_core/common/mousekey.c ****         mousekey_accel &= ~(1 << 2);
 608              		.loc 1 194 0
 609 00f6 FF28     		cmp	r0, #255
 610 00f8 8BD1     		bne	.L55
 195:tmk_core/common/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0 && mouse_report.v == 0 && mouse_report.h == 0) m
 611              		.loc 1 195 0
 612 00fa 0449     		ldr	r1, .L77+8
 613 00fc 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 614 00fe 22F00402 		bic	r2, r2, #4
 615 0102 EFE7     		b	.L75
 616              	.L78:
 617              		.align	2
 618              	.L77:
 619 0104 00000000 		.word	.LANCHOR6
 620 0108 00000000 		.word	.LANCHOR2
 621 010c 00000000 		.word	.LANCHOR0
 622              		.cfi_endproc
 623              	.LFE286:
 625              		.section	.text.mousekey_send,"ax",%progbits
 626              		.align	1
 627              		.global	mousekey_send
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu softvfp
 633              	mousekey_send:
 634              	.LFB287:
 198:tmk_core/common/mousekey.c **** 
 199:tmk_core/common/mousekey.c **** #else /* #ifndef MK_3_SPEED */
 200:tmk_core/common/mousekey.c **** 
 201:tmk_core/common/mousekey.c **** enum { mkspd_unmod, mkspd_0, mkspd_1, mkspd_2, mkspd_COUNT };
 202:tmk_core/common/mousekey.c **** #    ifndef MK_MOMENTARY_ACCEL
 203:tmk_core/common/mousekey.c **** static uint8_t  mk_speed                 = mkspd_1;
 204:tmk_core/common/mousekey.c **** #    else
 205:tmk_core/common/mousekey.c **** static uint8_t mk_speed      = mkspd_unmod;
 206:tmk_core/common/mousekey.c **** static uint8_t mkspd_DEFAULT = mkspd_unmod;
 207:tmk_core/common/mousekey.c **** #    endif
 208:tmk_core/common/mousekey.c **** static uint16_t last_timer_c             = 0;
 209:tmk_core/common/mousekey.c **** static uint16_t last_timer_w             = 0;
 210:tmk_core/common/mousekey.c **** uint16_t        c_offsets[mkspd_COUNT]   = {MK_C_OFFSET_UNMOD, MK_C_OFFSET_0, MK_C_OFFSET_1, MK_C_O
 211:tmk_core/common/mousekey.c **** uint16_t        c_intervals[mkspd_COUNT] = {MK_C_INTERVAL_UNMOD, MK_C_INTERVAL_0, MK_C_INTERVAL_1, 
 212:tmk_core/common/mousekey.c **** uint16_t        w_offsets[mkspd_COUNT]   = {MK_W_OFFSET_UNMOD, MK_W_OFFSET_0, MK_W_OFFSET_1, MK_W_O
 213:tmk_core/common/mousekey.c **** uint16_t        w_intervals[mkspd_COUNT] = {MK_W_INTERVAL_UNMOD, MK_W_INTERVAL_0, MK_W_INTERVAL_1, 
 214:tmk_core/common/mousekey.c **** 
 215:tmk_core/common/mousekey.c **** void mousekey_task(void) {
 216:tmk_core/common/mousekey.c ****     // report cursor and scroll movement independently
 217:tmk_core/common/mousekey.c ****     report_mouse_t const tmpmr = mouse_report;
 218:tmk_core/common/mousekey.c ****     if ((mouse_report.x || mouse_report.y) && timer_elapsed(last_timer_c) > c_intervals[mk_speed]) 
 219:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 220:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 221:tmk_core/common/mousekey.c ****         mousekey_send();
 222:tmk_core/common/mousekey.c ****         last_timer_c = last_timer;
 223:tmk_core/common/mousekey.c ****         mouse_report = tmpmr;
 224:tmk_core/common/mousekey.c ****     }
 225:tmk_core/common/mousekey.c ****     if ((mouse_report.h || mouse_report.v) && timer_elapsed(last_timer_w) > w_intervals[mk_speed]) 
 226:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 227:tmk_core/common/mousekey.c ****         mouse_report.y = 0;
 228:tmk_core/common/mousekey.c ****         mousekey_send();
 229:tmk_core/common/mousekey.c ****         last_timer_w = last_timer;
 230:tmk_core/common/mousekey.c ****         mouse_report = tmpmr;
 231:tmk_core/common/mousekey.c ****     }
 232:tmk_core/common/mousekey.c **** }
 233:tmk_core/common/mousekey.c **** 
 234:tmk_core/common/mousekey.c **** void adjust_speed(void) {
 235:tmk_core/common/mousekey.c ****     uint16_t const c_offset = c_offsets[mk_speed];
 236:tmk_core/common/mousekey.c ****     uint16_t const w_offset = w_offsets[mk_speed];
 237:tmk_core/common/mousekey.c ****     if (mouse_report.x > 0) mouse_report.x = c_offset;
 238:tmk_core/common/mousekey.c ****     if (mouse_report.x < 0) mouse_report.x = c_offset * -1;
 239:tmk_core/common/mousekey.c ****     if (mouse_report.y > 0) mouse_report.y = c_offset;
 240:tmk_core/common/mousekey.c ****     if (mouse_report.y < 0) mouse_report.y = c_offset * -1;
 241:tmk_core/common/mousekey.c ****     if (mouse_report.h > 0) mouse_report.h = w_offset;
 242:tmk_core/common/mousekey.c ****     if (mouse_report.h < 0) mouse_report.h = w_offset * -1;
 243:tmk_core/common/mousekey.c ****     if (mouse_report.v > 0) mouse_report.v = w_offset;
 244:tmk_core/common/mousekey.c ****     if (mouse_report.v < 0) mouse_report.v = w_offset * -1;
 245:tmk_core/common/mousekey.c ****     // adjust for diagonals
 246:tmk_core/common/mousekey.c ****     if (mouse_report.x && mouse_report.y) {
 247:tmk_core/common/mousekey.c ****         mouse_report.x = times_inv_sqrt2(mouse_report.x);
 248:tmk_core/common/mousekey.c ****         if (mouse_report.x == 0) {
 249:tmk_core/common/mousekey.c ****             mouse_report.x = 1;
 250:tmk_core/common/mousekey.c ****         }
 251:tmk_core/common/mousekey.c ****         mouse_report.y = times_inv_sqrt2(mouse_report.y);
 252:tmk_core/common/mousekey.c ****         if (mouse_report.y == 0) {
 253:tmk_core/common/mousekey.c ****             mouse_report.y = 1;
 254:tmk_core/common/mousekey.c ****         }
 255:tmk_core/common/mousekey.c ****     }
 256:tmk_core/common/mousekey.c ****     if (mouse_report.h && mouse_report.v) {
 257:tmk_core/common/mousekey.c ****         mouse_report.h = times_inv_sqrt2(mouse_report.h);
 258:tmk_core/common/mousekey.c ****         mouse_report.v = times_inv_sqrt2(mouse_report.v);
 259:tmk_core/common/mousekey.c ****     }
 260:tmk_core/common/mousekey.c **** }
 261:tmk_core/common/mousekey.c **** 
 262:tmk_core/common/mousekey.c **** void mousekey_on(uint8_t code) {
 263:tmk_core/common/mousekey.c ****     uint16_t const c_offset  = c_offsets[mk_speed];
 264:tmk_core/common/mousekey.c ****     uint16_t const w_offset  = w_offsets[mk_speed];
 265:tmk_core/common/mousekey.c ****     uint8_t const  old_speed = mk_speed;
 266:tmk_core/common/mousekey.c ****     if (code == KC_MS_UP)
 267:tmk_core/common/mousekey.c ****         mouse_report.y = c_offset * -1;
 268:tmk_core/common/mousekey.c ****     else if (code == KC_MS_DOWN)
 269:tmk_core/common/mousekey.c ****         mouse_report.y = c_offset;
 270:tmk_core/common/mousekey.c ****     else if (code == KC_MS_LEFT)
 271:tmk_core/common/mousekey.c ****         mouse_report.x = c_offset * -1;
 272:tmk_core/common/mousekey.c ****     else if (code == KC_MS_RIGHT)
 273:tmk_core/common/mousekey.c ****         mouse_report.x = c_offset;
 274:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_UP)
 275:tmk_core/common/mousekey.c ****         mouse_report.v = w_offset;
 276:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_DOWN)
 277:tmk_core/common/mousekey.c ****         mouse_report.v = w_offset * -1;
 278:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 279:tmk_core/common/mousekey.c ****         mouse_report.h = w_offset * -1;
 280:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 281:tmk_core/common/mousekey.c ****         mouse_report.h = w_offset;
 282:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN1)
 283:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN1;
 284:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN2)
 285:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN2;
 286:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN3)
 287:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN3;
 288:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN4)
 289:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN4;
 290:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN5)
 291:tmk_core/common/mousekey.c ****         mouse_report.buttons |= MOUSE_BTN5;
 292:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 293:tmk_core/common/mousekey.c ****         mk_speed = mkspd_0;
 294:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 295:tmk_core/common/mousekey.c ****         mk_speed = mkspd_1;
 296:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 297:tmk_core/common/mousekey.c ****         mk_speed = mkspd_2;
 298:tmk_core/common/mousekey.c ****     if (mk_speed != old_speed) adjust_speed();
 299:tmk_core/common/mousekey.c **** }
 300:tmk_core/common/mousekey.c **** 
 301:tmk_core/common/mousekey.c **** void mousekey_off(uint8_t code) {
 302:tmk_core/common/mousekey.c **** #    ifdef MK_MOMENTARY_ACCEL
 303:tmk_core/common/mousekey.c ****     uint8_t const old_speed = mk_speed;
 304:tmk_core/common/mousekey.c **** #    endif
 305:tmk_core/common/mousekey.c ****     if (code == KC_MS_UP && mouse_report.y < 0)
 306:tmk_core/common/mousekey.c ****         mouse_report.y = 0;
 307:tmk_core/common/mousekey.c ****     else if (code == KC_MS_DOWN && mouse_report.y > 0)
 308:tmk_core/common/mousekey.c ****         mouse_report.y = 0;
 309:tmk_core/common/mousekey.c ****     else if (code == KC_MS_LEFT && mouse_report.x < 0)
 310:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 311:tmk_core/common/mousekey.c ****     else if (code == KC_MS_RIGHT && mouse_report.x > 0)
 312:tmk_core/common/mousekey.c ****         mouse_report.x = 0;
 313:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_UP && mouse_report.v > 0)
 314:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 315:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_DOWN && mouse_report.v < 0)
 316:tmk_core/common/mousekey.c ****         mouse_report.v = 0;
 317:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_LEFT && mouse_report.h < 0)
 318:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 319:tmk_core/common/mousekey.c ****     else if (code == KC_MS_WH_RIGHT && mouse_report.h > 0)
 320:tmk_core/common/mousekey.c ****         mouse_report.h = 0;
 321:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN1)
 322:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN1;
 323:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN2)
 324:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN2;
 325:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN3)
 326:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN3;
 327:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN4)
 328:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN4;
 329:tmk_core/common/mousekey.c ****     else if (code == KC_MS_BTN5)
 330:tmk_core/common/mousekey.c ****         mouse_report.buttons &= ~MOUSE_BTN5;
 331:tmk_core/common/mousekey.c **** #    ifdef MK_MOMENTARY_ACCEL
 332:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 333:tmk_core/common/mousekey.c ****         mk_speed = mkspd_DEFAULT;
 334:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 335:tmk_core/common/mousekey.c ****         mk_speed = mkspd_DEFAULT;
 336:tmk_core/common/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 337:tmk_core/common/mousekey.c ****         mk_speed = mkspd_DEFAULT;
 338:tmk_core/common/mousekey.c ****     if (mk_speed != old_speed) adjust_speed();
 339:tmk_core/common/mousekey.c **** #    endif
 340:tmk_core/common/mousekey.c **** }
 341:tmk_core/common/mousekey.c **** 
 342:tmk_core/common/mousekey.c **** #endif /* #ifndef MK_3_SPEED */
 343:tmk_core/common/mousekey.c **** 
 344:tmk_core/common/mousekey.c **** void mousekey_send(void) {
 635              		.loc 1 344 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              	.LBB8:
 640              	.LBB9:
 345:tmk_core/common/mousekey.c ****     mousekey_debug();
 346:tmk_core/common/mousekey.c ****     host_mouse_send(&mouse_report);
 347:tmk_core/common/mousekey.c ****     last_timer = timer_read();
 348:tmk_core/common/mousekey.c **** }
 349:tmk_core/common/mousekey.c **** 
 350:tmk_core/common/mousekey.c **** void mousekey_clear(void) {
 351:tmk_core/common/mousekey.c ****     mouse_report    = (report_mouse_t){};
 352:tmk_core/common/mousekey.c ****     mousekey_repeat = 0;
 353:tmk_core/common/mousekey.c ****     mousekey_accel  = 0;
 354:tmk_core/common/mousekey.c **** }
 355:tmk_core/common/mousekey.c **** 
 356:tmk_core/common/mousekey.c **** static void mousekey_debug(void) {
 357:tmk_core/common/mousekey.c ****     if (!debug_mouse) return;
 641              		.loc 1 357 0
 642 0000 234B     		ldr	r3, .L84
 643 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 644 0004 1B07     		lsls	r3, r3, #28
 645              	.LBE9:
 646              	.LBE8:
 344:tmk_core/common/mousekey.c ****     mousekey_debug();
 647              		.loc 1 344 0
 648 0006 10B5     		push	{r4, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 4, -8
 651              		.cfi_offset 14, -4
 652              	.LBB11:
 653              	.LBB10:
 654              		.loc 1 357 0
 655 0008 3AD5     		bpl	.L80
 358:tmk_core/common/mousekey.c ****     print("mousekey [btn|x y v h](rep/acl): [");
 359:tmk_core/common/mousekey.c ****     phex(mouse_report.buttons);
 656              		.loc 1 359 0
 657 000a 224C     		ldr	r4, .L84+4
 358:tmk_core/common/mousekey.c ****     print("mousekey [btn|x y v h](rep/acl): [");
 658              		.loc 1 358 0
 659 000c 2248     		ldr	r0, .L84+8
 660 000e FFF7FEFF 		bl	tfp_printf
 661              	.LVL39:
 662              		.loc 1 359 0
 663 0012 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 664 0014 2148     		ldr	r0, .L84+12
 665 0016 FFF7FEFF 		bl	tfp_printf
 666              	.LVL40:
 360:tmk_core/common/mousekey.c ****     print("|");
 667              		.loc 1 360 0
 668 001a 2148     		ldr	r0, .L84+16
 669 001c FFF7FEFF 		bl	tfp_printf
 670              	.LVL41:
 361:tmk_core/common/mousekey.c ****     print_decs(mouse_report.x);
 671              		.loc 1 361 0
 672 0020 94F90210 		ldrsb	r1, [r4, #2]
 673 0024 1F48     		ldr	r0, .L84+20
 674 0026 FFF7FEFF 		bl	tfp_printf
 675              	.LVL42:
 362:tmk_core/common/mousekey.c ****     print(" ");
 676              		.loc 1 362 0
 677 002a 1F48     		ldr	r0, .L84+24
 678 002c FFF7FEFF 		bl	tfp_printf
 679              	.LVL43:
 363:tmk_core/common/mousekey.c ****     print_decs(mouse_report.y);
 680              		.loc 1 363 0
 681 0030 94F90310 		ldrsb	r1, [r4, #3]
 682 0034 1B48     		ldr	r0, .L84+20
 683 0036 FFF7FEFF 		bl	tfp_printf
 684              	.LVL44:
 364:tmk_core/common/mousekey.c ****     print(" ");
 685              		.loc 1 364 0
 686 003a 1B48     		ldr	r0, .L84+24
 687 003c FFF7FEFF 		bl	tfp_printf
 688              	.LVL45:
 365:tmk_core/common/mousekey.c ****     print_decs(mouse_report.v);
 689              		.loc 1 365 0
 690 0040 94F90410 		ldrsb	r1, [r4, #4]
 691 0044 1748     		ldr	r0, .L84+20
 692 0046 FFF7FEFF 		bl	tfp_printf
 693              	.LVL46:
 366:tmk_core/common/mousekey.c ****     print(" ");
 694              		.loc 1 366 0
 695 004a 1748     		ldr	r0, .L84+24
 696 004c FFF7FEFF 		bl	tfp_printf
 697              	.LVL47:
 367:tmk_core/common/mousekey.c ****     print_decs(mouse_report.h);
 698              		.loc 1 367 0
 699 0050 94F90510 		ldrsb	r1, [r4, #5]
 700 0054 1348     		ldr	r0, .L84+20
 701 0056 FFF7FEFF 		bl	tfp_printf
 702              	.LVL48:
 368:tmk_core/common/mousekey.c ****     print("](");
 703              		.loc 1 368 0
 704 005a 1448     		ldr	r0, .L84+28
 705 005c FFF7FEFF 		bl	tfp_printf
 706              	.LVL49:
 369:tmk_core/common/mousekey.c ****     print_dec(mousekey_repeat);
 707              		.loc 1 369 0
 708 0060 134B     		ldr	r3, .L84+32
 709 0062 1448     		ldr	r0, .L84+36
 710 0064 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 711 0066 FFF7FEFF 		bl	tfp_printf
 712              	.LVL50:
 370:tmk_core/common/mousekey.c ****     print("/");
 713              		.loc 1 370 0
 714 006a 1348     		ldr	r0, .L84+40
 715 006c FFF7FEFF 		bl	tfp_printf
 716              	.LVL51:
 371:tmk_core/common/mousekey.c ****     print_dec(mousekey_accel);
 717              		.loc 1 371 0
 718 0070 124B     		ldr	r3, .L84+44
 719 0072 1048     		ldr	r0, .L84+36
 720 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 721 0076 FFF7FEFF 		bl	tfp_printf
 722              	.LVL52:
 372:tmk_core/common/mousekey.c ****     print(")\n");
 723              		.loc 1 372 0
 724 007a 1148     		ldr	r0, .L84+48
 725 007c FFF7FEFF 		bl	tfp_printf
 726              	.LVL53:
 727              	.L80:
 728              	.LBE10:
 729              	.LBE11:
 346:tmk_core/common/mousekey.c ****     last_timer = timer_read();
 730              		.loc 1 346 0
 731 0080 0448     		ldr	r0, .L84+4
 732 0082 FFF7FEFF 		bl	host_mouse_send
 733              	.LVL54:
 347:tmk_core/common/mousekey.c **** }
 734              		.loc 1 347 0
 735 0086 FFF7FEFF 		bl	timer_read
 736              	.LVL55:
 737 008a 0E4B     		ldr	r3, .L84+52
 738 008c 1880     		strh	r0, [r3]	@ movhi
 348:tmk_core/common/mousekey.c **** 
 739              		.loc 1 348 0
 740 008e 10BD     		pop	{r4, pc}
 741              	.L85:
 742              		.align	2
 743              	.L84:
 744 0090 00000000 		.word	debug_config
 745 0094 00000000 		.word	.LANCHOR6
 746 0098 00000000 		.word	.LC0
 747 009c 23000000 		.word	.LC1
 748 00a0 28000000 		.word	.LC2
 749 00a4 2A000000 		.word	.LC3
 750 00a8 2D000000 		.word	.LC4
 751 00ac 2F000000 		.word	.LC5
 752 00b0 00000000 		.word	.LANCHOR2
 753 00b4 32000000 		.word	.LC6
 754 00b8 35000000 		.word	.LC7
 755 00bc 00000000 		.word	.LANCHOR0
 756 00c0 37000000 		.word	.LC8
 757 00c4 00000000 		.word	.LANCHOR7
 758              		.cfi_endproc
 759              	.LFE287:
 761              		.section	.text.mousekey_task,"ax",%progbits
 762              		.align	1
 763              		.global	mousekey_task
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu softvfp
 769              	mousekey_task:
 770              	.LFB284:
  98:tmk_core/common/mousekey.c ****     if (timer_elapsed(last_timer) < (mousekey_repeat ? mk_interval : mk_delay * 10)) {
 771              		.loc 1 98 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 776              		.cfi_def_cfa_offset 24
 777              		.cfi_offset 3, -24
 778              		.cfi_offset 4, -20
 779              		.cfi_offset 5, -16
 780              		.cfi_offset 6, -12
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
  99:tmk_core/common/mousekey.c ****         return;
 783              		.loc 1 99 0
 784 0002 394B     		ldr	r3, .L119
 785 0004 1888     		ldrh	r0, [r3]
 786 0006 FFF7FEFF 		bl	timer_elapsed
 787              	.LVL56:
 788 000a 3849     		ldr	r1, .L119+4
 789 000c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 790 000e A2B1     		cbz	r2, .L87
  99:tmk_core/common/mousekey.c ****         return;
 791              		.loc 1 99 0 is_stmt 0 discriminator 1
 792 0010 374B     		ldr	r3, .L119+8
 793 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 794              	.L88:
  99:tmk_core/common/mousekey.c ****         return;
 795              		.loc 1 99 0 discriminator 4
 796 0014 9842     		cmp	r0, r3
 797 0016 0FDB     		blt	.L86
 102:tmk_core/common/mousekey.c ****         return;
 798              		.loc 1 102 0 is_stmt 1
 799 0018 364C     		ldr	r4, .L119+12
 800 001a 94F90230 		ldrsb	r3, [r4, #2]
 801 001e 94F90370 		ldrsb	r7, [r4, #3]
 802 0022 94F90460 		ldrsb	r6, [r4, #4]
 803 0026 94F90550 		ldrsb	r5, [r4, #5]
 804 002a 63B9     		cbnz	r3, .L90
 102:tmk_core/common/mousekey.c ****         return;
 805              		.loc 1 102 0 is_stmt 0 discriminator 1
 806 002c 002F     		cmp	r7, #0
 807 002e 58D1     		bne	.L91
 102:tmk_core/common/mousekey.c ****         return;
 808              		.loc 1 102 0 discriminator 2
 809 0030 002E     		cmp	r6, #0
 810 0032 56D1     		bne	.L91
 102:tmk_core/common/mousekey.c ****         return;
 811              		.loc 1 102 0 discriminator 3
 812 0034 002D     		cmp	r5, #0
 813 0036 54D1     		bne	.L91
 814              	.L86:
 126:tmk_core/common/mousekey.c **** 
 815              		.loc 1 126 0 is_stmt 1
 816 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 817              	.L87:
  99:tmk_core/common/mousekey.c ****         return;
 818              		.loc 1 99 0 discriminator 2
 819 003a 2F4B     		ldr	r3, .L119+16
 820 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 821 003e 03EB8303 		add	r3, r3, r3, lsl #2
 822 0042 5B00     		lsls	r3, r3, #1
 823 0044 E6E7     		b	.L88
 824              	.L90:
 105:tmk_core/common/mousekey.c ****     if (mouse_report.x > 0) mouse_report.x = move_unit();
 825              		.loc 1 105 0
 826 0046 FF2A     		cmp	r2, #255
 827 0048 01D0     		beq	.L92
 828              	.L107:
 105:tmk_core/common/mousekey.c ****     if (mouse_report.x > 0) mouse_report.x = move_unit();
 829              		.loc 1 105 0 is_stmt 0 discriminator 1
 830 004a 0132     		adds	r2, r2, #1
 831 004c 0A70     		strb	r2, [r1]
 832              	.L92:
 106:tmk_core/common/mousekey.c ****     if (mouse_report.x < 0) mouse_report.x = move_unit() * -1;
 833              		.loc 1 106 0 is_stmt 1
 834 004e 002B     		cmp	r3, #0
 835 0050 02DD     		ble	.L93
 106:tmk_core/common/mousekey.c ****     if (mouse_report.x < 0) mouse_report.x = move_unit() * -1;
 836              		.loc 1 106 0 is_stmt 0 discriminator 1
 837 0052 FFF7FEFF 		bl	move_unit
 838              	.LVL57:
 839 0056 A070     		strb	r0, [r4, #2]
 840              	.L93:
 107:tmk_core/common/mousekey.c ****     if (mouse_report.y > 0) mouse_report.y = move_unit();
 841              		.loc 1 107 0 is_stmt 1
 842 0058 94F90230 		ldrsb	r3, [r4, #2]
 843 005c 002B     		cmp	r3, #0
 844 005e 03DA     		bge	.L94
 107:tmk_core/common/mousekey.c ****     if (mouse_report.y > 0) mouse_report.y = move_unit();
 845              		.loc 1 107 0 is_stmt 0 discriminator 1
 846 0060 FFF7FEFF 		bl	move_unit
 847              	.LVL58:
 848 0064 4042     		negs	r0, r0
 849 0066 A070     		strb	r0, [r4, #2]
 850              	.L94:
 108:tmk_core/common/mousekey.c ****     if (mouse_report.y < 0) mouse_report.y = move_unit() * -1;
 851              		.loc 1 108 0 is_stmt 1
 852 0068 002F     		cmp	r7, #0
 853 006a 02DD     		ble	.L95
 108:tmk_core/common/mousekey.c ****     if (mouse_report.y < 0) mouse_report.y = move_unit() * -1;
 854              		.loc 1 108 0 is_stmt 0 discriminator 1
 855 006c FFF7FEFF 		bl	move_unit
 856              	.LVL59:
 857 0070 E070     		strb	r0, [r4, #3]
 858              	.L95:
 109:tmk_core/common/mousekey.c ****     /* diagonal move [1/sqrt(2)] */
 859              		.loc 1 109 0 is_stmt 1
 860 0072 94F90330 		ldrsb	r3, [r4, #3]
 861 0076 002B     		cmp	r3, #0
 862 0078 03DA     		bge	.L96
 109:tmk_core/common/mousekey.c ****     /* diagonal move [1/sqrt(2)] */
 863              		.loc 1 109 0 is_stmt 0 discriminator 1
 864 007a FFF7FEFF 		bl	move_unit
 865              	.LVL60:
 866 007e 4042     		negs	r0, r0
 867 0080 E070     		strb	r0, [r4, #3]
 868              	.L96:
 111:tmk_core/common/mousekey.c ****         mouse_report.x = times_inv_sqrt2(mouse_report.x);
 869              		.loc 1 111 0 is_stmt 1
 870 0082 94F90220 		ldrsb	r2, [r4, #2]
 871 0086 72B1     		cbz	r2, .L98
 111:tmk_core/common/mousekey.c ****         mouse_report.x = times_inv_sqrt2(mouse_report.x);
 872              		.loc 1 111 0 is_stmt 0 discriminator 1
 873 0088 94F90310 		ldrsb	r1, [r4, #3]
 874 008c 59B1     		cbz	r1, .L98
 875              	.LVL61:
 876              	.LBB12:
 877              	.LBB13:
  31:tmk_core/common/mousekey.c **** }
 878              		.loc 1 31 0 is_stmt 1
 879 008e B523     		movs	r3, #181
 880 0090 5A43     		muls	r2, r3, r2
 881              	.LBE13:
 882              	.LBE12:
 113:tmk_core/common/mousekey.c ****             mouse_report.x = 1;
 883              		.loc 1 113 0
 884 0092 1212     		asrs	r2, r2, #8
 885              	.LBB14:
 886              	.LBB15:
  31:tmk_core/common/mousekey.c **** }
 887              		.loc 1 31 0
 888 0094 03FB01F3 		mul	r3, r3, r1
 889              	.LBE15:
 890              	.LBE14:
 114:tmk_core/common/mousekey.c ****         }
 891              		.loc 1 114 0
 892 0098 08BF     		it	eq
 893 009a 0122     		moveq	r2, #1
 117:tmk_core/common/mousekey.c ****             mouse_report.y = 1;
 894              		.loc 1 117 0
 895 009c 1B12     		asrs	r3, r3, #8
 118:tmk_core/common/mousekey.c ****         }
 896              		.loc 1 118 0
 897 009e 08BF     		it	eq
 898 00a0 0123     		moveq	r3, #1
 114:tmk_core/common/mousekey.c ****         }
 899              		.loc 1 114 0
 900 00a2 A270     		strb	r2, [r4, #2]
 901              	.LVL62:
 118:tmk_core/common/mousekey.c ****         }
 902              		.loc 1 118 0
 903 00a4 E370     		strb	r3, [r4, #3]
 904              	.L98:
 121:tmk_core/common/mousekey.c ****     if (mouse_report.v < 0) mouse_report.v = wheel_unit() * -1;
 905              		.loc 1 121 0
 906 00a6 002E     		cmp	r6, #0
 907 00a8 02DD     		ble	.L103
 121:tmk_core/common/mousekey.c ****     if (mouse_report.v < 0) mouse_report.v = wheel_unit() * -1;
 908              		.loc 1 121 0 is_stmt 0 discriminator 1
 909 00aa FFF7FEFF 		bl	wheel_unit
 910              	.LVL63:
 911 00ae 2071     		strb	r0, [r4, #4]
 912              	.L103:
 122:tmk_core/common/mousekey.c ****     if (mouse_report.h > 0) mouse_report.h = wheel_unit();
 913              		.loc 1 122 0 is_stmt 1
 914 00b0 94F90430 		ldrsb	r3, [r4, #4]
 915 00b4 002B     		cmp	r3, #0
 916 00b6 03DA     		bge	.L104
 122:tmk_core/common/mousekey.c ****     if (mouse_report.h > 0) mouse_report.h = wheel_unit();
 917              		.loc 1 122 0 is_stmt 0 discriminator 1
 918 00b8 FFF7FEFF 		bl	wheel_unit
 919              	.LVL64:
 920 00bc 4042     		negs	r0, r0
 921 00be 2071     		strb	r0, [r4, #4]
 922              	.L104:
 123:tmk_core/common/mousekey.c ****     if (mouse_report.h < 0) mouse_report.h = wheel_unit() * -1;
 923              		.loc 1 123 0 is_stmt 1
 924 00c0 002D     		cmp	r5, #0
 925 00c2 02DD     		ble	.L105
 123:tmk_core/common/mousekey.c ****     if (mouse_report.h < 0) mouse_report.h = wheel_unit() * -1;
 926              		.loc 1 123 0 is_stmt 0 discriminator 1
 927 00c4 FFF7FEFF 		bl	wheel_unit
 928              	.LVL65:
 929 00c8 6071     		strb	r0, [r4, #5]
 930              	.L105:
 124:tmk_core/common/mousekey.c ****     mousekey_send();
 931              		.loc 1 124 0 is_stmt 1
 932 00ca 94F90530 		ldrsb	r3, [r4, #5]
 933 00ce 002B     		cmp	r3, #0
 934 00d0 03DA     		bge	.L106
 124:tmk_core/common/mousekey.c ****     mousekey_send();
 935              		.loc 1 124 0 is_stmt 0 discriminator 1
 936 00d2 FFF7FEFF 		bl	wheel_unit
 937              	.LVL66:
 938 00d6 4042     		negs	r0, r0
 939 00d8 6071     		strb	r0, [r4, #5]
 940              	.L106:
 126:tmk_core/common/mousekey.c **** 
 941              		.loc 1 126 0 is_stmt 1
 942 00da BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 943              		.cfi_remember_state
 944              		.cfi_restore 14
 945              		.cfi_restore 7
 946              		.cfi_restore 6
 947              		.cfi_restore 5
 948              		.cfi_restore 4
 949              		.cfi_restore 3
 950              		.cfi_def_cfa_offset 0
 125:tmk_core/common/mousekey.c **** }
 951              		.loc 1 125 0
 952 00de FFF7FEBF 		b	mousekey_send
 953              	.LVL67:
 954              	.L91:
 955              		.cfi_restore_state
 105:tmk_core/common/mousekey.c ****     if (mouse_report.x > 0) mouse_report.x = move_unit();
 956              		.loc 1 105 0
 957 00e2 FF2A     		cmp	r2, #255
 958 00e4 B1D1     		bne	.L107
 959 00e6 BFE7     		b	.L94
 960              	.L120:
 961              		.align	2
 962              	.L119:
 963 00e8 00000000 		.word	.LANCHOR7
 964 00ec 00000000 		.word	.LANCHOR2
 965 00f0 00000000 		.word	.LANCHOR8
 966 00f4 00000000 		.word	.LANCHOR6
 967 00f8 00000000 		.word	.LANCHOR9
 968              		.cfi_endproc
 969              	.LFE284:
 971              		.section	.text.mousekey_clear,"ax",%progbits
 972              		.align	1
 973              		.global	mousekey_clear
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 977              		.fpu softvfp
 979              	mousekey_clear:
 980              	.LFB288:
 350:tmk_core/common/mousekey.c ****     mouse_report    = (report_mouse_t){};
 981              		.loc 1 350 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 351:tmk_core/common/mousekey.c ****     mousekey_repeat = 0;
 986              		.loc 1 351 0
 987 0000 044A     		ldr	r2, .L122
 988 0002 0023     		movs	r3, #0
 989 0004 1360     		str	r3, [r2]	@ unaligned
 990 0006 9380     		strh	r3, [r2, #4]	@ unaligned
 352:tmk_core/common/mousekey.c ****     mousekey_accel  = 0;
 991              		.loc 1 352 0
 992 0008 034A     		ldr	r2, .L122+4
 993 000a 1370     		strb	r3, [r2]
 353:tmk_core/common/mousekey.c **** }
 994              		.loc 1 353 0
 995 000c 034A     		ldr	r2, .L122+8
 996 000e 1370     		strb	r3, [r2]
 354:tmk_core/common/mousekey.c **** 
 997              		.loc 1 354 0
 998 0010 7047     		bx	lr
 999              	.L123:
 1000 0012 00BF     		.align	2
 1001              	.L122:
 1002 0014 00000000 		.word	.LANCHOR6
 1003 0018 00000000 		.word	.LANCHOR2
 1004 001c 00000000 		.word	.LANCHOR0
 1005              		.cfi_endproc
 1006              	.LFE288:
 1008              		.global	mk_wheel_time_to_max
 1009              		.global	mk_wheel_max_speed
 1010              		.global	mk_time_to_max
 1011              		.global	mk_max_speed
 1012              		.global	mk_interval
 1013              		.global	mk_delay
 1014              		.section	.bss.last_timer,"aw",%nobits
 1015              		.align	1
 1016              		.set	.LANCHOR7,. + 0
 1019              	last_timer:
 1020 0000 0000     		.space	2
 1021              		.section	.bss.mouse_report,"aw",%nobits
 1022              		.set	.LANCHOR6,. + 0
 1025              	mouse_report:
 1026 0000 00000000 		.space	6
 1026      0000
 1027              		.section	.bss.mousekey_accel,"aw",%nobits
 1028              		.set	.LANCHOR0,. + 0
 1031              	mousekey_accel:
 1032 0000 00       		.space	1
 1033              		.section	.bss.mousekey_repeat,"aw",%nobits
 1034              		.set	.LANCHOR2,. + 0
 1037              	mousekey_repeat:
 1038 0000 00       		.space	1
 1039              		.section	.data.mk_delay,"aw",%progbits
 1040              		.set	.LANCHOR9,. + 0
 1043              	mk_delay:
 1044 0000 1E       		.byte	30
 1045              		.section	.data.mk_interval,"aw",%progbits
 1046              		.set	.LANCHOR8,. + 0
 1049              	mk_interval:
 1050 0000 32       		.byte	50
 1051              		.section	.data.mk_max_speed,"aw",%progbits
 1052              		.set	.LANCHOR1,. + 0
 1055              	mk_max_speed:
 1056 0000 0A       		.byte	10
 1057              		.section	.data.mk_time_to_max,"aw",%progbits
 1058              		.set	.LANCHOR3,. + 0
 1061              	mk_time_to_max:
 1062 0000 14       		.byte	20
 1063              		.section	.data.mk_wheel_max_speed,"aw",%progbits
 1064              		.set	.LANCHOR4,. + 0
 1067              	mk_wheel_max_speed:
 1068 0000 08       		.byte	8
 1069              		.section	.data.mk_wheel_time_to_max,"aw",%progbits
 1070              		.set	.LANCHOR5,. + 0
 1073              	mk_wheel_time_to_max:
 1074 0000 28       		.byte	40
 1075              		.section	.rodata.mousekey_send.str1.1,"aMS",%progbits,1
 1076              	.LC0:
 1077 0000 6D6F7573 		.ascii	"mousekey [btn|x y v h](rep/acl): [\000"
 1077      656B6579 
 1077      205B6274 
 1077      6E7C7820 
 1077      79207620 
 1078              	.LC1:
 1079 0023 25303258 		.ascii	"%02X\000"
 1079      00
 1080              	.LC2:
 1081 0028 7C00     		.ascii	"|\000"
 1082              	.LC3:
 1083 002a 256400   		.ascii	"%d\000"
 1084              	.LC4:
 1085 002d 2000     		.ascii	" \000"
 1086              	.LC5:
 1087 002f 5D2800   		.ascii	"](\000"
 1088              	.LC6:
 1089 0032 257500   		.ascii	"%u\000"
 1090              	.LC7:
 1091 0035 2F00     		.ascii	"/\000"
 1092              	.LC8:
 1093 0037 290A00   		.ascii	")\012\000"
 1094              		.text
 1095              	.Letext0:
 1096              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1097              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1098              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1099              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1100              		.file 6 "./lib/chibios/os/rt/include/chsystypes.h"
 1101              		.file 7 "./lib/chibios/os/rt/include/chschd.h"
 1102              		.file 8 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 1103              		.file 9 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 1104              		.file 10 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 1105              		.file 11 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1106              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 1107              		.file 13 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 1108              		.file 14 "./lib/chibios/os/rt/include/chtm.h"
 1109              		.file 15 "./lib/chibios/os/rt/include/chsem.h"
 1110              		.file 16 "./lib/chibios/os/rt/include/chmtx.h"
 1111              		.file 17 "./lib/chibios/os/rt/include/chsys.h"
 1112              		.file 18 "./lib/chibios/os/rt/include/chregistry.h"
 1113              		.file 19 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 1114              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1115              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1116              		.file 22 "./lib/chibios/os/hal/include/hal_dac.h"
 1117              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 1118              		.file 24 "./lib/chibios/os/hal/include/hal_gpt.h"
 1119              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 1120              		.file 26 "./lib/chibios/os/hal/include/hal_i2c.h"
 1121              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1122              		.file 28 "./lib/chibios/os/hal/include/hal_pwm.h"
 1123              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 1124              		.file 30 "./lib/chibios/os/hal/include/hal_usb.h"
 1125              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1126              		.file 32 "tmk_core/common/report.h"
 1127              		.file 33 "tmk_core/common/host.h"
 1128              		.file 34 "tmk_core/common/timer.h"
 1129              		.file 35 "tmk_core/common/debug.h"
 1130              		.file 36 "tmk_core/common/mousekey.h"
 1131              		.file 37 "tmk_core/common/chibios/printf.h"
 1132              		.file 38 "tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 mousekey.c
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:16     .text.move_unit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:22     .text.move_unit:0000000000000000 move_unit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:117    .text.move_unit:0000000000000068 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:125    .text.wheel_unit:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:131    .text.wheel_unit:0000000000000000 wheel_unit
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:214    .text.wheel_unit:0000000000000058 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:222    .text.mousekey_on:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:229    .text.mousekey_on:0000000000000000 mousekey_on
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:417    .text.mousekey_on:00000000000000e0 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:423    .text.mousekey_off:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:430    .text.mousekey_off:0000000000000000 mousekey_off
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:619    .text.mousekey_off:0000000000000104 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:626    .text.mousekey_send:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:633    .text.mousekey_send:0000000000000000 mousekey_send
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:744    .text.mousekey_send:0000000000000090 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:762    .text.mousekey_task:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:769    .text.mousekey_task:0000000000000000 mousekey_task
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:963    .text.mousekey_task:00000000000000e8 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:972    .text.mousekey_clear:0000000000000000 $t
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:979    .text.mousekey_clear:0000000000000000 mousekey_clear
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1002   .text.mousekey_clear:0000000000000014 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1073   .data.mk_wheel_time_to_max:0000000000000000 mk_wheel_time_to_max
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1067   .data.mk_wheel_max_speed:0000000000000000 mk_wheel_max_speed
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1061   .data.mk_time_to_max:0000000000000000 mk_time_to_max
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1055   .data.mk_max_speed:0000000000000000 mk_max_speed
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1049   .data.mk_interval:0000000000000000 mk_interval
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1043   .data.mk_delay:0000000000000000 mk_delay
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1015   .bss.last_timer:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1019   .bss.last_timer:0000000000000000 last_timer
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1025   .bss.mouse_report:0000000000000000 mouse_report
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1026   .bss.mouse_report:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1031   .bss.mousekey_accel:0000000000000000 mousekey_accel
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1032   .bss.mousekey_accel:0000000000000000 $d
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1037   .bss.mousekey_repeat:0000000000000000 mousekey_repeat
/var/folders/qs/3p__ddh573j_6k2216pg8mv40000gn/T//ccSm3o1L.s:1038   .bss.mousekey_repeat:0000000000000000 $d

UNDEFINED SYMBOLS
tfp_printf
host_mouse_send
timer_read
debug_config
timer_elapsed
