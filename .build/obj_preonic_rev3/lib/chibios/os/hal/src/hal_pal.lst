   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_pal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.palReadBus,"ax",%progbits
  16              		.align	1
  17              		.global	palReadBus
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	palReadBus:
  24              	.LFB279:
  25              		.file 1 "lib/chibios/os/hal/src/hal_pal.c"
   1:lib/chibios/os/hal/src/hal_pal.c **** /*
   2:lib/chibios/os/hal/src/hal_pal.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:lib/chibios/os/hal/src/hal_pal.c **** 
   4:lib/chibios/os/hal/src/hal_pal.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/src/hal_pal.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/src/hal_pal.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/src/hal_pal.c **** 
   8:lib/chibios/os/hal/src/hal_pal.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/src/hal_pal.c **** 
  10:lib/chibios/os/hal/src/hal_pal.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/src/hal_pal.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/src/hal_pal.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/src/hal_pal.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/src/hal_pal.c ****     limitations under the License.
  15:lib/chibios/os/hal/src/hal_pal.c **** */
  16:lib/chibios/os/hal/src/hal_pal.c **** 
  17:lib/chibios/os/hal/src/hal_pal.c **** /**
  18:lib/chibios/os/hal/src/hal_pal.c ****  * @file    hal_pal.c
  19:lib/chibios/os/hal/src/hal_pal.c ****  * @brief   I/O Ports Abstraction Layer code.
  20:lib/chibios/os/hal/src/hal_pal.c ****  *
  21:lib/chibios/os/hal/src/hal_pal.c ****  * @addtogroup PAL
  22:lib/chibios/os/hal/src/hal_pal.c ****  * @{
  23:lib/chibios/os/hal/src/hal_pal.c ****  */
  24:lib/chibios/os/hal/src/hal_pal.c **** 
  25:lib/chibios/os/hal/src/hal_pal.c **** #include "hal.h"
  26:lib/chibios/os/hal/src/hal_pal.c **** 
  27:lib/chibios/os/hal/src/hal_pal.c **** #if (HAL_USE_PAL == TRUE) || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/src/hal_pal.c **** 
  29:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/src/hal_pal.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/src/hal_pal.c **** 
  33:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  34:lib/chibios/os/hal/src/hal_pal.c **** /* Driver exported variables.                                                */
  35:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  36:lib/chibios/os/hal/src/hal_pal.c **** 
  37:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  38:lib/chibios/os/hal/src/hal_pal.c **** /* Driver local variables and types.                                         */
  39:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  40:lib/chibios/os/hal/src/hal_pal.c **** 
  41:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  42:lib/chibios/os/hal/src/hal_pal.c **** /* Driver local functions.                                                   */
  43:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  44:lib/chibios/os/hal/src/hal_pal.c **** 
  45:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  46:lib/chibios/os/hal/src/hal_pal.c **** /* Driver exported functions.                                                */
  47:lib/chibios/os/hal/src/hal_pal.c **** /*===========================================================================*/
  48:lib/chibios/os/hal/src/hal_pal.c **** 
  49:lib/chibios/os/hal/src/hal_pal.c **** /**
  50:lib/chibios/os/hal/src/hal_pal.c ****  * @brief   Read from an I/O bus.
  51:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The operation is not guaranteed to be atomic on all the
  52:lib/chibios/os/hal/src/hal_pal.c ****  *          architectures, for atomicity and/or portability reasons you may
  53:lib/chibios/os/hal/src/hal_pal.c ****  *          need to enclose port I/O operations between @p osalSysLock() and
  54:lib/chibios/os/hal/src/hal_pal.c ****  *          @p osalSysUnlock().
  55:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The function internally uses the @p palReadGroup() macro. The use
  56:lib/chibios/os/hal/src/hal_pal.c ****  *          of this function is preferred when you value code size, readability
  57:lib/chibios/os/hal/src/hal_pal.c ****  *          and error checking over speed.
  58:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The function can be called from any context.
  59:lib/chibios/os/hal/src/hal_pal.c ****  *
  60:lib/chibios/os/hal/src/hal_pal.c ****  * @param[in] bus       the I/O bus, pointer to a @p IOBus structure
  61:lib/chibios/os/hal/src/hal_pal.c ****  * @return              The bus logical states.
  62:lib/chibios/os/hal/src/hal_pal.c ****  *
  63:lib/chibios/os/hal/src/hal_pal.c ****  * @special
  64:lib/chibios/os/hal/src/hal_pal.c ****  */
  65:lib/chibios/os/hal/src/hal_pal.c **** ioportmask_t palReadBus(IOBus *bus) {
  26              		.loc 1 65 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  66:lib/chibios/os/hal/src/hal_pal.c **** 
  67:lib/chibios/os/hal/src/hal_pal.c ****   osalDbgCheck((bus != NULL) && (bus->offset < PAL_IOPORTS_WIDTH));
  68:lib/chibios/os/hal/src/hal_pal.c **** 
  69:lib/chibios/os/hal/src/hal_pal.c ****   return palReadGroup(bus->portid, bus->mask, bus->offset);
  32              		.loc 1 69 0
  33 0000 0368     		ldr	r3, [r0]
  34 0002 8268     		ldr	r2, [r0, #8]
  35 0004 1B69     		ldr	r3, [r3, #16]
  36 0006 4068     		ldr	r0, [r0, #4]
  37              	.LVL1:
  38 0008 D340     		lsrs	r3, r3, r2
  70:lib/chibios/os/hal/src/hal_pal.c **** }
  39              		.loc 1 70 0
  40 000a 1840     		ands	r0, r0, r3
  41 000c 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE279:
  45              		.section	.text.palWriteBus,"ax",%progbits
  46              		.align	1
  47              		.global	palWriteBus
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu softvfp
  53              	palWriteBus:
  54              	.LFB280:
  71:lib/chibios/os/hal/src/hal_pal.c **** 
  72:lib/chibios/os/hal/src/hal_pal.c **** /**
  73:lib/chibios/os/hal/src/hal_pal.c ****  * @brief   Write to an I/O bus.
  74:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The operation is not guaranteed to be atomic on all the
  75:lib/chibios/os/hal/src/hal_pal.c ****  *          architectures, for atomicity and/or portability reasons you may
  76:lib/chibios/os/hal/src/hal_pal.c ****  *          need to enclose port I/O operations between @p osalSysLock() and
  77:lib/chibios/os/hal/src/hal_pal.c ****  *          @p osalSysUnlock().
  78:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The default implementation is non atomic and not necessarily
  79:lib/chibios/os/hal/src/hal_pal.c ****  *          optimal. Low level drivers may  optimize the function by using
  80:lib/chibios/os/hal/src/hal_pal.c ****  *          specific hardware or coding.
  81:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The function can be called from any context.
  82:lib/chibios/os/hal/src/hal_pal.c ****  *
  83:lib/chibios/os/hal/src/hal_pal.c ****  * @param[in] bus       the I/O bus, pointer to a @p IOBus structure
  84:lib/chibios/os/hal/src/hal_pal.c ****  * @param[in] bits      the bits to be written on the I/O bus. Values exceeding
  85:lib/chibios/os/hal/src/hal_pal.c ****  *                      the bus width are masked so most significant bits are
  86:lib/chibios/os/hal/src/hal_pal.c ****  *                      lost.
  87:lib/chibios/os/hal/src/hal_pal.c ****  *
  88:lib/chibios/os/hal/src/hal_pal.c ****  * @special
  89:lib/chibios/os/hal/src/hal_pal.c ****  */
  90:lib/chibios/os/hal/src/hal_pal.c **** void palWriteBus(IOBus *bus, ioportmask_t bits) {
  55              		.loc 1 90 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
  60 0000 30B5     		push	{r4, r5, lr}
  61              		.cfi_def_cfa_offset 12
  62              		.cfi_offset 4, -12
  63              		.cfi_offset 5, -8
  64              		.cfi_offset 14, -4
  91:lib/chibios/os/hal/src/hal_pal.c **** 
  92:lib/chibios/os/hal/src/hal_pal.c ****   osalDbgCheck((bus != NULL) && (bus->offset < PAL_IOPORTS_WIDTH));
  93:lib/chibios/os/hal/src/hal_pal.c **** 
  94:lib/chibios/os/hal/src/hal_pal.c ****   palWriteGroup(bus->portid, bus->mask, bus->offset, bits);
  65              		.loc 1 94 0
  66 0002 D0E90142 		ldrd	r4, r2, [r0, #4]
  67 0006 24EA0103 		bic	r3, r4, r1
  68 000a 02F11005 		add	r5, r2, #16
  69 000e 2140     		ands	r1, r1, r4
  70              	.LVL3:
  71 0010 0068     		ldr	r0, [r0]
  72              	.LVL4:
  73 0012 AB40     		lsls	r3, r3, r5
  74 0014 9140     		lsls	r1, r1, r2
  75 0016 1943     		orrs	r1, r1, r3
  76 0018 8161     		str	r1, [r0, #24]
  95:lib/chibios/os/hal/src/hal_pal.c **** }
  77              		.loc 1 95 0
  78 001a 30BD     		pop	{r4, r5, pc}
  79              		.cfi_endproc
  80              	.LFE280:
  82              		.section	.text.palSetBusMode,"ax",%progbits
  83              		.align	1
  84              		.global	palSetBusMode
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
  90              	palSetBusMode:
  91              	.LFB281:
  96:lib/chibios/os/hal/src/hal_pal.c **** 
  97:lib/chibios/os/hal/src/hal_pal.c **** /**
  98:lib/chibios/os/hal/src/hal_pal.c ****  * @brief   Programs a bus with the specified mode.
  99:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The operation is not guaranteed to be atomic on all the
 100:lib/chibios/os/hal/src/hal_pal.c ****  *          architectures, for atomicity and/or portability reasons you may
 101:lib/chibios/os/hal/src/hal_pal.c ****  *          need to enclose port I/O operations between @p osalSysLock() and
 102:lib/chibios/os/hal/src/hal_pal.c ****  *          @p osalSysUnlock().
 103:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The default implementation is non atomic and not necessarily
 104:lib/chibios/os/hal/src/hal_pal.c ****  *          optimal. Low level drivers may  optimize the function by using
 105:lib/chibios/os/hal/src/hal_pal.c ****  *          specific hardware or coding.
 106:lib/chibios/os/hal/src/hal_pal.c ****  * @note    The function can be called from any context.
 107:lib/chibios/os/hal/src/hal_pal.c ****  *
 108:lib/chibios/os/hal/src/hal_pal.c ****  * @param[in] bus       the I/O bus, pointer to a @p IOBus structure
 109:lib/chibios/os/hal/src/hal_pal.c ****  * @param[in] mode      the mode
 110:lib/chibios/os/hal/src/hal_pal.c ****  *
 111:lib/chibios/os/hal/src/hal_pal.c ****  * @special
 112:lib/chibios/os/hal/src/hal_pal.c ****  */
 113:lib/chibios/os/hal/src/hal_pal.c **** void palSetBusMode(IOBus *bus, iomode_t mode) {
  92              		.loc 1 113 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.LVL5:
  98 0000 10B4     		push	{r4}
  99              		.cfi_def_cfa_offset 4
 100              		.cfi_offset 4, -4
 114:lib/chibios/os/hal/src/hal_pal.c **** 
 115:lib/chibios/os/hal/src/hal_pal.c ****   osalDbgCheck((bus != NULL) && (bus->offset < PAL_IOPORTS_WIDTH));
 116:lib/chibios/os/hal/src/hal_pal.c **** 
 117:lib/chibios/os/hal/src/hal_pal.c ****   palSetGroupMode(bus->portid, bus->mask, bus->offset, mode);
 101              		.loc 1 117 0
 102 0002 D0E90143 		ldrd	r4, r3, [r0, #4]
 103 0006 0A46     		mov	r2, r1
 104 0008 0068     		ldr	r0, [r0]
 105              	.LVL6:
 106 000a 04FA03F1 		lsl	r1, r4, r3
 107              	.LVL7:
 118:lib/chibios/os/hal/src/hal_pal.c **** }
 108              		.loc 1 118 0
 109 000e 10BC     		pop	{r4}
 110              		.cfi_restore 4
 111              		.cfi_def_cfa_offset 0
 117:lib/chibios/os/hal/src/hal_pal.c **** }
 112              		.loc 1 117 0
 113 0010 FFF7FEBF 		b	_pal_lld_setgroupmode
 114              	.LVL8:
 115              		.cfi_endproc
 116              	.LFE281:
 118              		.text
 119              	.Letext0:
 120              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 121              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 122              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 123              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdint.h"
 124              		.file 6 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 125              		.file 7 "./lib/chibios/os/rt/include/chsystypes.h"
 126              		.file 8 "./lib/chibios/os/rt/include/chschd.h"
 127              		.file 9 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 128              		.file 10 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 129              		.file 11 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 130              		.file 12 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 131              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 132              		.file 14 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 133              		.file 15 "./lib/chibios/os/rt/include/chtm.h"
 134              		.file 16 "./lib/chibios/os/rt/include/chsem.h"
 135              		.file 17 "./lib/chibios/os/rt/include/chmtx.h"
 136              		.file 18 "./lib/chibios/os/rt/include/chsys.h"
 137              		.file 19 "./lib/chibios/os/rt/include/chregistry.h"
 138              		.file 20 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 139              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 140              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 141              		.file 23 "./lib/chibios/os/hal/include/hal_pal.h"
 142              		.file 24 "./lib/chibios/os/hal/include/hal_dac.h"
 143              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 144              		.file 26 "./lib/chibios/os/hal/include/hal_gpt.h"
 145              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 146              		.file 28 "./lib/chibios/os/hal/include/hal_i2c.h"
 147              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 148              		.file 30 "./lib/chibios/os/hal/include/hal_pwm.h"
 149              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 150              		.file 32 "./lib/chibios/os/hal/include/hal_usb.h"
 151              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_pal.c
/var/tmp//ccgidgDc.s:16     .text.palReadBus:0000000000000000 $t
/var/tmp//ccgidgDc.s:23     .text.palReadBus:0000000000000000 palReadBus
/var/tmp//ccgidgDc.s:46     .text.palWriteBus:0000000000000000 $t
/var/tmp//ccgidgDc.s:53     .text.palWriteBus:0000000000000000 palWriteBus
/var/tmp//ccgidgDc.s:83     .text.palSetBusMode:0000000000000000 $t
/var/tmp//ccgidgDc.s:90     .text.palSetBusMode:0000000000000000 palSetBusMode

UNDEFINED SYMBOLS
_pal_lld_setgroupmode
