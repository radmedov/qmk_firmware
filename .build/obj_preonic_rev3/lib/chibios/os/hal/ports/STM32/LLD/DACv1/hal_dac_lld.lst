   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_dac_lld.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.dac_lld_init,"ax",%progbits
  16              		.align	1
  17              		.global	dac_lld_init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	dac_lld_init:
  24              	.LFB280:
  25              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c"
   1:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @file    DACv1/hal_dac_lld.c
  19:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   STM32 DAC subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @addtogroup DAC
  22:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #include "hal.h"
  26:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if HAL_USE_DAC || defined(__DOXYGEN__)
  28:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  29:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  30:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver local definitions.                                                 */
  31:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  33:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Because ST headers naming inconsistencies.*/
  34:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if !defined(DAC1)
  35:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC1 DAC
  36:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  37:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  38:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC1_CH1_DMA_CHANNEL                                                \
  39:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC1_CH1_DMA_STREAM,                       \
  40:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC1_CH1_DMA_CHN)
  41:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  42:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC1_CH2_DMA_CHANNEL                                                \
  43:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC1_CH2_DMA_STREAM,                       \
  44:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC1_CH2_DMA_CHN)
  45:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  46:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC2_CH1_DMA_CHANNEL                                                \
  47:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC2_CH1_DMA_STREAM,                       \
  48:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC2_CH1_DMA_CHN)
  49:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  50:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define DAC2_CH2_DMA_CHANNEL                                                \
  51:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   STM32_DMA_GETCHANNEL(STM32_DAC_DAC2_CH2_DMA_STREAM,                       \
  52:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                        STM32_DAC2_CH2_DMA_CHN)
  53:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  54:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #define CHANNEL_DATA_OFFSET 3U
  55:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  56:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  57:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver exported variables.                                                */
  58:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  59:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  60:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC1 CH1 driver identifier.*/
  61:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1 || defined(__DOXYGEN__)
  62:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD1;
  63:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  64:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  65:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC1 CH2 driver identifier.*/
  66:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_DAC_USE_DAC1_CH2 && !STM32_DAC_DUAL_MODE) || defined(__DOXYGEN__)
  67:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD2;
  68:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  69:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  70:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC2 CH1 driver identifier.*/
  71:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1 || defined(__DOXYGEN__)
  72:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD3;
  73:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  74:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  75:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /** @brief DAC2 CH2 driver identifier.*/
  76:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_DAC_USE_DAC2_CH2 && !STM32_DAC_DUAL_MODE) || defined(__DOXYGEN__)
  77:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** DACDriver DACD4;
  78:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  79:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  80:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  81:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver local variables.                                                   */
  82:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
  83:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
  84:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1 == TRUE
  85:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dma1_ch1_params = {
  86:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC1,
  87:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = 0U,
  88:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 0U,
  89:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0xFFFF0000U,
  90:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dma          = STM32_DMA_STREAM(STM32_DAC_DAC1_CH1_DMA_STREAM),
  91:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC1_CH1_DMA_CHANNEL) |
  92:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC1_CH1_DMA_PRIORITY) |
  93:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
  94:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
  95:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
  96:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC1_CH1_IRQ_PRIORITY
  97:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
  98:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
  99:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 100:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2 == TRUE
 101:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dma1_ch2_params = {
 102:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC1,
 103:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = CHANNEL_DATA_OFFSET,
 104:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 16U,
 105:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0x0000FFFFU,
 106:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dma          = STM32_DMA_STREAM(STM32_DAC_DAC1_CH2_DMA_STREAM),
 107:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC1_CH2_DMA_CHANNEL) |
 108:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC1_CH2_DMA_PRIORITY) |
 109:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 110:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 111:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 112:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC1_CH2_IRQ_PRIORITY
 113:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 114:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 115:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 116:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1 == TRUE
 117:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dma2_ch1_params = {
 118:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC2,
 119:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = 0U,
 120:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 0U,
 121:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0xFFFF0000U,
 122:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dma          = STM32_DMA_STREAM(STM32_DAC_DAC2_CH1_DMA_STREAM),
 123:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC2_CH1_DMA_CHANNEL) |
 124:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC2_CH1_DMA_PRIORITY) |
 125:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 126:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 127:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 128:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC2_CH1_IRQ_PRIORITY
 129:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 130:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 131:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 132:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2 == TRUE
 133:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static const dacparams_t dma1_ch2_params = {
 134:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dac          = DAC2,
 135:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dataoffset   = CHANNEL_DATA_OFFSET,
 136:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regshift     = 16U,
 137:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .regmask      = 0x0000FFFFU,
 138:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dma          = STM32_DMA_STREAM(STM32_DAC_DAC2_CH2_DMA_STREAM),
 139:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmamode      = STM32_DMA_CR_CHSEL(DAC2_CH2_DMA_CHANNEL) |
 140:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_PL(STM32_DAC_DAC2_CH2_DMA_PRIORITY) |
 141:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_MINC | STM32_DMA_CR_CIRC | STM32_DMA_CR_DIR_M2P |
 142:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE | STM32_DMA_CR_HTIE |
 143:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                   STM32_DMA_CR_TCIE,
 144:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   .dmairqprio   = STM32_DAC_DAC2_CH2_IRQ_PRIORITY
 145:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** };
 146:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 147:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 148:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 149:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver local functions.                                                   */
 150:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 151:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 152:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 153:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Shared end/half-of-tx service routine.
 154:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 155:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 156:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] flags     pre-shifted content of the ISR register
 157:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 158:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** static void dac_lld_serve_tx_interrupt(DACDriver *dacp, uint32_t flags) {
 159:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 160:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if ((flags & (STM32_DMA_ISR_TEIF | STM32_DMA_ISR_DMEIF)) != 0) {
 161:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* DMA errors handling.*/
 162:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     _dac_isr_error_code(dacp, DAC_ERR_DMAFAILURE);
 163:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 164:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   else {
 165:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if ((flags & STM32_DMA_ISR_HTIF) != 0) {
 166:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Half transfer processing.*/
 167:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       _dac_isr_half_code(dacp);
 168:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 169:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if ((flags & STM32_DMA_ISR_TCIF) != 0) {
 170:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Transfer complete processing.*/
 171:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       _dac_isr_full_code(dacp);
 172:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 173:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 174:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 175:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 176:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 177:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver interrupt handlers.                                                */
 178:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 179:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 180:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 181:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /* Driver exported functions.                                                */
 182:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /*===========================================================================*/
 183:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 184:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 185:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Low level DAC driver initialization.
 186:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 187:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 188:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 189:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_init(void) {
  26              		.loc 1 189 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
 190:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 191:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1
 192:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD1);
  34              		.loc 1 192 0
  35 0002 064C     		ldr	r4, .L2
  36 0004 2046     		mov	r0, r4
  37 0006 FFF7FEFF 		bl	dacObjectInit
  38              	.LVL0:
 193:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD1.params  = &dma1_ch1_params;
  39              		.loc 1 193 0
  40 000a 054B     		ldr	r3, .L2+4
  41 000c A362     		str	r3, [r4, #40]
 194:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 195:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 196:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2
 197:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD2);
  42              		.loc 1 197 0
  43 000e 054C     		ldr	r4, .L2+8
  44 0010 2046     		mov	r0, r4
  45 0012 FFF7FEFF 		bl	dacObjectInit
  46              	.LVL1:
 198:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD2.params  = &dma1_ch2_params;
  47              		.loc 1 198 0
  48 0016 044B     		ldr	r3, .L2+12
  49 0018 A362     		str	r3, [r4, #40]
 199:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 200:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 201:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1
 202:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD3);
 203:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD3.params  = &dma2_ch1_params;
 204:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 205:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 206:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2
 207:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacObjectInit(&DACD4);
 208:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   DACD4.params  = &dma2_ch2_params;
 209:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 210:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
  50              		.loc 1 210 0
  51 001a 10BD     		pop	{r4, pc}
  52              	.L3:
  53              		.align	2
  54              	.L2:
  55 001c 00000000 		.word	.LANCHOR0
  56 0020 00000000 		.word	.LANCHOR1
  57 0024 00000000 		.word	.LANCHOR2
  58 0028 00000000 		.word	.LANCHOR3
  59              		.cfi_endproc
  60              	.LFE280:
  62              		.section	.text.dac_lld_stop,"ax",%progbits
  63              		.align	1
  64              		.global	dac_lld_stop
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu softvfp
  70              	dac_lld_stop:
  71              	.LFB282:
 211:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 212:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 213:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Configures and activates the DAC peripheral.
 214:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 215:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 216:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 217:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 218:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 219:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_start(DACDriver *dacp) {
 220:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 221:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* If the driver is in DAC_STOP state then a full initialization is
 222:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****      required.*/
 223:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if (dacp->state == DAC_STOP) {
 224:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacchannel_t channel = 0;
 225:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 226:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* Enabling the clock source.*/
 227:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1
 228:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD1 == dacp) {
 229:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(false);
 230:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 231:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 232:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 233:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2
 234:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD2 == dacp) {
 235:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(false);
 236:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 237:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 238:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 239:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 240:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1
 241:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD3 == dacp) {
 242:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC2(false);
 243:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 244:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 245:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 246:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2
 247:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD4 == dacp) {
 248:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC2(false);
 249:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 250:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 251:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 252:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* Enabling DAC in SW triggering mode initially, initializing data to
 253:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****        zero.*/
 254:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == FALSE
 255:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR &= dacp->params->regmask;
 256:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 257:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dac_lld_put_channel(dacp, channel, dacp->config->init);
 258:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 259:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if ((dacp->config->datamode == DAC_DHRM_12BIT_RIGHT_DUAL) ||
 260:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         (dacp->config->datamode == DAC_DHRM_12BIT_LEFT_DUAL) ||
 261:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         (dacp->config->datamode == DAC_DHRM_8BIT_RIGHT_DUAL)) {
 262:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = DAC_CR_EN2 | (dacp->config->cr << 16) | DAC_CR_EN1 | dacp->config->cr
 263:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dac_lld_put_channel(dacp, 1U, dacp->config->init);
 264:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 265:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 266:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->CR = DAC_CR_EN1 | dacp->config->cr;
 267:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 268:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dac_lld_put_channel(dacp, channel, dacp->config->init);
 269:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 270:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 271:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 272:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 273:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 274:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Deactivates the DAC peripheral.
 275:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 276:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 277:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 278:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 279:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 280:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_stop(DACDriver *dacp) {
  72              		.loc 1 280 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.LVL2:
 281:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 282:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* If in ready state then disables the DAC clock.*/
 283:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if (dacp->state == DAC_READY) {
  78              		.loc 1 283 0
  79 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  80 0002 022B     		cmp	r3, #2
  81 0004 11D1     		bne	.L4
 284:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 285:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* Disabling DAC.*/
 286:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR &= dacp->params->regmask;
  82              		.loc 1 286 0
  83 0006 816A     		ldr	r1, [r0, #40]
  84 0008 0B68     		ldr	r3, [r1]
  85 000a C968     		ldr	r1, [r1, #12]
  86 000c 1A68     		ldr	r2, [r3]
  87 000e 0A40     		ands	r2, r2, r1
  88 0010 1A60     		str	r2, [r3]
 287:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 288:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH1
 289:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD1 == dacp) {
  89              		.loc 1 289 0
  90 0012 0A4A     		ldr	r2, .L12
  91 0014 9042     		cmp	r0, r2
  92 0016 09D1     		bne	.L7
 290:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN1) == 0U) {
  93              		.loc 1 290 0
  94 0018 1B68     		ldr	r3, [r3]
  95 001a 13F0010F 		tst	r3, #1
  96              	.L11:
 291:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC1(false);
 292:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 293:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 294:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 295:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 296:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC1_CH2
 297:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD2 == dacp) {
 298:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN2) == 0U) {
 299:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC1(false);
  97              		.loc 1 299 0
  98 001e 01BF     		itttt	eq
  99 0020 074A     		ldreq	r2, .L12+4
 100 0022 D369     		ldreq	r3, [r2, #28]
 101 0024 23F00053 		biceq	r3, r3, #536870912
 102 0028 D361     		streq	r3, [r2, #28]
 103              	.L4:
 300:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 301:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 302:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 303:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 304:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH1
 305:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD3 == dacp) {
 306:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN1) == 0U) {
 307:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC2(false);
 308:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 309:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 310:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 311:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 312:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_USE_DAC2_CH2
 313:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (&DACD4 == dacp) {
 314:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN2) == 0U) {
 315:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC2(false);
 316:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       }
 317:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 318:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 319:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 320:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 104              		.loc 1 320 0
 105 002a 7047     		bx	lr
 106              	.L7:
 297:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       if ((dacp->params->dac->CR & DAC_CR_EN2) == 0U) {
 107              		.loc 1 297 0
 108 002c 054A     		ldr	r2, .L12+8
 109 002e 9042     		cmp	r0, r2
 110 0030 FBD1     		bne	.L4
 298:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****         rccDisableDAC1(false);
 111              		.loc 1 298 0
 112 0032 1B68     		ldr	r3, [r3]
 113 0034 13F4803F 		tst	r3, #65536
 114 0038 F1E7     		b	.L11
 115              	.L13:
 116 003a 00BF     		.align	2
 117              	.L12:
 118 003c 00000000 		.word	.LANCHOR0
 119 0040 00100240 		.word	1073876992
 120 0044 00000000 		.word	.LANCHOR2
 121              		.cfi_endproc
 122              	.LFE282:
 124              		.section	.text.dac_lld_put_channel,"ax",%progbits
 125              		.align	1
 126              		.global	dac_lld_put_channel
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
 132              	dac_lld_put_channel:
 133              	.LFB283:
 321:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 322:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 323:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Outputs a value directly on a DAC channel.
 324:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 325:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 326:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] channel   DAC channel number
 327:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] sample    value to be output
 328:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 329:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @api
 330:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 331:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_put_channel(DACDriver *dacp,
 332:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                          dacchannel_t channel,
 333:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                          dacsample_t sample) {
 134              		.loc 1 333 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL3:
 334:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 335:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   switch (dacp->config->datamode) {
 140              		.loc 1 335 0
 141 0000 0369     		ldr	r3, [r0, #16]
 142 0002 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 143 0004 012B     		cmp	r3, #1
 144 0006 0DD0     		beq	.L16
 145 0008 02D3     		bcc	.L17
 146 000a 022B     		cmp	r3, #2
 147 000c 11D0     		beq	.L18
 148 000e 7047     		bx	lr
 149              	.L17:
 150              	.LVL4:
 151 0010 806A     		ldr	r0, [r0, #40]
 152              	.LVL5:
 153 0012 0368     		ldr	r3, [r0]
 154              	.LBB70:
 155              	.LBB71:
 336:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT:
 337:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 338:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT_DUAL:
 339:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 340:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (channel == 0U) {
 156              		.loc 1 340 0
 157 0014 21B9     		cbnz	r1, .L19
 341:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 342:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12R1 = (uint32_t)sample;
 343:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 344:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       *(&dacp->params->dac->DHR12R1 + dacp->params->dataoffset) = (uint32_t)sample;
 158              		.loc 1 344 0
 159 0016 0833     		adds	r3, r3, #8
 160              	.LVL6:
 161              	.L22:
 162              	.LBE71:
 163              	.LBE70:
 345:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 346:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 347:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_HAS_DAC1_CH2 || STM32_HAS_DAC2_CH2)
 348:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 349:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12R2 = (uint32_t)sample;
 350:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 351:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 352:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 353:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT:
 354:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 355:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT_DUAL:
 356:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 357:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (channel == 0U) {
 358:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 359:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12L1 = (uint32_t)sample;
 360:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 361:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       *(&dacp->params->dac->DHR12L1 + dacp->params->dataoffset) = (uint32_t)sample;
 164              		.loc 1 361 0
 165 0018 4168     		ldr	r1, [r0, #4]
 166              	.LVL7:
 167 001a 43F82120 		str	r2, [r3, r1, lsl #2]
 168 001e 7047     		bx	lr
 169              	.LVL8:
 170              	.L19:
 171              	.LBB73:
 172              	.LBB72:
 349:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 173              		.loc 1 349 0
 174 0020 5A61     		str	r2, [r3, #20]
 175 0022 7047     		bx	lr
 176              	.LVL9:
 177              	.L16:
 178 0024 806A     		ldr	r0, [r0, #40]
 179              	.LVL10:
 180 0026 0368     		ldr	r3, [r0]
 181              	.LBE72:
 182              	.LBE73:
 357:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 183              		.loc 1 357 0
 184 0028 09B9     		cbnz	r1, .L20
 185              		.loc 1 361 0
 186 002a 0C33     		adds	r3, r3, #12
 187 002c F4E7     		b	.L22
 188              	.L20:
 362:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 363:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 364:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_HAS_DAC1_CH2 || STM32_HAS_DAC2_CH2)
 365:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 366:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR12L2 = (uint32_t)sample;
 189              		.loc 1 366 0
 190 002e 9A61     		str	r2, [r3, #24]
 191 0030 7047     		bx	lr
 192              	.LVL11:
 193              	.L18:
 194 0032 806A     		ldr	r0, [r0, #40]
 195              	.LVL12:
 196 0034 0368     		ldr	r3, [r0]
 367:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 368:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 369:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 370:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT:
 371:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 372:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT_DUAL:
 373:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 374:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     if (channel == 0U) {
 197              		.loc 1 374 0
 198 0036 09B9     		cbnz	r1, .L21
 375:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE
 376:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR8R1 = (uint32_t)sample;
 377:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 378:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       *(&dacp->params->dac->DHR8R1 + dacp->params->dataoffset) = (uint32_t)sample;
 199              		.loc 1 378 0
 200 0038 1033     		adds	r3, r3, #16
 201 003a EDE7     		b	.L22
 202              	.L21:
 379:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 380:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 381:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if (STM32_HAS_DAC1_CH2 || STM32_HAS_DAC2_CH2)
 382:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     else {
 383:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       dacp->params->dac->DHR8R2 = (uint32_t)sample;
 203              		.loc 1 383 0
 204 003c DA61     		str	r2, [r3, #28]
 384:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 385:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 386:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 387:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   default:
 388:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(false, "unexpected DAC mode");
 389:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 390:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 391:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 205              		.loc 1 391 0
 206 003e 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE283:
 210              		.section	.text.dac_lld_start,"ax",%progbits
 211              		.align	1
 212              		.global	dac_lld_start
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu softvfp
 218              	dac_lld_start:
 219              	.LFB281:
 219:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 220              		.loc 1 219 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL13:
 223:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacchannel_t channel = 0;
 226              		.loc 1 223 0
 227 0000 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 228 0002 0129     		cmp	r1, #1
 219:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 229              		.loc 1 219 0
 230 0004 70B4     		push	{r4, r5, r6}
 231              		.cfi_def_cfa_offset 12
 232              		.cfi_offset 4, -12
 233              		.cfi_offset 5, -8
 234              		.cfi_offset 6, -4
 223:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacchannel_t channel = 0;
 235              		.loc 1 223 0
 236 0006 24D1     		bne	.L23
 237              	.LVL14:
 238              	.LBB74:
 228:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(false);
 239              		.loc 1 228 0
 240 0008 134B     		ldr	r3, .L28
 241 000a 9842     		cmp	r0, r3
 242 000c 06D1     		bne	.L25
 229:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 243              		.loc 1 229 0
 244 000e 134A     		ldr	r2, .L28+4
 245 0010 D369     		ldr	r3, [r2, #28]
 246 0012 43F00053 		orr	r3, r3, #536870912
 247 0016 D361     		str	r3, [r2, #28]
 248              	.L27:
 224:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 249              		.loc 1 224 0
 250 0018 0021     		movs	r1, #0
 251 001a 07E0     		b	.L26
 252              	.L25:
 234:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       rccEnableDAC1(false);
 253              		.loc 1 234 0
 254 001c 104B     		ldr	r3, .L28+8
 255 001e 9842     		cmp	r0, r3
 256 0020 FAD1     		bne	.L27
 235:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       channel = 1;
 257              		.loc 1 235 0
 258 0022 0E4A     		ldr	r2, .L28+4
 259 0024 D369     		ldr	r3, [r2, #28]
 260 0026 43F00053 		orr	r3, r3, #536870912
 261 002a D361     		str	r3, [r2, #28]
 262              	.LVL15:
 263              	.L26:
 255:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 264              		.loc 1 255 0
 265 002c 846A     		ldr	r4, [r0, #40]
 266 002e 2268     		ldr	r2, [r4]
 267 0030 E568     		ldr	r5, [r4, #12]
 268 0032 1368     		ldr	r3, [r2]
 256:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dac_lld_put_channel(dacp, channel, dacp->config->init);
 269              		.loc 1 256 0
 270 0034 A468     		ldr	r4, [r4, #8]
 255:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 271              		.loc 1 255 0
 272 0036 2B40     		ands	r3, r3, r5
 256:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dac_lld_put_channel(dacp, channel, dacp->config->init);
 273              		.loc 1 256 0
 274 0038 0569     		ldr	r5, [r0, #16]
 255:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 275              		.loc 1 255 0
 276 003a 1360     		str	r3, [r2]
 256:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dac_lld_put_channel(dacp, channel, dacp->config->init);
 277              		.loc 1 256 0
 278 003c AB88     		ldrh	r3, [r5, #4]
 279 003e 1668     		ldr	r6, [r2]
 280 0040 43F00103 		orr	r3, r3, #1
 281 0044 A340     		lsls	r3, r3, r4
 282 0046 3343     		orrs	r3, r3, r6
 283 0048 1360     		str	r3, [r2]
 257:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 284              		.loc 1 257 0
 285 004a 2A88     		ldrh	r2, [r5]
 286              	.LBE74:
 271:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 287              		.loc 1 271 0
 288 004c 70BC     		pop	{r4, r5, r6}
 289              		.cfi_remember_state
 290              		.cfi_restore 6
 291              		.cfi_restore 5
 292              		.cfi_restore 4
 293              		.cfi_def_cfa_offset 0
 294              	.LBB75:
 257:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 295              		.loc 1 257 0
 296 004e FFF7FEBF 		b	dac_lld_put_channel
 297              	.LVL16:
 298              	.L23:
 299              		.cfi_restore_state
 300              	.LBE75:
 271:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 301              		.loc 1 271 0
 302 0052 70BC     		pop	{r4, r5, r6}
 303              		.cfi_restore 6
 304              		.cfi_restore 5
 305              		.cfi_restore 4
 306              		.cfi_def_cfa_offset 0
 307 0054 7047     		bx	lr
 308              	.L29:
 309 0056 00BF     		.align	2
 310              	.L28:
 311 0058 00000000 		.word	.LANCHOR0
 312 005c 00100240 		.word	1073876992
 313 0060 00000000 		.word	.LANCHOR2
 314              		.cfi_endproc
 315              	.LFE281:
 317              		.section	.text.dac_lld_start_conversion,"ax",%progbits
 318              		.align	1
 319              		.global	dac_lld_start_conversion
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu softvfp
 325              	dac_lld_start_conversion:
 326              	.LFB284:
 392:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 393:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 394:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Starts a DAC conversion.
 395:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @details Starts an asynchronous conversion operation.
 396:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @note    In @p DAC_DHRM_8BIT_RIGHT mode the parameters passed to the
 397:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          callback are wrong because two samples are packed in a single
 398:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          dacsample_t element. This will not be corrected, do not rely
 399:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          on those parameters.
 400:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @note    In @p DAC_DHRM_8BIT_RIGHT_DUAL mode two samples are treated
 401:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          as a single 16 bits sample and packed into a single dacsample_t
 402:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          element. The num_channels must be set to one in the group
 403:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          conversion configuration structure.
 404:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 405:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 406:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 407:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @notapi
 408:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 409:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_start_conversion(DACDriver *dacp) {
 327              		.loc 1 409 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              	.LVL17:
 410:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t n, cr, dmamode;
 411:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 412:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* Number of DMA operations per buffer.*/
 413:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   n = dacp->depth * dacp->grpp->num_channels;
 332              		.loc 1 413 0
 333 0000 4268     		ldr	r2, [r0, #4]
 334 0002 8389     		ldrh	r3, [r0, #12]
 409:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t n, cr, dmamode;
 335              		.loc 1 409 0
 336 0004 70B5     		push	{r4, r5, r6, lr}
 337              		.cfi_def_cfa_offset 16
 338              		.cfi_offset 4, -16
 339              		.cfi_offset 5, -12
 340              		.cfi_offset 6, -8
 341              		.cfi_offset 14, -4
 409:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   uint32_t n, cr, dmamode;
 342              		.loc 1 409 0
 343 0006 0446     		mov	r4, r0
 344              		.loc 1 413 0
 345 0008 1568     		ldr	r5, [r2]
 414:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 415:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* Allocating the DMA channel.*/
 416:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   bool b = dmaStreamAllocate(dacp->params->dma, dacp->params->dmairqprio,
 346              		.loc 1 416 0
 347 000a 806A     		ldr	r0, [r0, #40]
 348              	.LVL18:
 349 000c 274A     		ldr	r2, .L37
 350 000e 8169     		ldr	r1, [r0, #24]
 351 0010 0069     		ldr	r0, [r0, #16]
 413:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 352              		.loc 1 413 0
 353 0012 5D43     		muls	r5, r3, r5
 354              	.LVL19:
 355              		.loc 1 416 0
 356 0014 2346     		mov	r3, r4
 357 0016 FFF7FEFF 		bl	dmaStreamAllocate
 358              	.LVL20:
 417:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                              (stm32_dmaisr_t)dac_lld_serve_tx_interrupt,
 418:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                              (void *)dacp);
 419:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   osalDbgAssert(!b, "stream already allocated");
 420:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 421:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* DMA settings depend on the chosed DAC mode.*/
 422:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   switch (dacp->config->datamode) {
 359              		.loc 1 422 0
 360 001a 2169     		ldr	r1, [r4, #16]
 361 001c 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 362 001e 012B     		cmp	r3, #1
 363 0020 30D0     		beq	.L32
 364 0022 02D3     		bcc	.L33
 365 0024 022B     		cmp	r3, #2
 366 0026 33D0     		beq	.L34
 367              	.LVL21:
 368              	.L30:
 423:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* Sets the DAC data register */
 424:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT:
 425:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 426:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 427:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->params->dma, &dacp->params->dac->DHR12R1 +
 428:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 429:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 430:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 431:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 432:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT:
 433:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 434:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 435:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->params->dma, &dacp->params->dac->DHR12L1 +
 436:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 437:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 438:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 439:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 440:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT:
 441:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 442:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 443:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->params->dma, &dacp->params->dac->DHR8R1 +
 444:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 445:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 446:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE;
 447:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 448:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* In this mode the size of the buffer is halved because two samples
 449:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****        packed in a single dacsample_t element.*/
 450:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n = (n + 1) / 2;
 451:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 452:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == TRUE
 453:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_RIGHT_DUAL:
 454:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 2, "invalid number of channels");
 455:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 456:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->params->dma, &dacp->params->dac->DHR12RD);
 457:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 458:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_WORD | STM32_DMA_CR_MSIZE_WORD;
 459:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n /= 2;
 460:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 461:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_12BIT_LEFT_DUAL:
 462:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 2, "invalid number of channels");
 463:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 464:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->params->dma, &dacp->params->dac->DHR12LD);
 465:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 466:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_WORD | STM32_DMA_CR_MSIZE_WORD;
 467:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n /= 2;
 468:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 469:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   case DAC_DHRM_8BIT_RIGHT_DUAL:
 470:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(dacp->grpp->num_channels == 1, "invalid number of channels");
 471:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 472:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmaStreamSetPeripheral(dacp->params->dma, &dacp->params->dac->DHR8RD);
 473:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dmamode = dacp->params->dmamode |
 474:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 475:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     n /= 2;
 476:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 477:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 478:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   default:
 479:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     osalDbgAssert(false, "unexpected DAC mode");
 480:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     return;
 481:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 482:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 483:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetMemory0(dacp->params->dma, dacp->samples);
 484:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetTransactionSize(dacp->params->dma, n);
 485:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetMode(dacp->params->dma, dmamode            |
 486:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE |
 487:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       STM32_DMA_CR_HTIE  | STM32_DMA_CR_TCIE);
 488:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamEnable(dacp->params->dma);
 489:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 490:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* DAC configuration.*/
 491:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == FALSE
 492:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr = DAC_CR_DMAEN1 | (dacp->grpp->trigger << 3) | DAC_CR_TEN1 | DAC_CR_EN1 | dacp->config->cr;
 493:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR &= dacp->params->regmask;
 494:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR |= cr << dacp->params->regshift;
 495:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 496:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR = 0;
 497:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   cr = DAC_CR_DMAEN1 | (dacp->grpp->trigger << 3)  | DAC_CR_TEN1 | DAC_CR_EN1 | dacp->config->cr
 498:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                      | (dacp->grpp->trigger << 19) | DAC_CR_TEN2 | DAC_CR_EN2 | (dacp->config->cr <
 499:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR = cr;
 500:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 501:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 369              		.loc 1 501 0
 370 0028 70BD     		pop	{r4, r5, r6, pc}
 371              	.LVL22:
 372              	.L33:
 427:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 373              		.loc 1 427 0
 374 002a A26A     		ldr	r2, [r4, #40]
 375 002c 1369     		ldr	r3, [r2, #16]
 376 002e 5868     		ldr	r0, [r3, #4]
 377 0030 1368     		ldr	r3, [r2]
 378 0032 0833     		adds	r3, r3, #8
 379              	.L36:
 435:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 380              		.loc 1 435 0
 381 0034 5668     		ldr	r6, [r2, #4]
 382 0036 03EB8603 		add	r3, r3, r6, lsl #2
 383 003a 8360     		str	r3, [r0, #8]
 437:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_HWORD | STM32_DMA_CR_MSIZE_HWORD;
 384              		.loc 1 437 0
 385 003c 5369     		ldr	r3, [r2, #20]
 386 003e 43F4A063 		orr	r3, r3, #1280
 387              	.LVL23:
 388              	.L35:
 483:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetTransactionSize(dacp->params->dma, n);
 389              		.loc 1 483 0
 390 0042 A06A     		ldr	r0, [r4, #40]
 391 0044 A668     		ldr	r6, [r4, #8]
 392 0046 0269     		ldr	r2, [r0, #16]
 393 0048 5268     		ldr	r2, [r2, #4]
 485:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE |
 394              		.loc 1 485 0
 395 004a 43F00E03 		orr	r3, r3, #14
 396              	.LVL24:
 483:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetTransactionSize(dacp->params->dma, n);
 397              		.loc 1 483 0
 398 004e D660     		str	r6, [r2, #12]
 484:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamSetMode(dacp->params->dma, dmamode            |
 399              		.loc 1 484 0
 400 0050 5560     		str	r5, [r2, #4]
 485:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                       STM32_DMA_CR_DMEIE | STM32_DMA_CR_TEIE |
 401              		.loc 1 485 0
 402 0052 1360     		str	r3, [r2]
 488:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 403              		.loc 1 488 0
 404 0054 1368     		ldr	r3, [r2]
 405 0056 43F00103 		orr	r3, r3, #1
 406 005a 1360     		str	r3, [r2]
 492:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR &= dacp->params->regmask;
 407              		.loc 1 492 0
 408 005c 6368     		ldr	r3, [r4, #4]
 493:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR |= cr << dacp->params->regshift;
 409              		.loc 1 493 0
 410 005e C468     		ldr	r4, [r0, #12]
 411              	.LVL25:
 492:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR &= dacp->params->regmask;
 412              		.loc 1 492 0
 413 0060 DA68     		ldr	r2, [r3, #12]
 414 0062 8B88     		ldrh	r3, [r1, #4]
 415 0064 43EAC203 		orr	r3, r3, r2, lsl #3
 493:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR |= cr << dacp->params->regshift;
 416              		.loc 1 493 0
 417 0068 0268     		ldr	r2, [r0]
 494:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 418              		.loc 1 494 0
 419 006a 8068     		ldr	r0, [r0, #8]
 493:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR |= cr << dacp->params->regshift;
 420              		.loc 1 493 0
 421 006c 1168     		ldr	r1, [r2]
 422 006e 2140     		ands	r1, r1, r4
 423 0070 1160     		str	r1, [r2]
 492:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR &= dacp->params->regmask;
 424              		.loc 1 492 0
 425 0072 43F48053 		orr	r3, r3, #4096
 494:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 426              		.loc 1 494 0
 427 0076 1168     		ldr	r1, [r2]
 492:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR &= dacp->params->regmask;
 428              		.loc 1 492 0
 429 0078 43F00503 		orr	r3, r3, #5
 430              	.LVL26:
 494:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 431              		.loc 1 494 0
 432 007c 8340     		lsls	r3, r3, r0
 433              	.LVL27:
 434 007e 0B43     		orrs	r3, r3, r1
 435 0080 1360     		str	r3, [r2]
 436 0082 D1E7     		b	.L30
 437              	.LVL28:
 438              	.L32:
 435:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 439              		.loc 1 435 0
 440 0084 A26A     		ldr	r2, [r4, #40]
 441 0086 1369     		ldr	r3, [r2, #16]
 442 0088 5868     		ldr	r0, [r3, #4]
 443 008a 1368     		ldr	r3, [r2]
 444 008c 0C33     		adds	r3, r3, #12
 445 008e D1E7     		b	.L36
 446              	.L34:
 443:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 447              		.loc 1 443 0
 448 0090 A26A     		ldr	r2, [r4, #40]
 449 0092 1369     		ldr	r3, [r2, #16]
 450 0094 5668     		ldr	r6, [r2, #4]
 451 0096 5868     		ldr	r0, [r3, #4]
 452 0098 1368     		ldr	r3, [r2]
 453 009a 1033     		adds	r3, r3, #16
 454 009c 03EB8603 		add	r3, r3, r6, lsl #2
 450:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 455              		.loc 1 450 0
 456 00a0 0135     		adds	r5, r5, #1
 457              	.LVL29:
 443:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****                                               dacp->params->dataoffset);
 458              		.loc 1 443 0
 459 00a2 8360     		str	r3, [r0, #8]
 450:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     break;
 460              		.loc 1 450 0
 461 00a4 6D08     		lsrs	r5, r5, #1
 462              	.LVL30:
 445:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****               STM32_DMA_CR_PSIZE_BYTE | STM32_DMA_CR_MSIZE_BYTE;
 463              		.loc 1 445 0
 464 00a6 5369     		ldr	r3, [r2, #20]
 465              	.LVL31:
 451:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == TRUE
 466              		.loc 1 451 0
 467 00a8 CBE7     		b	.L35
 468              	.L38:
 469 00aa 00BF     		.align	2
 470              	.L37:
 471 00ac 00000000 		.word	dac_lld_serve_tx_interrupt
 472              		.cfi_endproc
 473              	.LFE284:
 475              		.section	.text.dac_lld_stop_conversion,"ax",%progbits
 476              		.align	1
 477              		.global	dac_lld_stop_conversion
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu softvfp
 483              	dac_lld_stop_conversion:
 484              	.LFB285:
 502:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 503:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** /**
 504:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @brief   Stops an ongoing conversion.
 505:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @details This function stops the currently ongoing conversion and returns
 506:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          the driver in the @p DAC_READY state. If there was no conversion
 507:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *          being processed then the function does nothing.
 508:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 509:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @param[in] dacp      pointer to the @p DACDriver object
 510:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  *
 511:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  * @iclass
 512:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****  */
 513:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** void dac_lld_stop_conversion(DACDriver *dacp) {
 485              		.loc 1 513 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              	.LVL32:
 514:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 515:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   /* DMA channel disabled and released.*/
 516:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamDisable(dacp->params->dma);
 490              		.loc 1 516 0
 491 0000 836A     		ldr	r3, [r0, #40]
 513:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 492              		.loc 1 513 0
 493 0002 10B5     		push	{r4, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 4, -8
 496              		.cfi_offset 14, -4
 513:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 497              		.loc 1 513 0
 498 0004 0446     		mov	r4, r0
 499              		.loc 1 516 0
 500 0006 1869     		ldr	r0, [r3, #16]
 501              	.LVL33:
 502 0008 4268     		ldr	r2, [r0, #4]
 503 000a 1368     		ldr	r3, [r2]
 504 000c 23F00F03 		bic	r3, r3, #15
 505 0010 1360     		str	r3, [r2]
 506 0012 017C     		ldrb	r1, [r0, #16]	@ zero_extendqisi2
 507 0014 0268     		ldr	r2, [r0]
 508 0016 0E23     		movs	r3, #14
 509 0018 8B40     		lsls	r3, r3, r1
 510 001a 5360     		str	r3, [r2, #4]
 517:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dmaStreamRelease(dacp->params->dma);
 511              		.loc 1 517 0
 512 001c FFF7FEFF 		bl	dmaStreamRelease
 513              	.LVL34:
 518:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 519:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #if STM32_DAC_DUAL_MODE == FALSE
 520:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR &= dacp->params->regmask;
 514              		.loc 1 520 0
 515 0020 A16A     		ldr	r1, [r4, #40]
 516 0022 0A68     		ldr	r2, [r1]
 517 0024 C868     		ldr	r0, [r1, #12]
 518 0026 1368     		ldr	r3, [r2]
 521:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 519              		.loc 1 521 0
 520 0028 8968     		ldr	r1, [r1, #8]
 520:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   dacp->params->dac->CR |= (DAC_CR_EN1 | dacp->config->cr) << dacp->params->regshift;
 521              		.loc 1 520 0
 522 002a 0340     		ands	r3, r3, r0
 523 002c 1360     		str	r3, [r2]
 524              		.loc 1 521 0
 525 002e 2369     		ldr	r3, [r4, #16]
 526 0030 1068     		ldr	r0, [r2]
 527 0032 9B88     		ldrh	r3, [r3, #4]
 528 0034 43F00103 		orr	r3, r3, #1
 529 0038 8B40     		lsls	r3, r3, r1
 530 003a 0343     		orrs	r3, r3, r0
 531 003c 1360     		str	r3, [r2]
 522:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #else
 523:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   if ((dacp->config->datamode == DAC_DHRM_12BIT_RIGHT_DUAL) ||
 524:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       (dacp->config->datamode == DAC_DHRM_12BIT_LEFT_DUAL) ||
 525:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       (dacp->config->datamode == DAC_DHRM_8BIT_RIGHT_DUAL)) {
 526:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR = DAC_CR_EN2 | (dacp->config->cr << 16) | DAC_CR_EN1 | dacp->config->cr;
 527:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 528:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   else {
 529:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     dacp->params->dac->CR = DAC_CR_EN1 | dacp->config->cr;
 530:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 531:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** #endif
 532:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** }
 532              		.loc 1 532 0
 533 003e 10BD     		pop	{r4, pc}
 534              		.cfi_endproc
 535              	.LFE285:
 537              		.section	.text.dac_lld_serve_tx_interrupt,"ax",%progbits
 538              		.align	1
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu softvfp
 544              	dac_lld_serve_tx_interrupt:
 545              	.LFB279:
 158:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 546              		.loc 1 158 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL35:
 551 0000 70B5     		push	{r4, r5, r6, lr}
 552              		.cfi_def_cfa_offset 16
 553              		.cfi_offset 4, -16
 554              		.cfi_offset 5, -12
 555              		.cfi_offset 6, -8
 556              		.cfi_offset 14, -4
 158:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 557              		.loc 1 158 0
 558 0002 0D46     		mov	r5, r1
 160:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* DMA errors handling.*/
 559              		.loc 1 160 0
 560 0004 2907     		lsls	r1, r5, #28
 561              	.LVL36:
 158:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 562              		.loc 1 158 0
 563 0006 0446     		mov	r4, r0
 160:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     /* DMA errors handling.*/
 564              		.loc 1 160 0
 565 0008 1CD5     		bpl	.L41
 162:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 566              		.loc 1 162 0
 567 000a FFF7FEFF 		bl	dac_lld_stop_conversion
 568              	.LVL37:
 569 000e 6368     		ldr	r3, [r4, #4]
 570 0010 9B68     		ldr	r3, [r3, #8]
 571 0012 4BB1     		cbz	r3, .L43
 162:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 572              		.loc 1 162 0 is_stmt 0 discriminator 1
 573 0014 0522     		movs	r2, #5
 574 0016 2270     		strb	r2, [r4]
 575 0018 0021     		movs	r1, #0
 576 001a 2046     		mov	r0, r4
 577 001c 9847     		blx	r3
 578              	.LVL38:
 579 001e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 580 0020 052B     		cmp	r3, #5
 581 0022 04BF     		itt	eq
 582 0024 0223     		moveq	r3, #2
 583 0026 2370     		strbeq	r3, [r4]
 584              	.L43:
 162:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****   }
 585              		.loc 1 162 0 discriminator 5
 586 0028 0025     		movs	r5, #0
 587              	.LVL39:
 588 002a 6560     		str	r5, [r4, #4]
 589              	.LVL40:
 590              	.LBB107:
 591              	.LBB108:
 592              	.LBB109:
 593              	.LBB110:
 594              	.LBB111:
 595              	.LBB112:
 596              		.file 2 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @version  V4.30
   5:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
   9:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    All rights reserved.
  10:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      specific prior written permission.
  20:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    *
  21:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  35:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  38:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #endif
  45:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  46:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  47:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   @{
  51:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  52:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  53:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  54:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  58:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  60:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  62:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  63:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  64:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  65:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  69:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  71:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  73:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  74:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  75:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  76:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Control Register value
  79:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  80:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  82:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
  83:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  84:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
  86:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  87:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  88:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  89:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  90:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  94:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  96:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  98:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  99:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 100:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 101:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 105:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 107:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 108:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 109:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 111:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 112:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 113:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 114:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 115:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               APSR Register value
 118:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 119:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 121:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 122:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 123:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 125:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 126:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 127:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 128:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 129:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 132:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 134:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 136:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 137:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 138:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 140:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 141:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 142:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 143:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 144:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               PSP Register value
 147:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 148:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 150:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 151:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 152:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 154:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 155:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 156:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 157:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 158:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 162:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 164:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 166:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 167:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 168:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 169:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               MSP Register value
 172:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 173:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 175:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 176:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 177:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 179:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 180:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 181:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 182:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 183:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 188:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 190:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 192:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 193:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 194:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 195:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 199:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 201:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 202:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 203:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 205:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 206:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 207:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 208:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 209:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 213:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 215:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 217:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 218:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 219:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 221:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 222:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 226:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 228:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 230:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 231:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 232:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 233:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 237:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 239:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 241:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 243:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 244:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 248:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 250:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 251:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 252:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 254:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 255:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 257:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 597              		.loc 2 264 0 is_stmt 1 discriminator 5
 598 002c 2023     		movs	r3, #32
 599              		.syntax unified
 600              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 601 002e 83F31188 		MSR basepri, r3
 602              	@ 0 "" 2
 603              	.LVL41:
 604              		.thumb
 605              		.syntax unified
 606              	.LBE112:
 607              	.LBE111:
 608              	.LBE110:
 609              	.LBE109:
 610              	.LBE108:
 611              	.LBE107:
 612              	.LBB113:
 613              	.LBB114:
 614              		.file 3 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef _OSAL_H_
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define _OSAL_H_
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                (!FALSE)
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        FALSE
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         TRUE
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              RDY_OK
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           RDY_RESET
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         RDY_TIMEOUT
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((systime_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((systime_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if !CH_CFG_USE_EVENTS
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 176:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 177:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 178:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 179:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 180:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 181:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 182:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Flags stored into the
 183:./lib/chibios/os/hal/osal/rt/osal.h ****                                                 object.                     */
 184:./lib/chibios/os/hal/osal/rt/osal.h **** } event_source_t;
 185:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 186:./lib/chibios/os/hal/osal/rt/osal.h **** 
 187:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 188:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 189:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then them
 190:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 192:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 193:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 194:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 195:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 196:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 197:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 198:./lib/chibios/os/hal/osal/rt/osal.h **** 
 199:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 200:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 205:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 206:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 207:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 209:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 213:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 214:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 215:./lib/chibios/os/hal/osal/rt/osal.h **** 
 216:./lib/chibios/os/hal/osal/rt/osal.h **** /* Temporary names provided for ChibiOS 2.x compatibility.*/
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueInit osalThreadQueueObjectInit
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupAllI osalThreadDequeueAllI
 219:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupOneI osalThreadDequeueNextI
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueGoSleepTimeoutS osalThreadEnqueueTimeoutS
 221:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalEventInit osalEventObjectInit
 222:./lib/chibios/os/hal/osal/rt/osal.h **** 
 223:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 224:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 225:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 232:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 233:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 234:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 235:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 236:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 237:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 238:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 239:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 240:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 241:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 242:./lib/chibios/os/hal/osal/rt/osal.h **** 
 243:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 245:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 253:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 254:./lib/chibios/os/hal/osal/rt/osal.h **** 
 255:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 265:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 266:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 267:./lib/chibios/os/hal/osal/rt/osal.h **** 
 268:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 271:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 272:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 273:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 275:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 276:./lib/chibios/os/hal/osal/rt/osal.h **** 
 277:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 278:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 279:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 282:./lib/chibios/os/hal/osal/rt/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 285:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 286:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 288:./lib/chibios/os/hal/osal/rt/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 293:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 294:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 295:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 296:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 297:./lib/chibios/os/hal/osal/rt/osal.h **** 
 298:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 299:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 300:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 301:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 302:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 305:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 306:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 307:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 312:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2ST(sec) S2ST(sec)
 313:./lib/chibios/os/hal/osal/rt/osal.h **** 
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 315:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 316:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 320:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 324:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2ST(msec) MS2ST(msec)
 325:./lib/chibios/os/hal/osal/rt/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 330:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 331:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 332:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 336:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2ST(usec) US2ST(usec)
 337:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 338:./lib/chibios/os/hal/osal/rt/osal.h **** 
 339:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 342:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 344:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** 
 356:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 357:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 361:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 368:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 369:./lib/chibios/os/hal/osal/rt/osal.h **** 
 370:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 372:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 373:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 374:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 382:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 383:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 384:./lib/chibios/os/hal/osal/rt/osal.h **** 
 385:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 386:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 387:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 388:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 389:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       time in seconds, must be different from zero
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 399:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(sec) osalThreadSleep(OSAL_S2ST(sec))
 400:./lib/chibios/os/hal/osal/rt/osal.h **** 
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 402:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 403:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 407:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 412:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msec) osalThreadSleep(OSAL_MS2ST(msec))
 413:./lib/chibios/os/hal/osal/rt/osal.h **** 
 414:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 417:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 418:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 419:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      time in microseconds, must be different from zero
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usec) osalThreadSleep(OSAL_US2ST(usec))
 426:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 427:./lib/chibios/os/hal/osal/rt/osal.h **** 
 428:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 429:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 433:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 434:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 435:./lib/chibios/os/hal/osal/rt/osal.h **** 
 436:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 437:./lib/chibios/os/hal/osal/rt/osal.h **** }
 438:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 439:./lib/chibios/os/hal/osal/rt/osal.h **** 
 440:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 441:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 442:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 443:./lib/chibios/os/hal/osal/rt/osal.h **** 
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 445:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 446:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 447:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 448:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 449:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 450:./lib/chibios/os/hal/osal/rt/osal.h **** 
 451:./lib/chibios/os/hal/osal/rt/osal.h **** }
 452:./lib/chibios/os/hal/osal/rt/osal.h **** 
 453:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 454:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 455:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 456:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 457:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 459:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 463:./lib/chibios/os/hal/osal/rt/osal.h **** }
 464:./lib/chibios/os/hal/osal/rt/osal.h **** 
 465:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 467:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 468:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 469:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 470:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 471:./lib/chibios/os/hal/osal/rt/osal.h **** 
 472:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 473:./lib/chibios/os/hal/osal/rt/osal.h **** }
 474:./lib/chibios/os/hal/osal/rt/osal.h **** 
 475:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 478:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 479:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 480:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 481:./lib/chibios/os/hal/osal/rt/osal.h **** 
 482:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 483:./lib/chibios/os/hal/osal/rt/osal.h **** }
 484:./lib/chibios/os/hal/osal/rt/osal.h **** 
 485:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 488:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 489:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 490:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 491:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 494:./lib/chibios/os/hal/osal/rt/osal.h **** }
 495:./lib/chibios/os/hal/osal/rt/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 498:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 499:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 500:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 501:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 502:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 503:./lib/chibios/os/hal/osal/rt/osal.h **** 
 504:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 505:./lib/chibios/os/hal/osal/rt/osal.h **** }
 506:./lib/chibios/os/hal/osal/rt/osal.h **** 
 507:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 509:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 510:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 511:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 512:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 513:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 514:./lib/chibios/os/hal/osal/rt/osal.h **** 
 515:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 516:./lib/chibios/os/hal/osal/rt/osal.h **** }
 517:./lib/chibios/os/hal/osal/rt/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 520:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 521:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 522:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 523:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 524:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 525:./lib/chibios/os/hal/osal/rt/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 527:./lib/chibios/os/hal/osal/rt/osal.h **** }
 528:./lib/chibios/os/hal/osal/rt/osal.h **** 
 529:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 531:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 532:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 533:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 534:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 535:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 536:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 556:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 557:./lib/chibios/os/hal/osal/rt/osal.h **** 
 558:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 559:./lib/chibios/os/hal/osal/rt/osal.h **** }
 560:./lib/chibios/os/hal/osal/rt/osal.h **** 
 561:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 562:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 563:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 564:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 565:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 570:./lib/chibios/os/hal/osal/rt/osal.h **** #if PORT_SUPPORTS_RT || defined(__DOXYGEN__)
 571:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 572:./lib/chibios/os/hal/osal/rt/osal.h **** 
 573:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 574:./lib/chibios/os/hal/osal/rt/osal.h **** }
 575:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 576:./lib/chibios/os/hal/osal/rt/osal.h **** 
 577:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 578:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 579:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 582:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 583:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 584:./lib/chibios/os/hal/osal/rt/osal.h **** 
 585:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 586:./lib/chibios/os/hal/osal/rt/osal.h **** }
 587:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 588:./lib/chibios/os/hal/osal/rt/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 591:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 592:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 593:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 594:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 595:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 598:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 599:./lib/chibios/os/hal/osal/rt/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 601:./lib/chibios/os/hal/osal/rt/osal.h **** }
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 604:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 605:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 606:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 607:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 634:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 635:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalOsIsTimeWithinX(systime_t time,
 636:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t start,
 637:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t end) {
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTIsTimeWithinX(time, start, end);
 640:./lib/chibios/os/hal/osal/rt/osal.h **** }
 641:./lib/chibios/os/hal/osal/rt/osal.h **** 
 642:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 648:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 649:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 650:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 651:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 652:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 653:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 654:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(systime_t time) {
 655:./lib/chibios/os/hal/osal/rt/osal.h **** 
 656:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(time);
 657:./lib/chibios/os/hal/osal/rt/osal.h **** }
 658:./lib/chibios/os/hal/osal/rt/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 663:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 664:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 665:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 666:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 667:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 668:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 671:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(systime_t time) {
 672:./lib/chibios/os/hal/osal/rt/osal.h **** 
 673:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(time);
 674:./lib/chibios/os/hal/osal/rt/osal.h **** }
 675:./lib/chibios/os/hal/osal/rt/osal.h **** 
 676:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 682:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 683:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 684:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 685:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 686:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 687:./lib/chibios/os/hal/osal/rt/osal.h **** 
 688:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendS(trp);
 689:./lib/chibios/os/hal/osal/rt/osal.h **** }
 690:./lib/chibios/os/hal/osal/rt/osal.h **** 
 691:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 701:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 702:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 703:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 704:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 705:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 706:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 710:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 711:./lib/chibios/os/hal/osal/rt/osal.h ****                                               systime_t timeout) {
 712:./lib/chibios/os/hal/osal/rt/osal.h **** 
 713:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 714:./lib/chibios/os/hal/osal/rt/osal.h **** }
 715:./lib/chibios/os/hal/osal/rt/osal.h **** 
 716:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 718:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 719:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 720:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 722:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 723:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 726:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 727:./lib/chibios/os/hal/osal/rt/osal.h **** 
 728:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 615              		.loc 3 728 0 discriminator 5
 616 0032 4FF0FF31 		mov	r1, #-1
 617 0036 04F11400 		add	r0, r4, #20
 618              	.LVL42:
 619 003a FFF7FEFF 		bl	chThdResumeI
 620              	.LVL43:
 621              	.LBE114:
 622              	.LBE113:
 623              	.LBB115:
 624              	.LBB116:
 625              	.LBB117:
 626              	.LBB118:
 627              	.LBB119:
 628              	.LBB120:
 629              		.loc 2 264 0 discriminator 5
 630              		.syntax unified
 631              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 632 003e 85F31188 		MSR basepri, r5
 633              	@ 0 "" 2
 634              	.LVL44:
 635              		.thumb
 636              		.syntax unified
 637              	.L40:
 638              	.LBE120:
 639              	.LBE119:
 640              	.LBE118:
 641              	.LBE117:
 642              	.LBE116:
 643              	.LBE115:
 174:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 644              		.loc 1 174 0
 645 0042 70BD     		pop	{r4, r5, r6, pc}
 646              	.LVL45:
 647              	.L41:
 648              	.LBB121:
 649              	.LBB122:
 165:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Half transfer processing.*/
 650              		.loc 1 165 0
 651 0044 6A07     		lsls	r2, r5, #29
 652 0046 06D5     		bpl	.L46
 167:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 653              		.loc 1 167 0
 654 0048 4368     		ldr	r3, [r0, #4]
 655 004a 5B68     		ldr	r3, [r3, #4]
 656 004c 1BB1     		cbz	r3, .L46
 657 004e 8289     		ldrh	r2, [r0, #12]
 658 0050 8168     		ldr	r1, [r0, #8]
 659 0052 5208     		lsrs	r2, r2, #1
 660 0054 9847     		blx	r3
 661              	.LVL46:
 662              	.L46:
 169:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****       /* Transfer complete processing.*/
 663              		.loc 1 169 0
 664 0056 AB07     		lsls	r3, r5, #30
 665 0058 F3D5     		bpl	.L40
 171:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 666              		.loc 1 171 0
 667 005a 6068     		ldr	r0, [r4, #4]
 668 005c 4368     		ldr	r3, [r0, #4]
 669 005e 002B     		cmp	r3, #0
 670 0060 EFD0     		beq	.L40
 671 0062 A289     		ldrh	r2, [r4, #12]
 672 0064 A168     		ldr	r1, [r4, #8]
 673 0066 012A     		cmp	r2, #1
 674              	.LBB123:
 675 0068 81BF     		itttt	hi
 676 006a 0068     		ldrhi	r0, [r0]
 677 006c 5208     		lsrhi	r2, r2, #1
 678              	.LVL47:
 679 006e 4000     		lslhi	r0, r0, #1
 680 0070 02FB0011 		mlahi	r1, r2, r0, r1
 681              	.LBE123:
 682 0074 2046     		mov	r0, r4
 683              	.LBE122:
 684              	.LBE121:
 174:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c **** 
 685              		.loc 1 174 0
 686 0076 BDE87040 		pop	{r4, r5, r6, lr}
 687              		.cfi_restore 14
 688              		.cfi_restore 6
 689              		.cfi_restore 5
 690              		.cfi_restore 4
 691              		.cfi_def_cfa_offset 0
 692              	.LVL48:
 693              	.LBB125:
 694              	.LBB124:
 171:lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.c ****     }
 695              		.loc 1 171 0
 696 007a 1847     		bx	r3	@ indirect register sibling call
 697              	.LVL49:
 698              	.LBE124:
 699              	.LBE125:
 700              		.cfi_endproc
 701              	.LFE279:
 703              		.global	DACD2
 704              		.global	DACD1
 705              		.section	.bss.DACD1,"aw",%nobits
 706              		.align	2
 707              		.set	.LANCHOR0,. + 0
 710              	DACD1:
 711 0000 00000000 		.space	44
 711      00000000 
 711      00000000 
 711      00000000 
 711      00000000 
 712              		.section	.bss.DACD2,"aw",%nobits
 713              		.align	2
 714              		.set	.LANCHOR2,. + 0
 717              	DACD2:
 718 0000 00000000 		.space	44
 718      00000000 
 718      00000000 
 718      00000000 
 718      00000000 
 719              		.section	.rodata.dma1_ch1_params,"a",%progbits
 720              		.align	2
 721              		.set	.LANCHOR1,. + 0
 724              	dma1_ch1_params:
 725 0000 00740040 		.word	1073771520
 726 0004 00000000 		.word	0
 727 0008 00000000 		.word	0
 728 000c 0000FFFF 		.word	-65536
 729 0010 B4000000 		.word	_stm32_dma_streams+180
 730 0014 BE200000 		.word	8382
 731 0018 0A000000 		.word	10
 732              		.section	.rodata.dma1_ch2_params,"a",%progbits
 733              		.align	2
 734              		.set	.LANCHOR3,. + 0
 737              	dma1_ch2_params:
 738 0000 00740040 		.word	1073771520
 739 0004 03000000 		.word	3
 740 0008 10000000 		.word	16
 741 000c FFFF0000 		.word	65535
 742 0010 C8000000 		.word	_stm32_dma_streams+200
 743 0014 BE200000 		.word	8382
 744 0018 0A000000 		.word	10
 745              		.text
 746              	.Letext0:
 747              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 748              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 749              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 750              		.file 7 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 751              		.file 8 "./lib/chibios/os/rt/include/chsystypes.h"
 752              		.file 9 "./lib/chibios/os/rt/include/chschd.h"
 753              		.file 10 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 754              		.file 11 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 755              		.file 12 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 756              		.file 13 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 757              		.file 14 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 758              		.file 15 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 759              		.file 16 "./lib/chibios/os/rt/include/chtm.h"
 760              		.file 17 "./lib/chibios/os/rt/include/chsem.h"
 761              		.file 18 "./lib/chibios/os/rt/include/chmtx.h"
 762              		.file 19 "./lib/chibios/os/rt/include/chsys.h"
 763              		.file 20 "./lib/chibios/os/rt/include/chregistry.h"
 764              		.file 21 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 765              		.file 22 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 766              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 767              		.file 24 "./lib/chibios/os/hal/include/hal_dac.h"
 768              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 769              		.file 26 "./lib/chibios/os/hal/include/hal_gpt.h"
 770              		.file 27 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 771              		.file 28 "./lib/chibios/os/hal/include/hal_i2c.h"
 772              		.file 29 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 773              		.file 30 "./lib/chibios/os/hal/include/hal_pwm.h"
 774              		.file 31 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 775              		.file 32 "./lib/chibios/os/hal/include/hal_usb.h"
 776              		.file 33 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 777              		.file 34 "./lib/chibios/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_dac_lld.c
/var/tmp//ccVFYTYu.s:16     .text.dac_lld_init:0000000000000000 $t
/var/tmp//ccVFYTYu.s:23     .text.dac_lld_init:0000000000000000 dac_lld_init
/var/tmp//ccVFYTYu.s:55     .text.dac_lld_init:000000000000001c $d
/var/tmp//ccVFYTYu.s:63     .text.dac_lld_stop:0000000000000000 $t
/var/tmp//ccVFYTYu.s:70     .text.dac_lld_stop:0000000000000000 dac_lld_stop
/var/tmp//ccVFYTYu.s:118    .text.dac_lld_stop:000000000000003c $d
/var/tmp//ccVFYTYu.s:125    .text.dac_lld_put_channel:0000000000000000 $t
/var/tmp//ccVFYTYu.s:132    .text.dac_lld_put_channel:0000000000000000 dac_lld_put_channel
/var/tmp//ccVFYTYu.s:211    .text.dac_lld_start:0000000000000000 $t
/var/tmp//ccVFYTYu.s:218    .text.dac_lld_start:0000000000000000 dac_lld_start
/var/tmp//ccVFYTYu.s:311    .text.dac_lld_start:0000000000000058 $d
/var/tmp//ccVFYTYu.s:318    .text.dac_lld_start_conversion:0000000000000000 $t
/var/tmp//ccVFYTYu.s:325    .text.dac_lld_start_conversion:0000000000000000 dac_lld_start_conversion
/var/tmp//ccVFYTYu.s:471    .text.dac_lld_start_conversion:00000000000000ac $d
/var/tmp//ccVFYTYu.s:544    .text.dac_lld_serve_tx_interrupt:0000000000000000 dac_lld_serve_tx_interrupt
/var/tmp//ccVFYTYu.s:476    .text.dac_lld_stop_conversion:0000000000000000 $t
/var/tmp//ccVFYTYu.s:483    .text.dac_lld_stop_conversion:0000000000000000 dac_lld_stop_conversion
/var/tmp//ccVFYTYu.s:538    .text.dac_lld_serve_tx_interrupt:0000000000000000 $t
/var/tmp//ccVFYTYu.s:717    .bss.DACD2:0000000000000000 DACD2
/var/tmp//ccVFYTYu.s:710    .bss.DACD1:0000000000000000 DACD1
/var/tmp//ccVFYTYu.s:706    .bss.DACD1:0000000000000000 $d
/var/tmp//ccVFYTYu.s:713    .bss.DACD2:0000000000000000 $d
/var/tmp//ccVFYTYu.s:720    .rodata.dma1_ch1_params:0000000000000000 $d
/var/tmp//ccVFYTYu.s:724    .rodata.dma1_ch1_params:0000000000000000 dma1_ch1_params
/var/tmp//ccVFYTYu.s:733    .rodata.dma1_ch2_params:0000000000000000 $d
/var/tmp//ccVFYTYu.s:737    .rodata.dma1_ch2_params:0000000000000000 dma1_ch2_params

UNDEFINED SYMBOLS
dacObjectInit
dmaStreamAllocate
dmaStreamRelease
chThdResumeI
_stm32_dma_streams
