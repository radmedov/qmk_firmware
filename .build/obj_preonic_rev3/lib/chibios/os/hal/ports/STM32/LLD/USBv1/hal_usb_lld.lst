   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 2
  11              		.file	"hal_usb_lld.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.usb_packet_write_from_buffer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	usb_packet_write_from_buffer:
  23              	.LFB282:
  24              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c"
   1:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @file    USBv1/hal_usb_lld.c
  19:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   STM32 USB subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @addtogroup USB
  22:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #include <string.h>
  26:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #include "hal.h"
  28:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  29:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if HAL_USE_USB || defined(__DOXYGEN__)
  30:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  31:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver local definitions.                                                 */
  33:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  34:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  35:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #define BTABLE_ADDR     0x0000
  36:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  37:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #define EPR_EP_TYPE_IS_ISO(bits) ((bits & EPR_EP_TYPE_MASK) == EPR_EP_TYPE_ISO)
  38:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  39:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  40:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver exported variables.                                                */
  41:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  42:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  43:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /** @brief USB1 driver identifier.*/
  44:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1 || defined(__DOXYGEN__)
  45:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** USBDriver USBD1;
  46:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
  47:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  48:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  49:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver local variables and types.                                         */
  50:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  51:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  52:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  53:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   EP0 state.
  54:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @note    It is an union because IN and OUT endpoints are never used at the
  55:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *          same time for EP0.
  56:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  57:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static union {
  58:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /**
  59:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    * @brief   IN EP0 state.
  60:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    */
  61:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBInEndpointState in;
  62:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /**
  63:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    * @brief   OUT EP0 state.
  64:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    */
  65:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBOutEndpointState out;
  66:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** } ep0_state;
  67:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  68:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  69:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Buffer for the EP0 setup packets.
  70:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  71:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static uint8_t ep0setup_buffer[8];
  72:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  73:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  74:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   EP0 initialization structure.
  75:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  76:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static const USBEndpointConfig ep0config = {
  77:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USB_EP_MODE_TYPE_CTRL,
  78:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   _usb_ep0setup,
  79:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   _usb_ep0in,
  80:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   _usb_ep0out,
  81:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   0x40,
  82:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   0x40,
  83:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   &ep0_state.in,
  84:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   &ep0_state.out,
  85:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   1,
  86:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   ep0setup_buffer
  87:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** };
  88:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  89:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  90:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver local functions.                                                   */
  91:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  92:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  93:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  94:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Resets the packet memory allocator.
  95:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
  96:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
  97:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  98:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static void usb_pm_reset(USBDriver *usbp) {
  99:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 100:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* The first 64 bytes are reserved for the descriptors table. The effective
 101:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      available RAM for endpoint buffers is just 448 bytes.*/
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext = 64;
 103:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 104:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 105:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 106:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Resets the packet memory allocator.
 107:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 108:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 109:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] size      size of the packet buffer to allocate
 110:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The packet buffer address.
 111:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 112:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static uint32_t usb_pm_alloc(USBDriver *usbp, size_t size) {
 113:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t next;
 114:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   next = usbp->pmnext;
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 118:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 119:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 120:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 121:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 122:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Reads from a dedicated packet buffer.
 123:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 124:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 125:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[out] buf      buffer where to copy the packet data
 126:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The size of the receivee packet.
 127:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 128:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 129:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 130:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static size_t usb_packet_read_to_buffer(usbep_t ep, uint8_t *buf) {
 131:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t i, n;
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *udp = USB_GET_DESCRIPTOR(ep);
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 134:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 135:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t epr = STM32_USB->EPR[ep];
 136:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 137:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Double buffering is always enabled for isochronous endpoints, and
 138:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      although we overlap the two buffers for simplicity, we still need
 139:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      to read from the right counter. The DTOG_RX bit indicates the buffer
 140:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      that is currently in use by the USB peripheral, that is, the buffer
 141:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      in which the next received packet will be stored, so we need to
 142:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      read the counter of the OTHER buffer, which is where the last
 143:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      received packet was stored.*/
 144:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (EPR_EP_TYPE_IS_ISO(epr) && !(epr & EPR_DTOG_RX))
 145:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = (size_t)udp->RXCOUNT1 & RXCOUNT_COUNT_MASK;
 146:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   else
 147:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = (size_t)udp->RXCOUNT0 & RXCOUNT_COUNT_MASK;
 148:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   n = (size_t)udp->RXCOUNT0 & RXCOUNT_COUNT_MASK;
 150:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 151:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 152:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   i = n;
 153:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 154:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_FAST_COPY
 155:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i >= 16) {
 156:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w;
 157:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 158:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 0);
 159:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 0) = (uint8_t)w;
 160:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 1) = (uint8_t)(w >> 8);
 161:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 1);
 162:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 2) = (uint8_t)w;
 163:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 3) = (uint8_t)(w >> 8);
 164:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 2);
 165:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 4) = (uint8_t)w;
 166:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 5) = (uint8_t)(w >> 8);
 167:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 3);
 168:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 6) = (uint8_t)w;
 169:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 7) = (uint8_t)(w >> 8);
 170:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 4);
 171:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 8) = (uint8_t)w;
 172:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 9) = (uint8_t)(w >> 8);
 173:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 5);
 174:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 10) = (uint8_t)w;
 175:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 11) = (uint8_t)(w >> 8);
 176:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 6);
 177:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 12) = (uint8_t)w;
 178:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 13) = (uint8_t)(w >> 8);
 179:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 7);
 180:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 14) = (uint8_t)w;
 181:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 15) = (uint8_t)(w >> 8);
 182:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 183:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 16;
 184:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     buf += 16;
 185:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     pmap += 8;
 186:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 187:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_FAST_COPY */
 188:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 189:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i >= 2) {
 190:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w = *pmap++;
 191:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)w;
 192:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)(w >> 8);
 193:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 194:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 195:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 196:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (i >= 1) {
 197:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf = (uint8_t)*pmap;
 198:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 199:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 200:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return n;
 201:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 202:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 203:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 204:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Writes to a dedicated packet buffer.
 205:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 206:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 207:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] buf       buffer where to fetch the packet data
 208:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] n         maximum number of bytes to copy. This value must
 209:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *                      not exceed the maximum packet size for this endpoint.
 210:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 211:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 212:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 213:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static void usb_packet_write_from_buffer(usbep_t ep,
 214:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                                          const uint8_t *buf,
 215:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                                          size_t n) {
  25              		.loc 1 215 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 216:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *udp = USB_GET_DESCRIPTOR(ep);
  31              		.loc 1 216 0
  32 0000 0C4B     		ldr	r3, .L4
  33 0002 1B6D     		ldr	r3, [r3, #80]
  34 0004 03F18043 		add	r3, r3, #1073741824
  35 0008 03F5C043 		add	r3, r3, #24576
  36 000c 03EB0010 		add	r0, r3, r0, lsl #4
  37              	.LVL1:
  38 0010 1144     		add	r1, r1, r2
  39              	.LVL2:
 217:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->TXADDR0);
  40              		.loc 1 217 0
  41 0012 0368     		ldr	r3, [r0]
 218:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   int i = (int)n;
 219:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 220:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 221:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t epr = STM32_USB->EPR[ep];
 222:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 223:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Double buffering is always enabled for isochronous endpoints, and
 224:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      although we overlap the two buffers for simplicity, we still need
 225:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      to write to the right counter. The DTOG_TX bit indicates the buffer
 226:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      that is currently in use by the USB peripheral, that is, the buffer
 227:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      from which the next packet will be sent, so we need to write the
 228:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      counter of that buffer.*/
 229:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (EPR_EP_TYPE_IS_ISO(epr) && (epr & EPR_DTOG_TX))
 230:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     udp->TXCOUNT1 = (stm32_usb_pma_t)n;
 231:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   else
 232:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     udp->TXCOUNT0 = (stm32_usb_pma_t)n;
 233:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 234:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   udp->TXCOUNT0 = (stm32_usb_pma_t)n;
  42              		.loc 1 234 0
  43 0014 4260     		str	r2, [r0, #4]
 217:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->TXADDR0);
  44              		.loc 1 217 0
  45 0016 03F10053 		add	r3, r3, #536870912
  46 001a 03F54053 		add	r3, r3, #12288
  47 001e 5B00     		lsls	r3, r3, #1
  48              	.LVL3:
  49              	.L2:
 235:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 236:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 237:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_FAST_COPY
 238:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i >= 16) {
 239:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w;
 240:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 241:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 0);
 242:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 1) << 8;
 243:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 0) = (stm32_usb_pma_t)w;
 244:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 2);
 245:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 3) << 8;
 246:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 1) = (stm32_usb_pma_t)w;
 247:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 4);
 248:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 5) << 8;
 249:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 2) = (stm32_usb_pma_t)w;
 250:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 6);
 251:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 7) << 8;
 252:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 3) = (stm32_usb_pma_t)w;
 253:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 8);
 254:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 9) << 8;
 255:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 4) = (stm32_usb_pma_t)w;
 256:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 10);
 257:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 11) << 8;
 258:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 5) = (stm32_usb_pma_t)w;
 259:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 12);
 260:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 13) << 8;
 261:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 6) = (stm32_usb_pma_t)w;
 262:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 14);
 263:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 15) << 8;
 264:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 7) = (stm32_usb_pma_t)w;
 265:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 266:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 16;
 267:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     buf += 16;
 268:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     pmap += 8;
 269:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 270:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_FAST_COPY */
 271:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 272:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i > 0) {
  50              		.loc 1 272 0
  51 0020 002A     		cmp	r2, #0
  52 0022 A1EB0200 		sub	r0, r1, r2
  53              	.LVL4:
  54 0026 00DC     		bgt	.L3
 273:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w;
 274:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 275:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *buf++;
 276:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *buf++ << 8;
 277:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *pmap++ = (stm32_usb_pma_t)w;
 278:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 279:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 280:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
  55              		.loc 1 280 0
  56 0028 7047     		bx	lr
  57              	.L3:
  58              	.LVL5:
  59              	.LBB109:
 276:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *pmap++ = (stm32_usb_pma_t)w;
  60              		.loc 1 276 0
  61 002a 0088     		ldrh	r0, [r0]	@ unaligned
  62              	.LVL6:
  63 002c 1860     		str	r0, [r3]
  64              	.LVL7:
 278:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
  65              		.loc 1 278 0
  66 002e 023A     		subs	r2, r2, #2
  67              	.LVL8:
 277:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
  68              		.loc 1 277 0
  69 0030 0433     		adds	r3, r3, #4
  70              	.LVL9:
  71 0032 F5E7     		b	.L2
  72              	.L5:
  73              		.align	2
  74              	.L4:
  75 0034 005C0040 		.word	1073765376
  76              	.LBE109:
  77              		.cfi_endproc
  78              	.LFE282:
  80              		.section	.text.Vector16C,"ax",%progbits
  81              		.align	1
  82              		.global	Vector16C
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	Vector16C:
  89              	.LFB284:
 281:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 282:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 283:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Common ISR code, serves the EP-related interrupts.
 284:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 285:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 286:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 287:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 288:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 289:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 290:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static void usb_serve_endpoints(USBDriver *usbp, uint32_t ep) {
 291:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 292:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t epr = STM32_USB->EPR[ep];
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   const USBEndpointConfig *epcp = usbp->epc[ep];
 294:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 295:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epr & EPR_CTR_TX) {
 296:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* IN endpoint, transmission.*/
 297:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     USBInEndpointState *isp = epcp->in_state;
 298:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_CLEAR_CTR_TX(ep);
 300:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     isp->txcnt += isp->txlast;
 302:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 303:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (n > 0) {
 304:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer not completed, there are more packets to send.*/
 305:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       if (n > epcp->in_maxsize)
 306:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         n = epcp->in_maxsize;
 307:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 308:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Writes the packet from the defined buffer.*/
 309:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txbuf += isp->txlast;
 310:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txlast = n;
 311:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       usb_packet_write_from_buffer(ep, isp->txbuf, n);
 312:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 313:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Starting IN operation.*/
 314:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       EPR_SET_STAT_TX(ep, EPR_STAT_TX_VALID);
 315:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 316:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 317:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer completed, invokes the callback.*/
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       _usb_isr_invoke_in_cb(usbp, ep);
 319:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 320:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 321:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epr & EPR_CTR_RX) {
 322:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* OUT endpoint, receive.*/
 323:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 324:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_CLEAR_CTR_RX(ep);
 325:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 326:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epr & EPR_SETUP) {
 327:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Setup packets handling, setup packets are handled using a
 328:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          specific callback.*/
 329:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       _usb_isr_invoke_setup_cb(usbp, ep);
 330:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 331:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 332:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       USBOutEndpointState *osp = epcp->out_state;
 333:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 334:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Reads the packet into the defined buffer.*/
 335:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       n = usb_packet_read_to_buffer(ep, osp->rxbuf);
 336:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxbuf += n;
 337:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 338:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transaction data updated.*/
 339:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxcnt  += n;
 340:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxsize -= n;
 341:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxpkts -= 1;
 342:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 343:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* The transaction is completed if the specified number of packets
 344:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          has been received or the current packet is a short packet.*/
 345:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       if ((n < epcp->out_maxsize) || (osp->rxpkts == 0)) {
 346:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer complete, invokes the callback.*/
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         _usb_isr_invoke_out_cb(usbp, ep);
 348:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 349:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       else {
 350:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer not complete, there are more packets to receive.*/
 351:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         EPR_SET_STAT_RX(ep, EPR_STAT_RX_VALID);
 352:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 353:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 354:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 355:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 356:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 357:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 358:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver interrupt handlers.                                                */
 359:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 360:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 361:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1 || defined(__DOXYGEN__)
 362:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB1_HP_NUMBER != STM32_USB1_LP_NUMBER
 363:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 364:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 365:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   USB high priority interrupt handler.
 366:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 367:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @isr
 368:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 369:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** OSAL_IRQ_HANDLER(STM32_USB1_HP_HANDLER) {
 370:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t istr;
 371:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBDriver *usbp = &USBD1;
 372:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 373:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_PROLOGUE();
 374:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 375:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Endpoint events handling.*/
 376:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   istr = STM32_USB->ISTR;
 377:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (istr & ISTR_CTR) {
 378:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_serve_endpoints(usbp, istr & ISTR_EP_ID_MASK);
 379:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     istr = STM32_USB->ISTR;
 380:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 381:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 382:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_EPILOGUE();
 383:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 384:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_ISOCHRONOUS */
 385:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB1_LP_NUMBER != STM32_USB1_HP_NUMBER */
 386:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 387:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 388:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   USB low priority interrupt handler.
 389:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 390:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @isr
 391:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 392:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** OSAL_IRQ_HANDLER(STM32_USB1_LP_HANDLER) {
  90              		.loc 1 392 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL10:
  95 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  96              		.cfi_def_cfa_offset 40
  97              		.cfi_offset 3, -40
  98              		.cfi_offset 4, -36
  99              		.cfi_offset 5, -32
 100              		.cfi_offset 6, -28
 101              		.cfi_offset 7, -24
 102              		.cfi_offset 8, -20
 103              		.cfi_offset 9, -16
 104              		.cfi_offset 10, -12
 105              		.cfi_offset 11, -8
 106              		.cfi_offset 14, -4
 393:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t istr;
 394:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBDriver *usbp = &USBD1;
 395:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 396:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_PROLOGUE();
 397:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 398:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   istr = STM32_USB->ISTR;
 107              		.loc 1 398 0
 108 0004 8B4D     		ldr	r5, .L56
 109 0006 6C6C     		ldr	r4, [r5, #68]
 110              	.LVL11:
 399:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 400:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* USB bus reset condition handling.*/
 401:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_RESET) {
 111              		.loc 1 401 0
 112 0008 6705     		lsls	r7, r4, #21
 113 000a 05D5     		bpl	.L7
 402:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_RESET;
 114              		.loc 1 402 0
 115 000c 6FF48063 		mvn	r3, #1024
 116 0010 6B64     		str	r3, [r5, #68]
 403:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 404:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     _usb_reset(usbp);
 117              		.loc 1 404 0
 118 0012 8948     		ldr	r0, .L56+4
 119 0014 FFF7FEFF 		bl	_usb_reset
 120              	.LVL12:
 121              	.L7:
 405:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 406:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 407:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* USB bus SUSPEND condition handling.*/
 408:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_SUSP) {
 122              		.loc 1 408 0
 123 0018 2605     		lsls	r6, r4, #20
 124 001a 09D5     		bpl	.L8
 409:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->CNTR |= CNTR_FSUSP;
 125              		.loc 1 409 0
 126 001c 2B6C     		ldr	r3, [r5, #64]
 410:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_LOW_POWER_ON_SUSPEND
 411:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->CNTR |= CNTR_LP_MODE;
 412:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 413:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_SUSP;
 414:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 415:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     _usb_suspend(usbp);
 127              		.loc 1 415 0
 128 001e 8648     		ldr	r0, .L56+4
 409:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->CNTR |= CNTR_FSUSP;
 129              		.loc 1 409 0
 130 0020 43F00803 		orr	r3, r3, #8
 131 0024 2B64     		str	r3, [r5, #64]
 413:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 132              		.loc 1 413 0
 133 0026 6FF40063 		mvn	r3, #2048
 134 002a 6B64     		str	r3, [r5, #68]
 135              		.loc 1 415 0
 136 002c FFF7FEFF 		bl	_usb_suspend
 137              	.LVL13:
 138              	.L8:
 416:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 417:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 418:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* USB bus WAKEUP condition handling.*/
 419:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_WKUP) {
 139              		.loc 1 419 0
 140 0030 E004     		lsls	r0, r4, #19
 141 0032 0DD5     		bpl	.L9
 142              	.LBB146:
 420:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t fnr = STM32_USB->FNR;
 143              		.loc 1 420 0
 144 0034 7F4D     		ldr	r5, .L56
 145 0036 AB6C     		ldr	r3, [r5, #72]
 146              	.LVL14:
 421:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (!(fnr & FNR_RXDP)) {
 147              		.loc 1 421 0
 148 0038 1904     		lsls	r1, r3, #16
 149 003a 06D4     		bmi	.L10
 422:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR &= ~CNTR_FSUSP;
 150              		.loc 1 422 0
 151 003c 2B6C     		ldr	r3, [r5, #64]
 152              	.LVL15:
 423:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 424:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       _usb_wakeup(usbp);
 153              		.loc 1 424 0
 154 003e 7E48     		ldr	r0, .L56+4
 422:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR &= ~CNTR_FSUSP;
 155              		.loc 1 422 0
 156 0040 23F00803 		bic	r3, r3, #8
 157 0044 2B64     		str	r3, [r5, #64]
 158              		.loc 1 424 0
 159 0046 FFF7FEFF 		bl	_usb_wakeup
 160              	.LVL16:
 161              	.L10:
 425:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 426:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_LOW_POWER_ON_SUSPEND
 427:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 428:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Just noise, going back in SUSPEND mode, reference manual 22.4.5,
 429:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          table 169.*/
 430:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR |= CNTR_LP_MODE;
 431:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 432:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 433:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_WKUP;
 162              		.loc 1 433 0
 163 004a 6FF48053 		mvn	r3, #4096
 164 004e 6B64     		str	r3, [r5, #68]
 165              	.L9:
 166              	.LBE146:
 434:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 435:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 436:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* SOF handling.*/
 437:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_SOF) {
 167              		.loc 1 437 0
 168 0050 A205     		lsls	r2, r4, #22
 169 0052 08D5     		bpl	.L11
 438:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     _usb_isr_invoke_sof_cb(usbp);
 170              		.loc 1 438 0
 171 0054 7848     		ldr	r0, .L56+4
 172 0056 4368     		ldr	r3, [r0, #4]
 173 0058 DB68     		ldr	r3, [r3, #12]
 174 005a 03B1     		cbz	r3, .L12
 175              		.loc 1 438 0 is_stmt 0 discriminator 1
 176 005c 9847     		blx	r3
 177              	.LVL17:
 178              	.L12:
 439:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_SOF;
 179              		.loc 1 439 0 is_stmt 1
 180 005e 754B     		ldr	r3, .L56
 181 0060 6FF40072 		mvn	r2, #512
 182 0064 5A64     		str	r2, [r3, #68]
 183              	.L11:
 184              	.LBB147:
 185              	.LBB148:
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 186              		.loc 1 293 0
 187 0066 744E     		ldr	r6, .L56+4
 188 0068 50E0     		b	.L24
 189              	.L25:
 190              	.LBE148:
 191              	.LBE147:
 440:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 441:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 442:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Endpoint events handling.*/
 443:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (istr & ISTR_CTR) {
 444:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_serve_endpoints(usbp, istr & ISTR_EP_ID_MASK);
 192              		.loc 1 444 0
 193 006a 04F00F04 		and	r4, r4, #15
 194              	.LVL18:
 195 006e A500     		lsls	r5, r4, #2
 196 0070 05F18045 		add	r5, r5, #1073741824
 197 0074 05F5B845 		add	r5, r5, #23552
 198              	.LBB193:
 199              	.LBB191:
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 200              		.loc 1 293 0
 201 0078 A71C     		adds	r7, r4, #2
 292:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   const USBEndpointConfig *epcp = usbp->epc[ep];
 202              		.loc 1 292 0
 203 007a D5F80090 		ldr	r9, [r5]
 204              	.LVL19:
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 205              		.loc 1 293 0
 206 007e 06EB8703 		add	r3, r6, r7, lsl #2
 295:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* IN endpoint, transmission.*/
 207              		.loc 1 295 0
 208 0082 19F0800F 		tst	r9, #128
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 209              		.loc 1 293 0
 210 0086 D3F80480 		ldr	r8, [r3, #4]
 211              	.LVL20:
 295:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* IN endpoint, transmission.*/
 212              		.loc 1 295 0
 213 008a 28D0     		beq	.L13
 214              	.LBB149:
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 215              		.loc 1 299 0
 216 008c 2A68     		ldr	r2, [r5]
 297:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 217              		.loc 1 297 0
 218 008e D8F81430 		ldr	r3, [r8, #20]
 219              	.LVL21:
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 220              		.loc 1 299 0
 221 0092 22F47842 		bic	r2, r2, #63488
 222 0096 22F0F002 		bic	r2, r2, #240
 223 009a 42F40042 		orr	r2, r2, #32768
 224 009e 2A60     		str	r2, [r5]
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 225              		.loc 1 301 0
 226 00a0 1969     		ldr	r1, [r3, #16]
 227 00a2 5A68     		ldr	r2, [r3, #4]
 302:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (n > 0) {
 228              		.loc 1 302 0
 229 00a4 1868     		ldr	r0, [r3]
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 230              		.loc 1 301 0
 231 00a6 0A44     		add	r2, r2, r1
 232              	.LVL22:
 303:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer not completed, there are more packets to send.*/
 233              		.loc 1 303 0
 234 00a8 801A     		subs	r0, r0, r2
 235              	.LVL23:
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 236              		.loc 1 301 0
 237 00aa 5A60     		str	r2, [r3, #4]
 303:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer not completed, there are more packets to send.*/
 238              		.loc 1 303 0
 239 00ac 34D0     		beq	.L14
 305:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         n = epcp->in_maxsize;
 240              		.loc 1 305 0
 241 00ae B8F81020 		ldrh	r2, [r8, #16]
 242 00b2 8242     		cmp	r2, r0
 243 00b4 28BF     		it	cs
 244 00b6 0246     		movcs	r2, r0
 245              	.LVL24:
 309:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txlast = n;
 246              		.loc 1 309 0
 247 00b8 9868     		ldr	r0, [r3, #8]
 310:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       usb_packet_write_from_buffer(ep, isp->txbuf, n);
 248              		.loc 1 310 0
 249 00ba 1A61     		str	r2, [r3, #16]
 309:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txlast = n;
 250              		.loc 1 309 0
 251 00bc 0144     		add	r1, r1, r0
 252 00be 9960     		str	r1, [r3, #8]
 311:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 253              		.loc 1 311 0
 254 00c0 2046     		mov	r0, r4
 255 00c2 FFF7FEFF 		bl	usb_packet_write_from_buffer
 256              	.LVL25:
 314:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 257              		.loc 1 314 0
 258 00c6 2B68     		ldr	r3, [r5]
 259 00c8 23F4F043 		bic	r3, r3, #30720
 260 00cc 23F04003 		bic	r3, r3, #64
 261 00d0 83F03003 		eor	r3, r3, #48
 262 00d4 43F40043 		orr	r3, r3, #32768
 263 00d8 43F08003 		orr	r3, r3, #128
 264 00dc 2B60     		str	r3, [r5]
 265              	.L13:
 266              	.LBE149:
 321:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* OUT endpoint, receive.*/
 267              		.loc 1 321 0
 268 00de 19F4004F 		tst	r9, #32768
 269 00e2 11D0     		beq	.L16
 324:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 270              		.loc 1 324 0
 271 00e4 2B68     		ldr	r3, [r5]
 272 00e6 23F47843 		bic	r3, r3, #63488
 273 00ea 23F0F003 		bic	r3, r3, #240
 274 00ee 43F08003 		orr	r3, r3, #128
 326:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Setup packets handling, setup packets are handled using a
 275              		.loc 1 326 0
 276 00f2 19F4006F 		tst	r9, #2048
 324:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 277              		.loc 1 324 0
 278 00f6 2B60     		str	r3, [r5]
 279 00f8 E1B2     		uxtb	r1, r4
 326:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Setup packets handling, setup packets are handled using a
 280              		.loc 1 326 0
 281 00fa 29D0     		beq	.L17
 329:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 282              		.loc 1 329 0
 283 00fc 06EB8707 		add	r7, r6, r7, lsl #2
 284 0100 3046     		mov	r0, r6
 285 0102 7B68     		ldr	r3, [r7, #4]
 286 0104 5B68     		ldr	r3, [r3, #4]
 287 0106 9847     		blx	r3
 288              	.LVL26:
 289              	.L16:
 290              	.LBE191:
 291              	.LBE193:
 445:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     istr = STM32_USB->ISTR;
 292              		.loc 1 445 0
 293 0108 4A4B     		ldr	r3, .L56
 294 010a 5C6C     		ldr	r4, [r3, #68]
 295              	.LVL27:
 296              	.L24:
 443:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_serve_endpoints(usbp, istr & ISTR_EP_ID_MASK);
 297              		.loc 1 443 0
 298 010c 2304     		lsls	r3, r4, #16
 299 010e ACD4     		bmi	.L25
 446:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 447:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 448:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_EPILOGUE();
 449:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 300              		.loc 1 449 0
 301 0110 BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 302              		.cfi_remember_state
 303              		.cfi_restore 14
 304              		.cfi_restore 11
 305              		.cfi_restore 10
 306              		.cfi_restore 9
 307              		.cfi_restore 8
 308              		.cfi_restore 7
 309              		.cfi_restore 6
 310              		.cfi_restore 5
 311              		.cfi_restore 4
 312              		.cfi_restore 3
 313              		.cfi_def_cfa_offset 0
 314              	.LVL28:
 448:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 315              		.loc 1 448 0
 316 0114 FFF7FEBF 		b	_port_irq_epilogue
 317              	.LVL29:
 318              	.L14:
 319              		.cfi_restore_state
 320              	.LBB194:
 321              	.LBB192:
 322              	.LBB166:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 323              		.loc 1 318 0
 324 0118 0123     		movs	r3, #1
 325              	.LVL30:
 326 011a 03FA04F2 		lsl	r2, r3, r4
 327 011e 3389     		ldrh	r3, [r6, #8]
 328 0120 23EA0203 		bic	r3, r3, r2
 329 0124 3381     		strh	r3, [r6, #8]	@ movhi
 330 0126 D8F80830 		ldr	r3, [r8, #8]
 331 012a 13B1     		cbz	r3, .L15
 332 012c 2146     		mov	r1, r4
 333 012e 3046     		mov	r0, r6
 334              	.LVL31:
 335 0130 9847     		blx	r3
 336              	.LVL32:
 337              	.L15:
 338              	.LBB150:
 339              	.LBB151:
 340              	.LBB152:
 341              	.LBB153:
 342              	.LBB154:
 343              	.LBB155:
 344              		.file 2 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @version  V4.30
   5:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
   9:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    All rights reserved.
  10:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****      specific prior written permission.
  20:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    *
  21:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  35:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  38:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #endif
  45:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  46:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  47:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   @{
  51:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  52:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  53:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  54:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  58:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  60:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  62:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  63:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  64:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  65:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  69:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  71:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  73:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  74:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  75:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  76:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Control Register value
  79:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  80:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  82:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
  83:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  84:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
  86:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  87:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  88:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  89:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
  90:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
  94:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
  96:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
  98:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
  99:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 100:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 101:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 105:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 107:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 108:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 109:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 111:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 112:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 113:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 114:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 115:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               APSR Register value
 118:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 119:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 121:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 122:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 123:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 125:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 126:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 127:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 128:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 129:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 132:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 134:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 136:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 137:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 138:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 140:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 141:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 142:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 143:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 144:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               PSP Register value
 147:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 148:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 150:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 151:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 152:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 154:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 155:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 156:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 157:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 158:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 162:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 164:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 166:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 167:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 168:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 169:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               MSP Register value
 172:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 173:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 175:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   register uint32_t result;
 176:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 177:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 179:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 180:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 181:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 182:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 183:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 188:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 190:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 192:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 193:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 194:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 195:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 199:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 201:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 202:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 203:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 205:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 206:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 207:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 208:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 209:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 213:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 215:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 217:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 218:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 219:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 221:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 222:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 226:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 228:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 230:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 231:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 232:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 233:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 237:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 239:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 241:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 243:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 244:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 248:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 250:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   uint32_t result;
 251:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 252:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   return(result);
 254:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** }
 255:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** 
 257:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 345              		.loc 2 264 0
 346 0132 2023     		movs	r3, #32
 347              		.syntax unified
 348              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 349 0134 83F31188 		MSR basepri, r3
 350              	@ 0 "" 2
 351              	.LVL33:
 352              		.thumb
 353              		.syntax unified
 354              	.LBE155:
 355              	.LBE154:
 356              	.LBE153:
 357              	.LBE152:
 358              	.LBE151:
 359              	.LBE150:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 360              		.loc 1 318 0
 361 0138 06EB8703 		add	r3, r6, r7, lsl #2
 362              	.LBB156:
 363              	.LBB157:
 364              		.file 3 "./lib/chibios/os/hal/osal/rt/osal.h"
   1:./lib/chibios/os/hal/osal/rt/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt/osal.h **** #ifndef _OSAL_H_
  26:./lib/chibios/os/hal/osal/rt/osal.h **** #define _OSAL_H_
  27:./lib/chibios/os/hal/osal/rt/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt/osal.h **** #define TRUE                                (!FALSE)
  48:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        FALSE
  51:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         TRUE
  52:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_OK                              RDY_OK
  60:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_RESET                           RDY_RESET
  61:./lib/chibios/os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         RDY_TIMEOUT
  62:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((systime_t)0)
  71:./lib/chibios/os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((systime_t)-1)
  72:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 154:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 156:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 161:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 163:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 168:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 170:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt/osal.h **** #if !CH_CFG_USE_EVENTS
 173:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 175:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 176:./lib/chibios/os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 177:./lib/chibios/os/hal/osal/rt/osal.h ****  *          an entirely different way.
 178:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 179:./lib/chibios/os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 180:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 181:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 182:./lib/chibios/os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Flags stored into the
 183:./lib/chibios/os/hal/osal/rt/osal.h ****                                                 object.                     */
 184:./lib/chibios/os/hal/osal/rt/osal.h **** } event_source_t;
 185:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 186:./lib/chibios/os/hal/osal/rt/osal.h **** 
 187:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 188:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 189:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then them
 190:./lib/chibios/os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 191:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 192:./lib/chibios/os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 193:./lib/chibios/os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 194:./lib/chibios/os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 195:./lib/chibios/os/hal/osal/rt/osal.h **** #else
 196:./lib/chibios/os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 197:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 198:./lib/chibios/os/hal/osal/rt/osal.h **** 
 199:./lib/chibios/os/hal/osal/rt/osal.h **** #if 0
 200:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 202:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 203:./lib/chibios/os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 204:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 205:./lib/chibios/os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 206:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 207:./lib/chibios/os/hal/osal/rt/osal.h **** typedef struct {
 208:./lib/chibios/os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 209:./lib/chibios/os/hal/osal/rt/osal.h **** } threads_queue_t;
 210:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 211:./lib/chibios/os/hal/osal/rt/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 213:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 214:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 215:./lib/chibios/os/hal/osal/rt/osal.h **** 
 216:./lib/chibios/os/hal/osal/rt/osal.h **** /* Temporary names provided for ChibiOS 2.x compatibility.*/
 217:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueInit osalThreadQueueObjectInit
 218:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupAllI osalThreadDequeueAllI
 219:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueWakeupOneI osalThreadDequeueNextI
 220:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalQueueGoSleepTimeoutS osalThreadEnqueueTimeoutS
 221:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalEventInit osalEventObjectInit
 222:./lib/chibios/os/hal/osal/rt/osal.h **** 
 223:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 224:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 225:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 226:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 228:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 229:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 230:./lib/chibios/os/hal/osal/rt/osal.h ****  *          message and halts.
 231:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 232:./lib/chibios/os/hal/osal/rt/osal.h ****  *          switch is enabled.
 233:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 234:./lib/chibios/os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 235:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 236:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 237:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 238:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 239:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 240:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 241:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 242:./lib/chibios/os/hal/osal/rt/osal.h **** 
 243:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 244:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 245:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 246:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 247:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is enabled.
 248:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 249:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 250:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 251:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 252:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 253:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 254:./lib/chibios/os/hal/osal/rt/osal.h **** 
 255:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 257:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 258:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 260:./lib/chibios/os/hal/osal/rt/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 263:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 264:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 265:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 266:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 267:./lib/chibios/os/hal/osal/rt/osal.h **** 
 268:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 269:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 270:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 271:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 272:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 273:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 274:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 275:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 276:./lib/chibios/os/hal/osal/rt/osal.h **** 
 277:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 278:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 279:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 280:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 282:./lib/chibios/os/hal/osal/rt/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 285:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 286:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 288:./lib/chibios/os/hal/osal/rt/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 291:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 292:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 293:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 294:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 295:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 296:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 297:./lib/chibios/os/hal/osal/rt/osal.h **** 
 298:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 299:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 300:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 301:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 302:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 303:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 304:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 305:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 306:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 307:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 308:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 309:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 310:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 311:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 312:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2ST(sec) S2ST(sec)
 313:./lib/chibios/os/hal/osal/rt/osal.h **** 
 314:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 315:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 316:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 317:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 318:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 319:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 320:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 321:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 322:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 323:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 324:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2ST(msec) MS2ST(msec)
 325:./lib/chibios/os/hal/osal/rt/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 328:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 329:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 330:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 331:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 332:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 333:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 334:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 335:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 336:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2ST(usec) US2ST(usec)
 337:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 338:./lib/chibios/os/hal/osal/rt/osal.h **** 
 339:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 340:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 341:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 342:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 344:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 345:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 346:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 347:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 348:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 349:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 350:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 351:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 355:./lib/chibios/os/hal/osal/rt/osal.h **** 
 356:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 357:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 358:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 359:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 360:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 361:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 362:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 363:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 364:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 365:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 367:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 368:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 369:./lib/chibios/os/hal/osal/rt/osal.h **** 
 370:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 371:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 372:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 373:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 374:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 375:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 376:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 377:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 378:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 379:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 381:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 382:./lib/chibios/os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 383:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 384:./lib/chibios/os/hal/osal/rt/osal.h **** 
 385:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 386:./lib/chibios/os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 387:./lib/chibios/os/hal/osal/rt/osal.h ****  * @{
 388:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 389:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 390:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 391:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 392:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 393:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 394:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 395:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sec       time in seconds, must be different from zero
 396:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 397:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 398:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 399:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(sec) osalThreadSleep(OSAL_S2ST(sec))
 400:./lib/chibios/os/hal/osal/rt/osal.h **** 
 401:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 402:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 403:./lib/chibios/os/hal/osal/rt/osal.h ****  *          milliseconds.
 404:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 405:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 406:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 407:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 408:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 409:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 410:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 411:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 412:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msec) osalThreadSleep(OSAL_MS2ST(msec))
 413:./lib/chibios/os/hal/osal/rt/osal.h **** 
 414:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 415:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 416:./lib/chibios/os/hal/osal/rt/osal.h ****  *          microseconds.
 417:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 418:./lib/chibios/os/hal/osal/rt/osal.h ****  *          system tick clock.
 419:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 420:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 421:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] usec      time in microseconds, must be different from zero
 422:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 423:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 424:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usec) osalThreadSleep(OSAL_US2ST(usec))
 426:./lib/chibios/os/hal/osal/rt/osal.h **** /** @} */
 427:./lib/chibios/os/hal/osal/rt/osal.h **** 
 428:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 429:./lib/chibios/os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 430:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 431:./lib/chibios/os/hal/osal/rt/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 433:./lib/chibios/os/hal/osal/rt/osal.h **** extern "C" {
 434:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 435:./lib/chibios/os/hal/osal/rt/osal.h **** 
 436:./lib/chibios/os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 437:./lib/chibios/os/hal/osal/rt/osal.h **** }
 438:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 439:./lib/chibios/os/hal/osal/rt/osal.h **** 
 440:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 441:./lib/chibios/os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 442:./lib/chibios/os/hal/osal/rt/osal.h **** /*===========================================================================*/
 443:./lib/chibios/os/hal/osal/rt/osal.h **** 
 444:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 445:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 446:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 447:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 448:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 449:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 450:./lib/chibios/os/hal/osal/rt/osal.h **** 
 451:./lib/chibios/os/hal/osal/rt/osal.h **** }
 452:./lib/chibios/os/hal/osal/rt/osal.h **** 
 453:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 454:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 455:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 456:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 457:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 459:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 460:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 461:./lib/chibios/os/hal/osal/rt/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 463:./lib/chibios/os/hal/osal/rt/osal.h **** }
 464:./lib/chibios/os/hal/osal/rt/osal.h **** 
 465:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 466:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 467:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 468:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 469:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 470:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 471:./lib/chibios/os/hal/osal/rt/osal.h **** 
 472:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysDisable();
 473:./lib/chibios/os/hal/osal/rt/osal.h **** }
 474:./lib/chibios/os/hal/osal/rt/osal.h **** 
 475:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 476:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 477:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 478:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 479:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 480:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 481:./lib/chibios/os/hal/osal/rt/osal.h **** 
 482:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysEnable();
 483:./lib/chibios/os/hal/osal/rt/osal.h **** }
 484:./lib/chibios/os/hal/osal/rt/osal.h **** 
 485:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 486:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 487:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 488:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 489:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 490:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 491:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 492:./lib/chibios/os/hal/osal/rt/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLock();
 494:./lib/chibios/os/hal/osal/rt/osal.h **** }
 495:./lib/chibios/os/hal/osal/rt/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 498:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 499:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 500:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 501:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 502:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 503:./lib/chibios/os/hal/osal/rt/osal.h **** 
 504:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlock();
 505:./lib/chibios/os/hal/osal/rt/osal.h **** }
 506:./lib/chibios/os/hal/osal/rt/osal.h **** 
 507:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 508:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 509:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 510:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 511:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 512:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 513:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 514:./lib/chibios/os/hal/osal/rt/osal.h **** 
 515:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 516:./lib/chibios/os/hal/osal/rt/osal.h **** }
 517:./lib/chibios/os/hal/osal/rt/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 519:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 520:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 521:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 522:./lib/chibios/os/hal/osal/rt/osal.h ****  * @special
 523:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 524:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 525:./lib/chibios/os/hal/osal/rt/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 527:./lib/chibios/os/hal/osal/rt/osal.h **** }
 528:./lib/chibios/os/hal/osal/rt/osal.h **** 
 529:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 530:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 531:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 532:./lib/chibios/os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 533:./lib/chibios/os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 534:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is known.
 535:./lib/chibios/os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 536:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 537:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 538:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 539:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 541:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 543:./lib/chibios/os/hal/osal/rt/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 545:./lib/chibios/os/hal/osal/rt/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 549:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 550:./lib/chibios/os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 551:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 552:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 553:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 554:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 555:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 556:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 557:./lib/chibios/os/hal/osal/rt/osal.h **** 
 558:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 559:./lib/chibios/os/hal/osal/rt/osal.h **** }
 560:./lib/chibios/os/hal/osal/rt/osal.h **** 
 561:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 562:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 563:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 564:./lib/chibios/os/hal/osal/rt/osal.h ****  *          value.
 565:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 566:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 567:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 568:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 569:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 570:./lib/chibios/os/hal/osal/rt/osal.h **** #if PORT_SUPPORTS_RT || defined(__DOXYGEN__)
 571:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 572:./lib/chibios/os/hal/osal/rt/osal.h **** 
 573:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 574:./lib/chibios/os/hal/osal/rt/osal.h **** }
 575:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 576:./lib/chibios/os/hal/osal/rt/osal.h **** 
 577:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 578:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 579:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 580:./lib/chibios/os/hal/osal/rt/osal.h ****  *          service from the HAL.
 581:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 582:./lib/chibios/os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 583:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 584:./lib/chibios/os/hal/osal/rt/osal.h **** 
 585:./lib/chibios/os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 586:./lib/chibios/os/hal/osal/rt/osal.h **** }
 587:./lib/chibios/os/hal/osal/rt/osal.h **** #endif
 588:./lib/chibios/os/hal/osal/rt/osal.h **** 
 589:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 590:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 591:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 592:./lib/chibios/os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 593:./lib/chibios/os/hal/osal/rt/osal.h ****  *          required in this scenario.
 594:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 595:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 596:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 597:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 598:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 599:./lib/chibios/os/hal/osal/rt/osal.h **** 
 600:./lib/chibios/os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 601:./lib/chibios/os/hal/osal/rt/osal.h **** }
 602:./lib/chibios/os/hal/osal/rt/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 604:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 605:./lib/chibios/os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 606:./lib/chibios/os/hal/osal/rt/osal.h ****  *          invocation.
 607:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 608:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 609:./lib/chibios/os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 610:./lib/chibios/os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 611:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 612:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 613:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 615:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 617:./lib/chibios/os/hal/osal/rt/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 619:./lib/chibios/os/hal/osal/rt/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 623:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 624:./lib/chibios/os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 625:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 626:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 627:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 628:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 629:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 630:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 631:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 632:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 633:./lib/chibios/os/hal/osal/rt/osal.h ****  * @xclass
 634:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 635:./lib/chibios/os/hal/osal/rt/osal.h **** static inline bool osalOsIsTimeWithinX(systime_t time,
 636:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t start,
 637:./lib/chibios/os/hal/osal/rt/osal.h ****                                        systime_t end) {
 638:./lib/chibios/os/hal/osal/rt/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt/osal.h ****   return chVTIsTimeWithinX(time, start, end);
 640:./lib/chibios/os/hal/osal/rt/osal.h **** }
 641:./lib/chibios/os/hal/osal/rt/osal.h **** 
 642:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 643:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 644:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 645:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 646:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 647:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 648:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 649:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 650:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 651:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 652:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 653:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 654:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(systime_t time) {
 655:./lib/chibios/os/hal/osal/rt/osal.h **** 
 656:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleepS(time);
 657:./lib/chibios/os/hal/osal/rt/osal.h **** }
 658:./lib/chibios/os/hal/osal/rt/osal.h **** 
 659:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 660:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 661:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 662:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] time      the delay in system ticks, the special values are
 663:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 664:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 665:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        normal time specification.
 666:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 667:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 668:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 669:./lib/chibios/os/hal/osal/rt/osal.h ****  * @api
 670:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 671:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(systime_t time) {
 672:./lib/chibios/os/hal/osal/rt/osal.h **** 
 673:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdSleep(time);
 674:./lib/chibios/os/hal/osal/rt/osal.h **** }
 675:./lib/chibios/os/hal/osal/rt/osal.h **** 
 676:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 677:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 678:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 679:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 680:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 681:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 682:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 683:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 684:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 685:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 686:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 687:./lib/chibios/os/hal/osal/rt/osal.h **** 
 688:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendS(trp);
 689:./lib/chibios/os/hal/osal/rt/osal.h **** }
 690:./lib/chibios/os/hal/osal/rt/osal.h **** 
 691:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 692:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 693:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 694:./lib/chibios/os/hal/osal/rt/osal.h ****  *          context.
 695:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 696:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 697:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 698:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      handled as follow:
 699:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 700:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        state.
 701:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 702:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 703:./lib/chibios/os/hal/osal/rt/osal.h ****  *                        occurred.
 704:./lib/chibios/os/hal/osal/rt/osal.h ****  *                      .
 705:./lib/chibios/os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 706:./lib/chibios/os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 707:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 708:./lib/chibios/os/hal/osal/rt/osal.h ****  * @sclass
 709:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 710:./lib/chibios/os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 711:./lib/chibios/os/hal/osal/rt/osal.h ****                                               systime_t timeout) {
 712:./lib/chibios/os/hal/osal/rt/osal.h **** 
 713:./lib/chibios/os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 714:./lib/chibios/os/hal/osal/rt/osal.h **** }
 715:./lib/chibios/os/hal/osal/rt/osal.h **** 
 716:./lib/chibios/os/hal/osal/rt/osal.h **** /**
 717:./lib/chibios/os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 718:./lib/chibios/os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 719:./lib/chibios/os/hal/osal/rt/osal.h ****  *          ISR context.
 720:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 721:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 722:./lib/chibios/os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 723:./lib/chibios/os/hal/osal/rt/osal.h ****  *
 724:./lib/chibios/os/hal/osal/rt/osal.h ****  * @iclass
 725:./lib/chibios/os/hal/osal/rt/osal.h ****  */
 726:./lib/chibios/os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 727:./lib/chibios/os/hal/osal/rt/osal.h **** 
 728:./lib/chibios/os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 365              		.loc 3 728 0
 366 013c 0021     		movs	r1, #0
 367              	.LBE157:
 368              	.LBE156:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 369              		.loc 1 318 0
 370 013e 5B68     		ldr	r3, [r3, #4]
 371 0140 5869     		ldr	r0, [r3, #20]
 372              	.LBB159:
 373              	.LBB158:
 374              		.loc 3 728 0
 375 0142 0C30     		adds	r0, r0, #12
 376 0144 FFF7FEFF 		bl	chThdResumeI
 377              	.LVL34:
 378              	.LBE158:
 379              	.LBE159:
 380              	.LBB160:
 381              	.LBB161:
 382              	.LBB162:
 383              	.LBB163:
 384              	.LBB164:
 385              	.LBB165:
 386              		.loc 2 264 0
 387 0148 0023     		movs	r3, #0
 388              		.syntax unified
 389              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 390 014a 83F31188 		MSR basepri, r3
 391              	@ 0 "" 2
 392              	.LVL35:
 393              		.thumb
 394              		.syntax unified
 395 014e C6E7     		b	.L13
 396              	.L17:
 397              	.LBE165:
 398              	.LBE164:
 399              	.LBE163:
 400              	.LBE162:
 401              	.LBE161:
 402              	.LBE160:
 403              	.LBE166:
 404              	.LBB167:
 405              	.LBB168:
 406              	.LBB169:
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 407              		.loc 1 132 0
 408 0150 384B     		ldr	r3, .L56
 409              	.LBE169:
 410              	.LBE168:
 332:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 411              		.loc 1 332 0
 412 0152 D8F81820 		ldr	r2, [r8, #24]
 413              	.LVL36:
 414              	.LBB174:
 415              	.LBB171:
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 416              		.loc 1 132 0
 417 0156 1B6D     		ldr	r3, [r3, #80]
 418              	.LBE171:
 419              	.LBE174:
 335:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxbuf += n;
 420              		.loc 1 335 0
 421 0158 D2F808B0 		ldr	fp, [r2, #8]
 422              	.LVL37:
 423              	.LBB175:
 424              	.LBB172:
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 425              		.loc 1 132 0
 426 015c 03F18043 		add	r3, r3, #1073741824
 427 0160 03F5C043 		add	r3, r3, #24576
 428 0164 03EB0413 		add	r3, r3, r4, lsl #4
 429              	.LVL38:
 430 0168 DC46     		mov	ip, fp
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 431              		.loc 1 133 0
 432 016a 9868     		ldr	r0, [r3, #8]
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 433              		.loc 1 149 0
 434 016c DB68     		ldr	r3, [r3, #12]
 435              	.LVL39:
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 436              		.loc 1 133 0
 437 016e 00F10050 		add	r0, r0, #536870912
 438 0172 00F54050 		add	r0, r0, #12288
 439 0176 4000     		lsls	r0, r0, #1
 440              	.LVL40:
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 441              		.loc 1 149 0
 442 0178 C3F30903 		ubfx	r3, r3, #0, #10
 443              	.LVL41:
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 444              		.loc 1 133 0
 445 017c 8246     		mov	r10, r0
 152:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 446              		.loc 1 152 0
 447 017e 9946     		mov	r9, r3
 448              	.LVL42:
 449              	.L18:
 189:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w = *pmap++;
 450              		.loc 1 189 0
 451 0180 B9F1010F 		cmp	r9, #1
 452 0184 0CF1020C 		add	ip, ip, #2
 453              	.LVL43:
 454 0188 3AD8     		bhi	.L19
 455 018a 4FEA530C 		lsr	ip, r3, #1
 456              	.LVL44:
 196:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf = (uint8_t)*pmap;
 457              		.loc 1 196 0
 458 018e 6FF0010E 		mvn	lr, #1
 459 0192 0EFB0C3E 		mla	lr, lr, ip, r3
 460 0196 BEF1000F 		cmp	lr, #0
 461 019a 03D0     		beq	.L20
 197:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 462              		.loc 1 197 0
 463 019c 50F82C00 		ldr	r0, [r0, ip, lsl #2]
 464 01a0 0BF81C00 		strb	r0, [fp, ip, lsl #1]
 465              	.L20:
 466              	.LVL45:
 467              	.LBE172:
 468              	.LBE175:
 336:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 469              		.loc 1 336 0
 470 01a4 9068     		ldr	r0, [r2, #8]
 471 01a6 1844     		add	r0, r0, r3
 472 01a8 9060     		str	r0, [r2, #8]
 339:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxsize -= n;
 473              		.loc 1 339 0
 474 01aa 5068     		ldr	r0, [r2, #4]
 475 01ac 1844     		add	r0, r0, r3
 476 01ae 5060     		str	r0, [r2, #4]
 340:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxpkts -= 1;
 477              		.loc 1 340 0
 478 01b0 1068     		ldr	r0, [r2]
 479 01b2 C01A     		subs	r0, r0, r3
 480 01b4 1060     		str	r0, [r2]
 341:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 481              		.loc 1 341 0
 482 01b6 108A     		ldrh	r0, [r2, #16]
 483 01b8 0138     		subs	r0, r0, #1
 484 01ba 80B2     		uxth	r0, r0
 485 01bc 1082     		strh	r0, [r2, #16]	@ movhi
 345:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer complete, invokes the callback.*/
 486              		.loc 1 345 0
 487 01be B8F81220 		ldrh	r2, [r8, #18]
 488              	.LVL46:
 489 01c2 9A42     		cmp	r2, r3
 490 01c4 00D8     		bhi	.L21
 491 01c6 40BB     		cbnz	r0, .L22
 492              	.L21:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 493              		.loc 1 347 0
 494 01c8 0123     		movs	r3, #1
 495 01ca A340     		lsls	r3, r3, r4
 496 01cc 7489     		ldrh	r4, [r6, #10]
 497              	.LVL47:
 498 01ce 24EA0304 		bic	r4, r4, r3
 499 01d2 06EB8703 		add	r3, r6, r7, lsl #2
 500 01d6 7481     		strh	r4, [r6, #10]	@ movhi
 501 01d8 5B68     		ldr	r3, [r3, #4]
 502 01da DB68     		ldr	r3, [r3, #12]
 503 01dc 0BB1     		cbz	r3, .L23
 504 01de 3046     		mov	r0, r6
 505 01e0 9847     		blx	r3
 506              	.LVL48:
 507              	.L23:
 508              	.LBB176:
 509              	.LBB177:
 510              	.LBB178:
 511              	.LBB179:
 512              	.LBB180:
 513              	.LBB181:
 514              		.loc 2 264 0
 515 01e2 2023     		movs	r3, #32
 516              		.syntax unified
 517              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 518 01e4 83F31188 		MSR basepri, r3
 519              	@ 0 "" 2
 520              	.LVL49:
 521              		.thumb
 522              		.syntax unified
 523              	.LBE181:
 524              	.LBE180:
 525              	.LBE179:
 526              	.LBE178:
 527              	.LBE177:
 528              	.LBE176:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 529              		.loc 1 347 0
 530 01e8 06EB8707 		add	r7, r6, r7, lsl #2
 531              	.LVL50:
 532 01ec 7B68     		ldr	r3, [r7, #4]
 533 01ee 9869     		ldr	r0, [r3, #24]
 534              	.LVL51:
 535              	.LBB182:
 536              	.LBB183:
 537              		.loc 3 728 0
 538 01f0 4168     		ldr	r1, [r0, #4]
 539 01f2 0C30     		adds	r0, r0, #12
 540              	.LVL52:
 541 01f4 FFF7FEFF 		bl	chThdResumeI
 542              	.LVL53:
 543              	.LBE183:
 544              	.LBE182:
 545              	.LBB184:
 546              	.LBB185:
 547              	.LBB186:
 548              	.LBB187:
 549              	.LBB188:
 550              	.LBB189:
 551              		.loc 2 264 0
 552 01f8 0023     		movs	r3, #0
 553              		.syntax unified
 554              	@ 264 "./lib/chibios/os/common/ext/CMSIS/include/cmsis_gcc.h" 1
 555 01fa 83F31188 		MSR basepri, r3
 556              	@ 0 "" 2
 557              	.LVL54:
 558              		.thumb
 559              		.syntax unified
 560 01fe 83E7     		b	.L16
 561              	.LVL55:
 562              	.L19:
 563              	.LBE189:
 564              	.LBE188:
 565              	.LBE187:
 566              	.LBE186:
 567              	.LBE185:
 568              	.LBE184:
 569              	.LBB190:
 570              	.LBB173:
 571              	.LBB170:
 190:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)w;
 572              		.loc 1 190 0
 573 0200 DAF800E0 		ldr	lr, [r10]
 574              	.LVL56:
 191:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)(w >> 8);
 575              		.loc 1 191 0
 576 0204 0CF802EC 		strb	lr, [ip, #-2]
 577              	.LVL57:
 192:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 578              		.loc 1 192 0
 579 0208 4FEA1E2E 		lsr	lr, lr, #8
 580              	.LVL58:
 581 020c 0CF801EC 		strb	lr, [ip, #-1]
 193:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 582              		.loc 1 193 0
 583 0210 A9F10209 		sub	r9, r9, #2
 584              	.LVL59:
 190:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)w;
 585              		.loc 1 190 0
 586 0214 0AF1040A 		add	r10, r10, #4
 587              	.LVL60:
 588 0218 B2E7     		b	.L18
 589              	.LVL61:
 590              	.L22:
 591              	.LBE170:
 592              	.LBE173:
 593              	.LBE190:
 351:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 594              		.loc 1 351 0
 595 021a 2B68     		ldr	r3, [r5]
 596 021c 23F49043 		bic	r3, r3, #18432
 597 0220 23F07003 		bic	r3, r3, #112
 598 0224 83F44053 		eor	r3, r3, #12288
 599 0228 43F40043 		orr	r3, r3, #32768
 600 022c 43F08003 		orr	r3, r3, #128
 601 0230 2B60     		str	r3, [r5]
 602 0232 69E7     		b	.L16
 603              	.L57:
 604              		.align	2
 605              	.L56:
 606 0234 005C0040 		.word	1073765376
 607 0238 00000000 		.word	.LANCHOR0
 608              	.LBE167:
 609              	.LBE192:
 610              	.LBE194:
 611              		.cfi_endproc
 612              	.LFE284:
 614              		.section	.text.usb_lld_init,"ax",%progbits
 615              		.align	1
 616              		.global	usb_lld_init
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu softvfp
 622              	usb_lld_init:
 623              	.LFB285:
 450:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_USB1 */
 451:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 452:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 453:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver exported functions.                                                */
 454:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 455:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 456:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 457:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Low level USB driver initialization.
 458:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 459:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 460:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 461:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_init(void) {
 624              		.loc 1 461 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 462:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 463:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Driver initialization.*/
 464:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbObjectInit(&USBD1);
 629              		.loc 1 464 0
 630 0000 0148     		ldr	r0, .L59
 631 0002 FFF7FEBF 		b	usbObjectInit
 632              	.LVL62:
 633              	.L60:
 634 0006 00BF     		.align	2
 635              	.L59:
 636 0008 00000000 		.word	.LANCHOR0
 637              		.cfi_endproc
 638              	.LFE285:
 640              		.section	.text.usb_lld_stop,"ax",%progbits
 641              		.align	1
 642              		.global	usb_lld_stop
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu softvfp
 648              	usb_lld_stop:
 649              	.LFB287:
 465:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 466:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 467:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 468:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Configures and activates the USB peripheral.
 469:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 470:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 471:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 472:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 473:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_start(USBDriver *usbp) {
 475:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 476:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (usbp->state == USB_STOP) {
 477:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Clock activation.*/
 478:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1
 479:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (&USBD1 == usbp) {
 480:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* USB clock enabled.*/
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       rccEnableUSB(FALSE);
 482:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 483:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR = CNTR_FRES;
 484:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Enabling the USB IRQ vectors, this also gives enough time to allow
 485:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          the transceiver power up (1uS).*/
 486:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB1_HP_NUMBER != STM32_USB1_LP_NUMBER
 487:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicEnableVector(STM32_USB1_HP_NUMBER, STM32_USB_USB1_HP_IRQ_PRIORITY);
 488:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 489:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicEnableVector(STM32_USB1_LP_NUMBER, STM32_USB_USB1_LP_IRQ_PRIORITY);
 490:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Releases the USB reset.*/
 491:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR = 0;
 492:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 493:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 494:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Reset procedure enforced on driver start.*/
 495:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_lld_reset(usbp);
 496:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 497:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 498:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 499:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 500:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Deactivates the USB peripheral.
 501:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 502:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 503:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 504:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 505:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 506:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_stop(USBDriver *usbp) {
 650              		.loc 1 506 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              	.LVL63:
 655 0000 08B5     		push	{r3, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 3, -8
 658              		.cfi_offset 14, -4
 507:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 508:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* If in ready state then disables the USB clock.*/
 509:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (usbp->state == USB_STOP) {
 659              		.loc 1 509 0
 660 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 661 0004 012B     		cmp	r3, #1
 662 0006 10D1     		bne	.L61
 510:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1
 511:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (&USBD1 == usbp) {
 663              		.loc 1 511 0
 664 0008 084B     		ldr	r3, .L63
 665 000a 9842     		cmp	r0, r3
 666 000c 0DD1     		bne	.L61
 512:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB1_HP_NUMBER != STM32_USB1_LP_NUMBER
 513:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicDisableVector(STM32_USB1_HP_NUMBER);
 667              		.loc 1 513 0
 668 000e 4A20     		movs	r0, #74
 669              	.LVL64:
 670 0010 FFF7FEFF 		bl	nvicDisableVector
 671              	.LVL65:
 514:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 515:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicDisableVector(STM32_USB1_LP_NUMBER);
 672              		.loc 1 515 0
 673 0014 4B20     		movs	r0, #75
 674 0016 FFF7FEFF 		bl	nvicDisableVector
 675              	.LVL66:
 516:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR = CNTR_PDWN | CNTR_FRES;
 676              		.loc 1 516 0
 677 001a 054B     		ldr	r3, .L63+4
 678 001c 0322     		movs	r2, #3
 679 001e 1A64     		str	r2, [r3, #64]
 517:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       rccDisableUSB(FALSE);
 680              		.loc 1 517 0
 681 0020 044A     		ldr	r2, .L63+8
 682 0022 D369     		ldr	r3, [r2, #28]
 683 0024 23F40003 		bic	r3, r3, #8388608
 684 0028 D361     		str	r3, [r2, #28]
 685              	.L61:
 518:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 519:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 520:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 521:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 686              		.loc 1 521 0
 687 002a 08BD     		pop	{r3, pc}
 688              	.L64:
 689              		.align	2
 690              	.L63:
 691 002c 00000000 		.word	.LANCHOR0
 692 0030 005C0040 		.word	1073765376
 693 0034 00100240 		.word	1073876992
 694              		.cfi_endproc
 695              	.LFE287:
 697              		.section	.text.usb_lld_set_address,"ax",%progbits
 698              		.align	1
 699              		.global	usb_lld_set_address
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu softvfp
 705              	usb_lld_set_address:
 706              	.LFB289:
 522:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 523:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 524:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   USB low level reset routine.
 525:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 526:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 527:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 528:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 529:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 530:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_reset(USBDriver *usbp) {
 531:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t cntr;
 532:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 533:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Post reset initialization.*/
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->BTABLE = BTABLE_ADDR;
 535:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 536:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->DADDR  = DADDR_EF;
 537:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   cntr              = /*CNTR_ESOFM | */ CNTR_RESETM  | CNTR_SUSPM |
 538:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                       CNTR_WKUPM | /*CNTR_ERRM | CNTR_PMAOVRM |*/ CNTR_CTRM;
 539:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* The SOF interrupt is only enabled if a callback is defined for
 540:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      this service because it is an high rate source.*/
 541:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (usbp->config->sof_cb != NULL)
 542:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     cntr |= CNTR_SOFM;
 543:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->CNTR = cntr;
 544:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 545:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Resets the packet memory allocator.*/
 546:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_pm_reset(usbp);
 547:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 548:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* EP0 initialization.*/
 549:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->epc[0] = &ep0config;
 550:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_lld_init_endpoint(usbp, 0);
 551:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 552:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 553:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 554:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Sets the USB address.
 555:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 556:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 557:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 558:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 559:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 560:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_set_address(USBDriver *usbp) {
 707              		.loc 1 560 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL67:
 561:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 562:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->DADDR = (uint32_t)(usbp->address) | DADDR_EF;
 713              		.loc 1 562 0
 714 0000 90F87E30 		ldrb	r3, [r0, #126]	@ zero_extendqisi2
 715 0004 024A     		ldr	r2, .L66
 716 0006 43F08003 		orr	r3, r3, #128
 717 000a D364     		str	r3, [r2, #76]
 563:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 718              		.loc 1 563 0
 719 000c 7047     		bx	lr
 720              	.L67:
 721 000e 00BF     		.align	2
 722              	.L66:
 723 0010 005C0040 		.word	1073765376
 724              		.cfi_endproc
 725              	.LFE289:
 727              		.section	.text.usb_lld_init_endpoint,"ax",%progbits
 728              		.align	1
 729              		.global	usb_lld_init_endpoint
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu softvfp
 735              	usb_lld_init_endpoint:
 736              	.LFB290:
 564:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 565:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 566:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Enables an endpoint.
 567:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 568:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 569:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 570:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 571:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 572:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 573:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_init_endpoint(USBDriver *usbp, usbep_t ep) {
 737              		.loc 1 573 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              	.LVL68:
 574:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint16_t epr;
 575:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *dp;
 576:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   const USBEndpointConfig *epcp = usbp->epc[ep];
 742              		.loc 1 576 0
 743 0000 00EB8103 		add	r3, r0, r1, lsl #2
 573:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint16_t epr;
 744              		.loc 1 573 0
 745 0004 70B5     		push	{r4, r5, r6, lr}
 746              		.cfi_def_cfa_offset 16
 747              		.cfi_offset 4, -16
 748              		.cfi_offset 5, -12
 749              		.cfi_offset 6, -8
 750              		.cfi_offset 14, -4
 751              		.loc 1 576 0
 752 0006 DD68     		ldr	r5, [r3, #12]
 753              	.LVL69:
 577:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 578:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Setting the endpoint type. Note that isochronous endpoints cannot be
 579:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      bidirectional because it uses double buffering and both transmit and
 580:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      receive descriptor fields are used for either direction.*/
 581:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   switch (epcp->ep_mode & USB_EP_MODE_TYPE) {
 754              		.loc 1 581 0
 755 0008 2B68     		ldr	r3, [r5]
 756 000a 13F00303 		ands	r3, r3, #3
 757 000e 03D0     		beq	.L69
 758 0010 022B     		cmp	r3, #2
 759 0012 04D9     		bls	.L70
 760 0014 032B     		cmp	r3, #3
 761 0016 50D0     		beq	.L76
 762              	.L69:
 763              	.LVL70:
 582:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case USB_EP_MODE_TYPE_ISOC:
 583:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 584:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osalDbgAssert((epcp->in_state == NULL) || (epcp->out_state == NULL),
 585:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                   "isochronous EP cannot be IN and OUT");
 586:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_ISO;
 587:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 588:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 589:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osalDbgAssert(false, "isochronous support disabled");
 590:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 591:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case USB_EP_MODE_TYPE_BULK:
 592:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_BULK;
 593:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 594:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case USB_EP_MODE_TYPE_INTR:
 595:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_INTERRUPT;
 596:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 597:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   default:
 598:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_CONTROL;
 764              		.loc 1 598 0
 765 0018 4FF40072 		mov	r2, #512
 766 001c 00E0     		b	.L71
 767              	.LVL71:
 768              	.L70:
 592:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 769              		.loc 1 592 0
 770 001e 0022     		movs	r2, #0
 771              	.L71:
 772              	.LVL72:
 599:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 600:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 601:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   dp = USB_GET_DESCRIPTOR(ep);
 773              		.loc 1 601 0
 774 0020 2B4B     		ldr	r3, .L84
 775 0022 1C6D     		ldr	r4, [r3, #80]
 602:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 603:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* IN endpoint handling.*/
 604:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epcp->in_state != NULL) {
 776              		.loc 1 604 0
 777 0024 6B69     		ldr	r3, [r5, #20]
 601:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 778              		.loc 1 601 0
 779 0026 04F18044 		add	r4, r4, #1073741824
 780 002a 04F5C044 		add	r4, r4, #24576
 781 002e 04EB0114 		add	r4, r4, r1, lsl #4
 782              	.LVL73:
 783              		.loc 1 604 0
 784 0032 6BB1     		cbz	r3, .L72
 605:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->TXCOUNT0 = 0;
 785              		.loc 1 605 0
 786 0034 0023     		movs	r3, #0
 787 0036 6360     		str	r3, [r4, #4]
 788              	.LVL74:
 606:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->TXADDR0  = usb_pm_alloc(usbp, epcp->in_maxsize);
 789              		.loc 1 606 0
 790 0038 2B8A     		ldrh	r3, [r5, #16]
 791              	.LVL75:
 792              	.LBB195:
 793              	.LBB196:
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 794              		.loc 1 115 0
 795 003a D0F88460 		ldr	r6, [r0, #132]
 796              	.LVL76:
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 797              		.loc 1 116 0
 798 003e 0133     		adds	r3, r3, #1
 799              	.LVL77:
 800 0040 23F00103 		bic	r3, r3, #1
 801              	.LVL78:
 802 0044 3344     		add	r3, r3, r6
 803 0046 C0F88430 		str	r3, [r0, #132]
 804              	.LVL79:
 805              	.LBE196:
 806              	.LBE195:
 607:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 608:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 609:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epr == EPR_EP_TYPE_ISO) {
 610:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_TX_VALID;
 611:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->TXCOUNT1 = dp->TXCOUNT0;
 612:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->TXADDR1  = dp->TXADDR0;   /* Both buffers overlapped.*/
 613:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 614:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 615:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_TX_NAK;
 616:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 617:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 618:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr |= EPR_STAT_TX_NAK;
 807              		.loc 1 618 0
 808 004a 42F02002 		orr	r2, r2, #32
 809              	.LVL80:
 606:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 810              		.loc 1 606 0
 811 004e 2660     		str	r6, [r4]
 812              	.LVL81:
 813              	.L72:
 619:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 620:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 621:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 622:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* OUT endpoint handling.*/
 623:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epcp->out_state != NULL) {
 814              		.loc 1 623 0
 815 0050 AB69     		ldr	r3, [r5, #24]
 816 0052 C3B1     		cbz	r3, .L73
 817              	.LBB197:
 624:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint16_t nblocks;
 625:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 626:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Endpoint size and address initialization.*/
 627:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epcp->out_maxsize > 62)
 818              		.loc 1 627 0
 819 0054 6D8A     		ldrh	r5, [r5, #18]
 820              	.LVL82:
 821 0056 3E2D     		cmp	r5, #62
 822 0058 05F1FF33 		add	r3, r5, #-1
 823 005c 30D9     		bls	.L74
 628:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nblocks = (((((epcp->out_maxsize - 1) | 0x1f) + 1) / 32) << 10) |
 824              		.loc 1 628 0
 825 005e 43F01F03 		orr	r3, r3, #31
 826 0062 0133     		adds	r3, r3, #1
 827 0064 1B4E     		ldr	r6, .L84+4
 828 0066 5B11     		asrs	r3, r3, #5
 829 0068 46EA8323 		orr	r3, r6, r3, lsl #10
 830              	.L83:
 629:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                 0x8000;
 630:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else
 631:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nblocks = ((((epcp->out_maxsize - 1) | 1) + 1) / 2) << 10;
 831              		.loc 1 631 0
 832 006c 9BB2     		uxth	r3, r3
 833              	.LVL83:
 632:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 834              		.loc 1 632 0
 835 006e E360     		str	r3, [r4, #12]
 836              	.LVL84:
 837              	.LBB198:
 838              	.LBB199:
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 839              		.loc 1 115 0
 840 0070 D0F88430 		ldr	r3, [r0, #132]
 841              	.LVL85:
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 842              		.loc 1 116 0
 843 0074 0135     		adds	r5, r5, #1
 844              	.LVL86:
 845 0076 25F00105 		bic	r5, r5, #1
 846 007a 1D44     		add	r5, r5, r3
 847 007c C0F88450 		str	r5, [r0, #132]
 848              	.LVL87:
 849              	.LBE199:
 850              	.LBE198:
 633:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXADDR0  = usb_pm_alloc(usbp, epcp->out_maxsize);
 634:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 635:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 636:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epr == EPR_EP_TYPE_ISO) {
 637:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_RX_VALID;
 638:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->RXCOUNT1 = dp->RXCOUNT0;
 639:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->RXADDR1  = dp->RXADDR0;   /* Both buffers overlapped.*/
 640:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 641:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 642:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_RX_NAK;
 643:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 644:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 645:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr |= EPR_STAT_RX_NAK;
 851              		.loc 1 645 0
 852 0080 42F40052 		orr	r2, r2, #8192
 853              	.LVL88:
 633:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXADDR0  = usb_pm_alloc(usbp, epcp->out_maxsize);
 854              		.loc 1 633 0
 855 0084 A360     		str	r3, [r4, #8]
 856              	.LVL89:
 857              	.L73:
 858              	.LBE197:
 646:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 647:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 648:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 649:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* EPxR register setup.*/
 650:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET(ep, epr | ep);
 859              		.loc 1 650 0
 860 0086 42EA0103 		orr	r3, r2, r1
 861 008a 8900     		lsls	r1, r1, #2
 862              	.LVL90:
 863 008c 23F47843 		bic	r3, r3, #63488
 864 0090 01F18041 		add	r1, r1, #1073741824
 865 0094 01F5B841 		add	r1, r1, #23552
 866 0098 48F28000 		movw	r0, #32896
 867              	.LVL91:
 868 009c 23F0F003 		bic	r3, r3, #240
 869 00a0 0343     		orrs	r3, r3, r0
 651:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_TOGGLE(ep, epr);
 870              		.loc 1 651 0
 871 00a2 22F4F162 		bic	r2, r2, #1928
 872              	.LVL92:
 650:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_TOGGLE(ep, epr);
 873              		.loc 1 650 0
 874 00a6 0B60     		str	r3, [r1]
 875              		.loc 1 651 0
 876 00a8 22F00702 		bic	r2, r2, #7
 877 00ac 0B68     		ldr	r3, [r1]
 878 00ae 5204     		lsls	r2, r2, #17
 879 00b0 520C     		lsrs	r2, r2, #17
 880 00b2 5A40     		eors	r2, r2, r3
 881 00b4 0243     		orrs	r2, r2, r0
 882 00b6 0A60     		str	r2, [r1]
 652:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 883              		.loc 1 652 0
 884 00b8 70BD     		pop	{r4, r5, r6, pc}
 885              	.LVL93:
 886              	.L76:
 595:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 887              		.loc 1 595 0
 888 00ba 4FF4C062 		mov	r2, #1536
 889 00be AFE7     		b	.L71
 890              	.LVL94:
 891              	.L74:
 892              	.LBB200:
 631:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 893              		.loc 1 631 0
 894 00c0 43F00103 		orr	r3, r3, #1
 895 00c4 0133     		adds	r3, r3, #1
 896 00c6 0226     		movs	r6, #2
 897 00c8 93FBF6F3 		sdiv	r3, r3, r6
 898 00cc 9B02     		lsls	r3, r3, #10
 899 00ce CDE7     		b	.L83
 900              	.L85:
 901              		.align	2
 902              	.L84:
 903 00d0 005C0040 		.word	1073765376
 904 00d4 0080FFFF 		.word	-32768
 905              	.LBE200:
 906              		.cfi_endproc
 907              	.LFE290:
 909              		.section	.text.usb_lld_reset,"ax",%progbits
 910              		.align	1
 911              		.global	usb_lld_reset
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 915              		.fpu softvfp
 917              	usb_lld_reset:
 918              	.LFB288:
 530:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t cntr;
 919              		.loc 1 530 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              		@ link register save eliminated.
 924              	.LVL95:
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 925              		.loc 1 534 0
 926 0000 0B4B     		ldr	r3, .L89
 530:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t cntr;
 927              		.loc 1 530 0
 928 0002 10B4     		push	{r4}
 929              		.cfi_def_cfa_offset 4
 930              		.cfi_offset 4, -4
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 931              		.loc 1 534 0
 932 0004 0021     		movs	r1, #0
 536:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   cntr              = /*CNTR_ESOFM | */ CNTR_RESETM  | CNTR_SUSPM |
 933              		.loc 1 536 0
 934 0006 8024     		movs	r4, #128
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 935              		.loc 1 534 0
 936 0008 1965     		str	r1, [r3, #80]
 535:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->DADDR  = DADDR_EF;
 937              		.loc 1 535 0
 938 000a 5964     		str	r1, [r3, #68]
 536:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   cntr              = /*CNTR_ESOFM | */ CNTR_RESETM  | CNTR_SUSPM |
 939              		.loc 1 536 0
 940 000c DC64     		str	r4, [r3, #76]
 941              	.LVL96:
 541:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     cntr |= CNTR_SOFM;
 942              		.loc 1 541 0
 943 000e 4468     		ldr	r4, [r0, #4]
 944 0010 E468     		ldr	r4, [r4, #12]
 945 0012 8C42     		cmp	r4, r1
 542:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->CNTR = cntr;
 946              		.loc 1 542 0
 947 0014 0CBF     		ite	eq
 948 0016 4FF41C44 		moveq	r4, #39936
 949 001a 4FF41E44 		movne	r4, #40448
 950              	.LVL97:
 543:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 951              		.loc 1 543 0
 952 001e 1C64     		str	r4, [r3, #64]
 953              	.LVL98:
 954              	.LBB201:
 955              	.LBB202:
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 956              		.loc 1 102 0
 957 0020 4023     		movs	r3, #64
 958 0022 C0F88430 		str	r3, [r0, #132]
 959              	.LBE202:
 960              	.LBE201:
 549:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_lld_init_endpoint(usbp, 0);
 961              		.loc 1 549 0
 962 0026 034B     		ldr	r3, .L89+4
 963 0028 C360     		str	r3, [r0, #12]
 551:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 964              		.loc 1 551 0
 965 002a 10BC     		pop	{r4}
 966              		.cfi_restore 4
 967              		.cfi_def_cfa_offset 0
 968              	.LVL99:
 550:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 969              		.loc 1 550 0
 970 002c FFF7FEBF 		b	usb_lld_init_endpoint
 971              	.LVL100:
 972              	.L90:
 973              		.align	2
 974              	.L89:
 975 0030 005C0040 		.word	1073765376
 976 0034 00000000 		.word	.LANCHOR1
 977              		.cfi_endproc
 978              	.LFE288:
 980              		.section	.text.usb_lld_start,"ax",%progbits
 981              		.align	1
 982              		.global	usb_lld_start
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu softvfp
 988              	usb_lld_start:
 989              	.LFB286:
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 990              		.loc 1 474 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              	.LVL101:
 476:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Clock activation.*/
 995              		.loc 1 476 0
 996 0000 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 997 0002 012A     		cmp	r2, #1
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 998              		.loc 1 474 0
 999 0004 38B5     		push	{r3, r4, r5, lr}
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 3, -16
 1002              		.cfi_offset 4, -12
 1003              		.cfi_offset 5, -8
 1004              		.cfi_offset 14, -4
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1005              		.loc 1 474 0
 1006 0006 0446     		mov	r4, r0
 476:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Clock activation.*/
 1007              		.loc 1 476 0
 1008 0008 18D1     		bne	.L91
 479:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* USB clock enabled.*/
 1009              		.loc 1 479 0
 1010 000a 0D4B     		ldr	r3, .L94
 1011 000c 9842     		cmp	r0, r3
 1012 000e 10D1     		bne	.L93
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 1013              		.loc 1 481 0
 1014 0010 0C49     		ldr	r1, .L94+4
 483:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Enabling the USB IRQ vectors, this also gives enough time to allow
 1015              		.loc 1 483 0
 1016 0012 0D4D     		ldr	r5, .L94+8
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 1017              		.loc 1 481 0
 1018 0014 CB69     		ldr	r3, [r1, #28]
 1019 0016 43F40003 		orr	r3, r3, #8388608
 1020 001a CB61     		str	r3, [r1, #28]
 487:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 1021              		.loc 1 487 0
 1022 001c 4A20     		movs	r0, #74
 1023              	.LVL102:
 483:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Enabling the USB IRQ vectors, this also gives enough time to allow
 1024              		.loc 1 483 0
 1025 001e 2A64     		str	r2, [r5, #64]
 487:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 1026              		.loc 1 487 0
 1027 0020 0D21     		movs	r1, #13
 1028 0022 FFF7FEFF 		bl	nvicEnableVector
 1029              	.LVL103:
 489:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Releases the USB reset.*/
 1030              		.loc 1 489 0
 1031 0026 0E21     		movs	r1, #14
 1032 0028 4B20     		movs	r0, #75
 1033 002a FFF7FEFF 		bl	nvicEnableVector
 1034              	.LVL104:
 491:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 1035              		.loc 1 491 0
 1036 002e 0023     		movs	r3, #0
 1037 0030 2B64     		str	r3, [r5, #64]
 1038              	.L93:
 495:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 1039              		.loc 1 495 0
 1040 0032 2046     		mov	r0, r4
 497:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1041              		.loc 1 497 0
 1042 0034 BDE83840 		pop	{r3, r4, r5, lr}
 1043              		.cfi_remember_state
 1044              		.cfi_restore 14
 1045              		.cfi_restore 5
 1046              		.cfi_restore 4
 1047              		.cfi_restore 3
 1048              		.cfi_def_cfa_offset 0
 1049              	.LVL105:
 495:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 1050              		.loc 1 495 0
 1051 0038 FFF7FEBF 		b	usb_lld_reset
 1052              	.LVL106:
 1053              	.L91:
 1054              		.cfi_restore_state
 497:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1055              		.loc 1 497 0
 1056 003c 38BD     		pop	{r3, r4, r5, pc}
 1057              	.L95:
 1058 003e 00BF     		.align	2
 1059              	.L94:
 1060 0040 00000000 		.word	.LANCHOR0
 1061 0044 00100240 		.word	1073876992
 1062 0048 005C0040 		.word	1073765376
 1063              		.cfi_endproc
 1064              	.LFE286:
 1066              		.section	.text.usb_lld_disable_endpoints,"ax",%progbits
 1067              		.align	1
 1068              		.global	usb_lld_disable_endpoints
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu softvfp
 1074              	usb_lld_disable_endpoints:
 1075              	.LFB291:
 653:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 654:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 655:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Disables all the active endpoints except the endpoint zero.
 656:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 657:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 658:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 659:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 660:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 661:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_disable_endpoints(USBDriver *usbp) {
 1076              		.loc 1 661 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081              	.LVL107:
 1082              	.LBB203:
 1083              	.LBB204:
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1084              		.loc 1 102 0
 1085 0000 4023     		movs	r3, #64
 1086 0002 C0F88430 		str	r3, [r0, #132]
 1087              	.LVL108:
 1088              	.LBE204:
 1089              	.LBE203:
 662:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   unsigned i;
 663:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 664:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Resets the packet memory allocator.*/
 665:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_pm_reset(usbp);
 666:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 667:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Disabling all endpoints.*/
 668:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (i = 1; i <= USB_ENDOPOINTS_NUMBER; i++) {
 1090              		.loc 1 668 0
 1091 0006 0122     		movs	r2, #1
 669:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1092              		.loc 1 669 0
 1093 0008 48F28000 		movw	r0, #32896
 1094              	.LVL109:
 1095              	.L97:
 1096 000c 9300     		lsls	r3, r2, #2
 1097 000e 03F18043 		add	r3, r3, #1073741824
 1098 0012 03F5B843 		add	r3, r3, #23552
 668:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1099              		.loc 1 668 0 discriminator 3
 1100 0016 0132     		adds	r2, r2, #1
 1101              	.LVL110:
 1102              		.loc 1 669 0 discriminator 3
 1103 0018 1968     		ldr	r1, [r3]
 668:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1104              		.loc 1 668 0 discriminator 3
 1105 001a 082A     		cmp	r2, #8
 1106              		.loc 1 669 0 discriminator 3
 1107 001c 41EA0001 		orr	r1, r1, r0
 1108 0020 1960     		str	r1, [r3]
 670:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_SET(i, 0);
 1109              		.loc 1 670 0 discriminator 3
 1110 0022 1860     		str	r0, [r3]
 668:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1111              		.loc 1 668 0 discriminator 3
 1112 0024 F2D1     		bne	.L97
 671:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 672:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1113              		.loc 1 672 0
 1114 0026 7047     		bx	lr
 1115              		.cfi_endproc
 1116              	.LFE291:
 1118              		.section	.text.usb_lld_get_status_out,"ax",%progbits
 1119              		.align	1
 1120              		.global	usb_lld_get_status_out
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu softvfp
 1126              	usb_lld_get_status_out:
 1127              	.LFB292:
 673:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 674:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 675:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Returns the status of an OUT endpoint.
 676:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 677:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 678:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 679:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The endpoint status.
 680:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_DISABLED The endpoint is not active.
 681:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_STALLED  The endpoint is stalled.
 682:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_ACTIVE   The endpoint is active.
 683:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 684:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 685:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 686:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** usbepstatus_t usb_lld_get_status_out(USBDriver *usbp, usbep_t ep) {
 1128              		.loc 1 686 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133              	.LVL111:
 687:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 688:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 689:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   switch (STM32_USB->EPR[ep] & EPR_STAT_RX_MASK) {
 1134              		.loc 1 689 0
 1135 0000 054B     		ldr	r3, .L104
 1136 0002 53F82100 		ldr	r0, [r3, r1, lsl #2]
 1137              	.LVL112:
 1138 0006 10F44050 		ands	r0, r0, #12288
 1139 000a 04D0     		beq	.L101
 1140 000c B0F5805F 		cmp	r0, #4096
 690:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_RX_DIS:
 691:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_DISABLED;
 692:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_RX_STALL:
 693:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_STALLED;
 694:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   default:
 695:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_ACTIVE;
 1141              		.loc 1 695 0
 1142 0010 0CBF     		ite	eq
 1143 0012 0120     		moveq	r0, #1
 1144 0014 0220     		movne	r0, #2
 1145              	.L101:
 696:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 697:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1146              		.loc 1 697 0
 1147 0016 7047     		bx	lr
 1148              	.L105:
 1149              		.align	2
 1150              	.L104:
 1151 0018 005C0040 		.word	1073765376
 1152              		.cfi_endproc
 1153              	.LFE292:
 1155              		.section	.text.usb_lld_get_status_in,"ax",%progbits
 1156              		.align	1
 1157              		.global	usb_lld_get_status_in
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu softvfp
 1163              	usb_lld_get_status_in:
 1164              	.LFB293:
 698:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 699:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 700:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Returns the status of an IN endpoint.
 701:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 702:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 703:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 704:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The endpoint status.
 705:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_DISABLED The endpoint is not active.
 706:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_STALLED  The endpoint is stalled.
 707:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_ACTIVE   The endpoint is active.
 708:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 709:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 710:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 711:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** usbepstatus_t usb_lld_get_status_in(USBDriver *usbp, usbep_t ep) {
 1165              		.loc 1 711 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              		@ link register save eliminated.
 1170              	.LVL113:
 712:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 713:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 714:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   switch (STM32_USB->EPR[ep] & EPR_STAT_TX_MASK) {
 1171              		.loc 1 714 0
 1172 0000 054B     		ldr	r3, .L111
 1173 0002 53F82100 		ldr	r0, [r3, r1, lsl #2]
 1174              	.LVL114:
 1175 0006 10F03000 		ands	r0, r0, #48
 1176 000a 03D0     		beq	.L108
 1177 000c 1028     		cmp	r0, #16
 715:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_TX_DIS:
 716:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_DISABLED;
 717:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_TX_STALL:
 718:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_STALLED;
 719:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   default:
 720:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_ACTIVE;
 1178              		.loc 1 720 0
 1179 000e 0CBF     		ite	eq
 1180 0010 0120     		moveq	r0, #1
 1181 0012 0220     		movne	r0, #2
 1182              	.L108:
 721:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 722:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1183              		.loc 1 722 0
 1184 0014 7047     		bx	lr
 1185              	.L112:
 1186 0016 00BF     		.align	2
 1187              	.L111:
 1188 0018 005C0040 		.word	1073765376
 1189              		.cfi_endproc
 1190              	.LFE293:
 1192              		.section	.text.usb_lld_read_setup,"ax",%progbits
 1193              		.align	1
 1194              		.global	usb_lld_read_setup
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu softvfp
 1200              	usb_lld_read_setup:
 1201              	.LFB294:
 723:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 724:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 725:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Reads a setup packet from the dedicated packet buffer.
 726:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @details This function must be invoked in the context of the @p setup_cb
 727:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *          callback in order to read the received setup packet.
 728:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @pre     In order to use this function the endpoint must have been
 729:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *          initialized as a control endpoint.
 730:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @post    The endpoint is ready to accept another packet.
 731:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 732:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 733:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 734:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[out] buf      buffer where to copy the packet data
 735:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 736:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 737:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 738:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_read_setup(USBDriver *usbp, usbep_t ep, uint8_t *buf) {
 1202              		.loc 1 738 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207              	.LVL115:
 739:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap;
 740:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *udp;
 741:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t n;
 742:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 743:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 744:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   udp = USB_GET_DESCRIPTOR(ep);
 1208              		.loc 1 744 0
 1209 0000 0B4B     		ldr	r3, .L116
 1210 0002 1B6D     		ldr	r3, [r3, #80]
 1211 0004 03F18043 		add	r3, r3, #1073741824
 1212 0008 03F5C043 		add	r3, r3, #24576
 1213 000c 03EB0111 		add	r1, r3, r1, lsl #4
 1214              	.LVL116:
 745:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   pmap = USB_ADDR2PTR(udp->RXADDR0);
 1215              		.loc 1 745 0
 1216 0010 8B68     		ldr	r3, [r1, #8]
 1217 0012 03F10053 		add	r3, r3, #536870912
 1218 0016 03F54053 		add	r3, r3, #12288
 1219 001a 5B00     		lsls	r3, r3, #1
 1220              	.LVL117:
 1221 001c 03F11001 		add	r1, r3, #16
 1222              	.LVL118:
 1223              	.L114:
 746:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (n = 0; n < 4; n++) {
 747:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(uint16_t *)buf = (uint16_t)*pmap++;
 1224              		.loc 1 747 0 discriminator 3
 1225 0020 1868     		ldr	r0, [r3]
 1226 0022 22F8020B 		strh	r0, [r2], #2	@ movhi
 1227              	.LVL119:
 1228 0026 0433     		adds	r3, r3, #4
 1229              	.LVL120:
 746:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (n = 0; n < 4; n++) {
 1230              		.loc 1 746 0 discriminator 3
 1231 0028 8B42     		cmp	r3, r1
 1232 002a F9D1     		bne	.L114
 748:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     buf += 2;
 749:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 750:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1233              		.loc 1 750 0
 1234 002c 7047     		bx	lr
 1235              	.L117:
 1236 002e 00BF     		.align	2
 1237              	.L116:
 1238 0030 005C0040 		.word	1073765376
 1239              		.cfi_endproc
 1240              	.LFE294:
 1242              		.section	.text.usb_lld_start_out,"ax",%progbits
 1243              		.align	1
 1244              		.global	usb_lld_start_out
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu softvfp
 1250              	usb_lld_start_out:
 1251              	.LFB295:
 751:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 752:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 753:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Starts a receive operation on an OUT endpoint.
 754:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 755:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 756:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 757:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 758:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 759:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 760:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_start_out(USBDriver *usbp, usbep_t ep) {
 1252              		.loc 1 760 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		@ link register save eliminated.
 1257              	.LVL121:
 761:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBOutEndpointState *osp = usbp->epc[ep]->out_state;
 1258              		.loc 1 761 0
 1259 0000 00EB8100 		add	r0, r0, r1, lsl #2
 1260              	.LVL122:
 1261 0004 C068     		ldr	r0, [r0, #12]
 1262 0006 8269     		ldr	r2, [r0, #24]
 1263              	.LVL123:
 762:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 763:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Transfer initialization.*/
 764:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (osp->rxsize == 0)         /* Special case for zero sized packets.*/
 1264              		.loc 1 764 0
 1265 0008 1368     		ldr	r3, [r2]
 1266 000a 9BB9     		cbnz	r3, .L119
 765:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osp->rxpkts = 1;
 1267              		.loc 1 765 0
 1268 000c 0123     		movs	r3, #1
 1269              	.L121:
 1270 000e 8900     		lsls	r1, r1, #2
 1271              	.LVL124:
 1272 0010 01F18041 		add	r1, r1, #1073741824
 1273 0014 01F5B841 		add	r1, r1, #23552
 766:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   else
 767:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osp->rxpkts = (uint16_t)((osp->rxsize + usbp->epc[ep]->out_maxsize - 1) /
 1274              		.loc 1 767 0
 1275 0018 1382     		strh	r3, [r2, #16]	@ movhi
 768:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                              usbp->epc[ep]->out_maxsize);
 769:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 770:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_RX(ep, EPR_STAT_RX_VALID);
 1276              		.loc 1 770 0
 1277 001a 0B68     		ldr	r3, [r1]
 1278 001c 23F49043 		bic	r3, r3, #18432
 1279 0020 23F07003 		bic	r3, r3, #112
 1280 0024 83F44053 		eor	r3, r3, #12288
 1281 0028 43F40043 		orr	r3, r3, #32768
 1282 002c 43F08003 		orr	r3, r3, #128
 1283 0030 0B60     		str	r3, [r1]
 771:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1284              		.loc 1 771 0
 1285 0032 7047     		bx	lr
 1286              	.LVL125:
 1287              	.L119:
 767:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                              usbp->epc[ep]->out_maxsize);
 1288              		.loc 1 767 0
 1289 0034 408A     		ldrh	r0, [r0, #18]
 1290 0036 0344     		add	r3, r3, r0
 1291 0038 013B     		subs	r3, r3, #1
 1292 003a B3FBF0F3 		udiv	r3, r3, r0
 1293 003e E6E7     		b	.L121
 1294              		.cfi_endproc
 1295              	.LFE295:
 1297              		.section	.text.usb_lld_start_in,"ax",%progbits
 1298              		.align	1
 1299              		.global	usb_lld_start_in
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1303              		.fpu softvfp
 1305              	usb_lld_start_in:
 1306              	.LFB296:
 772:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 773:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 774:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Starts a transmit operation on an IN endpoint.
 775:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 776:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 777:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 778:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 779:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 780:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 781:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_start_in(USBDriver *usbp, usbep_t ep) {
 1307              		.loc 1 781 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              	.LVL126:
 782:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 783:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBInEndpointState *isp = usbp->epc[ep]->in_state;
 1312              		.loc 1 783 0
 1313 0000 00EB8100 		add	r0, r0, r1, lsl #2
 1314              	.LVL127:
 781:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 1315              		.loc 1 781 0
 1316 0004 10B5     		push	{r4, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 4, -8
 1319              		.cfi_offset 14, -4
 781:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 1320              		.loc 1 781 0
 1321 0006 0C46     		mov	r4, r1
 1322              		.loc 1 783 0
 1323 0008 C168     		ldr	r1, [r0, #12]
 1324              	.LVL128:
 1325 000a 4B69     		ldr	r3, [r1, #20]
 1326              	.LVL129:
 784:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 785:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Transfer initialization.*/
 786:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   n = isp->txsize;
 787:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (n > (size_t)usbp->epc[ep]->in_maxsize)
 1327              		.loc 1 787 0
 1328 000c 0A8A     		ldrh	r2, [r1, #16]
 786:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (n > (size_t)usbp->epc[ep]->in_maxsize)
 1329              		.loc 1 786 0
 1330 000e 1868     		ldr	r0, [r3]
 1331              	.LVL130:
 788:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = (size_t)usbp->epc[ep]->in_maxsize;
 789:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 790:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   isp->txlast = n;
 791:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_packet_write_from_buffer(ep, isp->txbuf, n);
 1332              		.loc 1 791 0
 1333 0010 9968     		ldr	r1, [r3, #8]
 1334 0012 8242     		cmp	r2, r0
 1335 0014 28BF     		it	cs
 1336 0016 0246     		movcs	r2, r0
 1337              	.LVL131:
 790:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_packet_write_from_buffer(ep, isp->txbuf, n);
 1338              		.loc 1 790 0
 1339 0018 1A61     		str	r2, [r3, #16]
 1340              		.loc 1 791 0
 1341 001a 2046     		mov	r0, r4
 1342 001c FFF7FEFF 		bl	usb_packet_write_from_buffer
 1343              	.LVL132:
 1344 0020 A100     		lsls	r1, r4, #2
 1345 0022 01F18041 		add	r1, r1, #1073741824
 1346 0026 01F5B841 		add	r1, r1, #23552
 792:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 793:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_TX(ep, EPR_STAT_TX_VALID);
 1347              		.loc 1 793 0
 1348 002a 0B68     		ldr	r3, [r1]
 1349 002c 23F4F043 		bic	r3, r3, #30720
 1350 0030 23F04003 		bic	r3, r3, #64
 1351 0034 83F03003 		eor	r3, r3, #48
 1352 0038 43F40043 		orr	r3, r3, #32768
 1353 003c 43F08003 		orr	r3, r3, #128
 1354 0040 0B60     		str	r3, [r1]
 794:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1355              		.loc 1 794 0
 1356 0042 10BD     		pop	{r4, pc}
 1357              		.cfi_endproc
 1358              	.LFE296:
 1360              		.section	.text.usb_lld_stall_out,"ax",%progbits
 1361              		.align	1
 1362              		.global	usb_lld_stall_out
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu softvfp
 1368              	usb_lld_stall_out:
 1369              	.LFB297:
 795:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 796:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 797:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an OUT endpoint in the stalled state.
 798:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 799:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 800:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 801:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 802:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 803:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 804:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_stall_out(USBDriver *usbp, usbep_t ep) {
 1370              		.loc 1 804 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              		@ link register save eliminated.
 1375              	.LVL133:
 1376 0000 8900     		lsls	r1, r1, #2
 1377              	.LVL134:
 1378 0002 01F18041 		add	r1, r1, #1073741824
 1379 0006 01F5B841 		add	r1, r1, #23552
 805:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 806:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 807:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 808:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_RX(ep, EPR_STAT_RX_STALL);
 1380              		.loc 1 808 0
 1381 000a 0B68     		ldr	r3, [r1]
 1382 000c 23F49043 		bic	r3, r3, #18432
 1383 0010 23F07003 		bic	r3, r3, #112
 1384 0014 83F48053 		eor	r3, r3, #4096
 1385 0018 43F40043 		orr	r3, r3, #32768
 1386 001c 43F08003 		orr	r3, r3, #128
 1387 0020 0B60     		str	r3, [r1]
 809:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1388              		.loc 1 809 0
 1389 0022 7047     		bx	lr
 1390              		.cfi_endproc
 1391              	.LFE297:
 1393              		.section	.text.usb_lld_stall_in,"ax",%progbits
 1394              		.align	1
 1395              		.global	usb_lld_stall_in
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu softvfp
 1401              	usb_lld_stall_in:
 1402              	.LFB298:
 810:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 811:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 812:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an IN endpoint in the stalled state.
 813:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 814:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 815:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 816:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 817:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 818:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 819:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_stall_in(USBDriver *usbp, usbep_t ep) {
 1403              		.loc 1 819 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408              	.LVL135:
 1409 0000 8900     		lsls	r1, r1, #2
 1410              	.LVL136:
 1411 0002 01F18041 		add	r1, r1, #1073741824
 1412 0006 01F5B841 		add	r1, r1, #23552
 820:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 821:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 822:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 823:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_TX(ep, EPR_STAT_TX_STALL);
 1413              		.loc 1 823 0
 1414 000a 0B68     		ldr	r3, [r1]
 1415 000c 23F4F043 		bic	r3, r3, #30720
 1416 0010 23F04003 		bic	r3, r3, #64
 1417 0014 83F01003 		eor	r3, r3, #16
 1418 0018 43F40043 		orr	r3, r3, #32768
 1419 001c 43F08003 		orr	r3, r3, #128
 1420 0020 0B60     		str	r3, [r1]
 824:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1421              		.loc 1 824 0
 1422 0022 7047     		bx	lr
 1423              		.cfi_endproc
 1424              	.LFE298:
 1426              		.section	.text.usb_lld_clear_out,"ax",%progbits
 1427              		.align	1
 1428              		.global	usb_lld_clear_out
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu softvfp
 1434              	usb_lld_clear_out:
 1435              	.LFB299:
 825:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 826:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 827:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an OUT endpoint in the active state.
 828:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 829:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 830:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 831:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 832:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 833:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 834:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_clear_out(USBDriver *usbp, usbep_t ep) {
 1436              		.loc 1 834 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 1441              	.LVL137:
 1442 0000 8900     		lsls	r1, r1, #2
 1443              	.LVL138:
 1444 0002 01F18041 		add	r1, r1, #1073741824
 1445 0006 01F5B841 		add	r1, r1, #23552
 835:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 836:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 837:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 838:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Makes sure to not put to NAK an endpoint that is already
 839:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      transferring.*/
 840:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if ((STM32_USB->EPR[ep] & EPR_STAT_RX_MASK) != EPR_STAT_RX_VALID)
 1446              		.loc 1 840 0
 1447 000a 0B68     		ldr	r3, [r1]
 1448 000c 03F44053 		and	r3, r3, #12288
 1449 0010 B3F5405F 		cmp	r3, #12288
 1450 0014 09D0     		beq	.L125
 841:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_SET_STAT_TX(ep, EPR_STAT_RX_NAK);
 1451              		.loc 1 841 0
 1452 0016 0B68     		ldr	r3, [r1]
 1453 0018 23F4F043 		bic	r3, r3, #30720
 1454 001c 23F04003 		bic	r3, r3, #64
 1455 0020 43F42043 		orr	r3, r3, #40960
 1456 0024 43F08003 		orr	r3, r3, #128
 1457 0028 0B60     		str	r3, [r1]
 1458              	.L125:
 842:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1459              		.loc 1 842 0
 1460 002a 7047     		bx	lr
 1461              		.cfi_endproc
 1462              	.LFE299:
 1464              		.section	.text.usb_lld_clear_in,"ax",%progbits
 1465              		.align	1
 1466              		.global	usb_lld_clear_in
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.fpu softvfp
 1472              	usb_lld_clear_in:
 1473              	.LFB300:
 843:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 844:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 845:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an IN endpoint in the active state.
 846:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 847:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 848:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 849:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 850:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 851:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 852:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_clear_in(USBDriver *usbp, usbep_t ep) {
 1474              		.loc 1 852 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              		@ link register save eliminated.
 1479              	.LVL139:
 1480 0000 8900     		lsls	r1, r1, #2
 1481              	.LVL140:
 1482 0002 01F18041 		add	r1, r1, #1073741824
 1483 0006 01F5B841 		add	r1, r1, #23552
 853:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 854:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 855:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 856:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Makes sure to not put to NAK an endpoint that is already
 857:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      transferring.*/
 858:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if ((STM32_USB->EPR[ep] & EPR_STAT_TX_MASK) != EPR_STAT_TX_VALID)
 1484              		.loc 1 858 0
 1485 000a 0B68     		ldr	r3, [r1]
 1486 000c 03F03003 		and	r3, r3, #48
 1487 0010 302B     		cmp	r3, #48
 1488 0012 0BD0     		beq	.L130
 859:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_SET_STAT_TX(ep, EPR_STAT_TX_NAK);
 1489              		.loc 1 859 0
 1490 0014 0B68     		ldr	r3, [r1]
 1491 0016 23F4F043 		bic	r3, r3, #30720
 1492 001a 23F04003 		bic	r3, r3, #64
 1493 001e 83F02003 		eor	r3, r3, #32
 1494 0022 43F40043 		orr	r3, r3, #32768
 1495 0026 43F08003 		orr	r3, r3, #128
 1496 002a 0B60     		str	r3, [r1]
 1497              	.L130:
 860:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1498              		.loc 1 860 0
 1499 002c 7047     		bx	lr
 1500              		.cfi_endproc
 1501              	.LFE300:
 1503              		.global	USBD1
 1504              		.section	.bss.USBD1,"aw",%nobits
 1505              		.align	2
 1506              		.set	.LANCHOR0,. + 0
 1509              	USBD1:
 1510 0000 00000000 		.space	136
 1510      00000000 
 1510      00000000 
 1510      00000000 
 1510      00000000 
 1511              		.section	.bss.ep0_state,"aw",%nobits
 1512              		.align	2
 1515              	ep0_state:
 1516 0000 00000000 		.space	20
 1516      00000000 
 1516      00000000 
 1516      00000000 
 1516      00000000 
 1517              		.section	.bss.ep0setup_buffer,"aw",%nobits
 1520              	ep0setup_buffer:
 1521 0000 00000000 		.space	8
 1521      00000000 
 1522              		.section	.rodata.ep0config,"a",%progbits
 1523              		.align	2
 1524              		.set	.LANCHOR1,. + 0
 1527              	ep0config:
 1528 0000 00000000 		.word	0
 1529 0004 00000000 		.word	_usb_ep0setup
 1530 0008 00000000 		.word	_usb_ep0in
 1531 000c 00000000 		.word	_usb_ep0out
 1532 0010 4000     		.short	64
 1533 0012 4000     		.short	64
 1534 0014 00000000 		.word	ep0_state
 1535 0018 00000000 		.word	ep0_state
 1536 001c 0100     		.short	1
 1537 001e 0000     		.space	2
 1538 0020 00000000 		.word	ep0setup_buffer
 1539              		.text
 1540              	.Letext0:
 1541              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1542              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1543              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1544              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1545              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1546              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1547              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1548              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 1549              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 1550              		.file 13 "./lib/chibios/os/common/ext/CMSIS/include/core_cm4.h"
 1551              		.file 14 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/system_stm32f3xx.h"
 1552              		.file 15 "./lib/chibios/os/common/ext/CMSIS/ST/STM32F3xx/stm32f303xc.h"
 1553              		.file 16 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1554              		.file 17 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
 1555              		.file 18 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/stm32_tim.h"
 1556              		.file 19 "./lib/chibios/os/rt/include/chtm.h"
 1557              		.file 20 "./lib/chibios/os/rt/include/chsem.h"
 1558              		.file 21 "./lib/chibios/os/rt/include/chmtx.h"
 1559              		.file 22 "./lib/chibios/os/rt/include/chsys.h"
 1560              		.file 23 "./lib/chibios/os/rt/include/chregistry.h"
 1561              		.file 24 "./lib/chibios/os/common/oslib/include/chmemcore.h"
 1562              		.file 25 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1563              		.file 26 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1564              		.file 27 "./lib/chibios/os/hal/include/hal_dac.h"
 1565              		.file 28 "./lib/chibios/os/hal/ports/STM32/LLD/DACv1/hal_dac_lld.h"
 1566              		.file 29 "./lib/chibios/os/hal/include/hal_gpt.h"
 1567              		.file 30 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_gpt_lld.h"
 1568              		.file 31 "./lib/chibios/os/hal/include/hal_i2c.h"
 1569              		.file 32 "./lib/chibios/os/hal/ports/STM32/LLD/I2Cv2/hal_i2c_lld.h"
 1570              		.file 33 "./lib/chibios/os/hal/include/hal_pwm.h"
 1571              		.file 34 "./lib/chibios/os/hal/ports/STM32/LLD/TIMv1/hal_pwm_lld.h"
 1572              		.file 35 "./lib/chibios/os/hal/include/hal_usb.h"
 1573              		.file 36 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1574              		.file 37 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/stm32_usb.h"
 1575              		.file 38 "./lib/chibios/os/hal/ports/common/ARMCMx/nvic.h"
 1576              		.file 39 "./lib/chibios/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_usb_lld.c
/var/tmp//cc94NUbZ.s:16     .text.usb_packet_write_from_buffer:0000000000000000 $t
/var/tmp//cc94NUbZ.s:22     .text.usb_packet_write_from_buffer:0000000000000000 usb_packet_write_from_buffer
/var/tmp//cc94NUbZ.s:75     .text.usb_packet_write_from_buffer:0000000000000034 $d
/var/tmp//cc94NUbZ.s:81     .text.Vector16C:0000000000000000 $t
/var/tmp//cc94NUbZ.s:88     .text.Vector16C:0000000000000000 Vector16C
/var/tmp//cc94NUbZ.s:606    .text.Vector16C:0000000000000234 $d
/var/tmp//cc94NUbZ.s:615    .text.usb_lld_init:0000000000000000 $t
/var/tmp//cc94NUbZ.s:622    .text.usb_lld_init:0000000000000000 usb_lld_init
/var/tmp//cc94NUbZ.s:636    .text.usb_lld_init:0000000000000008 $d
/var/tmp//cc94NUbZ.s:641    .text.usb_lld_stop:0000000000000000 $t
/var/tmp//cc94NUbZ.s:648    .text.usb_lld_stop:0000000000000000 usb_lld_stop
/var/tmp//cc94NUbZ.s:691    .text.usb_lld_stop:000000000000002c $d
/var/tmp//cc94NUbZ.s:698    .text.usb_lld_set_address:0000000000000000 $t
/var/tmp//cc94NUbZ.s:705    .text.usb_lld_set_address:0000000000000000 usb_lld_set_address
/var/tmp//cc94NUbZ.s:723    .text.usb_lld_set_address:0000000000000010 $d
/var/tmp//cc94NUbZ.s:728    .text.usb_lld_init_endpoint:0000000000000000 $t
/var/tmp//cc94NUbZ.s:735    .text.usb_lld_init_endpoint:0000000000000000 usb_lld_init_endpoint
/var/tmp//cc94NUbZ.s:903    .text.usb_lld_init_endpoint:00000000000000d0 $d
/var/tmp//cc94NUbZ.s:910    .text.usb_lld_reset:0000000000000000 $t
/var/tmp//cc94NUbZ.s:917    .text.usb_lld_reset:0000000000000000 usb_lld_reset
/var/tmp//cc94NUbZ.s:975    .text.usb_lld_reset:0000000000000030 $d
/var/tmp//cc94NUbZ.s:981    .text.usb_lld_start:0000000000000000 $t
/var/tmp//cc94NUbZ.s:988    .text.usb_lld_start:0000000000000000 usb_lld_start
/var/tmp//cc94NUbZ.s:1060   .text.usb_lld_start:0000000000000040 $d
/var/tmp//cc94NUbZ.s:1067   .text.usb_lld_disable_endpoints:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1074   .text.usb_lld_disable_endpoints:0000000000000000 usb_lld_disable_endpoints
/var/tmp//cc94NUbZ.s:1119   .text.usb_lld_get_status_out:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1126   .text.usb_lld_get_status_out:0000000000000000 usb_lld_get_status_out
/var/tmp//cc94NUbZ.s:1151   .text.usb_lld_get_status_out:0000000000000018 $d
/var/tmp//cc94NUbZ.s:1156   .text.usb_lld_get_status_in:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1163   .text.usb_lld_get_status_in:0000000000000000 usb_lld_get_status_in
/var/tmp//cc94NUbZ.s:1188   .text.usb_lld_get_status_in:0000000000000018 $d
/var/tmp//cc94NUbZ.s:1193   .text.usb_lld_read_setup:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1200   .text.usb_lld_read_setup:0000000000000000 usb_lld_read_setup
/var/tmp//cc94NUbZ.s:1238   .text.usb_lld_read_setup:0000000000000030 $d
/var/tmp//cc94NUbZ.s:1243   .text.usb_lld_start_out:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1250   .text.usb_lld_start_out:0000000000000000 usb_lld_start_out
/var/tmp//cc94NUbZ.s:1298   .text.usb_lld_start_in:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1305   .text.usb_lld_start_in:0000000000000000 usb_lld_start_in
/var/tmp//cc94NUbZ.s:1361   .text.usb_lld_stall_out:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1368   .text.usb_lld_stall_out:0000000000000000 usb_lld_stall_out
/var/tmp//cc94NUbZ.s:1394   .text.usb_lld_stall_in:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1401   .text.usb_lld_stall_in:0000000000000000 usb_lld_stall_in
/var/tmp//cc94NUbZ.s:1427   .text.usb_lld_clear_out:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1434   .text.usb_lld_clear_out:0000000000000000 usb_lld_clear_out
/var/tmp//cc94NUbZ.s:1465   .text.usb_lld_clear_in:0000000000000000 $t
/var/tmp//cc94NUbZ.s:1472   .text.usb_lld_clear_in:0000000000000000 usb_lld_clear_in
/var/tmp//cc94NUbZ.s:1509   .bss.USBD1:0000000000000000 USBD1
/var/tmp//cc94NUbZ.s:1505   .bss.USBD1:0000000000000000 $d
/var/tmp//cc94NUbZ.s:1512   .bss.ep0_state:0000000000000000 $d
/var/tmp//cc94NUbZ.s:1515   .bss.ep0_state:0000000000000000 ep0_state
/var/tmp//cc94NUbZ.s:1520   .bss.ep0setup_buffer:0000000000000000 ep0setup_buffer
/var/tmp//cc94NUbZ.s:1521   .bss.ep0setup_buffer:0000000000000000 $d
/var/tmp//cc94NUbZ.s:1523   .rodata.ep0config:0000000000000000 $d
/var/tmp//cc94NUbZ.s:1527   .rodata.ep0config:0000000000000000 ep0config

UNDEFINED SYMBOLS
_usb_reset
_usb_suspend
_usb_wakeup
_port_irq_epilogue
chThdResumeI
usbObjectInit
nvicDisableVector
nvicEnableVector
_usb_ep0setup
_usb_ep0in
_usb_ep0out
