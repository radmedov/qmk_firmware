   1               		.file	"backlight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.backlight_init,"ax",@progbits
  11               	.global	backlight_init
  13               	backlight_init:
  14               	.LFB0:
  15               		.file 1 "tmk_core/common/backlight.c"
   1:tmk_core/common/backlight.c **** /*
   2:tmk_core/common/backlight.c **** Copyright 2013 Mathias Andersson <wraul@dbox.se>
   3:tmk_core/common/backlight.c **** 
   4:tmk_core/common/backlight.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/backlight.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/backlight.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/backlight.c **** (at your option) any later version.
   8:tmk_core/common/backlight.c **** 
   9:tmk_core/common/backlight.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/backlight.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/backlight.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/backlight.c **** GNU General Public License for more details.
  13:tmk_core/common/backlight.c **** 
  14:tmk_core/common/backlight.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/backlight.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/backlight.c **** */
  17:tmk_core/common/backlight.c **** 
  18:tmk_core/common/backlight.c **** #include "backlight.h"
  19:tmk_core/common/backlight.c **** #include "eeconfig.h"
  20:tmk_core/common/backlight.c **** #include "debug.h"
  21:tmk_core/common/backlight.c **** 
  22:tmk_core/common/backlight.c **** backlight_config_t backlight_config;
  23:tmk_core/common/backlight.c **** 
  24:tmk_core/common/backlight.c **** /** \brief Backlight initialization
  25:tmk_core/common/backlight.c ****  *
  26:tmk_core/common/backlight.c ****  * FIXME: needs doc
  27:tmk_core/common/backlight.c ****  */
  28:tmk_core/common/backlight.c **** void backlight_init(void) {
  16               		.loc 1 28 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  29:tmk_core/common/backlight.c ****     /* check signature */
  30:tmk_core/common/backlight.c ****     if (!eeconfig_is_enabled()) {
  22               		.loc 1 30 0
  23 0000 0E94 0000 		call eeconfig_is_enabled
  24               	.LVL0:
  25 0004 8111      		cpse r24,__zero_reg__
  26 0006 00C0      		rjmp .L2
  31:tmk_core/common/backlight.c ****         eeconfig_init();
  27               		.loc 1 31 0
  28 0008 0E94 0000 		call eeconfig_init
  29               	.LVL1:
  30               	.L2:
  32:tmk_core/common/backlight.c ****     }
  33:tmk_core/common/backlight.c ****     backlight_config.raw = eeconfig_read_backlight();
  31               		.loc 1 33 0
  32 000c 0E94 0000 		call eeconfig_read_backlight
  33               	.LVL2:
  34 0010 8093 0000 		sts backlight_config,r24
  34:tmk_core/common/backlight.c ****     if (backlight_config.level > BACKLIGHT_LEVELS) {
  35               		.loc 1 34 0
  36 0014 8032      		cpi r24,lo8(32)
  37 0016 00F0      		brlo .L3
  35:tmk_core/common/backlight.c ****         backlight_config.level = BACKLIGHT_LEVELS;
  38               		.loc 1 35 0
  39 0018 8770      		andi r24,lo8(7)
  40 001a 8861      		ori r24,lo8(24)
  41 001c 8093 0000 		sts backlight_config,r24
  42               	.L3:
  36:tmk_core/common/backlight.c ****     }
  37:tmk_core/common/backlight.c ****     backlight_set(backlight_config.enable ? backlight_config.level : 0);
  43               		.loc 1 37 0
  44 0020 8091 0000 		lds r24,backlight_config
  45 0024 80FF      		sbrs r24,0
  46 0026 00C0      		rjmp .L5
  47               		.loc 1 37 0 is_stmt 0 discriminator 1
  48 0028 8695      		lsr r24
  49 002a 8695      		lsr r24
  50 002c 8695      		lsr r24
  51               	.L4:
  52               		.loc 1 37 0 discriminator 4
  53 002e 0C94 0000 		jmp backlight_set
  54               	.LVL3:
  55               	.L5:
  56               		.loc 1 37 0
  57 0032 80E0      		ldi r24,0
  58 0034 00C0      		rjmp .L4
  59               		.cfi_endproc
  60               	.LFE0:
  62               		.section	.text.backlight_increase,"ax",@progbits
  63               	.global	backlight_increase
  65               	backlight_increase:
  66               	.LFB1:
  38:tmk_core/common/backlight.c **** }
  39:tmk_core/common/backlight.c **** 
  40:tmk_core/common/backlight.c **** /** \brief Backlight increase
  41:tmk_core/common/backlight.c ****  *
  42:tmk_core/common/backlight.c ****  * FIXME: needs doc
  43:tmk_core/common/backlight.c ****  */
  44:tmk_core/common/backlight.c **** void backlight_increase(void) {
  67               		.loc 1 44 0 is_stmt 1
  68               		.cfi_startproc
  69               	/* prologue: function */
  70               	/* frame size = 0 */
  71               	/* stack size = 0 */
  72               	.L__stack_usage = 0
  45:tmk_core/common/backlight.c ****     if (backlight_config.level < BACKLIGHT_LEVELS) {
  73               		.loc 1 45 0
  74 0000 8091 0000 		lds r24,backlight_config
  75 0004 982F      		mov r25,r24
  76 0006 9695      		lsr r25
  77 0008 9695      		lsr r25
  78 000a 9695      		lsr r25
  79 000c 9330      		cpi r25,lo8(3)
  80 000e 00F4      		brsh .L7
  46:tmk_core/common/backlight.c ****         backlight_config.level++;
  81               		.loc 1 46 0
  82 0010 9F5F      		subi r25,lo8(-(1))
  83 0012 990F      		lsl r25
  84 0014 990F      		lsl r25
  85 0016 990F      		lsl r25
  86 0018 8770      		andi r24,lo8(7)
  87 001a 892B      		or r24,r25
  88 001c 8093 0000 		sts backlight_config,r24
  89               	.L7:
  47:tmk_core/common/backlight.c ****     }
  48:tmk_core/common/backlight.c ****     backlight_config.enable = 1;
  90               		.loc 1 48 0
  91 0020 8091 0000 		lds r24,backlight_config
  92 0024 8160      		ori r24,lo8(1<<0)
  93 0026 8093 0000 		sts backlight_config,r24
  49:tmk_core/common/backlight.c ****     eeconfig_update_backlight(backlight_config.raw);
  94               		.loc 1 49 0
  95 002a 0E94 0000 		call eeconfig_update_backlight
  96               	.LVL4:
  50:tmk_core/common/backlight.c ****     dprintf("backlight increase: %u\n", backlight_config.level);
  51:tmk_core/common/backlight.c ****     backlight_set(backlight_config.level);
  97               		.loc 1 51 0
  98 002e 8091 0000 		lds r24,backlight_config
  99 0032 8695      		lsr r24
 100 0034 8695      		lsr r24
 101 0036 8695      		lsr r24
 102 0038 0C94 0000 		jmp backlight_set
 103               	.LVL5:
 104               		.cfi_endproc
 105               	.LFE1:
 107               		.section	.text.backlight_decrease,"ax",@progbits
 108               	.global	backlight_decrease
 110               	backlight_decrease:
 111               	.LFB2:
  52:tmk_core/common/backlight.c **** }
  53:tmk_core/common/backlight.c **** 
  54:tmk_core/common/backlight.c **** /** \brief Backlight decrease
  55:tmk_core/common/backlight.c ****  *
  56:tmk_core/common/backlight.c ****  * FIXME: needs doc
  57:tmk_core/common/backlight.c ****  */
  58:tmk_core/common/backlight.c **** void backlight_decrease(void) {
 112               		.loc 1 58 0
 113               		.cfi_startproc
 114               	/* prologue: function */
 115               	/* frame size = 0 */
 116               	/* stack size = 0 */
 117               	.L__stack_usage = 0
  59:tmk_core/common/backlight.c ****     if (backlight_config.level > 0) {
 118               		.loc 1 59 0
 119 0000 8091 0000 		lds r24,backlight_config
 120 0004 982F      		mov r25,r24
 121 0006 987F      		andi r25,lo8(-8)
 122 0008 01F0      		breq .L9
  60:tmk_core/common/backlight.c ****         backlight_config.level--;
 123               		.loc 1 60 0
 124 000a 8850      		subi r24,lo8(-(-8))
 125 000c 8093 0000 		sts backlight_config,r24
  61:tmk_core/common/backlight.c ****         backlight_config.enable = !!backlight_config.level;
 126               		.loc 1 61 0
 127 0010 887F      		andi r24,lo8(-8)
 128 0012 91E0      		ldi r25,lo8(1)
 129 0014 01F4      		brne .L10
 130 0016 90E0      		ldi r25,0
 131               	.L10:
 132 0018 8091 0000 		lds r24,backlight_config
 133 001c 90FB      		bst r25,0
 134 001e 80F9      		bld r24,0
 135 0020 8093 0000 		sts backlight_config,r24
  62:tmk_core/common/backlight.c ****         eeconfig_update_backlight(backlight_config.raw);
 136               		.loc 1 62 0
 137 0024 0E94 0000 		call eeconfig_update_backlight
 138               	.LVL6:
 139               	.L9:
  63:tmk_core/common/backlight.c ****     }
  64:tmk_core/common/backlight.c ****     dprintf("backlight decrease: %u\n", backlight_config.level);
  65:tmk_core/common/backlight.c ****     backlight_set(backlight_config.level);
 140               		.loc 1 65 0
 141 0028 8091 0000 		lds r24,backlight_config
 142 002c 8695      		lsr r24
 143 002e 8695      		lsr r24
 144 0030 8695      		lsr r24
 145 0032 0C94 0000 		jmp backlight_set
 146               	.LVL7:
 147               		.cfi_endproc
 148               	.LFE2:
 150               		.section	.text.backlight_enable,"ax",@progbits
 151               	.global	backlight_enable
 153               	backlight_enable:
 154               	.LFB4:
  66:tmk_core/common/backlight.c **** }
  67:tmk_core/common/backlight.c **** 
  68:tmk_core/common/backlight.c **** /** \brief Backlight toggle
  69:tmk_core/common/backlight.c ****  *
  70:tmk_core/common/backlight.c ****  * FIXME: needs doc
  71:tmk_core/common/backlight.c ****  */
  72:tmk_core/common/backlight.c **** void backlight_toggle(void) {
  73:tmk_core/common/backlight.c ****     bool enabled = backlight_config.enable;
  74:tmk_core/common/backlight.c ****     dprintf("backlight toggle: %u\n", enabled);
  75:tmk_core/common/backlight.c ****     if (enabled)
  76:tmk_core/common/backlight.c ****         backlight_disable();
  77:tmk_core/common/backlight.c ****     else
  78:tmk_core/common/backlight.c ****         backlight_enable();
  79:tmk_core/common/backlight.c **** }
  80:tmk_core/common/backlight.c **** 
  81:tmk_core/common/backlight.c **** /** \brief Enable backlight
  82:tmk_core/common/backlight.c ****  *
  83:tmk_core/common/backlight.c ****  * FIXME: needs doc
  84:tmk_core/common/backlight.c ****  */
  85:tmk_core/common/backlight.c **** void backlight_enable(void) {
 155               		.loc 1 85 0
 156               		.cfi_startproc
 157               	/* prologue: function */
 158               	/* frame size = 0 */
 159               	/* stack size = 0 */
 160               	.L__stack_usage = 0
  86:tmk_core/common/backlight.c ****     if (backlight_config.enable) return;  // do nothing if backlight is already on
 161               		.loc 1 86 0
 162 0000 8091 0000 		lds r24,backlight_config
 163 0004 80FD      		sbrc r24,0
 164 0006 00C0      		rjmp .L14
  87:tmk_core/common/backlight.c **** 
  88:tmk_core/common/backlight.c ****     backlight_config.enable = true;
 165               		.loc 1 88 0
 166 0008 8160      		ori r24,lo8(1<<0)
 167 000a 8093 0000 		sts backlight_config,r24
  89:tmk_core/common/backlight.c ****     if (backlight_config.raw == 1)  // enabled but level == 0
 168               		.loc 1 89 0
 169 000e 8130      		cpi r24,lo8(1)
 170 0010 01F4      		brne .L16
  90:tmk_core/common/backlight.c ****         backlight_config.level = 1;
 171               		.loc 1 90 0
 172 0012 89E0      		ldi r24,lo8(9)
 173 0014 8093 0000 		sts backlight_config,r24
 174               	.L16:
  91:tmk_core/common/backlight.c ****     eeconfig_update_backlight(backlight_config.raw);
 175               		.loc 1 91 0
 176 0018 8091 0000 		lds r24,backlight_config
 177 001c 0E94 0000 		call eeconfig_update_backlight
 178               	.LVL8:
  92:tmk_core/common/backlight.c ****     dprintf("backlight enable\n");
  93:tmk_core/common/backlight.c ****     backlight_set(backlight_config.level);
 179               		.loc 1 93 0
 180 0020 8091 0000 		lds r24,backlight_config
 181 0024 8695      		lsr r24
 182 0026 8695      		lsr r24
 183 0028 8695      		lsr r24
 184 002a 0C94 0000 		jmp backlight_set
 185               	.LVL9:
 186               	.L14:
 187               	/* epilogue start */
  94:tmk_core/common/backlight.c **** }
 188               		.loc 1 94 0
 189 002e 0895      		ret
 190               		.cfi_endproc
 191               	.LFE4:
 193               		.section	.text.backlight_disable,"ax",@progbits
 194               	.global	backlight_disable
 196               	backlight_disable:
 197               	.LFB5:
  95:tmk_core/common/backlight.c **** 
  96:tmk_core/common/backlight.c **** /** \brief Disable backlight
  97:tmk_core/common/backlight.c ****  *
  98:tmk_core/common/backlight.c ****  * FIXME: needs doc
  99:tmk_core/common/backlight.c ****  */
 100:tmk_core/common/backlight.c **** void backlight_disable(void) {
 198               		.loc 1 100 0
 199               		.cfi_startproc
 200               	/* prologue: function */
 201               	/* frame size = 0 */
 202               	/* stack size = 0 */
 203               	.L__stack_usage = 0
 101:tmk_core/common/backlight.c ****     if (!backlight_config.enable) return;  // do nothing if backlight is already off
 204               		.loc 1 101 0
 205 0000 8091 0000 		lds r24,backlight_config
 206 0004 80FF      		sbrs r24,0
 207 0006 00C0      		rjmp .L17
 102:tmk_core/common/backlight.c **** 
 103:tmk_core/common/backlight.c ****     backlight_config.enable = false;
 208               		.loc 1 103 0
 209 0008 8E7F      		andi r24,lo8(~(1<<0))
 210 000a 8093 0000 		sts backlight_config,r24
 104:tmk_core/common/backlight.c ****     eeconfig_update_backlight(backlight_config.raw);
 211               		.loc 1 104 0
 212 000e 0E94 0000 		call eeconfig_update_backlight
 213               	.LVL10:
 105:tmk_core/common/backlight.c ****     dprintf("backlight disable\n");
 106:tmk_core/common/backlight.c ****     backlight_set(0);
 214               		.loc 1 106 0
 215 0012 80E0      		ldi r24,0
 216 0014 0C94 0000 		jmp backlight_set
 217               	.LVL11:
 218               	.L17:
 219               	/* epilogue start */
 107:tmk_core/common/backlight.c **** }
 220               		.loc 1 107 0
 221 0018 0895      		ret
 222               		.cfi_endproc
 223               	.LFE5:
 225               		.section	.text.backlight_toggle,"ax",@progbits
 226               	.global	backlight_toggle
 228               	backlight_toggle:
 229               	.LFB3:
  72:tmk_core/common/backlight.c ****     bool enabled = backlight_config.enable;
 230               		.loc 1 72 0
 231               		.cfi_startproc
 232               	/* prologue: function */
 233               	/* frame size = 0 */
 234               	/* stack size = 0 */
 235               	.L__stack_usage = 0
 236               	.LVL12:
  73:tmk_core/common/backlight.c ****     dprintf("backlight toggle: %u\n", enabled);
 237               		.loc 1 73 0
 238 0000 8091 0000 		lds r24,backlight_config
  75:tmk_core/common/backlight.c ****         backlight_disable();
 239               		.loc 1 75 0
 240 0004 80FD      		sbrc r24,0
  76:tmk_core/common/backlight.c ****     else
 241               		.loc 1 76 0
 242 0006 0C94 0000 		jmp backlight_disable
 243               	.LVL13:
 244               	.L20:
  78:tmk_core/common/backlight.c **** }
 245               		.loc 1 78 0
 246 000a 0C94 0000 		jmp backlight_enable
 247               	.LVL14:
 248               		.cfi_endproc
 249               	.LFE3:
 251               		.section	.text.is_backlight_enabled,"ax",@progbits
 252               	.global	is_backlight_enabled
 254               	is_backlight_enabled:
 255               	.LFB6:
 108:tmk_core/common/backlight.c **** 
 109:tmk_core/common/backlight.c **** /** /brief Get the backlight status
 110:tmk_core/common/backlight.c ****  *
 111:tmk_core/common/backlight.c ****  * FIXME: needs doc
 112:tmk_core/common/backlight.c ****  */
 113:tmk_core/common/backlight.c **** bool is_backlight_enabled(void) { return backlight_config.enable; }
 256               		.loc 1 113 0
 257               		.cfi_startproc
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
 262               		.loc 1 113 0
 263 0000 8091 0000 		lds r24,backlight_config
 264 0004 8170      		andi r24,lo8(1)
 265               	/* epilogue start */
 266 0006 0895      		ret
 267               		.cfi_endproc
 268               	.LFE6:
 270               		.section	.text.backlight_step,"ax",@progbits
 271               	.global	backlight_step
 273               	backlight_step:
 274               	.LFB7:
 114:tmk_core/common/backlight.c **** 
 115:tmk_core/common/backlight.c **** /** \brief Backlight step through levels
 116:tmk_core/common/backlight.c ****  *
 117:tmk_core/common/backlight.c ****  * FIXME: needs doc
 118:tmk_core/common/backlight.c ****  */
 119:tmk_core/common/backlight.c **** void backlight_step(void) {
 275               		.loc 1 119 0
 276               		.cfi_startproc
 277               	/* prologue: function */
 278               	/* frame size = 0 */
 279               	/* stack size = 0 */
 280               	.L__stack_usage = 0
 120:tmk_core/common/backlight.c ****     backlight_config.level++;
 281               		.loc 1 120 0
 282 0000 9091 0000 		lds r25,backlight_config
 283 0004 892F      		mov r24,r25
 284 0006 8695      		lsr r24
 285 0008 8695      		lsr r24
 286 000a 8695      		lsr r24
 287 000c 8F5F      		subi r24,lo8(-(1))
 288 000e 8F71      		andi r24,lo8(31)
 289 0010 9770      		andi r25,lo8(7)
 121:tmk_core/common/backlight.c ****     if (backlight_config.level > BACKLIGHT_LEVELS) {
 290               		.loc 1 121 0
 291 0012 8430      		cpi r24,lo8(4)
 292 0014 00F4      		brsh .L23
 120:tmk_core/common/backlight.c ****     backlight_config.level++;
 293               		.loc 1 120 0
 294 0016 880F      		lsl r24
 295 0018 880F      		lsl r24
 296 001a 880F      		lsl r24
 297 001c 892B      		or r24,r25
 298 001e 8093 0000 		sts backlight_config,r24
 299               	.L24:
 122:tmk_core/common/backlight.c ****         backlight_config.level = 0;
 123:tmk_core/common/backlight.c ****     }
 124:tmk_core/common/backlight.c ****     backlight_config.enable = !!backlight_config.level;
 300               		.loc 1 124 0
 301 0022 8091 0000 		lds r24,backlight_config
 302 0026 887F      		andi r24,lo8(-8)
 303 0028 91E0      		ldi r25,lo8(1)
 304 002a 01F4      		brne .L25
 305 002c 90E0      		ldi r25,0
 306               	.L25:
 307 002e 8091 0000 		lds r24,backlight_config
 308 0032 90FB      		bst r25,0
 309 0034 80F9      		bld r24,0
 310 0036 8093 0000 		sts backlight_config,r24
 125:tmk_core/common/backlight.c ****     eeconfig_update_backlight(backlight_config.raw);
 311               		.loc 1 125 0
 312 003a 0E94 0000 		call eeconfig_update_backlight
 313               	.LVL15:
 126:tmk_core/common/backlight.c ****     dprintf("backlight step: %u\n", backlight_config.level);
 127:tmk_core/common/backlight.c ****     backlight_set(backlight_config.level);
 314               		.loc 1 127 0
 315 003e 8091 0000 		lds r24,backlight_config
 316 0042 8695      		lsr r24
 317 0044 8695      		lsr r24
 318 0046 8695      		lsr r24
 319 0048 0C94 0000 		jmp backlight_set
 320               	.LVL16:
 321               	.L23:
 122:tmk_core/common/backlight.c ****     }
 322               		.loc 1 122 0
 323 004c 9093 0000 		sts backlight_config,r25
 324 0050 00C0      		rjmp .L24
 325               		.cfi_endproc
 326               	.LFE7:
 328               		.section	.text.backlight_level,"ax",@progbits
 329               	.global	backlight_level
 331               	backlight_level:
 332               	.LFB8:
 128:tmk_core/common/backlight.c **** }
 129:tmk_core/common/backlight.c **** 
 130:tmk_core/common/backlight.c **** /** \brief Backlight set level
 131:tmk_core/common/backlight.c ****  *
 132:tmk_core/common/backlight.c ****  * FIXME: needs doc
 133:tmk_core/common/backlight.c ****  */
 134:tmk_core/common/backlight.c **** void backlight_level(uint8_t level) {
 333               		.loc 1 134 0
 334               		.cfi_startproc
 335               	.LVL17:
 336               	/* prologue: function */
 337               	/* frame size = 0 */
 338               	/* stack size = 0 */
 339               	.L__stack_usage = 0
 135:tmk_core/common/backlight.c ****     if (level > BACKLIGHT_LEVELS) level = BACKLIGHT_LEVELS;
 136:tmk_core/common/backlight.c ****     backlight_config.level  = level;
 340               		.loc 1 136 0
 341 0000 8430      		cpi r24,lo8(4)
 342 0002 00F0      		brlo .L27
 343 0004 83E0      		ldi r24,lo8(3)
 344               	.L27:
 345 0006 982F      		mov r25,r24
 346 0008 990F      		lsl r25
 347 000a 990F      		lsl r25
 348 000c 990F      		lsl r25
 349 000e 8091 0000 		lds r24,backlight_config
 350 0012 8770      		andi r24,lo8(7)
 351 0014 892B      		or r24,r25
 352 0016 8093 0000 		sts backlight_config,r24
 137:tmk_core/common/backlight.c ****     backlight_config.enable = !!backlight_config.level;
 353               		.loc 1 137 0
 354 001a 887F      		andi r24,lo8(-8)
 355 001c 91E0      		ldi r25,lo8(1)
 356 001e 01F4      		brne .L28
 357 0020 90E0      		ldi r25,0
 358               	.L28:
 359 0022 8091 0000 		lds r24,backlight_config
 360 0026 90FB      		bst r25,0
 361 0028 80F9      		bld r24,0
 362 002a 8093 0000 		sts backlight_config,r24
 138:tmk_core/common/backlight.c ****     eeconfig_update_backlight(backlight_config.raw);
 363               		.loc 1 138 0
 364 002e 0E94 0000 		call eeconfig_update_backlight
 365               	.LVL18:
 139:tmk_core/common/backlight.c ****     backlight_set(backlight_config.level);
 366               		.loc 1 139 0
 367 0032 8091 0000 		lds r24,backlight_config
 368 0036 8695      		lsr r24
 369 0038 8695      		lsr r24
 370 003a 8695      		lsr r24
 371 003c 0C94 0000 		jmp backlight_set
 372               	.LVL19:
 373               		.cfi_endproc
 374               	.LFE8:
 376               		.section	.text.get_backlight_level,"ax",@progbits
 377               	.global	get_backlight_level
 379               	get_backlight_level:
 380               	.LFB9:
 140:tmk_core/common/backlight.c **** }
 141:tmk_core/common/backlight.c **** 
 142:tmk_core/common/backlight.c **** /** \brief Get backlight level
 143:tmk_core/common/backlight.c ****  *
 144:tmk_core/common/backlight.c ****  * FIXME: needs doc
 145:tmk_core/common/backlight.c ****  */
 146:tmk_core/common/backlight.c **** uint8_t get_backlight_level(void) { return backlight_config.level; }
 381               		.loc 1 146 0
 382               		.cfi_startproc
 383               	/* prologue: function */
 384               	/* frame size = 0 */
 385               	/* stack size = 0 */
 386               	.L__stack_usage = 0
 387               		.loc 1 146 0
 388 0000 8091 0000 		lds r24,backlight_config
 389 0004 8695      		lsr r24
 390 0006 8695      		lsr r24
 391 0008 8695      		lsr r24
 392               	/* epilogue start */
 393 000a 0895      		ret
 394               		.cfi_endproc
 395               	.LFE9:
 397               		.comm	backlight_config,1,1
 398               		.text
 399               	.Letext0:
 400               		.file 2 "tmk_core/common/backlight.h"
 401               		.file 3 "/usr/local/Cellar/avr-gcc@7/7.4.0/avr/include/stdint.h"
 402               		.file 4 "tmk_core/common/debug.h"
 403               		.file 5 "tmk_core/common/eeconfig.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 backlight.c
/var/tmp//ccqWld6B.s:2      *ABS*:000000000000003e __SP_H__
/var/tmp//ccqWld6B.s:3      *ABS*:000000000000003d __SP_L__
/var/tmp//ccqWld6B.s:4      *ABS*:000000000000003f __SREG__
/var/tmp//ccqWld6B.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/tmp//ccqWld6B.s:6      *ABS*:0000000000000001 __zero_reg__
/var/tmp//ccqWld6B.s:13     .text.backlight_init:0000000000000000 backlight_init
                            *COM*:0000000000000001 backlight_config
/var/tmp//ccqWld6B.s:65     .text.backlight_increase:0000000000000000 backlight_increase
/var/tmp//ccqWld6B.s:110    .text.backlight_decrease:0000000000000000 backlight_decrease
/var/tmp//ccqWld6B.s:153    .text.backlight_enable:0000000000000000 backlight_enable
/var/tmp//ccqWld6B.s:196    .text.backlight_disable:0000000000000000 backlight_disable
/var/tmp//ccqWld6B.s:228    .text.backlight_toggle:0000000000000000 backlight_toggle
/var/tmp//ccqWld6B.s:254    .text.is_backlight_enabled:0000000000000000 is_backlight_enabled
/var/tmp//ccqWld6B.s:273    .text.backlight_step:0000000000000000 backlight_step
/var/tmp//ccqWld6B.s:331    .text.backlight_level:0000000000000000 backlight_level
/var/tmp//ccqWld6B.s:379    .text.get_backlight_level:0000000000000000 get_backlight_level

UNDEFINED SYMBOLS
eeconfig_is_enabled
eeconfig_init
eeconfig_read_backlight
backlight_set
eeconfig_update_backlight
__do_clear_bss
